{"version":3,"file":"static/js/3048.daa31f5d.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","Pages/Reports/dayBookColumns.js","Pages/Reports/dayBookDetails.jsx","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/FilterAltOff.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name] \r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign] \r\n * @property {string} [ColumnHeader] \r\n * @property {0|1} [isVisible] \r\n * @property {'left'|'right'|'center'} [align] \r\n * @property {boolean} [isCustomCell] \r\n * @property {Function} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name] \r\n * @property {JSX.Element} [icon] \r\n * @property {Function} [onclick] \r\n * @property {boolean} [disabled] \r\n */\r\n\r\n/**\r\n * Filterable Table Component\r\n * @param {Object} props \r\n * @param {Array<Object>} [props.dataArray] \r\n * @param {Array<Column>} [props.columns] \r\n * @param {Function} [props.onClickFun] \r\n * @param {boolean} [props.isExpendable=false] \r\n * @param {React.ReactElement|JSX.Element} [props.expandableComp] \r\n * @param {number} [props.tableMaxHeight] \r\n * @param {number} [props.initialPageCount=10] \r\n * @param {number} [props.bodyFontSizePx=13] \r\n * @param {number} [props.headerFontSizePx=13] \r\n * @param {boolean} [props.EnableSerialNumber=false] \r\n * @param {'small'|'medium'|'large'} [props.CellSize='medium'] \r\n * @param {boolean} [props.disablePagination=false] \r\n * @param {string} [props.title=''] \r\n * @param {boolean} [props.PDFPrintOption=false] \r\n * @param {boolean} [props.ExcelPrintOption=false] \r\n * @param {boolean} [props.maxHeightOption=false]\r\n * @param {React.ReactElement|JSX.Element} [props.ButtonArea] \r\n * @param {Array<Menu>} props.MenuButtons \r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (field = '', type = 'string', ColumnHeader = '', align = 'left', verticalAlign = 'center') => {\r\n    return {\r\n        isVisible: 1,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const formatString = (val, dataType) => {\r\n        switch (dataType) {\r\n            case 'number':\r\n                return val ? NumberFormat(val) : val;\r\n            case 'date':\r\n                return val ? LocalDate(val) : val;\r\n            case 'time':\r\n                return val ? LocalTime(val) : val;\r\n            case 'string':\r\n                return val;\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n\r\n                        const horizondalalignClass = column.align ? columnAlign.find(\r\n                            align => align.type === String(column.align).toLowerCase()\r\n                        )?.class : '';\r\n                        const verticalAlignClass = column.verticalAlign ? columnVerticalAlign.find(\r\n                            align => align.type === String(column.verticalAlign).toLowerCase()\r\n                        )?.class : ' vctr '\r\n\r\n                        if (isColumnVisible && isCommonValue) return Object.entries(row).map(\r\n                            ([key, value]) => column.Field_Name === key && (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ` + horizondalalignClass + verticalAlignClass}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {formatString(value, column?.Fied_Data)}\r\n                                </TableCell>\r\n                            )\r\n                        )\r\n\r\n                        if (isColumnVisible && isCustomCell) return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                className={`border-end ` + horizondalalignClass + verticalAlignClass}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                            >\r\n                                {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                            </TableCell>\r\n                        )\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ` + horizondalalignClass + verticalAlignClass}\r\n                            ></TableCell>\r\n                        )\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name) \r\n                                                    ? ' fw-bold border-end border-top p-2 appFont ' \r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align \r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class \r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n}","import { createCol } from \"../../Components/filterableTable2\"\r\n\r\nexport const dayBookColumn = (moduleName) => {\r\n    const SalesLedgerName = createCol('Purticular', 'string', 'Ledger');\r\n    const SalesTotal = createCol('total_invoice_value', 'number', 'Invoice Value');\r\n    // common Columns\r\n    const ModuleID = createCol('ModuleID', 'string', 'InvoiceNo')\r\n    const EventDate = createCol('EventDate', 'date', 'Date');\r\n    const VoucherName = createCol('VoucherName', 'string', 'Voucher');\r\n    const DebitLedger = createCol('DebitLedger', 'string', 'Debit A/c');\r\n    const DebitAmt = createCol('DebitAmt', 'number', 'Debit (₹)');\r\n    const CreditLedger = createCol('CreditLedger', 'string', 'Credit A/c');\r\n    const CreditAmt = createCol('CreditAmt', 'number', 'Credit (₹)');\r\n\r\n    switch (moduleName) {\r\n        case 'Sales':\r\n            return [ModuleID, EventDate, VoucherName, SalesLedgerName, SalesTotal]\r\n        case 'Payment':\r\n        case 'Receipt':\r\n        case 'Journal':\r\n        case 'Contra': \r\n            return [ModuleID, EventDate, VoucherName, DebitLedger, DebitAmt, CreditLedger, CreditAmt]\r\n        default:\r\n            return []\r\n    }\r\n}","import { useEffect, useMemo, useState } from \"react\";\r\nimport { filterableText, getSessionUser, isEqualNumber, ISOString, isValidDate, isValidObject } from '../../Components/functions';\r\nimport FilterableTable from '../../Components/filterableTable2';\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { Autocomplete, Button, Card, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField, Tooltip } from \"@mui/material\";\r\nimport { CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff, Search, ToggleOff, ToggleOn } from \"@mui/icons-material\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { dayBookColumn } from \"./dayBookColumns\";\r\n\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst DayBookDetails = ({ loadingOn, loadingOff }) => {\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const user = getSessionUser().user;\r\n    const [dayBookDetails, setDayBookDetails] = useState([]);\r\n    const [dynamicFilters, setDynamicFilters] = useState({});\r\n    const [filteredData, setFilteredData] = useState([])\r\n\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        ModuleName: 'Sales',\r\n        Voucher_Type: null,\r\n        filterDialog: false,\r\n        dynamicFilters: false,\r\n        refresh: false,\r\n        disablePagination: false,\r\n        searchText: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (filters?.ModuleName) {\r\n            if (loadingOn) loadingOn();\r\n            setDayBookDetails([]);\r\n            fetchLink({\r\n                address: `dashboard/dayBook/${String(filters?.ModuleName).toLowerCase()}?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}`,\r\n                headers: { Db: user?.Company_id }\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setDayBookDetails(data.data);\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => {\r\n                if (loadingOff) loadingOff();\r\n            })\r\n        }\r\n    }, [filters?.refresh])\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(stateDetails)) {\r\n            const Fromdate = isValidDate(stateDetails?.Fromdate) ? ISOString(stateDetails.Fromdate) : ISOString();\r\n            const Todate = isValidDate(stateDetails?.Todate) ? ISOString(stateDetails.Todate) : ISOString();\r\n            const ModuleName = stateDetails?.ModuleName ? stateDetails?.ModuleName : null;\r\n            const Voucher_Type = stateDetails?.Voucher_Type ? stateDetails?.Voucher_Type : null;\r\n            setFilters(pre => ({\r\n                ...pre,\r\n                Fromdate, Todate, ModuleName, Voucher_Type, refresh: !pre.refresh\r\n            }))\r\n        }\r\n    }, [stateDetails])\r\n\r\n    const FilteredVoucherData = useMemo(() => {\r\n        return filters?.Voucher_Type ?\r\n            dayBookDetails.filter(fil => String(fil.VoucherName).localeCompare(filters.Voucher_Type) === 0)\r\n            : dayBookDetails\r\n    }, [filters?.Voucher_Type, dayBookDetails.length]);\r\n\r\n    const uniqueVoucherType = useMemo(() => {\r\n        return [...new Set(dayBookDetails?.map(item => item?.VoucherName))].map(items => ({\r\n            value: items,\r\n            label: items,\r\n        }));\r\n    }, [dayBookDetails]);\r\n\r\n    // const searchFilterList = useMemo(() => {\r\n    //     return FilteredVoucherData.filter(fil =>\r\n    //         filterableText(Object.values(fil).join(' ')).includes(filterableText(filters?.searchText))\r\n    //     )\r\n    // }, [FilteredVoucherData, filters?.searchText]);\r\n\r\n    // dynamic filter\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [dynamicFilters]);\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setDynamicFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...dayBookDetails];\r\n        const columns = filters?.ModuleName ? dayBookColumn(filters.ModuleName) : []\r\n        for (const column of columns) {\r\n            if (dynamicFilters[column.Field_Name]) {\r\n                if (dynamicFilters[column.Field_Name].type === 'range') {\r\n                    const { min, max } = dynamicFilters[column.Field_Name];\r\n                    filtered = filtered.filter(item => {\r\n                        const value = item[column.Field_Name];\r\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\r\n                    });\r\n                } else if (dynamicFilters[column.Field_Name].type === 'date') {\r\n                    const { start, end } = dynamicFilters[column.Field_Name].value;\r\n                    filtered = filtered.filter(item => {\r\n                        const dateValue = new Date(item[column.Field_Name]);\r\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\r\n                    });\r\n                } else if (Array.isArray(dynamicFilters[column.Field_Name])) {\r\n                    filtered = dynamicFilters[column.Field_Name]?.length > 0 ? filtered.filter(item => dynamicFilters[column.Field_Name].includes(item[column.Field_Name].toLowerCase().trim())) : filtered\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Field_Name, Fied_Data } = column;\r\n        if (Fied_Data === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={dynamicFilters[Field_Name]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...dynamicFilters[Field_Name], min: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={dynamicFilters[Field_Name]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...dynamicFilters[Field_Name], max: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={dynamicFilters[Field_Name]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...dynamicFilters[Field_Name]?.value, start: e.target.value || undefined } })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={dynamicFilters[Field_Name]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...dynamicFilters[Field_Name]?.value, end: e.target.value || undefined } })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === 'string') {\r\n            const distinctValues = [...new Set(FilteredVoucherData.map(item => item[Field_Name]?.toLowerCase()?.trim()))];\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${Field_Name}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={dynamicFilters[Field_Name] || []}\r\n                    onChange={(event, newValue) => handleFilterChange(Field_Name, newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={Field_Name}\r\n                            placeholder={`Select ${Field_Name?.replace(/_/g, ' ')}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row flex-md-row-reverse\">\r\n\r\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\r\n                    <Card>\r\n                        <div className=\"d-flex align-items-center py-1 px-2\">\r\n                            <h5 className=\"flex-grow-1 \">Filters</h5>\r\n                            <Tooltip title='Clear Filters'>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDynamicFilters({})}\r\n                                >\r\n                                    <FilterAltOff />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div styl={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                            {dayBookColumn(filters.ModuleName).map((column, ke) => (\r\n                                isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)\r\n                            ) && (\r\n                                    <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                        <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\r\n                                        {renderFilter(column)}\r\n                                    </div>\r\n                                )\r\n                            )}\r\n                            <br />\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"col-xxl-10 col-lg-9 col-md-8\">\r\n                    <FilterableTable\r\n                        title={filters?.ModuleName + ' - ' + (filters?.Voucher_Type ? filters?.Voucher_Type : 'All Vouchers')}\r\n                        dataArray={Object.keys(dynamicFilters).length > 0 ? filteredData : FilteredVoucherData}\r\n                        columns={filters?.ModuleName ? dayBookColumn(filters.ModuleName) : []}\r\n                        PDFPrintOption\r\n                        ExcelPrintOption\r\n                        EnableSerialNumber\r\n                        maxHeightOption\r\n                        disablePagination={filters.disablePagination}\r\n                        MenuButtons={[\r\n                            {\r\n                                name: 'Pagination',\r\n                                icon: filters.disablePagination\r\n                                    ? <ToggleOff fontSize=\"small\" />\r\n                                    : <ToggleOn fontSize=\"small\" color='primary' />,\r\n                                onclick: () => setFilters(pre => ({ ...pre, disablePagination: !pre.disablePagination })),\r\n                                // disabled: isEqualNumber(FilteredVoucherData?.length, 0)\r\n                            },\r\n                            {\r\n                                name: 'Filters',\r\n                                icon: <FilterAlt fontSize=\"small\" color='primary' />,\r\n                                onclick: () => setFilters(pre => ({ ...pre, filterDialog: true })),\r\n                            }\r\n                        ]}\r\n                        ButtonArea={\r\n                            <>\r\n                                {/* <input\r\n                                    type=\"search\"\r\n                                    className=\"cus-inpt w-auto p-1 fa-14\"\r\n                                    placeholder=\"Search..\"\r\n                                    value={filters?.searchText ?? ''}\r\n                                    onChange={e => setFilters(pre => ({ ...pre, searchText: e.target.value }))}\r\n                                /> */}\r\n                                <Tooltip title=\"Dynamic Filters\">\r\n                                    <IconButton\r\n                                        onClick={() => setFilters(pre => ({ ...pre, dynamicFilters: true }))}\r\n                                        size=\"small\"\r\n                                        className=\"d-md-none d-inline\"\r\n                                    >\r\n                                        <FilterAlt />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </>\r\n                        }\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={() => setFilters(pre => ({ ...pre, filterDialog: false }))}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table fa-14 table-borderless\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>From Date</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt p-1\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>To Date</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt p-1\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Module</td>\r\n                                    <td>\r\n                                        <select\r\n                                            className=\"cus-inpt p-1\"\r\n                                            value={filters.ModuleName ? filters.ModuleName : ''}\r\n                                            onChange={e => {\r\n                                                setFilters(pre => ({\r\n                                                    ...pre,\r\n                                                    ModuleName: e.target.value,\r\n                                                    refresh: !pre.refresh,\r\n                                                    Voucher_Type: null,\r\n                                                    filterDialog: false\r\n                                                }));\r\n                                                setDynamicFilters({});\r\n                                            }}\r\n                                        >\r\n                                            {['Sales', 'Payment', 'Receipt', 'Journal', 'Contra'].map((item, key) => (\r\n                                                <option value={item} key={key}>{item}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Voucher</td>\r\n                                    <td>\r\n                                        <select\r\n                                            className=\"cus-inpt p-1\"\r\n                                            value={filters?.Voucher_Type ? filters.Voucher_Type : ''}\r\n                                            onChange={e => setFilters(pre => ({ ...pre, Voucher_Type: e.target.value, filterDialog: false }))}\r\n                                        >\r\n                                            <option value={''}>All Vouchers</option>\r\n                                            {uniqueVoucherType.map((item, key) => (\r\n                                                <option value={item.value} key={key}>{item.label}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        size=\"small\"\r\n                        onClick={() => setFilters(pre => ({ ...pre, filterDialog: false }))}\r\n                    >Close</Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            setFilters(pre => ({ ...pre, refresh: !pre.refresh, filterDialog: false }));\r\n                        }}\r\n                        variant=\"outlined\" size=\"small\"\r\n                        startIcon={<Search />}\r\n                    >Search</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={filters?.dynamicFilters}\r\n                onClose={() => setFilters(pre => ({ ...pre, dynamicFilters: false }))}\r\n                fullWidth\r\n                maxWidth='sm'\r\n            >\r\n                {/* <DialogTitle></DialogTitle> */}\r\n                <DialogContent>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {(filters?.ModuleName ? dayBookColumn(filters.ModuleName) : []).map((column, ke) => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setFilters(pre => ({ ...pre, dynamicFilters: false }))} color='error'>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DayBookDetails;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2m-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckBox');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5zm0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2\"\n}), 'CheckBoxOutlineBlank');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41z\"\n}), 'FilterAltOff');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","concat","key","Field_Name","createCol","field","arguments","length","undefined","type","align","verticalAlign","_objectSpread","Fied_Data","ButtonActions","_ref","buttonsData","ToolTipText","anchorEl","setAnchorEl","useState","popOverOpen","Boolean","_jsxs","_Fragment","children","_jsx","Tooltip","title","IconButton","onClick","event","currentTarget","className","size","MoreVert","Popover","open","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","onclick","disabled","ListItemIcon","icon","ListItemText","name","FilterableTable","_ref2","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","RowComp","_ref3","setOpen","fontSize","Fragment","TableRow","TableCell","sx","pre","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isEqualNumber","isCommonValue","horizondalalignClass","find","verticalAlignClass","Object","entries","_ref4","value","console","log","colSpan","Number","Card","component","Paper","ToggleOn","color","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","backgroundColor","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","dayBookColumn","moduleName","SalesLedgerName","SalesTotal","ModuleID","EventDate","VoucherName","DebitLedger","DebitAmt","CreditLedger","CreditAmt","CheckBoxOutlineBlank","checkedIcon","CheckBox","loadingOn","loadingOff","stateDetails","useLocation","state","user","getSessionUser","dayBookDetails","setDayBookDetails","dynamicFilters","setDynamicFilters","filteredData","setFilteredData","filters","setFilters","Fromdate","ISOString","Todate","ModuleName","Voucher_Type","filterDialog","refresh","searchText","useEffect","fetchLink","address","Db","Company_id","then","success","catch","finally","isValidObject","isValidDate","FilteredVoucherData","useMemo","fil","localeCompare","uniqueVoucherType","item","items","label","applyFilters","handleFilterChange","prevFilters","filtered","min","max","start","end","dateValue","Date","isArray","_dynamicFilters$colum","includes","trim","renderFilter","_dynamicFilters$Field","_dynamicFilters$Field2","_dynamicFilters$Field3","_dynamicFilters$Field4","_dynamicFilters$Field5","_dynamicFilters$Field6","_dynamicFilters$Field7","_dynamicFilters$Field9","_dynamicFilters$Field10","_dynamicFilters$Field11","placeholder","onChange","parseFloat","_dynamicFilters$Field8","_dynamicFilters$Field12","distinctValues","_item$Field_Name","_item$Field_Name$toLo","Autocomplete","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","newValue","renderOption","props","selected","Checkbox","style","marginRight","checked","isOptionEqualToValue","opt","renderInput","params","TextField","FilterAltOff","styl","overflow","keys","FilterAlt","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","DialogActions","Button","variant","startIcon","Search","createSvgIcon","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","indeterminate","capitalize","theme","_extends","vars","palette","text","secondary","disableRipple","action","activeChannel","mainChannel","hoverOpacity","alpha","main","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","clsx","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","marginLeft","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","autoFocus","checkedProp","defaultChecked","disabledProp","disableFocusRipple","inputRef","onBlur","onFocus","readOnly","required","tabIndex","setCheckedState","useControlled","controlled","default","muiFormControl","useFormControl","hasLabelFor","input","centerRipple","focusRipple","role","nativeEvent","defaultPrevented","newChecked"],"sourceRoot":""}
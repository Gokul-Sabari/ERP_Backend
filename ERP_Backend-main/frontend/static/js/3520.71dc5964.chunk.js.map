{"version":3,"file":"static/js/3520.71dc5964.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Message.js","../node_modules/@mui/icons-material/esm/Article.js","../node_modules/@mui/icons-material/esm/GroupAdd.js","Pages/Discussions/discussions.jsx","../node_modules/@mui/icons-material/esm/People.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2m-2 12H6v-2h12zm0-3H6V9h12zm0-3H6V6h12z\"\n}), 'Message');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-5 14H7v-2h7zm3-4H7v-2h10zm0-4H7V7h10z\"\n}), 'Article');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 9V7h-2v2h-2v2h2v2h2v-2h2V9zM8 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 1c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4m4.51-8.95C13.43 5.11 14 6.49 14 8s-.57 2.89-1.49 3.95C14.47 11.7 16 10.04 16 8s-1.53-3.7-3.49-3.95m4.02 9.78C17.42 14.66 18 15.7 18 17v3h2v-3c0-1.45-1.59-2.51-3.47-3.17\"\n}), 'GroupAdd');","import { useEffect, useState, useContext } from \"react\";\nimport { People, Message, Launch, Edit, Delete, GroupAdd, Article } from '@mui/icons-material';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, MenuItem, Tooltip, IconButton } from '@mui/material';\nimport { MyContext } from \"../../Components/context/contextProvider\";\nimport InvalidPageComp from \"../../Components/invalidCredential\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchLink } from \"../../Components/fetchComponent\";\nimport { isEqualNumber } from '../../Components/functions';\n\n\nconst topicInitialValue = {\n    Description: '',\n    Id: \"\",\n    Topic: \"\",\n    Company_id: JSON.parse(localStorage.getItem(\"user\"))?.Company_id\n}\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst Discussions = () => {\n    const localData = localStorage.getItem(\"user\");\n    const parseData = JSON.parse(localData);\n    const [myDiscussions, setMyDiscussions] = useState([]);\n    const [createDialog, setCreateDialog] = useState(false);\n    const [deleteDialog, setDeleteDialog] = useState(false);\n    const [teamDialog, setTeamDialog] = useState(false);\n    const [inputValue, setInputValue] = useState(topicInitialValue);\n    const [currentTeam, setCurerntTeam] = useState({});\n    const [isEdit, setIsEdit] = useState(false);\n    const { contextObj } = useContext(MyContext);\n    const [reload, setReload] = useState(false);\n    const [users, setUsers] = useState([]);\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        fetchLink({\n            address: `discussionForum/discussionTopic?UserId=${parseData?.UserId}&UserTypeId=${parseData?.UserTypeId}&Company_id=${parseData?.Company_id}`,\n        }).then(data => {\n            if (data.success) {\n                const temp = [];\n                data.data.forEach(o => {\n                    o?.InvolvedUsers?.forEach(obj => {\n                        if (Number(obj?.UserId) === Number(parseData?.UserId)) {\n                            temp.push(o)\n                        }\n                    })\n                })\n                setMyDiscussions((Number(parseData.UserTypeId) === 0 || Number(parseData.UserTypeId) === 1) ? data?.data : temp)\n            }\n        }).catch(e => console.log(e))\n\n        // pending:  if the user is asssingned any one of the tasks in the project that project's discussion forum will be accessable for the user\n    }, [reload, parseData?.UserId, parseData?.UserTypeId])\n\n    useEffect(() => {\n        fetchLink({\n            address: `masters/users/employeeAndSalesPerson/dropDown?Company_id=${parseData?.Company_id}`,\n        }).then(data => {\n            if (data.success) {\n                setUsers(data.data)\n            }\n        }).catch(e => console.log(e))\n    }, [parseData?.BranchId])\n\n    const closeCreateDialog = () => {\n        setCreateDialog(false);\n        setInputValue(topicInitialValue);\n        setIsEdit(false)\n    }\n\n    const closeDeleteDialog = () => {\n        setDeleteDialog(false);\n        setInputValue(topicInitialValue);\n    }\n\n    const closeTeamDialog = () => {\n        setTeamDialog(false);\n        setCurerntTeam({})\n    }\n\n    const setUpdate = (row) => {\n        setIsEdit(true);\n        setInputValue(row);\n        setCreateDialog(true);\n    }\n\n    const setDelete = (row) => {\n        setDeleteDialog(true);\n        setInputValue(row);\n    }\n\n    const setTeamData = (row) => {\n        setCurerntTeam(row);\n        setTeamDialog(true);\n    }\n\n    const postTopic = async () => {\n        if (Number(contextObj?.Add_Rights) === 1) {\n            fetchLink({\n                address: `discussionForum/discussionTopic`,\n                method: 'POST',\n                bodyData: inputValue\n            }).then(data => {\n                if (data.success) {\n                    toast.success(data.message);\n                    setReload(!reload);\n                    closeCreateDialog();\n                } else {\n                    toast.error(data.message);\n                }\n            }).catch(e => console.log(e))\n        }\n    }\n\n    const putTopic = async () => {\n        if (inputValue?.Id && Number(contextObj?.Edit_Rights) === 1) {\n            if (Number(contextObj?.Add_Rights) === 1) {\n                fetchLink({\n                    address: `discussionForum/discussionTopic`,\n                    method: 'PUT',\n                    bodyData: inputValue\n                }).then(data => {\n                    if (data.success) {\n                        toast.success(data.message);\n                        setReload(!reload);\n                        closeCreateDialog();\n                    } else {\n                        toast.error(data.message);\n                    }\n                }).catch(e => console.log(e))\n            }\n        }\n    }\n\n    const deleteTopic = async () => {\n        if (inputValue?.Id && Number(contextObj?.Delete_Rights) === 1) {\n            fetchLink({\n                address: `discussionForum/discussionTopic`,\n                method: 'DELETE',\n                bodyData: inputValue\n            }).then(data => {\n                if (data.success) {\n                    toast.success(data.message);\n                    closeDeleteDialog();\n                    setReload(!reload);\n                } else {\n                    toast.error(data.message);\n                }\n            }).catch(e => console.log(e))\n        }\n    }\n\n    const postTeamMembers = async () => {\n        if (Number(contextObj?.Add_Rights) === 1) {\n            fetchLink({\n                address: `discussionForum/modifyTeam`,\n                method: 'POST',\n                bodyData: { Teams: currentTeam?.InvolvedUsers, Topic_Id: currentTeam?.Id }\n            }).then(data => {\n                if (data.success) {\n                    toast.success(data.message);\n                    setReload(!reload);\n                    closeTeamDialog();\n                } else {\n                    toast.error(data.message);\n                }\n            }).catch(e => console.log(e))\n        }\n    }\n\n    return Number(contextObj.Read_Rights) === 1 ? (\n        <>\n            <ToastContainer />\n            <div className=\"cus-card\">\n                <div className=\"p-3\">\n                    <div className=\"d-flex mb-4 \">\n                        <p className=\"fw-bold fa-18 px-2 flex-grow-1\">Topics</p>\n                        {isEqualNumber(contextObj.Add_Rights, 1) && (\n                            <button className=\"btn btn-primary rounded-5 px-3 fa-13 shadow\" onClick={() => setCreateDialog(true)}>\n                                Create Topic\n                            </button>\n                        )}\n                    </div>\n                    {myDiscussions.length > 0 ? (\n                        <table className=\"table\">\n                            {/* <thead>\n                                <tr>\n                                    <td className=\"d-none\"></td>\n                                    <td className=\"d-none\"></td>\n                                    <td className=\"d-none\"></td>\n                                    <td className=\"d-none\"></td>\n                                    <td className=\"d-none\"></td>\n                                </tr>\n                            </thead> */}\n                            <tbody>\n                                {myDiscussions.map((o, i) => (\n                                    <tr key={i}>\n                                        <td className=\"fa-14 border-0\" >\n                                            <div className=\"d-flex align-items-start justify-content-center flex-column\">\n                                                <p\n                                                    className={`mb-0 fw-bold fa-14 under-blue ${Number(o?.Project_Id) === 0 ? 'text-primary' : 'text-secondary'}`}\n                                                    onClick={() => navigate('chats', { state: o })}>\n                                                    {o?.Topic}\n                                                </p>\n                                                <p className=\"mb-0 py-2 text-muted\">\n                                                    {o?.Description}\n                                                </p>\n                                            </div>\n                                        </td>\n                                        <td className=\"fa-14 text-center border-0\" >\n                                            <Tooltip title=\"Team Size\">\n                                                <>\n                                                    <People className=\"fa-18 text-primary mx-1\" /> {o?.InvolvedUsersCount}\n                                                </>\n                                            </Tooltip>\n                                        </td>\n                                        <td className=\"fa-14 text-center border-0\" >\n                                            <Tooltip title=\"Messages Count\">\n                                                <>\n                                                    <Message className=\"fa-18 text-primary mx-1\" /> {o?.TotalMessages}\n                                                </>\n                                            </Tooltip>\n                                        </td>\n                                        <td className=\"fa-14 border-0\">\n                                            <Tooltip title=\"Documents Shared\">\n                                                <>\n                                                    <Article className=\"fa-18 text-primary me-1\" /> {\" \" + o?.DocumentsShared}\n                                                </>\n                                            </Tooltip>\n                                        </td>\n                                        <td className=\"fa-14 border-0\">\n                                            <span className=\"d-flex\">\n                                                <IconButton size=\"small\" onClick={() => navigate('chats', { state: o })}>\n                                                    <Launch className=\" text-primary\" />\n                                                </IconButton>\n                                                {\n                                                    (isEqualNumber(contextObj.Edit_Rights, 1) || isEqualNumber(contextObj.Delete_Rights, 1))\n                                                    &&\n                                                    <Dropdown>\n                                                        <Dropdown.Toggle\n                                                            variant=\"success\"\n                                                            id=\"actions\"\n                                                            className=\"rounded-5 bg-transparent text-dark border-0 btn\"\n                                                        >\n                                                        </Dropdown.Toggle>\n                                                        <Dropdown.Menu>\n                                                            {isEqualNumber(contextObj.Edit_Rights, 1) && (\n                                                                <MenuItem onClick={() => setTeamData(o)}>\n                                                                    <GroupAdd className=\"fa-in text-primary me-2\" /> Manage Team\n                                                                </MenuItem>\n                                                            )}\n                                                            {(isEqualNumber(contextObj.Edit_Rights, 1) && isEqualNumber(o?.Project_Id, 0)) && (\n                                                                <MenuItem onClick={() => setUpdate(o)}>\n                                                                    <Edit className=\"fa-in me-2\" /> Edit\n                                                                </MenuItem>\n                                                            )}\n                                                            {(isEqualNumber(contextObj.Delete_Rights, 1) && isEqualNumber(o?.Project_Id, 0)) && (\n                                                                <MenuItem onClick={() => setDelete(o)}>\n                                                                    <Delete className=\"fa-in me-2 text-danger\" /> Delete\n                                                                </ MenuItem>\n                                                            )}\n                                                        </Dropdown.Menu>\n                                                    </Dropdown>\n                                                }\n                                            </span>\n\n                                            {/* <MenuItem onClick={() => navigate('chats', { state: o })}>\n                                                <Launch className=\"fa-in me-2 text-primary\" />\n                                                Open Chats\n                                            </MenuItem> */}\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    ) : (\n                        <h5 className=\"text-center mb-5\">\n                            {\n                                (isEqualNumber(parseData.UserTypeId, 0) || isEqualNumber(parseData.UserTypeId, 1))\n                                    ? 'No Topics Available'\n                                    : 'You are not involved in any discussion'\n                            }\n                        </h5>\n                    )}\n                </div>\n            </div>\n\n            <Dialog\n                open={createDialog}\n                onClose={closeCreateDialog} maxWidth='sm' fullWidth>\n                <DialogTitle>{!isEdit ? 'Create Discussion Topic' : 'Modify Topic'}</DialogTitle>\n                <DialogContent>\n                    <table className=\"table\">\n                        <tbody>\n                            <tr>\n                                <td className=\"border-0\">Topic</td>\n                                <td className=\"border-0\">\n                                    <input\n                                        className=\"cus-inpt\"\n                                        onChange={e => setInputValue({ ...inputValue, Topic: e.target.value })}\n                                        value={inputValue.Topic} maxLength={100} placeholder=\"ex: Morning Activiey\" autoFocus\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"border-0\">Describtion</td>\n                                <td className=\"border-0\">\n                                    <textarea\n                                        className=\"cus-inpt\"\n                                        value={inputValue.Description}\n                                        rows={5} maxLength={300} placeholder=\"maximum 300 character\"\n                                        onChange={e => setInputValue({ ...inputValue, Description: e.target.value })} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={closeCreateDialog}>Close</Button>\n                    <Button\n                        onClick={isEdit\n                            ? putTopic\n                            : postTopic}>\n                        {isEdit ? \"Update\" : 'Create'}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={deleteDialog}\n                onClose={closeDeleteDialog}>\n                <DialogTitle>Confirmation</DialogTitle>\n                <DialogContent>Do you want to delete the <span className=\"text-primary fw-bold\">{inputValue?.Topic}</span> Topic?</DialogContent>\n                <DialogActions>\n                    <Button onClick={closeDeleteDialog}>Close</Button>\n                    <Button\n                        onClick={deleteTopic} color=\"error\">\n                        Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n\n            <Dialog\n                open={teamDialog}\n                onClose={closeTeamDialog} maxWidth='sm' fullWidth>\n                <DialogTitle>Manage Team</DialogTitle>\n                <DialogContent >\n                    <Autocomplete\n                        multiple\n                        id=\"checkboxes-tags-demo\"\n                        options={users}\n                        disableCloseOnSelect\n                        getOptionLabel={(option) => option?.Name}\n                        value={currentTeam?.InvolvedUsers || []}\n                        onChange={(f, e) => setCurerntTeam({ ...currentTeam, InvolvedUsers: e })}\n                        renderOption={(props, option, { selected }) => (\n                            <li {...props}>\n                                <Checkbox\n                                    icon={icon}\n                                    checkedIcon={checkedIcon}\n                                    style={{ marginRight: 8 }}\n                                    checked={selected}\n                                />\n                                {option?.Name}\n                            </li>\n                        )}\n                        className=\"pt-2\"\n                        isOptionEqualToValue={(opt, val) => opt?.UserId === val?.UserId}\n                        renderInput={(params) => (\n                            <TextField {...params} label=\"Users\" placeholder=\"Select Team Members\" />\n                        )}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={closeTeamDialog}>Close</Button>\n                    <Button\n                        color=\"success\"\n                        onClick={postTeamMembers}>\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    ) : <InvalidPageComp />;\n}\n\nexport default Discussions;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3m-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3m0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5m8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5\"\n}), 'People');"],"names":["createSvgIcon","_jsx","d","topicInitialValue","Description","Id","Topic","Company_id","_JSON$parse","JSON","parse","localStorage","getItem","icon","CheckBoxOutlineBlankIcon","fontSize","checkedIcon","CheckBoxIcon","Discussions","localData","parseData","myDiscussions","setMyDiscussions","useState","createDialog","setCreateDialog","deleteDialog","setDeleteDialog","teamDialog","setTeamDialog","inputValue","setInputValue","currentTeam","setCurerntTeam","isEdit","setIsEdit","contextObj","useContext","MyContext","reload","setReload","users","setUsers","navigate","useNavigate","useEffect","fetchLink","address","concat","UserId","UserTypeId","then","data","success","temp","forEach","o","_o$InvolvedUsers","InvolvedUsers","obj","Number","push","catch","e","console","log","BranchId","closeCreateDialog","closeDeleteDialog","closeTeamDialog","Read_Rights","_jsxs","_Fragment","children","ToastContainer","className","isEqualNumber","Add_Rights","onClick","length","map","i","Project_Id","state","Tooltip","title","People","InvolvedUsersCount","Message","TotalMessages","Article","DocumentsShared","IconButton","size","Launch","Edit_Rights","Delete_Rights","Dropdown","Toggle","variant","id","Menu","MenuItem","GroupAdd","setUpdate","row","Edit","setDelete","Delete","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","onChange","_objectSpread","target","value","maxLength","placeholder","autoFocus","rows","DialogActions","Button","async","method","bodyData","toast","message","error","color","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","option","Name","f","renderOption","props","_ref","selected","Checkbox","style","marginRight","checked","isOptionEqualToValue","opt","val","renderInput","params","TextField","label","Teams","Topic_Id","InvalidPageComp"],"sourceRoot":""}
{"version":3,"file":"static/js/788.d7749a60.chunk.js","mappings":"uOAEA,MAYA,EAZiBA,IAAA,IAAC,MAAEC,EAAK,MAAEC,GAAOF,EAAA,OAC9BG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oFAAmFC,SAAA,EAC9FC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,OAAQC,MAAO,OAAQC,OAAQ,WAAYL,SAC7DM,MAAMV,GACDA,GAAgB,IAChBA,GAAQW,EAAAA,EAAAA,IAAaX,GAAS,OAGxCK,EAAAA,EAAAA,KAAA,MAAIF,UAAU,QAAOC,SAAEH,MACrB,E,yBCLV,MAAMW,EAAWb,IAAA,IAAC,MAAEC,EAAK,MAAEC,GAAOF,EAAA,OAAKM,EAAAA,EAAAA,KAACQ,EAAQ,CAACb,MAAOA,EAAOC,MAAOA,GAAS,EAmG/E,EAjGuBa,IAA+B,IAA9B,QAAEC,EAAO,YAAEC,GAAaF,EAC5C,MAAOG,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,KACpCG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,CACjCK,cAAcC,EAAAA,EAAAA,SAGlBC,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,sCAADC,OAAwCd,EAAO,iBAAAc,OAAgBb,KACvEc,MAAKC,IACAA,EAAKC,SACLd,EAAgBa,EAAKA,KACzB,IAEHE,OAAMC,GAAKC,QAAQC,MAAMF,MAE1BP,EAAAA,EAAAA,GAAU,CACNC,QAAQ,gDAADC,OAAkDd,EAAO,iBAAAc,OAAgBb,KACjFc,MAAKC,GAAQV,EAAaU,EAAKA,QACjCE,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAC9B,CAACnB,EAASC,IAEb,MAiBMqB,EAjB2BN,KAC7B,MAAMM,EAAiB,CAAC,EAaxB,OAXAN,EAAKO,SAAQC,IACTA,EAAOC,cAAcF,SAAQG,IACpBJ,EAAeI,EAAMC,gBACtBL,EAAeI,EAAMC,cAAgB,GAEzCD,EAAME,YAAYL,SAAQM,IAAW,IAADC,EAChCR,EAAeI,EAAMC,eAAuB,OAANE,QAAM,IAANA,GAAa,QAAPC,EAAND,EAAQE,aAAK,IAAAD,OAAP,EAANA,EAAeE,QAAO,CAACC,EAAKC,IAAQD,IAAU,OAAHC,QAAG,IAAHA,OAAG,EAAHA,EAAKC,eAAgB,IAAI,EAAE,GAC9G,GACJ,IAGCb,CAAc,EAGFc,CAAwBlC,GAEzCmC,EAAoBC,OAAOC,OAAOjB,GAAgBU,QAAO,CAACC,EAAKO,IAAQP,EAAMO,GAAK,GAExF,OACIrD,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAApD,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACjBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,MAAmB,OAAZiB,QAAY,IAAZA,OAAY,EAAZA,EAAcwC,OAAQxD,MAAO,aAC9CI,EAAAA,EAAAA,KAACO,EAAQ,CACLZ,MAAgB,OAAToB,QAAS,IAATA,OAAS,EAATA,EAAW2B,QAAO,CAACC,EAAKC,KAAS,IAADS,EACnC,IAAIC,EAAQ,EAEZ,OADAA,IAAY,OAAHV,QAAG,IAAHA,GAAU,QAAPS,EAAHT,EAAKH,aAAK,IAAAY,OAAP,EAAHA,EAAYD,SAAU,EACxBE,EAAQX,CAAG,GACnB,GACH/C,MAAO,WAEXI,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,MAAOoD,EAAmBnD,MAAO,UAC1CoD,OAAOO,QAAQvB,GAAgBwB,KAAIC,IAAA,IAAEC,EAAQC,GAASF,EAAA,OAAKzD,EAAAA,EAAAA,KAACO,EAAQ,CAAcZ,MAAOgE,EAAU/D,MAAO8D,GAAhCA,EAA0C,UAI7H1D,EAAAA,EAAAA,KAAA,SACI4D,KAAK,QACL9D,UAAU,uBACV+D,MAAO5C,EAAOE,aACd2C,SAAUjC,GAAKX,GAAU6C,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAE5C,aAAcU,EAAEoC,OAAOJ,aAGtE7D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+CAA8CC,UACzDC,EAAAA,EAAAA,KAACkE,EAAAA,EAAQ,CACLC,MAAO,CAAC,CAAEC,UAAW,OAAQ1C,KAAe,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWyC,KAAIa,GAAM,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGC,eAC1DC,OAAQ,CACJ,CAAE7C,KAAe,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWyC,KAAIa,IAAC,IAAAG,EAAA,OAAK,OAADH,QAAC,IAADA,GAAQ,QAAPG,EAADH,EAAG5B,aAAK,IAAA+B,OAAP,EAADA,EAAUpB,MAAM,IAAGqB,MAAO,SACtD,CACI/C,KAAe,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWyC,KAAIa,IAAC,IAAAK,EAAA,OAAIC,OAAQ,OAADN,QAAC,IAADA,GAAQ,QAAPK,EAADL,EAAG5B,aAAK,IAAAiC,OAAP,EAADA,EAAUhC,QAAO,CAACC,EAAKC,KAAS,IAADgC,EAC5D,IAAItB,EAAQ,EAMZ,OALAA,GAAY,OAAHV,QAAG,IAAHA,GAAe,QAAZgC,EAAHhC,EAAKiC,kBAAU,IAAAD,OAAZ,EAAHA,EAAiBlC,QAAO,CAACoC,EAAQC,KACtC,IAAIC,EAAW,EAEf,OADAA,IAAkB,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQlC,eAAgB,EAC7BmC,EAAWF,CAAM,GACzB,GACInC,EAAMW,CAAK,GACnB,IAAI2B,QAAQ,EAAE,IACjBR,MAAO,YAGfS,MAAO,IACPC,OAAQ,IACRC,SAAS,QACTC,aAAc,QAGvB,EChGL9E,EAAWb,IAAA,IAAC,MAAEC,EAAK,MAAEC,GAAOF,EAAA,OAAKM,EAAAA,EAAAA,KAACQ,EAAQ,CAACb,MAAOA,EAAOC,MAAOA,GAAS,EA8B/E,EA5BmBa,IAA6B,IAAD6E,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA3B,QAAChF,EAAO,YAAEC,GAAYF,EACtC,MAAOG,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IAajD,OAXAO,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,+CAADC,OAAiDd,EAAO,iBAAAc,OAAgBb,KAChFc,MAAKC,IACAA,EAAKC,SACLd,EAAgBa,EAAKA,KACzB,IAEHE,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAC9B,CAACnB,EAASC,KAGTX,EAAAA,EAAAA,KAAAmD,EAAAA,SAAA,CAAApD,UACIC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACjBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,OAAsB,QAAf2F,EAAA1E,EAAa,UAAE,IAAA0E,OAAA,EAAfA,EAAiBK,gBAAiB,EAAG/F,MAAO,cAC7DI,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,OAAsB,QAAf4F,EAAA3E,EAAa,UAAE,IAAA2E,OAAA,EAAfA,EAAiBK,aAAc,EAAGhG,MAAO,WAC1DI,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,OAAsB,QAAf6F,EAAA5E,EAAa,UAAE,IAAA4E,OAAA,EAAfA,EAAiBK,kBAAmB,EAAGjG,MAAO,cAC/DI,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,MAAsB,QAAf8F,EAAA7E,EAAa,UAAE,IAAA6E,GAAfA,EAAiBK,SAAUC,EAAAA,EAAAA,IAAuB,QAAhBL,EAAC9E,EAAa,UAAE,IAAA8E,OAAA,EAAfA,EAAiBI,SAAW,IAAKlG,MAAO,kBAGrG,EC1BLW,EAAWb,IAAA,IAAC,MAAEC,EAAK,MAAEC,GAAOF,EAAA,OAAKM,EAAAA,EAAAA,KAACQ,EAAQ,CAACb,MAAOA,EAAOC,MAAOA,GAAS,EA+B/E,EA7BqBa,IAA6B,IAAD6E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAM,EAAA,IAA3B,QAACtF,EAAO,YAAEC,GAAYF,EACxC,MAAOG,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IAajD,OAXAO,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,iDAADC,OAAmDd,EAAO,iBAAAc,OAAgBb,KAClFc,MAAKC,IACAA,EAAKC,SACLd,EAAgBa,EAAKA,KACzB,IAEHE,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAC9B,CAACnB,EAASC,KAGTX,EAAAA,EAAAA,KAAAmD,EAAAA,SAAA,CAAApD,UACIC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACjBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,MAAsB,QAAf2F,EAAA1E,EAAa,UAAE,IAAA0E,GAAfA,EAAiBW,WAAYF,EAAAA,EAAAA,IAAuB,QAAhBR,EAAC3E,EAAa,UAAE,IAAA2E,OAAA,EAAfA,EAAiBU,WAAa,IAAKrG,MAAO,UAChGI,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,OAAsB,QAAf6F,EAAA5E,EAAa,UAAE,IAAA4E,OAAA,EAAfA,EAAiBU,eAAgB,EAAGtG,MAAO,WAC5DI,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,OAAsB,QAAf8F,EAAA7E,EAAa,UAAE,IAAA6E,OAAA,EAAfA,EAAiBU,WAAY,EAAGvG,MAAO,cACxDI,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,OAAsB,QAAf+F,EAAA9E,EAAa,UAAE,IAAA8E,OAAA,EAAfA,EAAiBU,cAAe,EAAGxG,MAAO,iBAC3DI,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,OAAsB,QAAfqG,EAAApF,EAAa,UAAE,IAAAoF,OAAA,EAAfA,EAAiBK,cAAe,EAAGzG,MAAO,uBAGpE,EC5BLW,EAAWb,IAAA,IAAC,MAAEC,EAAK,MAAEC,GAAOF,EAAA,OAAKM,EAAAA,EAAAA,KAACQ,EAAQ,CAACb,MAAOA,EAAOC,MAAOA,GAAS,EA4D/E,EA1DkBa,IAA+B,IAAD6F,EAAAC,EAAA,IAA7B,QAAE7F,EAAO,YAAEC,GAAaF,EACvC,MAAOG,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAEjDO,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,gDAADC,OAAkDd,EAAO,iBAAAc,OAAgBb,KACjFc,MAAKC,IACAA,EAAKC,SACLd,EAAgBa,EAAKA,KACzB,IAEHE,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAC9B,CAACnB,EAASC,IAEb,MAAM6F,EAAgBA,KAClB,IAAIC,EAAW,GAmBf,OAjBY,OAAZ7F,QAAY,IAAZA,GAAAA,EAAcqB,SAAQW,IAAQ,IAADgC,EACtB,OAAHhC,QAAG,IAAHA,GAAe,QAAZgC,EAAHhC,EAAKiC,kBAAU,IAAAD,GAAfA,EAAiB3C,SAAQyE,IACrB,MAAMC,EAAWF,EAASG,WAAUvC,IAAM,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGwC,aAAgB,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKG,YACxC,IAADC,EAAAC,EAKdC,GALW,IAAdL,EACAF,EAASE,IAAS3C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXyC,EAASE,IAAS,IACrBM,OAAyB,QAAlBH,EAAAL,EAASE,UAAS,IAAAG,OAAA,EAAlBA,EAAoBG,SAAY,OAAHP,QAAG,IAAHA,GAAiB,QAAdK,EAAHL,EAAKQ,oBAAY,IAAAH,OAAd,EAAHA,EAAmBI,UAAW,KAGtEV,EAASW,KAAK,CACVP,SAAa,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKG,SACfI,OAAW,OAAHP,QAAG,IAAHA,GAAiB,QAAdM,EAAHN,EAAKQ,oBAAY,IAAAF,OAAd,EAAHA,EAAmBG,UAAW,GAE9C,GACF,IAGCV,CAAQ,EAGbY,EAA8B,QAAlBf,EAAGE,WAAe,IAAAF,OAAA,EAAfA,EAAiB5D,QAAO,CAACC,EAAKC,KAC/C,IAAIU,EAAQ,EAEZ,OADAA,GAA4B,sBAAf,OAAHV,QAAG,IAAHA,OAAG,EAAHA,EAAKiE,UAAsC,OAAHjE,QAAG,IAAHA,OAAG,EAAHA,EAAKqE,MAAQ,EACxDtE,EAAMW,CAAK,GACnB,GAEH,OACItD,EAAAA,EAAAA,KAAAmD,EAAAA,SAAA,CAAApD,UACIC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACjBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,OAAmB,OAAZiB,QAAY,IAAZA,OAAY,EAAZA,EAAcwC,SAAU,EAAGxD,MAAO,WACnC,QAD+C2G,EAC9DC,WAAe,IAAAD,OAAA,EAAfA,EAAiB/C,KAAI,CAACa,EAAGiD,KACtBtH,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,MAAQ,OAAD0E,QAAC,IAADA,OAAC,EAADA,EAAG4C,MAAOrH,MAAQ,OAADyE,QAAC,IAADA,OAAC,EAADA,EAAGwC,UAAeS,MAExDtH,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,MAAO0H,EAAczH,MAAO,gBAG/C,ECxDLW,EAAWb,IAAA,IAAC,MAAEC,EAAK,MAAEC,GAAOF,EAAA,OAAKM,EAAAA,EAAAA,KAACQ,EAAQ,CAACb,MAAOA,EAAOC,MAAOA,GAAS,EA2C/E,EAzC2Ba,IAA+B,IAA9B,QAAEC,EAAO,YAAEC,GAAaF,EAChD,MAAOG,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IAajD,OAXAO,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,yCAADC,OAA2Cd,EAAO,iBAAAc,OAAgBb,KAC1Ec,MAAKC,IACAA,EAAKC,SACLd,EAAgBa,EAAKA,KACzB,IAEHE,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAC9B,CAACnB,EAASC,KAGTX,EAAAA,EAAAA,KAAAmD,EAAAA,SAAA,CAAApD,UACIC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACjBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,OAAmB,OAAZiB,QAAY,IAAZA,OAAY,EAAZA,EAAcwC,SAAU,EAAGxD,MAAO,UAClDoD,OAAOO,QAAoB,OAAZ3C,QAAY,IAAZA,OAAY,EAAZA,EAAc8B,QAAO,CAAC6E,EAAK3E,KAGhC,CACH4E,cAHgBD,EAAIC,eAAiB5E,EAAI6E,SAAW,EAIpDC,eAHiBH,EAAIG,gBAAkB9E,EAAI+E,UAAY,KAK5D,CACCH,cAAe,EACfE,eAAgB,KAChBlE,KAAIC,IAAA,IAAEmE,EAAK/D,GAAMJ,EAAA,OACjBzD,EAAAA,EAAAA,KAACO,EAAQ,CAACZ,MAAOkI,SAAShE,EAAQjD,EAAawC,QAASxD,MAAU,OAAHgI,QAAG,IAAHA,OAAG,EAAHA,EAAKE,QAAQ,IAAK,MAAWF,EAAO,UAOhH,E,0DCzBX,MA0GA,EA1G0BG,KACtB,MAAO9G,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,CACjCJ,SAASsH,EAAAA,EAAAA,MACTrH,YAAa,UAGVsH,EAAgBC,IAAqBpH,EAAAA,EAAAA,UAAS,CACjD,CACIqH,KAAM,oBACNC,QAAQ,EACRC,MAAMrI,EAAAA,EAAAA,KAACsI,EAAAA,IAAe,CAACrI,MAAO,CAAEC,SAAU,WAE9C,CACIiI,KAAM,oBACNC,QAAQ,EACRC,MAAMrI,EAAAA,EAAAA,KAACuI,EAAAA,IAAmB,CAACtI,MAAO,CAAEC,SAAU,WAElD,CACIiI,KAAM,sBACNC,QAAQ,EACRC,MAAMrI,EAAAA,EAAAA,KAACwI,EAAAA,IAAK,CAACvI,MAAO,CAAEC,SAAU,WAEpC,CACIiI,KAAM,mBACNC,QAAQ,EACRC,MAAMrI,EAAAA,EAAAA,KAACyI,EAAAA,IAAO,CAACxI,MAAO,CAAEC,SAAU,WAEtC,CACIiI,KAAM,6BACNC,QAAQ,EACRC,MAAMrI,EAAAA,EAAAA,KAAC0I,EAAAA,IAAa,CAACzI,MAAO,CAAEC,SAAU,aAI1CyI,GAAqBC,EAAAA,EAAAA,UAAQ,IAAM,EACrC5I,EAAAA,EAAAA,KAAC6I,EAAc,CAACnI,QAASO,EAAOP,QAASC,YAAaM,EAAON,eAC7DX,EAAAA,EAAAA,KAAC8I,EAAU,CAACpI,QAASO,EAAOP,QAASC,YAAaM,EAAON,eACzDX,EAAAA,EAAAA,KAAC+I,EAAY,CAACrI,QAASO,EAAOP,QAASC,YAAaM,EAAON,eAC3DX,EAAAA,EAAAA,KAACgJ,EAAS,CAACtI,QAASO,EAAOP,QAASC,YAAaM,EAAON,eACxDX,EAAAA,EAAAA,KAACiJ,EAAkB,CAACvI,QAASO,EAAOP,QAASC,YAAaM,EAAON,gBAClE,CAACM,EAAOP,QAASO,EAAON,eAE3BU,EAAAA,EAAAA,YAAU,KACN6G,GAAkBnE,GAAOA,EAAIP,KAAI,CAAC0F,EAAMC,KAAKnF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtCkF,GAAI,IACPE,KAAMT,EAAmBQ,QACzB,GACL,CAACR,IAUJ,OACI9I,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAApD,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,OAAMC,SAAC,UACxBC,EAAAA,EAAAA,KAAA,SACI4D,KAAK,OACL9D,UAAU,kBACV+D,MAAO5C,EAAOP,QACdoD,SAAUjC,GAAKX,GAAU6C,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAErD,QAASmB,EAAEoC,OAAOJ,gBAGrEhE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,OAAMC,SAAC,cACxBF,EAAAA,EAAAA,MAAA,UACIC,UAAU,kBACV+D,MAAO5C,EAAON,YACdmD,SAAUjC,GAAKX,GAAU6C,IAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAG,IAAEpD,YAAakB,EAAEoC,OAAOJ,UAAU9D,SAAA,EAE3EC,EAAAA,EAAAA,KAAA,UAAQ6D,MAAM,OAAM9D,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQ6D,MAAM,SAAQ9D,SAAC,oBAKlCkI,EAAezE,KAAI,CAAC0F,EAAMC,KACvBtJ,EAAAA,EAAAA,MAACwJ,EAAAA,EAAI,CAAavJ,UAAU,OAAMC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OACIC,UAAU,oFACVwJ,QAASA,IArCRH,KACjBjB,GAAkBqB,GACdA,EAAmB/F,KAAI,CAAC0F,EAAM5B,IAC1BA,IAAM6B,GAAKnF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQkF,GAAI,IAAEd,QAASc,EAAKd,SAAWc,KAEzD,EAgC8BM,CAAaL,GAC5BlJ,MAAO,CAAEwJ,OAAQ,WAAY1J,SAAA,EAE7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wDAAuDC,SAAA,EAClEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,4BAA2BC,SAAEmJ,EAAKb,QAClDrI,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAEmJ,EAAKf,WAEvCnI,EAAAA,EAAAA,KAAC0J,EAAAA,EAAU,CAACC,KAAK,QAAQ7J,UAAU,MAAKC,SACnCmJ,EAAKd,QAASpI,EAAAA,EAAAA,KAAC4J,EAAAA,EAAe,KAAM5J,EAAAA,EAAAA,KAAC6J,EAAAA,EAAiB,UAG/D7J,EAAAA,EAAAA,KAAC8J,EAAAA,EAAQ,CAACC,GAAIb,EAAKd,OAAQ4B,eAAa,EAAAjK,UACpCC,EAAAA,EAAAA,KAACiK,EAAAA,EAAW,CAAAlK,SAAEmJ,EAAKE,WAfhBD,OAmBhB,C","sources":["Pages/Analytics/entryComps/numCardComp.jsx","Pages/Analytics/entryComps/driverComp.jsx","Pages/Analytics/entryComps/godownComp.jsx","Pages/Analytics/entryComps/deliveryComp.jsx","Pages/Analytics/entryComps/staffComp.jsx","Pages/Analytics/entryComps/weightCheckingComp.jsx","Pages/Analytics/entryInfo.jsx"],"sourcesContent":["import { NumberFormat } from \"../../../Components/functions\"\n\nconst CardComp = ({ Value, Label }) => (\n    <div className=\"grid-card d-flex align-items-center justify-content-center flex-column cus-shadow\">\n        <h1 style={{ fontSize: '45px', color: 'blue', margin: '0 0.5em' }}>\n            {isNaN(Value)\n                ? Value ? Value : '-'\n                : Value ? NumberFormat(Value) : '0'\n            }\n        </h1>\n        <h2 className='fa-20'>{Label}</h2>\n    </div>\n)\n\nexport default CardComp;","import React, { useEffect, useState } from 'react';\nimport CardComp from './numCardComp';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { getMonth } from '../../../Components/functions';\nimport { fetchLink } from '../../../Components/fetchComponent';\n\nconst ContCard = ({ Value, Label }) => <CardComp Value={Value} Label={Label} />\n\nconst DriverInfoComp = ({ reqDate, reqLocation }) => {\n    const [activityData, setActivityData] = useState([]);\n    const [tripBased, setTripBased] = useState([]);\n    const [filter, setFilter] = useState({\n        currentMonth: getMonth(),\n    });\n\n    useEffect(() => {\n        fetchLink({\n            address: `dataEntry/driverActivities?reqDate=${reqDate}&reqLocation=${reqLocation}`\n        }).then(data => {\n            if (data.success) {\n                setActivityData(data.data)\n            }\n        })\n        .catch(e => console.error(e))\n\n        fetchLink({\n            address: `dataEntry/driverActivities/tripBased?reqDate=${reqDate}&reqLocation=${reqLocation}`\n        }).then(data => setTripBased(data.data))\n        .catch(e => console.error(e))\n    }, [reqDate, reqLocation])\n\n    const calculateCategoryTotals = (data) => {\n        const categoryTotals = {};\n\n        data.forEach(driver => {\n            driver.LocationGroup.forEach(group => {\n                if (!categoryTotals[group.TripCategory]) {\n                    categoryTotals[group.TripCategory] = 0;\n                }\n                group.TripDetails.forEach(detail => {\n                    categoryTotals[group.TripCategory] += detail?.Trips?.reduce((sum, obj) => sum + (obj?.TonnageValue || 0), 0);\n                });\n            });\n        });\n\n        return categoryTotals;\n    };\n\n    const categoryTotals = calculateCategoryTotals(activityData);\n\n    const totalTonnageValue = Object.values(categoryTotals).reduce((sum, val) => sum + val, 0);\n\n    return (\n        <>\n            <div className=\"my-2\">\n                <div className='cus-grid text-dark'>\n                    <ContCard Value={activityData?.length} Label={'DRIVERS'} />\n                    <ContCard\n                        Value={tripBased?.reduce((sum, obj) => {\n                            let total = 0;\n                            total += obj?.Trips?.length || 0\n                            return total + sum;\n                        }, 0)}\n                        Label={'TRIPS'}\n                    />\n                    <ContCard Value={totalTonnageValue} Label={'TOTAL'} />\n                    {Object.entries(categoryTotals).map(([objKey, objValue]) => <ContCard key={objKey} Value={objValue} Label={objKey} />)}\n                </div>\n            </div>\n\n            <input \n                type='month'\n                className='cus-inpt w-auto mt-3' \n                value={filter.currentMonth} \n                onChange={e => setFilter(pre => ({ ...pre, currentMonth: e.target.value}))} \n            />\n\n            <div className=\"my-3 d-flex justify-content-center flex-wrap\">\n                <BarChart\n                    xAxis={[{ scaleType: 'band', data: tripBased?.map(o => o?.DriverName) }]}\n                    series={[\n                        { data: tripBased?.map(o => o?.Trips?.length), label: 'TRIPS',  },\n                        {\n                            data: tripBased?.map(o => Number(o?.Trips?.reduce((sum, obj) => {\n                                let total = 0;\n                                total += obj?.Categories?.reduce((catSum, catObj) => {\n                                    let catTotal = 0;\n                                    catTotal += catObj?.TonnageValue || 0\n                                    return catTotal + catSum\n                                }, 0)\n                                return sum + total\n                            }, 0)).toFixed(2)),\n                            label: 'TONNAGE', \n                        }\n                    ]}\n                    width={900}\n                    height={400}\n                    barLabel=\"value\"\n                    borderRadius={6}\n                />\n            </div>\n        </>\n    )\n}\n\nexport default DriverInfoComp;","import React, { useEffect, useState } from 'react';\nimport { UTCTime } from '../../../Components/functions';\nimport CardComp from './numCardComp';\nimport { fetchLink } from '../../../Components/fetchComponent';\n\nconst ContCard = ({ Value, Label }) => <CardComp Value={Value} Label={Label} />\n\nconst GodownInfo = ({reqDate, reqLocation}) => {\n    const [activityData, setActivityData] = useState([]);\n\n    useEffect(() => {\n        fetchLink({\n            address: `dataEntry/godownActivities/abstract?reqDate=${reqDate}&reqLocation=${reqLocation}`\n        }).then(data => {\n            if (data.success) {\n                setActivityData(data.data)\n            }\n        })\n        .catch(e => console.error(e))\n    }, [reqDate, reqLocation])\n\n    return (\n        <>\n            <div className=\"my-2\">\n                <div className='cus-grid text-dark'>\n                    <ContCard Value={activityData[0]?.PurchaseTotal || 0} Label={'Purchase'} />\n                    <ContCard Value={activityData[0]?.SalesTotal || 0} Label={'Sales'} />\n                    <ContCard Value={activityData[0]?.ManagementTotal || 0} Label={'Handling'} />\n                    <ContCard Value={activityData[0]?.EntryAt ? UTCTime(activityData[0]?.EntryAt) : '-'} Label={'Updated'} />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default GodownInfo;","import React, { useEffect, useState } from 'react';\nimport { UTCTime } from '../../../Components/functions';\nimport CardComp from './numCardComp';\nimport { fetchLink } from '../../../Components/fetchComponent';\n\nconst ContCard = ({ Value, Label }) => <CardComp Value={Value} Label={Label} />\n\nconst DeliveryInfo = ({reqDate, reqLocation}) => {\n    const [activityData, setActivityData] = useState([]);\n\n    useEffect(() => {\n        fetchLink({\n            address: `dataEntry/deliveryActivities/abstract?reqDate=${reqDate}&reqLocation=${reqLocation}`\n        }).then(data => {\n            if (data.success) {\n                setActivityData(data.data)\n            }\n        })\n        .catch(e => console.error(e))\n    }, [reqDate, reqLocation])\n\n    return (\n        <>\n            <div className=\"my-2\">\n                <div className='cus-grid text-dark'>\n                    <ContCard Value={activityData[0]?.EntryTime ? UTCTime(activityData[0]?.EntryTime) : '-'} Label={'Time'} />\n                    <ContCard Value={activityData[0]?.OverAllSales || 0} Label={'Sales'} />\n                    <ContCard Value={activityData[0]?.NotTaken || 0} Label={'NotTaken'} />\n                    <ContCard Value={activityData[0]?.NotVerified || 0} Label={'NotVerified'} />\n                    <ContCard Value={activityData[0]?.NotDelivery || 0} Label={'Not Delivery'} />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default DeliveryInfo;","import React, { useEffect, useState } from 'react';\nimport CardComp from './numCardComp';\nimport { fetchLink } from '../../../Components/fetchComponent';\n\nconst ContCard = ({ Value, Label }) => <CardComp Value={Value} Label={Label} />\n\nconst StaffInfo = ({ reqDate, reqLocation }) => {\n    const [activityData, setActivityData] = useState([]);\n\n    useEffect(() => {\n        fetchLink({\n            address: `dataEntry/staffActivities/staffBased?reqDate=${reqDate}&reqLocation=${reqLocation}`\n        }).then(data => {\n            if (data.success) {\n                setActivityData(data.data)\n            }\n        })\n        .catch(e => console.error(e)) \n    }, [reqDate, reqLocation])\n\n    const categoryTotal = () => {\n        let category = [];\n\n        activityData?.forEach(obj => {\n            obj?.Categories?.forEach(cat => {\n                const catIndex = category.findIndex(o => o?.Category === cat?.Category);\n                if (catIndex !== -1) {\n                    category[catIndex] = {\n                        ...category[catIndex],\n                        Total: category[catIndex]?.Total + (cat?.StaffDetails?.Tonnage || 0)\n                    }\n                } else {\n                    category.push({\n                        Category: cat?.Category,\n                        Total: (cat?.StaffDetails?.Tonnage || 0)\n                    })\n                }\n            })\n        })\n\n        return category;\n    }\n\n    const overAllTotal = categoryTotal()?.reduce((sum, obj) => {\n        let total = 0;\n        total += (obj?.Category !== 'OTHERS 1 - PRINT') ? obj?.Total : 0;\n        return sum + total\n    }, 0)\n\n    return (\n        <>\n            <div className=\"my-2\">\n                <div className='cus-grid text-dark'>\n                    <ContCard Value={activityData?.length || 0} Label={'Staffs'} />\n                    {categoryTotal()?.map((o, i) => (\n                        <ContCard Value={o?.Total} Label={o?.Category} key={i} />\n                    ))}\n                    <ContCard Value={overAllTotal} Label={'Total'} />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default StaffInfo;","import React, { useEffect, useState } from 'react';\nimport CardComp from './numCardComp';\nimport { fetchLink } from '../../../Components/fetchComponent';\n\nconst ContCard = ({ Value, Label }) => <CardComp Value={Value} Label={Label} />\n\nconst WeightCheckingComp = ({ reqDate, reqLocation }) => {\n    const [activityData, setActivityData] = useState([]);\n\n    useEffect(() => {\n        fetchLink({\n            address: `dataEntry/weightCheckActivity?reqDate=${reqDate}&reqLocation=${reqLocation}`\n        }).then(data => {\n            if (data.success) {\n                setActivityData(data.data)\n            }\n        })\n        .catch(e => console.error(e))\n    }, [reqDate, reqLocation])\n\n    return (\n        <>\n            <div className=\"my-2\">\n                <div className='cus-grid text-dark'>\n                    <ContCard Value={activityData?.length || 0} Label={'Items'} />\n                    {Object.entries(activityData?.reduce((avg, obj) => {\n                        let Average_Input = avg.Average_Input += obj.InputKG || 0;\n                        let Average_Output = avg.Average_Output += obj.OutputKG || 0;\n                        return {\n                            Average_Input,\n                            Average_Output\n                        }\n                    }, {\n                        Average_Input: 0,\n                        Average_Output: 0\n                    })).map(([key, value]) => (\n                        <ContCard Value={parseInt(value / activityData.length)} Label={key?.replace('_', ' ')} key={key} />\n                    ))}\n                    {/* <ContCard Value={''} Label={'Total'} /> */}\n\n\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default WeightCheckingComp;","import React, { useEffect, useState, useMemo } from 'react';\nimport { Card, CardContent, IconButton, Collapse } from '@mui/material';\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@mui/icons-material';\nimport { ISOString } from '../../Components/functions';\n\nimport DriverInfoComp from './entryComps/driverComp';\nimport GodownInfo from './entryComps/godownComp';\nimport DeliveryInfo from './entryComps/deliveryComp';\nimport StaffInfo from './entryComps/staffComp';\nimport WeightCheckingComp from './entryComps/weightCheckingComp';\n\nimport { CiDeliveryTruck } from \"react-icons/ci\";\nimport { BsBox } from \"react-icons/bs\";\nimport { HiOutlineHomeModern } from \"react-icons/hi2\"\n// import { GrUserWorker } from \"react-icons/gr\";\nimport { HiUsers } from \"react-icons/hi\";\nimport { SlSpeedometer } from \"react-icons/sl\";\n\nconst DataEntryAbstract = () => {\n    const [filter, setFilter] = useState({\n        reqDate: ISOString(),\n        reqLocation: 'MILL',\n    });\n\n    const [displayContent, setDisplayContent] = useState([\n        {\n            name: 'Driver Activities',\n            isOpen: false,\n            icon: <CiDeliveryTruck style={{ fontSize: '40px' }} />\n        },\n        {\n            name: 'Godown Activities',\n            isOpen: false,\n            icon: <HiOutlineHomeModern style={{ fontSize: '40px' }} />\n        },\n        {\n            name: 'Delivery Activities',\n            isOpen: false,\n            icon: <BsBox style={{ fontSize: '40px' }} />\n        },\n        {\n            name: 'Staff Activities',\n            isOpen: false,\n            icon: <HiUsers style={{ fontSize: '40px' }} />\n        },\n        {\n            name: 'Weight Checking Activities',\n            isOpen: false,\n            icon: <SlSpeedometer style={{ fontSize: '40px' }} />\n        },\n    ]);\n\n    const memoizedComponents = useMemo(() => [\n        <DriverInfoComp reqDate={filter.reqDate} reqLocation={filter.reqLocation} />,\n        <GodownInfo reqDate={filter.reqDate} reqLocation={filter.reqLocation} />,\n        <DeliveryInfo reqDate={filter.reqDate} reqLocation={filter.reqLocation} />,\n        <StaffInfo reqDate={filter.reqDate} reqLocation={filter.reqLocation} />,\n        <WeightCheckingComp reqDate={filter.reqDate} reqLocation={filter.reqLocation} />,\n    ], [filter.reqDate, filter.reqLocation]);\n\n    useEffect(() => {\n        setDisplayContent(pre => pre.map((item, index) => ({\n            ...item,\n            comp: memoizedComponents[index],\n        })));\n    }, [memoizedComponents]);\n\n    const handleToggle = index => {\n        setDisplayContent(prevDisplayContent =>\n            prevDisplayContent.map((item, i) =>\n                i === index ? { ...item, isOpen: !item.isOpen } : item\n            )\n        );\n    };\n\n    return (\n        <>\n            <div className=\"d-flex flex-wrap\">\n                <div className='d-flex flex-column p-1'>\n                    <label className='mb-1'>DATE</label>\n                    <input\n                        type=\"date\"\n                        className='cus-inpt w-auto'\n                        value={filter.reqDate}\n                        onChange={e => setFilter(pre => ({ ...pre, reqDate: e.target.value }))}\n                    />\n                </div>\n                <div className='d-flex flex-column p-1'>\n                    <label className='mb-1'>LOCATION</label>\n                    <select\n                        className='cus-inpt w-auto'\n                        value={filter.reqLocation}\n                        onChange={e => setFilter(pre => ({ ...pre, reqLocation: e.target.value }))}\n                    >\n                        <option value=\"MILL\">MILL</option>\n                        <option value=\"GODOWN\">GODOWN</option>\n                    </select>\n                </div>\n            </div>\n\n            {displayContent.map((item, index) => (\n                <Card key={index} className='mt-2'>\n                    <div\n                        className=\"fa-17 fw-bold border-bottom p-0 d-flex justify-content-between align-items-center\"\n                        onClick={() => handleToggle(index)}\n                        style={{ cursor: 'pointer' }}\n                    >\n                        <div className='d-flex justify-content-between align-items-center p-0'>\n                            <span className='p-4 bg-primary text-white'>{item.icon}</span>\n                            <span className='ps-3 fa-20'>{item.name}</span>\n                        </div>\n                        <IconButton size='small' className='p-2'>\n                            {item.isOpen ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n                        </IconButton>\n                    </div>\n                    <Collapse in={item.isOpen} unmountOnExit>\n                        <CardContent>{item.comp}</CardContent>\n                    </Collapse>\n                </Card>\n            ))}\n        </>\n    );\n};\n\nexport default DataEntryAbstract;\n"],"names":["_ref","Value","Label","_jsxs","className","children","_jsx","style","fontSize","color","margin","isNaN","NumberFormat","ContCard","CardComp","_ref2","reqDate","reqLocation","activityData","setActivityData","useState","tripBased","setTripBased","filter","setFilter","currentMonth","getMonth","useEffect","fetchLink","address","concat","then","data","success","catch","e","console","error","categoryTotals","forEach","driver","LocationGroup","group","TripCategory","TripDetails","detail","_detail$Trips","Trips","reduce","sum","obj","TonnageValue","calculateCategoryTotals","totalTonnageValue","Object","values","val","_Fragment","length","_obj$Trips","total","entries","map","_ref3","objKey","objValue","type","value","onChange","pre","_objectSpread","target","BarChart","xAxis","scaleType","o","DriverName","series","_o$Trips","label","_o$Trips2","Number","_obj$Categories","Categories","catSum","catObj","catTotal","toFixed","width","height","barLabel","borderRadius","_activityData$","_activityData$2","_activityData$3","_activityData$4","_activityData$5","PurchaseTotal","SalesTotal","ManagementTotal","EntryAt","UTCTime","_activityData$6","EntryTime","OverAllSales","NotTaken","NotVerified","NotDelivery","_categoryTotal","_categoryTotal2","categoryTotal","category","cat","catIndex","findIndex","Category","_category$catIndex","_cat$StaffDetails","_cat$StaffDetails2","Total","StaffDetails","Tonnage","push","overAllTotal","i","avg","Average_Input","InputKG","Average_Output","OutputKG","key","parseInt","replace","DataEntryAbstract","ISOString","displayContent","setDisplayContent","name","isOpen","icon","CiDeliveryTruck","HiOutlineHomeModern","BsBox","HiUsers","SlSpeedometer","memoizedComponents","useMemo","DriverInfoComp","GodownInfo","DeliveryInfo","StaffInfo","WeightCheckingComp","item","index","comp","Card","onClick","prevDisplayContent","handleToggle","cursor","IconButton","size","KeyboardArrowUp","KeyboardArrowDown","Collapse","in","unmountOnExit","CardContent"],"sourceRoot":""}
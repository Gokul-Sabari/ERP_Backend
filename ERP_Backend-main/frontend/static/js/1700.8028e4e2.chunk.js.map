{"version":3,"file":"static/js/1700.8028e4e2.chunk.js","mappings":"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","sources":["Components/filterableTable.jsx","Pages/Analytics/QPayComps/settings.jsx","Pages/Analytics/QPayComps/salesBased.jsx","Pages/Analytics/QPayComps/qPayBased.jsx","Pages/Analytics/QPayComps/qpayGroupingList.jsx","Pages/Analytics/QPayReports2.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell, TableSortLabel } from '@mui/material';\nimport { isEqualNumber, LocalDate, NumberFormat } from './functions';\n\nconst FilterableTable = ({ dataArray, columns, onClickFun }) => {\n\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(20);\n    const [sortCriteria, setSortCriteria] = useState([]);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleSortRequest = (columnId) => {\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\n        if (existingCriteria) {\n            const isAsc = existingCriteria.direction === 'asc';\n            setSortCriteria(sortCriteria.map(criteria =>\n                criteria.columnId === columnId\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\n                    : criteria\n            ));\n        } else {\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\n        }\n    };\n\n    const sortData = (data) => {\n        if (!sortCriteria.length) return data;\n\n        const sortedData = [...data].sort((a, b) => {\n            for (const criteria of sortCriteria) {\n                const { columnId, direction } = criteria;\n                const aValue = a[columnId];\n                const bValue = b[columnId];\n\n                if (aValue !== bValue) {\n                    if (direction === 'asc') {\n                        return aValue > bValue ? 1 : -1;\n                    } else {\n                        return aValue < bValue ? 1 : -1;\n                    }\n                }\n            }\n            return 0;\n        });\n\n        return sortedData;\n    };\n\n    const sortedData = sortData(dataArray);\n    const startIndex = page * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    const paginatedData = sortedData.slice(startIndex, endIndex);\n\n    const formatString = (val, dataType) => {\n        switch (dataType) {\n            case 'number':\n                return NumberFormat(val)\n            case 'date':\n                return LocalDate(val);\n            case 'string':\n                return val;\n            default:\n                return ''\n        }\n    }\n\n    return (\n        <div>\n            <TableContainer component={Paper} sx={{ maxHeight: 550 }}>\n                <Table stickyHeader size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column, ke) => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)) && (\n                                <TableCell\n                                    key={ke}\n                                    className='fa-13 fw-bold border-end border-top'\n                                    style={{ backgroundColor: '#EDF0F7' }}\n                                    sortDirection={\n                                        sortCriteria.some(criteria => criteria.columnId === column.Field_Name)\n                                            ? sortCriteria.find(criteria => criteria.columnId === column.Field_Name).direction\n                                            : false\n                                    }\n                                >\n                                    <TableSortLabel\n                                        active={sortCriteria.some(criteria => criteria.columnId === column.Field_Name)}\n                                        direction={\n                                            sortCriteria.some(criteria => criteria.columnId === column.Field_Name)\n                                                ? sortCriteria.find(criteria => criteria.columnId === column.Field_Name).direction\n                                                : 'asc'\n                                        }\n                                        onClick={() => handleSortRequest(column.Field_Name)}\n                                    >\n                                        {column?.Field_Name?.replace(/_/g, ' ')}\n                                    </TableSortLabel>\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {paginatedData.map((row, index) => (\n                            <TableRow key={index}>\n                                {columns.map(column => (\n                                    Object.entries(row).map(([key, value]) => (\n                                        (\n                                            (column.Field_Name === key)\n                                            &&\n                                            (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1))\n                                        ) && (\n                                            <TableCell\n                                                key={column + index}\n                                                className='fa-13 border-end'\n                                                onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\n                                            >\n                                                {formatString(value, column?.Fied_Data)}\n                                            </TableCell>\n                                        )\n                                    ))\n                                ))}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <div className=\"p-2\">\n                <TablePagination\n                    component=\"div\"\n                    count={dataArray.length}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    rowsPerPage={rowsPerPage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                    rowsPerPageOptions={[20, 50, 100, 200, 500]}\n                    labelRowsPerPage=\"Rows per page\"\n                    showFirstButton\n                    showLastButton\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default FilterableTable;\n","import { useState, useEffect } from 'react';\nimport { IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Button, Switch, Card, Paper } from \"@mui/material\";\nimport { RotateLeft, Settings } from '@mui/icons-material';\nimport { toast } from \"react-toastify\";\nimport { fetchLink } from '../../../Components/fetchComponent'\n\n\nconst QPayColumnVisiblitySettings = ({ CompanyId, refresh, columns, ReportId }) => {\n    const [modifiedColumns, setModifiedColumns] = useState([]);\n    const [reset, setReset] = useState(false);\n    const [dialog, setDialog] = useState(false);\n\n    useEffect(() => {\n        setModifiedColumns([...columns])\n    }, [columns, reset])\n\n    const saveColumnVisiblity = () => {\n        setDialog(false);\n        fetchLink({\n            address: `reports/tallyReports/qpay/columnVisiblity`,\n            method: 'POST',\n            bodyData: {\n                dataArray: modifiedColumns,\n                CompanyId: CompanyId,\n                ReportId: ReportId ? ReportId : 1\n            }\n        }).then(data => {\n            if (data.success) {\n                toast.success(data.message)\n            } else {\n                toast.error(data.message)\n            }\n        }).catch(e => console.error(e)).finally(() => {\n            if (refresh) {\n                refresh()\n            }\n        })\n            \n    }\n\n\n    return (\n        <>\n            <IconButton size='small' onClick={() => setDialog(pre => !pre)}>\n                <Settings />\n            </IconButton>\n\n            <Dialog\n                open={dialog}\n                onClose={() => setDialog(false)}\n                fullWidth maxWidth='lg'\n            >\n                <DialogTitle>Column Visiblity Settings</DialogTitle>\n\n                <DialogContent>\n                    <div className=\"row\">\n                        {modifiedColumns?.map((o, i) => (\n                            <div className=\"col-lg-4 col-md-6 p-2\" key={i}>\n                                <Card\n                                    component={Paper}\n                                    className={`p-2 d-flex justify-content-between align-items-center flex-wrap ${i % 2 !== 0 ? 'bg-light' : ''}`}\n                                >\n                                    {/* <FormControlLabel\n                                        control={\n                                            <Switch\n                                                checked={Boolean(o?.Defult_Display) || Boolean(o?.isVisible)}\n                                                disabled={Boolean(o?.Defult_Display)}\n                                                onChange={e =>\n                                                    setModifiedColumns(prevColumns =>\n                                                        prevColumns.map(oo =>\n                                                            oo.Field_Id === o?.Field_Id\n                                                                ? { ...oo, isVisible: e.target.checked ? 1 : 0 }\n                                                                : oo\n                                                        )\n                                                    )}\n                                            />\n                                        }\n                                        label={o?.Field_Name}\n                                        sx={{ fontSize: '14px'}}\n                                        labelPlacement=\"end\"\n                                        className=\"fw-bold text-primary\"\n                                    /> */}\n                                    <div className='d-flex justify-content-between align-items-center flex-wrap'>\n                                        <Switch\n                                            checked={Boolean(o?.Defult_Display) || Boolean(o?.isVisible)}\n                                            disabled={Boolean(o?.Defult_Display)}\n                                            onChange={e =>\n                                                setModifiedColumns(prevColumns =>\n                                                    prevColumns.map(oo =>\n                                                        oo.Field_Id === o?.Field_Id\n                                                            ? { ...oo, isVisible: e.target.checked ? 1 : 0 }\n                                                            : oo\n                                                    )\n                                                )}\n                                        />\n\n                                        <h6 className='fa-13 mb-0 fw-bold '>{o?.Field_Name}</h6>\n                                    </div>\n                                    <input\n                                        type='number'\n                                        value={Number(o?.OrderBy) ? o?.OrderBy : ''}\n                                        onChange={e =>\n                                            setModifiedColumns(prevColumns =>\n                                                prevColumns.map(oo =>\n                                                    oo.Field_Id === o?.Field_Id\n                                                        ? { ...oo, OrderBy: e.target.value }\n                                                        : oo\n                                                )\n                                            )\n                                        }\n                                        label={'Order Value'}\n                                        className='mt-2 p-1 border-0 cus-inpt'\n                                        style={{ width: '80px' }}\n                                        placeholder='Order'\n                                    />\n                                </Card>\n                            </div>\n                        ))}\n\n                    </div>\n                </DialogContent>\n\n                <DialogActions className='d-flex justify-content-between'>\n                    <Button onClick={() => setReset(pre => !pre)} variant='outlined' startIcon={<RotateLeft />}>reset</Button>\n\n                    <span>\n                        <Button onClick={() => setDialog(false)} color='error'>Cancel</Button>\n                        <Button onClick={saveColumnVisiblity} variant='outlined'>Save</Button>\n                    </span>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default QPayColumnVisiblitySettings;","import { useEffect, useState } from \"react\";\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { NumberFormat } from \"../../../Components/functions\";\nimport { Collapse } from \"@mui/material\";\n\n\nconst QPaySalesBasedComp = ({ dataArray }) => {\n    const [salesRange, setSalesRange] = useState([]);\n\n    useEffect(() => {\n\n        const range = [\n            {\n                min: 0,\n                max: 5000,\n                data: []\n            },\n            {\n                min: 5000,\n                max: 10000,\n                data: []\n            },\n            {\n                min: 10000,\n                max: 20000,\n                data: []\n            },\n            {\n                min: 20000,\n                max: 50000,\n                data: []\n            },\n            {\n                min: 50000,\n                max: 100000,\n                data: []\n            },\n            {\n                min: 100000,\n                max: 200000,\n                data: []\n            },\n            {\n                min: 200000,\n                max: 500000,\n                data: []\n            },\n            {\n                min: 500000,\n                max: 1000000,\n                data: []\n            },\n            {\n                min: 1000000,\n                max: 1500000,\n                data: []\n            },\n            {\n                min: 1500000,\n                max: 2000000,\n                data: []\n            },\n            {\n                min: 2000000,\n                max: 1e15,\n                data: []\n            },\n        ];\n\n        dataArray.forEach(o => {\n            const salesAmount = Number(o.Sales_Amount);\n            const rangeIndex = range.findIndex(obj => (salesAmount > obj.min) && (salesAmount <= obj.max));\n            if (rangeIndex !== -1) {\n                range[rangeIndex].data.push(o);\n            } else {\n                // console.log(salesAmount)\n            }\n        });\n        setSalesRange(range);\n\n    }, [dataArray])\n\n    const RowComp = ({ o, i }) => {\n        const [open, setOpen] = useState(false);\n\n        return (\n            <>\n                <tr onClick={() => setOpen(pre => !pre)} className=\"hov\">\n                    <td className=\"fa-13 border text-center hov-bg\">{i + 1}</td>\n                    <td className=\"fa-13 border text-center hov-bg\">\n                        {\n                            salesRange[i + 1]\n                                ? (NumberFormat(o?.min) + ' - ' + NumberFormat(o?.max))\n                                : '< ' + o?.min.toString()\n                        }\n                    </td>\n                    <td className=\"fa-13 border text-center hov-bg blue-text\">{o?.data?.length}</td>\n                    <td className=\"fa-13 border text-center hov-bg\">{NumberFormat((o?.data?.length / dataArray?.length) * 100)}%</td>\n                    <td className=\"fa-13 border text-center hov-bg\">\n                        {(o.data.length === 0) ? 0 : ((o?.data?.reduce((sum, item) => sum + item.Sales_Count || 0, 0)) / o.data.length).toFixed(2)}\n                    </td>\n                    <td className=\"fa-13 border text-center hov-bg\">\n                        {(o.data.length === 0) ? 0 : ((o?.data?.reduce((sum, item) => sum + item.Freq_Days || 0, 0)) / o.data.length).toFixed(2)}\n                    </td>\n                </tr>\n                <Collapse in={open} unmountOnExit>\n                    <tr>\n                        <td colSpan={6}>\n\n                        </td>\n                    </tr>\n                </Collapse>\n            </>\n        )\n    }\n\n    return (\n        <>\n            <div className=\"px-3 d-flex align-items-center justify-content-center flex-column py-2\">\n                <BarChart\n                    xAxis={[{\n                        scaleType: 'band',\n                        data:\n                            salesRange?.map((o, i) => (\n                                salesRange[i + 1]\n                                    ? '> ' + NumberFormat(o?.max)\n                                    : '< ' + (o?.min)\n                            ))\n                    }]}\n                    series={[\n                        // { data: salesRange?.map(o => ((o?.data?.length / dataArray?.length) * 100).toFixed(2)), label: 'Parties', color: 'skyblue' },\n                        { data: salesRange?.map(o => o?.data?.length), label: 'Parties', color: 'skyblue' },\n                        // { \n                        //     data: salesRange?.map(o => (o.data.length === 0) ? 0 : ((o?.data?.reduce((sum, item) => sum + item.Sales_Count || 0, 0)) / o.data.length).toFixed(2)), \n                        //     label: 'Sales Count' \n                        // },\n                        // { \n                        //     data: salesRange?.map(o => (o.data.length === 0) ? 0 : ((o?.data?.reduce((sum, item) => sum + item.Freq_Days || 0, 0)) / o.data.length).toFixed(2)), \n                        //     label: 'Frequency Days' \n                        // },\n                    ]}\n                    height={400}\n                    barLabel=\"value\"\n                    borderRadius={6}\n                />\n\n                <div className=\"table-responsive w-100\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                {['Sno', 'Amount-Range', 'Parties', 'Percentage', 'Sales Count (Avg)', 'Frequency Days (Avg)'].map(o => (\n                                    <th className=\"border fa-14 text-center\" style={{ backgroundColor: '#EDF0F7' }} key={o}>{o}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {salesRange.map((o, i) => <RowComp key={i} o={o} i={i} />)}\n                            <tr>\n                                <td className=\"border\"></td>\n                                <td className=\"border\"></td>\n                                <td className=\"fa-13 border text-center\">\n                                    {NumberFormat(salesRange?.reduce((sum, o) => {\n                                        return sum += o?.data?.length\n                                    }, 0))}\n                                </td>\n                                <td className=\"fa-13 border text-center\">\n                                    {NumberFormat(salesRange?.reduce((sum, o) => {\n                                        return sum += ((o?.data?.length / dataArray?.length) * 100)\n                                    }, 0))}%\n                                </td>\n                                <td className=\"fa-13 border text-center\">\n                                    {NumberFormat((dataArray?.length / (dataArray?.reduce((sum, o) => {\n                                        return sum += Number(o?.Sales_Count) || 0\n                                    }, 0))) * 100)}\n                                </td>\n                                <td className=\"fa-13 border text-center\">\n                                    {NumberFormat((dataArray?.length / (dataArray?.reduce((sum, o) => {\n                                        return sum += Number(o?.Freq_Days) || 0\n                                    }, 0))) * 100)}\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default QPaySalesBasedComp;","import { useEffect, useState } from \"react\";\nimport { PieChart } from '@mui/x-charts/PieChart';\nimport { getRandomColor, NumberFormat } from \"../../../Components/functions\";\nimport { Button } from \"@mui/material\";\n// import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\n\n// const icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\n// const checkedIcon = <CheckBox fontSize=\"small\" />;\n\nconst QPayBasedComp = ({ dataArray, columns, filters }) => {\n    const [qPayRange, setQPayRange] = useState([]);\n    const [reload, setReload] = useState(false);\n    const [filtered, setFiltered] = useState([])\n    const [localState, setLocalState] = useState({\n        group: localStorage.getItem('qPayGroup') || '',\n    })\n\n    const comStr = (str) => str ? (str.trim()).toLowerCase() : '';\n\n    useEffect(() => {\n        const filteredList = Array.isArray(filters[localState.group]) ? filters[localState.group] : []\n        setFiltered(filteredList)\n    }, [filters, localState.group])\n\n\n    useEffect(() => {\n\n        const range = [\n            {\n                min: 0,\n                max: 5,\n                data: []\n            },\n            {\n                min: 5,\n                max: 10,\n                data: []\n            },\n            {\n                min: 10,\n                max: 15,\n                data: []\n            },\n            {\n                min: 15,\n                max: 20,\n                data: []\n            },\n            {\n                min: 20,\n                max: 30,\n                data: []\n            },\n            {\n                min: 30,\n                max: 40,\n                data: []\n            },\n            {\n                min: 40,\n                max: 60,\n                data: []\n            },\n            {\n                min: 60,\n                max: 1e4,\n                data: []\n            },\n        ];\n\n        dataArray.forEach(o => {\n            const qpayDays = Number(o.Q_Pay_Days);\n            const rangeIndex = range.findIndex(obj => (qpayDays > obj.min) && (qpayDays <= obj.max));\n            if (rangeIndex !== -1) {\n                range[rangeIndex].data.push(o);\n            }\n        });\n\n        setQPayRange(range);\n\n    }, [dataArray, reload])\n\n    const onChangeGroup = (val) => {\n        setLocalState(pre => ({ ...pre, group: val.target.value }))\n        localStorage.setItem('qPayGroup', val.target.value)\n    }\n\n    // const onChangeGroup = (val) => {\n    //     setLocalState(pre => ({ ...pre, group: val }))\n    //     localStorage.setItem('qPayGroup', JSON.stringify(val))\n    // }\n\n    return (\n        <>\n            <div className=\"col-xxl-3 col-lg-4 col-md-6 col-sm-8\">\n                <select\n                    className=\"cus-inpt w-auto border\"\n                    value={localState.group}\n                    onChange={onChangeGroup}\n                >\n                    <option value=\"\">Select Group By</option>\n                    {columns?.map((o, i) => o?.Fied_Data === 'string' && (\n                        <option value={o?.Field_Name} key={i}>{o?.Field_Name?.replace(/_/g, ' ')}</option>\n                    ))}\n                </select>\n                {/* <Autocomplete\n                    multiple\n                    options={[...columns?.filter(col => col?.Fied_Data === 'string')].map(filCol => filCol?.Field_Name)}\n                    disableCloseOnSelect\n                    getOptionLabel={option => option}\n                    value={localState.group || []}\n                    onChange={(event, newValue) => onChangeGroup(newValue)}\n                    renderOption={(props, option, { selected }) => (\n                        <li {...props}>\n                            <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                            />\n                            {option}\n                        </li>\n                    )}\n                    isOptionEqualToValue={(opt, val) => opt === val}\n                    renderInput={(params) => (\n                        <TextField {...params} label={'Add Grouping'} placeholder={`Select column for Grouping`} />\n                    )}\n                /> */}\n            </div>\n\n            {(localState?.group === '' || filtered.length === 0) ? (\n                <div className=\"d-flex justify-content-around align-items-center flex-wrap px-3 py-2\">\n\n                    <div className=\"table-responsive\">\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    {['Sno', 'Day-Range', 'Parties', 'Percentage'].map(o => (\n                                        <th className=\"border fa-15\" style={{ backgroundColor: '#EDF0F7' }} key={o}>{o}</th>\n                                    ))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {qPayRange.map((o, i) => (\n                                    <tr key={i}>\n                                        <td className=\"fa-15 border text-center\">{i + 1}</td>\n                                        <td className=\"fa-15 border text-center\">\n                                            {\n                                                qPayRange[i + 1]\n                                                    ? ((o?.min + 1)?.toString() + ' - ' + o?.max?.toString())\n                                                    : '< ' + o?.min.toString()\n                                            }\n                                        </td>\n                                        <td className=\"fa-15 border text-center\">{o?.data?.length}</td>\n                                        <td className=\"fa-15 border text-center\">{NumberFormat((o?.data?.length / dataArray?.length) * 100)}</td>\n                                    </tr>\n                                ))}\n                                <tr>\n                                    <td className=\"border\"></td>\n                                    <td className=\"border\"></td>\n                                    <td className=\"fa-13 border text-center\">\n                                        {NumberFormat(qPayRange?.reduce((sum, o) => {\n                                            return sum += o?.data?.length\n                                        }, 0))}\n                                    </td>\n                                    <td className=\"fa-13 border text-center\">\n                                        {NumberFormat(qPayRange?.reduce((sum, o) => {\n                                            return sum += ((o?.data?.length / dataArray?.length) * 100)\n                                        }, 0))}\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className=\"d-flex align-items-center flex-column overflow-scroll\">\n                        <h5>Q-Pay Days</h5>\n                        <PieChart\n                            series={[\n                                {\n                                    data: qPayRange?.map((range, rangeInd) => ({\n                                        label: qPayRange[rangeInd + 1]\n                                            ? (NumberFormat(range?.min) + '-' + NumberFormat(range?.max)) + '(' + range?.data?.length + ')'\n                                            : '< ' + NumberFormat(range?.min) + '(' + range?.data?.length + ')',\n                                        // value: range?.data?.length,\n                                        value: ((range?.data?.length / dataArray?.length) * 100).toFixed(2),\n                                        color: getRandomColor()\n                                    })),\n                                    arcLabel: (item) => `${item.label}`,\n                                    arcLabelMinAngle: 35,\n                                }\n                            ]}\n                            width={570}\n                            height={400}\n                            title=\"QPay Days\"\n                        />\n\n                        <Button onClick={() => setReload(pre => !pre)}>Change color</Button>\n                    </div>\n\n                </div>\n            ) : (\n                <>\n                    <div className=\"cus-grid mt-3\">\n                        {filtered.map((group, groupIndex) => (\n                            <div className=\"table-responsive grid-card bg-white border\" key={groupIndex}>\n                                <h6 className=\"fw-bold text-muted d-flex justify-content-between\">\n                                    {String(group)?.toUpperCase()}\n                                    <span>\n                                        {NumberFormat(qPayRange?.reduce((overall, o) => {\n                                            return overall += o?.data?.reduce((sum, obj) => {\n                                                return (comStr(obj[localState.group]) === comStr(group))\n                                                    ? sum + 1\n                                                    : sum\n                                            }, 0)\n                                        }, 0))}\n                                    </span>\n                                </h6>\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            {['Sno', 'Day-Range', 'Parties', 'Percentage'].map(o => (\n                                                <th className=\"border fa-14\" style={{ backgroundColor: '#EDF0F7' }} key={o}>{o}</th>\n                                            ))}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {qPayRange.map((o, i) => (\n                                            <tr key={i}>\n                                                <td className=\"fa-15 border text-center\">{i + 1}</td>\n                                                <td className=\"fa-15 border text-center\">\n                                                    {\n                                                        qPayRange[i + 1]\n                                                            ? ((o?.min + 1)?.toString() + ' - ' + o?.max?.toString())\n                                                            : '< ' + o?.min.toString()\n                                                    }\n                                                </td>\n                                                <td className=\"fa-15 border text-center\">\n                                                    {o?.data?.reduce((sum, obj) => {\n                                                        return (comStr(obj[localState.group]) === comStr(group))\n                                                            ? sum + 1\n                                                            : sum\n                                                    }, 0)}\n                                                </td>\n                                                <td className=\"fa-15 border text-center\">\n                                                    {NumberFormat((o?.data?.reduce((sum, obj) => {\n                                                        return (comStr(obj[localState.group]) === comStr(group))\n                                                            ? sum + 1\n                                                            : sum\n                                                    }, 0) / qPayRange?.reduce((overall, o) => {\n                                                        return overall += o?.data?.reduce((sum, obj) => {\n                                                            return (comStr(obj[localState.group]) === comStr(group))\n                                                                ? sum + 1\n                                                                : sum\n                                                        }, 0)\n                                                    }, 0)) * 100)}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        ))}\n                    </div>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default QPayBasedComp;","import { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\nimport { isEqualNumber, LocalDate, NumberFormat } from '../../../Components/functions';\nimport { useEffect, useState } from 'react';\n\nconst formatString = (val, dataType) => {\n    switch (dataType) {\n        case 'number':\n            return NumberFormat(val)\n        case 'date':\n            return LocalDate(val);\n        case 'string':\n            return val;\n        default:\n            return ''\n    }\n}\n\nconst getFun = (key, dataType, dataArray) => {\n    switch (dataType) {\n        case 'number':\n            return {\n                filterVariant: 'range',\n                filterFn: 'between',\n            }\n        case 'date':\n            return {\n                filterVariant: 'text',\n            };\n        case 'string':\n            // const distinctValues = [...new Set(dataArray.map(item => item[key]))].sort();\n            return {\n                filterVariant: 'text'\n            };\n        default:\n            return ''\n    }\n}\n\n\nconst QPayGroupingList = ({ dataArray, columns }) => {\n    const [dispColmn, setDispColmn] = useState([]);\n\n    useEffect(() => {\n        const displayColumns = [...columns].filter(column => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)));\n\n        const muiColumns = displayColumns.map((column) => ({\n            header: column?.Field_Name?.replace(/_/g, ' '),\n            accessorKey: column?.Field_Name,\n            sortable: true,\n            size: 150,\n            aggregationFn: column?.Field_Name?.includes('mount') ? 'sum' : column?.Fied_Data === 'number' ? 'mean' : 'uniqueCount',\n            AggregatedCell: ({ cell }) => <div className='blue-text text-center float-end w-100'>{NumberFormat(cell.getValue())}</div>,\n            Cell: ({ cell }) => (\n                <p className={`m-0 text-center fa-14 w-100 `}>\n                    {formatString(cell.getValue(), column?.Fied_Data)}\n                </p>\n            ),\n            ...getFun(column?.Field_Name, column?.Fied_Data, dataArray),\n        }))\n\n        setDispColmn(muiColumns)\n    }, [columns])\n\n    const table = useMaterialReactTable({\n        columns: dispColmn,\n        data: dataArray || [],\n        enableColumnResizing: true,\n        enableGrouping: true,\n        enableStickyHeader: true,\n        enableStickyFooter: true,\n        enableColumnOrdering: true,\n        enableRowNumbers: false,\n        initialState: {\n            density: 'compact',\n            pagination: { pageIndex: 0, pageSize: 100 },\n            sorting: [{ id: 'Q_Pay_Days' }],\n        },\n        muiToolbarAlertBannerChipProps: { color: 'primary' },\n        muiTableContainerProps: { sx: { maxHeight: '64vh', minHeight: '56vh' } },\n    })\n\n\n    return (\n        <MaterialReactTable table={table} />\n    )\n}\n\n\nexport default QPayGroupingList;","import { useState, useEffect } from \"react\";\nimport { Card, FormControlLabel, Switch, Tab, Box, Checkbox, TextField, Autocomplete, IconButton, Dialog, DialogContent, DialogActions, Button, Tooltip } from \"@mui/material\";\nimport { CheckBoxOutlineBlank, CheckBox, FilterAlt, FilterAltOff } from '@mui/icons-material'\nimport { TabPanel, TabList, TabContext } from '@mui/lab';\nimport QPaySalesBasedComp from \"./QPayComps/salesBased\";\nimport QPayBasedComp from \"./QPayComps/qPayBased\";\nimport FilterableTable from \"../../Components/filterableTable\";\nimport QPayColumnVisiblitySettings from \"./QPayComps/settings\";\nimport { isEqualNumber, isObject, checkIsNumber } from \"../../Components/functions\";\nimport QPayGroupingList from './QPayComps/qpayGroupingList'\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from 'react-router-dom';\nimport { GrTransaction } from \"react-icons/gr\";\nimport { fetchLink } from \"../../Components/fetchComponent\";\n\n\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\n\n\nconst QPayReports = () => {\n    const nav = useNavigate();\n\n    const tabList = ['LIST', 'Q-PAY BASED', 'SALES VALUE BASED'];\n    const filterInitialValue = {\n        zeros: false,\n        company: 2,\n        consolidate: 1,\n        view: 'LIST',\n        filterDialog: false,\n        displayGrouping: false,\n    }\n\n    const [repData, setRepData] = useState([]);\n    const [showData, setShowData] = useState([]);\n    const [reload, setReload] = useState(false);\n\n    const [cusFilter, setCusFilter] = useState(filterInitialValue);\n    const [columns, setColumns] = useState([]);\n    const [sortedColumns, setSortedColumns] = useState([])\n\n    const [filters, setFilters] = useState({});\n    const [filteredData, setFilteredData] = useState(showData);\n\n    const [ledgerId, setLedgerId] = useState([]);\n\n    useEffect(() => {\n        setSortedColumns(columns?.sort((a, b) => (a?.OrderBy && b?.OrderBy) ? a?.OrderBy - b?.OrderBy : b?.OrderBy - a?.OrderBy))\n    }, [columns])\n\n    useEffect(() => {\n        setRepData([])\n        fetchLink({\n            address: `reports/tallyReports/qPay?Company_Id=${cusFilter?.company}&Consolidate=${cusFilter?.consolidate}`\n        }).then(data => {\n            if (data.success) {\n                setRepData(data.data)\n            }\n        }).catch(e => console.error(e))\n    }, [cusFilter?.company, cusFilter?.consolidate, reload])\n\n    useEffect(() => {\n        const temp = [...repData];\n        const zerosIncluded = !cusFilter.zeros ? temp.filter(o => o?.Q_Pay_Days) : temp;\n\n        setShowData(zerosIncluded);\n    }, [repData, cusFilter.zeros]);\n\n    useEffect(() => {\n        fetchLink({\n            address: `reports/tallyReports/qpay/columnVisiblity?CompanyId=${cusFilter.company}&Report_Type_Id=${Boolean(cusFilter?.consolidate) ? 1 : 2}`\n        }).then(data => {\n            if (data.success) {\n                data?.data?.sort((a, b) => a?.Field_Name?.localeCompare(b?.Field_Name));\n                setColumns(data.data)\n            }\n        })\n        .catch(e => console.error(e))   \n    }, [cusFilter.company, cusFilter?.consolidate, reload])\n\n    useEffect(() => {\n        applyFilters();\n    }, [filters]);\n\n    useEffect(() => {\n        const filterCount = Object.keys(filters).length;\n        const dataArray = (filterCount > 0) ? filteredData : showData;\n\n        const str = dataArray?.reduce((idStr, obj) => {\n            return obj?.Ledger_Tally_Id ? [...idStr, obj?.Ledger_Tally_Id] : idStr\n        }, [])\n        setLedgerId(str)\n    }, [filters, showData, filteredData])\n\n    const openSalesTransaction = (obj) => {\n\n        if (Array.isArray(obj) && obj?.length) {\n            const Ledger_Tally_Id = obj?.reduce((idStr, item) => {\n                if (item) {\n                    return idStr ? `${idStr},${item}` : `${item}`;\n                }\n                return idStr;\n            }, '');\n            nav('transaction', {\n                state: {\n                    Ledger_Tally_Id: Ledger_Tally_Id,\n                    isObj: false,\n                    rowDetails: obj,\n                    company: cusFilter.company,\n                    preFilters: filters\n                }\n            })\n\n        } else if (isObject(obj) && checkIsNumber(obj.Ledger_Tally_Id)) {\n\n            nav('transaction', {\n                state: {\n                    Ledger_Tally_Id: obj.Ledger_Tally_Id,\n                    isObj: true,\n                    rowDetails: obj,\n                    company: cusFilter.company,\n                    preFilters: filters\n                }\n            })\n\n        } else {\n            toast.error('Ledger Id not available')\n        }\n    }\n\n    const dispTab = (val) => {\n        const filterCount = Object.keys(filters).length;\n        const dataArray = (filterCount > 0) ? filteredData : showData;\n        switch (val) {\n            // case 'LIST': return <QPayListComp dataArray={filteredData} />\n            case 'LIST': return <FilterableTable dataArray={dataArray} columns={sortedColumns} onClickFun={openSalesTransaction} />\n            case 'Q-PAY BASED': return <QPayBasedComp dataArray={dataArray} columns={sortedColumns} filters={filters} />\n            case 'SALES VALUE BASED': return <QPaySalesBasedComp dataArray={dataArray} />\n            default: <></>\n        }\n    }\n\n    const reloadData = () => {\n        setReload(pre => !pre)\n    }\n\n    const handleFilterChange = (column, value) => {\n        setFilters(prevFilters => ({\n            ...prevFilters,\n            [column]: value,\n        }));\n    };\n\n    const applyFilters = () => {\n        let filtered = [...showData];\n        for (const column of sortedColumns) {\n            if (filters[column.Field_Name]) {\n                if (filters[column.Field_Name].type === 'range') {\n                    const { min, max } = filters[column.Field_Name];\n                    filtered = filtered.filter(item => {\n                        const value = item[column.Field_Name];\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\n                    });\n                } else if (filters[column.Field_Name].type === 'date') {\n                    const { start, end } = filters[column.Field_Name].value;\n                    filtered = filtered.filter(item => {\n                        const dateValue = new Date(item[column.Field_Name]);\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\n                    });\n                } else if (Array.isArray(filters[column.Field_Name])) {\n                    filtered = filters[column.Field_Name]?.length > 0 ? filtered.filter(item => filters[column.Field_Name].includes(item[column.Field_Name].toLowerCase().trim())) : filtered\n                }\n            }\n        }\n        setFilteredData(filtered);\n    };\n\n    const renderFilter = (column) => {\n        const { Field_Name, Fied_Data } = column;\n        if (Fied_Data === 'number') {\n            return (\n                <div className='d-flex justify-content-between px-2'>\n                    <input\n                        placeholder=\"Min\"\n                        type=\"number\"\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\n                        value={filters[Field_Name]?.min ?? ''}\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...filters[Field_Name], min: e.target.value ? parseFloat(e.target.value) : undefined })}\n                    />\n                    <input\n                        placeholder=\"Max\"\n                        type=\"number\"\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\n                        value={filters[Field_Name]?.max ?? ''}\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...filters[Field_Name], max: e.target.value ? parseFloat(e.target.value) : undefined })}\n                    />\n                </div>\n            );\n        } else if (Fied_Data === 'date') {\n            return (\n                <div className='d-flex justify-content-between px-2'>\n                    <input\n                        placeholder=\"Start Date\"\n                        type=\"date\"\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\n                        value={filters[Field_Name]?.value?.start ?? ''}\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...filters[Field_Name]?.value, start: e.target.value || undefined } })}\n                    />\n                    <input\n                        placeholder=\"End Date\"\n                        type=\"date\"\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\n                        value={filters[Field_Name]?.value?.end ?? ''}\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...filters[Field_Name]?.value, end: e.target.value || undefined } })}\n                    />\n                </div>\n            );\n        } else if (Fied_Data === 'string') {\n            const distinctValues = [...new Set(showData.map(item => item[Field_Name]?.toLowerCase()?.trim()))];\n            return (\n                <Autocomplete\n                    multiple\n                    id={`${Field_Name}-filter`}\n                    options={distinctValues}\n                    disableCloseOnSelect\n                    getOptionLabel={option => option}\n                    value={filters[Field_Name] || []}\n                    onChange={(event, newValue) => handleFilterChange(Field_Name, newValue)}\n                    renderOption={(props, option, { selected }) => (\n                        <li {...props}>\n                            <Checkbox\n                                icon={icon}\n                                checkedIcon={checkedIcon}\n                                style={{ marginRight: 8 }}\n                                checked={selected}\n                            />\n                            {option}\n                        </li>\n                    )}\n                    isOptionEqualToValue={(opt, val) => opt === val}\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            label={Field_Name}\n                            placeholder={`Select ${Field_Name?.replace(/_/g, ' ')}`}\n                        />\n                    )}\n                />\n            );\n        }\n    };\n\n    return (\n        <>\n            <Card>\n\n                <div className=\"p-2 border-bottom fa-16 fw-bold\">\n                    <span className=\"text-uppercase ps-3\">Q-Pay Report</span>\n                </div>\n\n                <div className=\"d-flex flex-wrap justify-content-between p-2\">\n                    <span>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={!cusFilter.zeros}\n                                    onChange={e => setCusFilter(pre => ({ ...pre, zeros: !(e.target.checked) }))}\n                                />\n                            }\n                            label=\"Remove Zeros\"\n                            labelPlacement=\"start\"\n                            className=\" fw-bold text-primary\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={cusFilter.consolidate === 1 ? true : false}\n                                    onChange={e => setCusFilter(pre => ({ ...pre, consolidate: e.target.checked ? 1 : 0 }))}\n                                />\n                            }\n                            label=\"Consolidate\"\n                            labelPlacement=\"start\"\n                            className=\" fw-bold text-primary\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={cusFilter.displayGrouping}\n                                    onChange={e => setCusFilter(pre => ({ ...pre, displayGrouping: e.target.checked }))}\n                                />\n                            }\n                            label=\"Grouping\"\n                            labelPlacement=\"start\"\n                            className=\" fw-bold text-primary\"\n                        />\n                    </span>\n\n                    <span>\n                        <QPayColumnVisiblitySettings\n                            CompanyId={cusFilter.company}\n                            columns={sortedColumns}\n                            refresh={reloadData}\n                            ReportId={Boolean(cusFilter?.consolidate) ? 1 : 2}\n                        />\n                        <Tooltip title='Open Sales List'>\n                            <IconButton\n                                onClick={() => openSalesTransaction(ledgerId)}\n                                size=\"small\"\n                            >\n                                <GrTransaction />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Filters\">\n                            <IconButton\n                                onClick={() => setCusFilter(pre => ({ ...pre, filterDialog: true }))}\n                                size=\"small\"\n                                className=\"d-md-none d-inline\"\n                            >\n                                <FilterAlt />\n                            </IconButton>\n                        </Tooltip>\n                    </span>\n                </div>\n\n                {cusFilter.displayGrouping ? <QPayGroupingList dataArray={showData} columns={sortedColumns} /> : (\n                    <div className=\"row \">\n\n                        <div className=\"col-xxl-10 col-lg-9 col-md-8\">\n                            <div className=\"p-2\">\n                                <TabContext value={cusFilter.view}>\n                                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                                        <TabList\n                                            indicatorColor='transparant'\n                                            onChange={(e, n) => setCusFilter(pre => ({ ...pre, view: n }))}\n                                            variant=\"scrollable\"\n                                            scrollButtons=\"auto\"\n                                            allowScrollButtonsMobile\n                                        >\n                                            {tabList.map(o => (\n                                                <Tab sx={cusFilter.view === o ? { backgroundColor: '#c6d7eb' } : {}} label={o} value={o} key={o} />\n                                            ))}\n                                        </TabList>\n                                    </Box>\n                                    {tabList.map(o => (\n                                        <TabPanel value={o} sx={{ px: 0, py: 2 }} key={o}>\n                                            {dispTab(cusFilter.view)}\n                                        </TabPanel>\n                                    ))}\n                                </TabContext>\n                            </div>\n                        </div>\n\n                        <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\n                            <h5 className=\"d-flex justify-content-between px-2\">\n                                Filters\n                                <Tooltip title='Clear Filters'>\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={() => setFilters({})}\n                                    >\n                                        <FilterAltOff />\n                                    </IconButton>\n                                </Tooltip>\n                            </h5>\n                            <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\n                                {columns.map((column, ke) => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)) && (\n                                    <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\n                                        <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\n                                        {renderFilter(column)}\n                                    </div>\n                                ))}\n                                <br />\n                            </div>\n                        </div>\n\n                    </div>\n                )}\n\n            </Card>\n\n            <Dialog\n                open={cusFilter?.filterDialog}\n                onClose={() => setCusFilter(pre => ({ ...pre, filterDialog: false }))}\n                fullWidth\n                maxWidth='sm'\n            >\n                {/* <DialogTitle></DialogTitle> */}\n                <DialogContent>\n                    <h5 className=\"d-flex justify-content-between px-2\">\n                        Filters\n                        <Tooltip title='Clear Filters'>\n                            <IconButton\n                                size=\"small\"\n                                onClick={() => setFilters({})}\n                            >\n                                <FilterAltOff />\n                            </IconButton>\n                        </Tooltip>\n                    </h5>\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\n                        {columns.map((column, ke) => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)) && (\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\n                                <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\n                                {renderFilter(column)}\n                            </div>\n                        ))}\n                        <br />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setCusFilter(pre => ({ ...pre, filterDialog: false }))} color='error'>close</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default QPayReports"],"names":["_ref","dataArray","columns","onClickFun","page","setPage","useState","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","startIndex","endIndex","paginatedData","data","length","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","slice","formatString","val","dataType","NumberFormat","LocalDate","_jsxs","children","_jsx","TableContainer","component","Paper","sx","maxHeight","Table","stickyHeader","size","TableHead","TableRow","map","column","ke","_column$Field_Name","isEqualNumber","Defult_Display","isVisible","TableCell","className","style","backgroundColor","sortDirection","some","Field_Name","find","TableSortLabel","active","onClick","existingCriteria","isAsc","_objectSpread","handleSortRequest","replace","TableBody","row","index","Object","entries","_ref2","key","value","console","log","Fied_Data","TablePagination","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","labelRowsPerPage","showFirstButton","showLastButton","CompanyId","refresh","ReportId","modifiedColumns","setModifiedColumns","reset","setReset","dialog","setDialog","useEffect","_Fragment","IconButton","pre","Settings","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","o","i","Card","concat","Switch","checked","Boolean","disabled","onChange","e","prevColumns","oo","Field_Id","type","Number","OrderBy","label","width","placeholder","DialogActions","Button","variant","startIcon","RotateLeft","color","saveColumnVisiblity","fetchLink","address","method","bodyData","then","success","toast","message","error","catch","finally","salesRange","setSalesRange","range","min","max","forEach","salesAmount","Sales_Amount","rangeIndex","findIndex","obj","push","RowComp","_o$data","_o$data2","_o$data3","_o$data4","setOpen","toString","reduce","sum","item","Sales_Count","toFixed","Freq_Days","Collapse","in","unmountOnExit","colSpan","BarChart","xAxis","scaleType","series","_o$data5","height","barLabel","borderRadius","_o$data6","_o$data7","filters","qPayRange","setQPayRange","reload","setReload","filtered","setFiltered","localState","setLocalState","group","localStorage","getItem","comStr","str","trim","toLowerCase","filteredList","Array","isArray","qpayDays","Q_Pay_Days","setItem","_o$Field_Name","_o$max","PieChart","rangeInd","_range$data","_range$data2","_range$data3","getRandomColor","arcLabel","arcLabelMinAngle","title","groupIndex","_String","String","toUpperCase","overall","_ref3","_o$max2","_o$data8","dispColmn","setDispColmn","muiColumns","filter","_column$Field_Name2","header","accessorKey","sortable","aggregationFn","includes","AggregatedCell","cell","getValue","Cell","getFun","filterVariant","filterFn","table","useMaterialReactTable","enableColumnResizing","enableGrouping","enableStickyHeader","enableStickyFooter","enableColumnOrdering","enableRowNumbers","initialState","density","pagination","pageIndex","pageSize","sorting","id","muiToolbarAlertBannerChipProps","muiTableContainerProps","minHeight","MaterialReactTable","icon","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","QPayReports","nav","useNavigate","tabList","repData","setRepData","showData","setShowData","cusFilter","setCusFilter","zeros","company","consolidate","view","filterDialog","displayGrouping","setColumns","sortedColumns","setSortedColumns","setFilters","filteredData","setFilteredData","ledgerId","setLedgerId","temp","zerosIncluded","_data$data","_a$Field_Name","localeCompare","applyFilters","keys","idStr","Ledger_Tally_Id","openSalesTransaction","state","isObj","rowDetails","preFilters","isObject","checkIsNumber","dispTab","FilterableTable","QPayBasedComp","QPaySalesBasedComp","handleFilterChange","prevFilters","undefined","start","end","dateValue","Date","_filters$column$Field","renderFilter","_filters$Field_Name$m","_filters$Field_Name","_filters$Field_Name$m2","_filters$Field_Name2","_filters$Field_Name$v","_filters$Field_Name3","_filters$Field_Name3$","_filters$Field_Name$v2","_filters$Field_Name5","_filters$Field_Name5$","parseFloat","_filters$Field_Name4","_filters$Field_Name6","distinctValues","Set","_item$Field_Name","_item$Field_Name$toLo","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","option","newValue","renderOption","props","selected","Checkbox","marginRight","isOptionEqualToValue","opt","renderInput","params","TextField","FormControlLabel","control","labelPlacement","QPayColumnVisiblitySettings","reloadData","Tooltip","GrTransaction","FilterAlt","QPayGroupingList","TabContext","Box","borderBottom","borderColor","TabList","indicatorColor","n","scrollButtons","allowScrollButtonsMobile","Tab","TabPanel","px","py","FilterAltOff","overflow"],"sourceRoot":""}
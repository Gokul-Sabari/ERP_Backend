{"version":3,"file":"static/js/344.7db42904.chunk.js","mappings":"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","sources":["Pages/Masters/UserType.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport { Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\nimport { Button as MuiButton } from \"@mui/material/\";\nimport { toast } from \"react-toastify\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { Delete, Edit } from \"@mui/icons-material\";\nimport { fetchLink } from \"../../Components/fetchComponent\";\n\nconst initialState = {\n    Id: \"\",\n    UserType: \"\",\n};\n\nfunction UserType() {\n    const [UserTypeData, setUserTypeData] = useState([]);\n    const [reload, setReload] = useState(false);\n    const [open, setOpen] = useState(false); // Dialog state\n\n    const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n    const [newChipType, setNewChipType] = useState(\"\");\n    const [inputValue, setInputValue] = useState(initialState);\n    const [editUser, setEditUser] = useState(false);\n\n    useEffect(() => {\n        fetchLink({\n            address: `masters/userType`\n        }).then((data) => {\n            if (data.success) {\n                setUserTypeData(data.data);\n            }\n        }).catch(e => console.error(e))\n    }, [reload]);\n\n    const handleDelete = () => {\n        fetchLink({\n            address: `masters/userType`,\n            method: \"DELETE\",\n            bodyData: { Id: inputValue.Id },\n        }).then((data) => {\n            if (data.success) {\n                setReload(!reload);\n                setOpen(false);\n                toast.success(\"Chip deleted successfully!\");\n            } else {\n                toast.error(\"Failed to delete chip:\", data.message);\n            }\n        }).catch(e => console.error(e));\n    };\n\n    const handleCreate = () => {\n        fetchLink({\n            address: `masters/userType`,\n            method: \"POST\",\n            bodyData: { UserType: newChipType },\n        }).then((data) => {\n            if (data.success) {\n                setIsCreateDialogOpen(false);\n                setNewChipType(\"\");\n                setReload(!reload);\n                toast.success(data.message);\n            } else {\n                toast.error(data.message);\n            }\n        }).catch(e => console.error(e))\n    };\n\n    const editRow = (user) => {\n        setEditUser(true);\n        setInputValue({\n            Id: user.Id,\n            UserType: user.UserType,\n        });\n    };\n\n    const editFun = (Id, UserType) => {\n        fetchLink({\n            address: `masters/userType`,\n            method: \"PUT\",\n            bodyData: { Id, UserType },\n        }).then((data) => {\n            if (data.success) {\n                toast.success(data.message);\n                setReload(!reload);\n                setEditUser(false);\n            } else {\n                toast.error(data.message);\n            }\n        }).catch(e => console.error(e))\n    };\n\n    return (\n        <Fragment>\n            {/* <ToastContainer /> */}\n            <div className=\"card\">\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\n                    UserType\n                    <div className=\"text-end\">\n                        <Button\n                            className=\"rounded-5 px-3 py-1 fa-13 btn-primary shadow\"\n                            onClick={() => setIsCreateDialogOpen(true)}\n                        >\n                            Create UserType\n                        </Button>\n                    </div>\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                        <Table className=\"\">\n                            <thead>\n                                <tr>\n                                    <th className=\"fa-14\">Id</th>\n                                    <th className=\"fa-14\">UserType</th>\n                                    <th className=\"fa-14\">Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {UserTypeData.map((obj, index) => (\n                                    <tr key={index}>\n                                        <td className=\"fa-14\">{obj.Id}</td>\n                                        <td className=\"fa-14\">{obj.UserType}</td>\n                                        <td className=\"fa-12\" style={{ minWidth: \"80px\" }}>\n                                            <IconButton\n                                                onClick={() => {\n                                                    editRow(obj);\n                                                }}\n                                                // disabled={Number(obj.Id) <= 6}\n                                                size=\"small\"\n                                            >\n                                                <Edit className=\"fa-in\" />\n                                            </IconButton>\n                                            <IconButton\n                                                onClick={() => {\n                                                    setOpen(true);\n                                                    setInputValue({ Id: obj.Id });\n                                                }}\n                                                disabled={Number(obj.Id) <= 6}\n                                                size=\"small\"\n                                                color='error'\n                                            >\n                                                <Delete className=\"fa-in \" />\n                                            </IconButton>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    </div>\n                </div>\n            </div>\n\n            <Dialog\n                open={isCreateDialogOpen}\n                onClose={() => setIsCreateDialogOpen(false)}\n                aria-labelledby=\"create-dialog-title\"\n                aria-describedby=\"create-dialog-description\"\n            >\n                <DialogTitle id=\"create-dialog-title\">UserType Creation</DialogTitle>\n                <DialogContent>\n                    <div className=\"p-2\">\n                        <label>UserType Name</label>\n                        <input\n                            type=\"text\"\n                            onChange={(event) => setNewChipType(event.target.value)}\n                            placeholder=\"Ex: Admin\"\n                            value={newChipType}\n                            className=\"cus-inpt\"\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <MuiButton onClick={() => setIsCreateDialogOpen(false)}>\n                        Cancel\n                    </MuiButton>\n                    <MuiButton onClick={() => handleCreate()} color=\"success\">\n                        CREATE\n                    </MuiButton>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={editUser}\n                onClose={() => setEditUser(false)}\n                aria-labelledby=\"create-dialog-title\"\n                aria-describedby=\"create-dialog-description\"\n            >\n                <DialogTitle id=\"create-dialog-title\">UserType</DialogTitle>\n                <DialogContent>\n                    <div className=\"p-2\">\n                        <label>UserType </label>\n                        <input\n                            type=\"text\"\n                            onChange={(event) =>\n                                setInputValue({\n                                    ...inputValue,\n                                    UserType: event.target.value,\n                                })\n                            }\n                            placeholder={inputValue.UserType}\n                            value={inputValue.UserType}\n                            className=\"cus-inpt\"\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <MuiButton onClick={() => setEditUser(false)}>Cancel</MuiButton>\n                    <MuiButton onClick={() => editFun(inputValue.Id, inputValue.UserType)} color=\"success\">\n                        Update\n                    </MuiButton>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={open}\n                onClose={() => {\n                    setOpen(false);\n                }}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">Confirmation</DialogTitle>\n                <DialogContent>\n                    <b>Do you want to delete the UserType?</b>\n                </DialogContent>\n                <DialogActions>\n                    <MuiButton onClick={() => setOpen(false)}>Cancel</MuiButton>\n                    <MuiButton onClick={handleDelete} autoFocus color=\"error\">\n                        Delete\n                    </MuiButton>\n                </DialogActions>\n            </Dialog>\n        </Fragment>\n    );\n}\n\nexport default UserType;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["initialState","Id","UserType","UserTypeData","setUserTypeData","useState","reload","setReload","open","setOpen","isCreateDialogOpen","setIsCreateDialogOpen","newChipType","setNewChipType","inputValue","setInputValue","editUser","setEditUser","useEffect","fetchLink","address","then","data","success","catch","e","console","error","_jsxs","Fragment","children","className","_jsx","Button","onClick","Table","map","obj","index","style","minWidth","IconButton","user","size","Edit","disabled","Number","color","Delete","Dialog","onClose","DialogTitle","id","DialogContent","type","onChange","event","target","value","placeholder","DialogActions","MuiButton","method","bodyData","toast","message","_objectSpread","editFun","handleDelete","autoFocus","createSvgIcon","d","_excluded","useButtonProps","_ref2","tagName","href","rel","role","tabIndex","meta","handleClick","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","React","_ref","ref","as","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","displayName","bsPrefix","variant","active","_objectWithoutProperties","prefix","useBootstrapPrefix","classNames","concat","striped","bordered","borderless","hover","responsive","decoratedBsPrefix","classes","table","responsiveClass"],"sourceRoot":""}
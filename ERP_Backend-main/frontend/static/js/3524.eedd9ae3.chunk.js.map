{"version":3,"file":"static/js/3524.eedd9ae3.chunk.js","mappings":"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","sources":["Pages/Discussions/chats.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from 'react';\nimport api from '../../API';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { IconButton, Tooltip, Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material';\nimport { Send, ArrowBackIos, Replay, Attachment, Download, ArticleOutlined } from '@mui/icons-material';\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport axios from 'axios';\nimport { fetchLink } from \"../../Components/fetchComponent\";\n\nconst ChatsDisplayer = () => {\n    const localData = localStorage.getItem(\"user\");\n    const parseData = JSON.parse(localData);\n    const location = useLocation();\n    const locationData = location.state;\n    const navigate = useNavigate();\n    const [messageData, setMessageData] = useState([]);\n    const [documents, setDocuments] = useState([]);\n    const chatBodyRef = useRef(null);\n    const [messageInput, setMessageInput] = useState('');\n    const [reload, setReload] = useState(false);\n\n    const [uploadDialog, setUploadDialog] = useState(false);\n    const [uploadFile, setUploadFile] = useState('');\n    const [uploadPercentage, setUploadPercentage] = useState(0);\n\n    const [documentsDialog, setDocumentsDialog] = useState(false);\n\n    useEffect(() => {\n        if (!locationData) {\n            return navigate('/taskManagement/discussions')\n        }\n        fetchLink({\n            address: `discussionForum/messages?Topic_Id=${locationData?.Id}`,\n        }).then(data => {\n            if (data.success) {\n                const groupedData = data.data.reduce((acc, message) => {\n                    const date = new Date(message.CreatedAt).toDateString();\n                    if (!acc[date]) {\n                        acc[date] = [];\n                    }\n                    acc[date].push(message);\n                    return acc;\n                }, {});\n                setMessageData(groupedData);\n            }\n        }).catch(e => console.log(e))\n        \n        fetchLink({\n            address: `discussionForum/files?Topic_Id=${locationData?.Id}`,\n        }).then(data => {\n            if (data.success) {\n                setDocuments(data.data);\n            }\n        }).catch(e => console.log(e))\n    }, [reload])\n\n    useEffect(() => {\n        if (chatBodyRef.current) {\n            const { scrollHeight, clientHeight } = chatBodyRef.current;\n            chatBodyRef.current.scrollTop = scrollHeight - clientHeight;\n        }\n    }, [messageData]);\n\n    const handleFormSubmit = async (e) => {\n        e.preventDefault();\n\n        if (messageInput.trim() === '') {\n            toast.warn('Enter a message');\n            setMessageInput('')\n            return;\n        }\n\n        fetchLink({\n            address: `discussionForum/messages`,\n            method: 'POST',\n            bodyData: {\n                Topic_Id: locationData?.Id,\n                User_Id: parseData?.UserId,\n                Message: messageInput\n            }\n        }).then(data => {\n            if (data.success) {\n                setReload(!reload);\n                setMessageInput('');\n            } else {\n                toast.error(data.message);\n            }\n        }).catch(e => console.log(e))\n    };\n\n    const closeFileUploadDialog = () => {\n        setUploadDialog(false);\n        setUploadFile('')\n    }\n\n    const uploadFileFun = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('files', uploadFile);\n        formData.append('User_Id', parseData?.UserId);\n        formData.append('Project_Id', locationData?.Project_Id);\n        formData.append('Topic_Id', locationData?.Id);\n\n        try {\n            axios.post(`${api}discussionForum/files`, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                    \"Authorization\": parseData?.Autheticate_Id\n                },\n                onUploadProgress: progressEvent => {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n                    setUploadPercentage(percentCompleted);\n                },\n            }).then((data) => {\n                toast.success(data.data.message);\n                setReload(!reload)\n            }).catch(e => {\n                toast.error('Failed to upload')\n                console.error(e)\n            }).finally(() => {\n                closeFileUploadDialog();\n                setUploadPercentage(0);\n            })\n        } catch (error) {\n            console.error('Error uploading file:', error);\n        }\n    }\n\n    const downloadFile = async (id) => {\n        try {\n            const response = await fetchLink({\n                address: `discussionForum/files/download?FileId=${id}`,\n                headers: {\n                    \"Content-Type\": \"application/octet-stream\",  \n                    \"Authorization\": parseData.Autheticate_Id\n                }\n            });\n    \n            const blob = await response.blob();\n            const downloadUrl = window.URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = downloadUrl;\n            link.setAttribute('download', `file_${id}`);  \n            document.body.appendChild(link);\n            link.click();\n            link.parentNode.removeChild(link);  \n        } catch (e) {\n            console.error('Download Error', e);\n        }\n    };\n    \n\n    return (\n        <>\n            <ToastContainer />\n            <div className=\"chat-header d-flex align-items-center\">\n                <p className='mb-0 fa-14 text-white text-uppercase fw-bold flex-grow-1'>{locationData?.Topic}</p>\n                <Tooltip title=\"Back\">\n                    <IconButton size='small' onClick={() => navigate('/taskManagement/discussions')}><ArrowBackIos className='fa-18' /></IconButton>\n                </Tooltip>\n                <Tooltip title=\"Refresh Chat\">\n                    <IconButton size='small' onClick={() => setReload(!reload)}><Replay className='fa-18' /></IconButton>\n                </Tooltip>\n                <Tooltip title=\"Documnets Shared\">\n                    <IconButton size='small' onClick={() => setDocumentsDialog(true)}><ArticleOutlined /></IconButton>\n                </Tooltip>\n                <Dropdown>\n                    <Dropdown.Toggle\n                        variant=\"success\"\n                        id=\"actions\"\n                        className=\"rounded-5 bg-transparent text-muted fa-18 border-0 btn\"\n                    >\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <h5 className='mb-1 text-primary px-3 fa-18 border-bottom'> Teams</h5>\n                        {locationData?.InvolvedUsers.map((o, i) => (\n                            <p key={i} className='fw-bold text-muted fa-13 mb-0 px-3 py-1 '>{o.Name}</p>\n                        ))}\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n            <div className=\"chat-body\" ref={chatBodyRef}>\n                {Object.entries(messageData).map(([date, messages]) => (\n                    <Fragment key={date}>\n                        <div className=\"badge rounded-3 bg-light text-center text-dark mx-auto my-2\">\n                            {new Date().toDateString() === date ? 'Today' : date}\n                        </div>\n                        {messages.map((message) => (\n                            <div\n                                key={message.Id}\n                                className={`messages ${Number(message?.User_Id) === Number(parseData?.UserId) ? 'message-right' : 'message-left'}`}\n                            >\n                                <p className={'fw-bold mb-1 text-primary fa-12'}>\n                                    {Number(message?.User_Id) === Number(parseData?.UserId) ? \"You\" : message.Name}\n                                </p>\n                                <div className='fa-16 mb-2'>{message.Message}</div>\n                                <p className={`fa-11 mb-0 fw-bold ${Number(message?.User_Id) === Number(parseData?.UserId) && 'text-end'} `}>\n                                    {new Date(message.CreatedAt).toLocaleTimeString('en-IN', { hour: '2-digit', minute: '2-digit' })}\n                                </p>\n                            </div>\n                        ))}\n                    </Fragment>\n                ))}\n            </div>\n            <form onSubmit={handleFormSubmit}>\n                <div className=\"chat-footer\">\n                    <div className=\"input-icon-container\">\n                        <input\n                            className='cus-inpt rounded-5 border-0 outline-none px-3'\n                            placeholder=\"Type a message\"\n                            autoFocus required\n                            value={messageInput}\n                            onChange={e => setMessageInput(e.target.value)}\n                            onInvalid={e => e.target.setCustomValidity('Type a message')}\n                            onInput={e => e.target.setCustomValidity('')}\n                        />\n                        <Tooltip title=\"Upload Files\">\n                            <IconButton onClick={() => setUploadDialog(true)} type='button' >\n                                <Attachment />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Send Message\">\n                            <IconButton type='submit'>\n                                <Send />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                </div>\n            </form>\n\n            <Dialog\n                open={uploadDialog}\n                onClose={closeFileUploadDialog}\n                fullWidth\n                maxWidth=\"sm\" >\n                <DialogTitle>Share Files</DialogTitle>\n                <form onSubmit={uploadFileFun}>\n                    <DialogContent>\n                        <input\n                            type='file'\n                            className='cus-inpt ' required\n                            onChange={e => setUploadFile(e.target.files[0])} />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={closeFileUploadDialog} type='button'>close</Button>\n                        <Button onClick={uploadFileFun} disabled={uploadPercentage !== 0} type='submit'>Upload</Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n\n            <Dialog\n                open={documentsDialog}\n                onClose={() => setDocumentsDialog(false)}\n                fullWidth\n                maxWidth={documents.length > 0 ? \"lg\" : 'sm'} >\n                <DialogTitle>Shared Documents</DialogTitle>\n                <DialogContent>\n                    {documents.length > 0 ? (\n                        <div className=\"table-responsive\">\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th className='fa-14'>S.No</th>\n                                        <th className='fa-14'>File Name</th>\n                                        <th className='fa-14'>Size</th>\n                                        <th className='fa-14'>Type</th>\n                                        <th className='fa-14'>Date</th>\n                                        <th className='fa-14'></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {documents.map((o, i) => (\n                                        <tr key={i}>\n                                            <td className='fa-14'>{i + 1}</td>\n                                            <td className='fa-14'>{o?.FileName}</td>\n                                            <td className='fa-14'>{o?.FileSize ? (o?.FileSize / 1024 / 1024).toFixed(2) : 0} MB</td>\n                                            <td className='fa-14'>{o?.FileType}</td>\n                                            <td className='fa-14'>{o?.SendDate}</td>\n                                            <td className='fa-14'>\n                                                <IconButton className='text-primary' size=\"small\" onClick={() => downloadFile(o.FileId)}><Download /></IconButton>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    ) : (\n                        <h5 className='text-center text-muted my-5'>No Documents Available</h5>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setDocumentsDialog(false)}>Close</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default ChatsDisplayer;"],"names":["ChatsDisplayer","localData","localStorage","getItem","parseData","JSON","parse","locationData","useLocation","state","navigate","useNavigate","messageData","setMessageData","useState","documents","setDocuments","chatBodyRef","useRef","messageInput","setMessageInput","reload","setReload","uploadDialog","setUploadDialog","uploadFile","setUploadFile","uploadPercentage","setUploadPercentage","documentsDialog","setDocumentsDialog","useEffect","fetchLink","address","concat","Id","then","data","success","groupedData","reduce","acc","message","date","Date","CreatedAt","toDateString","push","catch","e","console","log","current","scrollHeight","clientHeight","scrollTop","closeFileUploadDialog","uploadFileFun","preventDefault","formData","FormData","append","UserId","Project_Id","axios","post","api","headers","Autheticate_Id","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","toast","error","finally","_jsxs","_Fragment","children","_jsx","ToastContainer","className","Topic","Tooltip","title","IconButton","size","onClick","ArrowBackIos","Replay","ArticleOutlined","Dropdown","Toggle","variant","id","Menu","InvolvedUsers","map","o","i","Name","ref","Object","entries","_ref","messages","Fragment","Number","User_Id","Message","toLocaleTimeString","hour","minute","onSubmit","async","trim","warn","method","bodyData","Topic_Id","placeholder","autoFocus","required","value","onChange","target","onInvalid","setCustomValidity","onInput","type","Attachment","Send","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","files","DialogActions","Button","disabled","length","FileName","FileSize","toFixed","FileType","SendDate","response","blob","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","downloadFile","FileId","Download"],"sourceRoot":""}
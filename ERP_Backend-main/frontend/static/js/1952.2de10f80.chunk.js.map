{"version":3,"file":"static/js/1952.2de10f80.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","Pages/CurrentProjects/projectInfo.jsx","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/ExpandLess.js","../node_modules/@mui/icons-material/esm/ExpandMore.js","../node_modules/@mui/icons-material/esm/KeyboardArrowLeft.js"],"sourcesContent":["\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: '45px',\r\n        background: 'rgba(255, 255, 255, 0.322)'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 })\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","import React, { useEffect, useRef, useState, Fragment } from \"react\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, MenuItem, Autocomplete, TextField, Checkbox, IconButton, Collapse } from '@mui/material';\nimport { Add, Delete, Edit, ExpandLess, ExpandMore, KeyboardArrowLeft, Launch } from \"@mui/icons-material\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast } from \"react-toastify\";\nimport Select from 'react-select';\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { fetchLink } from '../../Components/fetchComponent';\nimport { ISOString, LocalDate } from '../../Components/functions'\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\n\nconst ProjectDetails = () => {\n    const localData = localStorage.getItem(\"user\");\n    const parseData = JSON.parse(localData);\n    const location = useLocation();\n    const projectData = location.state?.project;\n    const rights = location.state?.rights;\n    const nav = useNavigate()\n\n    const scheduleInitialValue = {\n        Sch_Id: '',\n        Sch_Date: new Date().toISOString().split('T')[0],\n        Project_Id: projectData?.Project_Id,\n        Sch_By: parseData.UserId,\n        Sch_Type_Id: 1,\n        Sch_Est_Start_Date: new Date().toISOString().split('T')[0],\n        Sch_Est_End_Date: '',\n        Sch_Status: 1,\n        Entry_By: parseData.UserId,\n        Entry_Date: new Date()\n    }\n\n    const scheduleTaskInitalValue = {\n        Sch_Project_Id: projectData?.Project_Id,\n        Sch_Id: '',\n        Task_Levl_Id: '',\n        Task_Id: '',\n        Type_Task_Id: 1,\n        Task_Sch_Duaration: '01:00',\n        Task_Start_Time: '10:00',\n        Task_End_Time: '11:00',\n        Task_Est_Start_Date: new Date().toISOString().split('T')[0],\n        Task_Est_End_Date: new Date().toISOString().split('T')[0],\n        Task_Sch_Status: 1,\n        Levl_Id: '',\n        Task_Depend_Level_Id: '',\n        TasksGet: '- Select Task -'\n    }\n\n    const [userDropdown, setUsersDropdown] = useState([]);\n    const [scheduleType, setScheleType] = useState([]);\n    const [workStatus, setWorkStatus] = useState([]);\n    const [projectSchedule, setProjectSchedule] = useState([]);\n    const [tasks, setTasks] = useState([]);\n    const [taskType, setTaskType] = useState([]);\n\n    const [dependancyTasks, setDependencyTasks] = useState([]);\n    const [selectedDependencyTasks, setSelectedDependencyTasks] = useState([])\n\n    const [scheduleInput, setScheduleInput] = useState(scheduleInitialValue);\n    const [taskScheduleInput, setTaskScheduleInput] = useState(scheduleTaskInitalValue);\n\n    const [isEdit, setIsEdit] = useState(false);\n    const [reload, setReload] = useState(false);\n\n    const [dialog, setDialog] = useState({\n        scheduleCreate: false,\n        scheduleDelete: false,\n        taskSchedule: false,\n        taskDelete: false\n    })\n\n    useEffect(() => {\n        fetchLink({\n            address: `taskManagement/project/schedule?Project_Id=${projectData?.Project_Id}`\n        }).then(data => {\n            if (data.success) {\n                setProjectSchedule(data.data)\n            }\n        }).catch(e => console.error(e))\n    }, [reload, projectData?.Project_Id])\n\n    useEffect(() => {\n\n        fetchLink({\n            address: `masters/user/dropDown?Company_id=${parseData?.Company_id}`\n        }).then(data => {\n            if (data.success) {\n                setUsersDropdown(data.data)\n            }\n        }).catch(e => console.error(e))\n\n        fetchLink({\n            address: `taskManagement/project/schedule/scheduleType`\n        }).then(data => {\n            if (data.success) {\n                setScheleType(data.data)\n            }\n        }).catch(e => console.error(e))\n\n        fetchLink({\n            address: `taskManagement/statusList`\n        }).then(data => {\n            if (data.success) {\n                data.data.sort((a, b) => a.Status_Id - b.Status_Id)\n                setWorkStatus(data.data)\n            }\n        }).catch(e => console.error(e))\n\n        fetchLink({\n            address: `taskManagement/tasks/dropdown`\n        }).then(data => {\n            if (data.success) {\n                setTasks(data.data)\n            }\n        }).catch(e => console.error(e))    \n\n        fetchLink({\n            address: `masters/taskType`\n        }).then(data => {\n            if (data.success) {\n                setTaskType(data.data)\n            }\n        }).catch(e => console.error(e))\n\n    }, [parseData?.BranchId])\n\n    useEffect(() => {\n        const getScheduleDates = scheduleType.find(obj => Number(obj?.Sch_Type_Id) === Number(scheduleInput?.Sch_Type_Id));\n        const findEndDate = new Date();\n        const getDay = findEndDate.getDate();\n        findEndDate.setDate(getDay + Number(getScheduleDates?.Sch_Days) || 0);\n        const changeFormat = findEndDate.toISOString().split('T')[0]\n        setScheduleInput(opt => ({ ...opt, Sch_Est_End_Date: changeFormat }))\n    }, [scheduleInput?.Sch_Est_Start_Date, scheduleInput?.Sch_Type_Id, scheduleType])\n\n    useEffect(() => {\n        const [hours1, minutes1] = taskScheduleInput?.Task_Start_Time.split(':').map(Number);\n        const [hours2, minutes2] = taskScheduleInput?.Task_End_Time.split(':').map(Number);\n\n        const date1 = new Date(0, 0, 0, hours1, minutes1);\n        const date2 = new Date(0, 0, 0, hours2, minutes2);\n\n        if (date2 > date1) {\n            let difference = Math.abs(date2 - date1);\n\n            const hours = Math.floor(difference / (1000 * 60 * 60));\n            difference %= (1000 * 60 * 60);\n            const minutes = Math.floor(difference / (1000 * 60));\n\n            const formattedHours = String(hours).padStart(2, '0');\n            const formattedMinutes = String(minutes).padStart(2, '0');\n\n            setTaskScheduleInput(opt => ({ ...opt, Task_Sch_Duaration: `${formattedHours}:${formattedMinutes}` }));\n        }\n\n    }, [taskScheduleInput?.Task_Start_Time, taskScheduleInput?.Task_End_Time, taskScheduleInput?.Task_Id])\n\n    useEffect(() => {\n        if (selectedDependencyTasks.length > 0) {\n            const numStr = selectedDependencyTasks.map(obj => obj?.Task_Levl_Id).join(',');\n            setTaskScheduleInput(opt => ({ ...opt, Task_Depend_Level_Id: numStr }));\n        } else {\n            setTaskScheduleInput(opt => ({ ...opt, Task_Depend_Level_Id: '' }));\n        }\n    }, [selectedDependencyTasks]);\n\n    useEffect(() => {\n        if (!projectData || !rights) {\n            nav('/taskManagement/projectActivity')\n        }\n    }, [projectData, rights, nav]);\n\n    const scheduleDialogSwitch = (val) => {\n        if (val) {\n            setScheduleInput(val);\n            setIsEdit(true)\n        }\n\n        if (!val && dialog.scheduleCreate === true) {\n            setScheduleInput(scheduleInitialValue)\n            setIsEdit(false)\n        }\n\n        setDialog({ ...dialog, scheduleCreate: !dialog.scheduleCreate });\n    }\n\n    const taskDialogSwitch = (bool, val) => {\n        if (val && !bool) {\n            setTaskScheduleInput(val);\n            setIsEdit(true)\n        }\n\n        if (!val && dialog.taskSchedule === true && bool === true) {\n            setTaskScheduleInput(scheduleTaskInitalValue);\n            setDependencyTasks([])\n            setSelectedDependencyTasks([])\n            setIsEdit(false)\n        }\n\n        setDialog({ ...dialog, taskSchedule: !dialog.taskSchedule });\n    }\n\n    const switchScheduleDeleteDialog = (val) => {\n        if (val) {\n            setScheduleInput(val)\n        } else {\n            setScheduleInput(scheduleInitialValue)\n        }\n\n        setDialog({ ...dialog, scheduleDelete: !dialog.scheduleDelete });\n    }\n\n    const switchTaskDeleteDialog = (val) => {\n        if (val) {\n            setTaskScheduleInput(val)\n        } else {\n            setTaskScheduleInput(scheduleTaskInitalValue)\n        }\n\n        setDialog({ ...dialog, taskDelete: !dialog.taskDelete });\n    }\n\n    const postAndPutScheduleFun = () => {\n        fetchLink({\n            address: `taskManagement/project/schedule`,\n            method: isEdit ? 'PUT' : 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            bodyData: scheduleInput\n        }).then(data => {\n            if (data.success) {\n                toast.success(data.message);\n                setReload(!reload)\n            } else {\n                toast.error(data.message)\n            }\n        }).catch(e => console.error)\n        .finally(() => scheduleDialogSwitch())\n    }\n\n    const deleteScheduleFun = () => {\n        fetchLink({\n            address: `taskManagement/project/schedule`,\n            method: 'DELETE',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            bodyData: scheduleInput\n        }).then(data => {\n            if (data.success) {\n                toast.success(data.message);\n                setReload(!reload)\n            } else {\n                toast.error(data.message)\n            }\n        }).catch(e => console.error)\n        .finally(() => switchScheduleDeleteDialog()) \n    }\n\n    const postAndPutTaskFun = () => {\n        if (taskScheduleInput.Task_Id) {\n            if (Number(taskScheduleInput?.Levl_Id) !== 1 && taskScheduleInput.Task_Depend_Level_Id === '') {\n                return toast.warn('Select Dependency Tasks')\n            }\n\n            fetchLink({\n                address: `taskManagement/project/schedule/scheduleTask`,\n                method: isEdit ? 'PUT' : 'POST',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                bodyData: taskScheduleInput\n            }).then(data => {\n                if (data.success) {\n                    toast.success(data.message);\n                    taskDialogSwitch(true);\n                    setReload(!reload)\n                } else {\n                    toast.error(data.message)\n                }\n            }).catch(e => console.error(e))\n        } else {\n            toast.warn('Select Task')\n        }\n    }\n\n    const deleteTaskFun = () => {\n        fetchLink({\n            address: `taskManagement/project/schedule/scheduleTask`,\n            method: 'DELETE',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            bodyData: taskScheduleInput\n        }).then(data => {\n            if (data.success) {\n                toast.success(data.message);\n                setReload(!reload)\n            } else {\n                toast.error(data.message)\n            }\n        }).catch(e => console.error(e))\n        .finally(() => switchTaskDeleteDialog())\n    }\n\n    const getSignal = (status) => {\n        const numStatus = Number(status);\n        const color = ['', 'bg-primary', 'bg-warning', 'bg-success', 'bg-danger']\n\n        return color[numStatus]\n    }\n\n    const ScheduleComp = ({ obj, SNo }) => {\n        const myDivRef = useRef(null);\n        const [height, setHeight] = useState(0)\n\n        useEffect(() => {\n            if (myDivRef.current) {\n                setHeight(myDivRef.current.offsetHeight);\n            }\n        }, []);\n\n        const findNum = (arr, num) => {\n            const index = arr.findIndex((o) => Number(o.Task_Levl_Id) === Number(num));\n            return index >= 0 ? (index + 1) + '. ' : '';\n        }\n\n        const LevelOneGroup = ({ gobj }) => {\n            const [open, setOpen] = useState(false);\n\n            return (\n                <Fragment>\n                    <h5 className=\"mt-2 mb-3\">\n                        <IconButton onClick={() => setOpen(!open)}>\n                            {open \n                                ? <ExpandLess sx={{ fontSize: '20px', color: 'black' }} /> \n                                : <ExpandMore sx={{ fontSize: '20px', color: 'black' }} />}\n                        </IconButton>\n                        <span onClick={() => setOpen(!open)}>{gobj?.Task_Type ? gobj?.Task_Type : 'Not Grouped'}</span>\n                    </h5>\n\n                    <Collapse in={open} unmountOnExit>\n                        {gobj?.TaskGroup?.map((o, i) => (\n                            <div key={i} className=\"rounded-4 bg-light p-2 px-3 d-flex align-items-center mt-2\">\n                                <span className=\"flex-grow-1 fw-bold\">{(i + 1) + '. '}{o?.TaskNameGet}</span>\n                                <span className=\"fa-14 d-flex align-items-center\">\n\n                                    {LocalDate(o?.Task_Est_Start_Date)}\n\n                                    <span className={`rounded-5 ms-2 ${getSignal(o?.Task_Sch_Status)}`} style={{ padding: '5.2px' }} />\n\n                                    <span>\n                                        <Dropdown>\n                                            <Dropdown.Toggle\n                                                variant=\"success\"\n                                                id=\"actions\"\n                                                className=\"rounded-5 bg-transparent text-dark border-0 btn\"\n                                            >\n                                            </Dropdown.Toggle>\n                                            <Dropdown.Menu>\n                                                {Number(rights?.edit) === 1 && (\n                                                    <MenuItem\n                                                        onClick={() => {\n                                                            taskDialogSwitch(false, {\n                                                                Sch_Project_Id: projectData?.Project_Id,\n                                                                Sch_Id: obj?.Sch_Id,\n                                                                Task_Levl_Id: o?.Task_Levl_Id,\n                                                                Task_Id: o?.Task_Id,\n                                                                Type_Task_Id: o?.Type_Task_Id,\n                                                                Task_Sch_Duaration: o?.Task_Sch_Duaration,\n                                                                Task_Start_Time: o?.Task_Start_Time,\n                                                                Task_End_Time: o?.Task_End_Time,\n                                                                Task_Est_Start_Date: new Date(o?.Task_Est_Start_Date).toISOString().split('T')[0],\n                                                                Task_Est_End_Date: new Date(o?.Task_Est_End_Date).toISOString().split('T')[0],\n                                                                Task_Sch_Status: o?.Task_Sch_Status,\n                                                                Levl_Id: 1,\n                                                                Task_Depend_Level_Id: '',\n                                                                TasksGet: o?.TaskNameGet,\n                                                            })\n                                                        }}>\n                                                        <Edit className=\"fa-in me-2 text-primary\" />\n                                                        Edit\n                                                    </MenuItem>\n                                                )}\n                                                {Number(rights?.delete) === 1 && (<MenuItem onClick={() => {\n                                                    switchTaskDeleteDialog({ ...taskScheduleInput, Task_Levl_Id: o?.Task_Levl_Id })\n                                                }}>\n                                                    <Delete className=\"fa-in me-2 text-danger \" />\n                                                    Delete\n                                                </MenuItem>)}\n                                                <MenuItem onClick={\n                                                    () => nav('taskActivity',\n                                                        {\n                                                            state: {\n                                                                taskDetails: {\n                                                                    ...o,\n                                                                    Project_Id: projectData?.Project_Id,\n                                                                    Sch_Id: obj?.Sch_Id,\n                                                                },\n                                                                rights: location.state?.rights,\n                                                                retObj: location.state\n                                                            }\n                                                        }\n                                                    )\n                                                }>\n                                                    <Launch className=\"fa-in me-2 text-primary \" />\n                                                    Open Task\n                                                </MenuItem>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                    </span>\n                                </span>\n                            </div>\n                        ))}\n                    </Collapse>\n                </Fragment>\n            )\n        }\n\n        const LevelTwoGrouped = ({ gobjlvl2 }) => {\n            const [open, setOpen] = useState(false);\n\n            return (\n                <Fragment>\n                    <h5 className=\"mt-2 mb-3\">\n                        <IconButton onClick={() => setOpen(!open)}>\n                            {open ? <ExpandLess sx={{ fontSize: '20px', color: 'black' }} /> : <ExpandMore sx={{ fontSize: '20px', color: 'black' }} />}\n                        </IconButton>\n                        <span onClick={() => setOpen(!open)}>{gobjlvl2?.Task_Type ? gobjlvl2?.Task_Type : 'Not Grouped'}</span>\n                    </h5>\n\n                    <Collapse in={open} unmountOnExit>\n                        {gobjlvl2?.TaskGroup?.map((o, i) => (\n                            <div className=\"rounded-4 bg-light py-2 px-3 mt-2\" key={i}>\n                                <div className=\"mb-0 d-flex align-items-center\">\n                                    <span className=\"flex-grow-1 fw-bold\">{(i + 1) + '. '}{o?.TaskNameGet}</span>\n                                    <span className=\"fa-14 d-flex align-items-center\">\n\n                                        {LocalDate(o?.Task_Est_Start_Date)}\n\n                                        <span className={`rounded-5 ms-2 ${getSignal(o?.Task_Sch_Status)}`} style={{ padding: '5.2px' }} />\n\n                                        {/* new code */}\n                                        <span>\n                                            <Dropdown>\n                                                <Dropdown.Toggle\n                                                    variant=\"success\"\n                                                    id=\"actions\"\n                                                    className=\"rounded-5 bg-transparent text-dark border-0 btn\"\n                                                >\n                                                </Dropdown.Toggle>\n                                                <Dropdown.Menu>\n                                                    {Number(rights?.edit) === 1 && (\n                                                        <MenuItem\n                                                            onClick={() => {\n                                                                taskDialogSwitch(false, {\n                                                                    Sch_Project_Id: projectData?.Project_Id,\n                                                                    Sch_Id: obj?.Sch_Id,\n                                                                    Task_Levl_Id: o?.Task_Levl_Id,\n                                                                    Task_Id: o?.Task_Id,\n                                                                    Type_Task_Id: o?.Type_Task_Id,\n                                                                    Task_Sch_Duaration: o?.Task_Sch_Duaration,\n                                                                    Task_Start_Time: o?.Task_Start_Time,\n                                                                    Task_End_Time: o?.Task_End_Time,\n                                                                    Task_Est_Start_Date: ISOString(o?.Task_Est_Start_Date),\n                                                                    Task_Est_End_Date: ISOString(o?.Task_Est_End_Date),\n                                                                    Task_Sch_Status: o?.Task_Sch_Status,\n                                                                    Levl_Id: 2,\n                                                                    Task_Depend_Level_Id: '',\n                                                                    TasksGet: o?.TaskNameGet,\n                                                                })\n                                                                setSelectedDependencyTasks([...o?.DependancyTasks?.map(depObj => ({\n                                                                    Task_Levl_Id: depObj?.Task_Depend_Level_Id,\n                                                                    TaskNameGet: depObj?.TaskNameGet\n                                                                }))])\n                                                                setDependencyTasks(obj?.LevelOneTasks.flatMap(item => item?.TaskGroup))\n                                                            }}>\n                                                            <Edit className=\"fa-in me-2 text-primary\" />\n                                                            Edit\n                                                        </MenuItem>\n                                                    )}\n                                                    {Number(rights?.delete) === 1 && (<MenuItem onClick={() => {\n                                                        switchTaskDeleteDialog({ ...taskScheduleInput, Task_Levl_Id: o?.Task_Levl_Id })\n                                                    }}>\n                                                        <Delete className=\"fa-in me-2 text-danger \" />\n                                                        Delete\n                                                    </MenuItem>)}\n                                                    <MenuItem onClick={\n                                                        () => nav('taskActivity',\n                                                            {\n                                                                state: {\n                                                                    taskDetails: {\n                                                                        ...o,\n                                                                        Project_Id: projectData?.Project_Id,\n                                                                        Sch_Id: obj?.Sch_Id,\n                                                                    },\n                                                                    rights: location.state?.rights,\n                                                                    retObj: location.state\n                                                                }\n                                                            }\n                                                        )\n                                                    }>\n                                                        <Launch className=\"fa-in me-2 text-primary \" />\n                                                        Open Task\n                                                    </MenuItem>\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        </span>\n                                    </span>\n                                </div>\n\n                                <hr className=\"mt-0 mb-2\" />\n                                {o?.DependancyTasks?.length > 0 && <p className=\"mb-1 text-primary\">Dependency Tasks ({o?.DependancyTasks?.length})</p>}\n\n                                <div className=\"d-flex overflow-auto\">\n                                    {o?.DependancyTasks?.map((depobj, depindex) => (\n                                        <span key={depindex} className=\"rounded-4 mt-2 me-2 px-3 py-1 fa-13 fw-bold\" style={{ backgroundColor: '#E7C8DD' }}>\n                                            {findNum(obj?.LevelOneTasks.flatMap(item => item?.TaskGroup), depobj.Task_Depend_Level_Id)}\n                                            {depobj?.TaskNameGet}\n                                        </span>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </Collapse>\n                </Fragment>\n            )\n        }\n\n        const LevelThreeGrouped = ({ gobjlvl3 }) => {\n            const [open, setOpen] = useState(false);\n\n            return (\n                <Fragment>\n                    <h5 className=\"mt-2 mb-3\">\n                        <IconButton onClick={() => setOpen(!open)}>\n                            {open ? <ExpandLess sx={{ fontSize: '20px', color: 'black' }} /> : <ExpandMore sx={{ fontSize: '20px', color: 'black' }} />}\n                        </IconButton>\n                        <span onClick={() => setOpen(!open)}>{gobjlvl3?.Task_Type ? gobjlvl3?.Task_Type : 'Not Grouped'}</span>\n                    </h5>\n\n                    <Collapse in={open} unmountOnExit>\n                        {gobjlvl3?.TaskGroup?.map((o, i) => (\n                            <div className=\"rounded-4 bg-light py-2 px-3 mt-2\" key={i}>\n                                <div className=\"mb-0 d-flex align-items-center\">\n                                    <span className=\"flex-grow-1 fw-bold\">{(i + 1) + '. '}{o?.TaskNameGet}</span>\n                                    <span className=\"fa-14 d-flex align-items-center\">\n\n                                        {LocalDate(o?.Task_Est_Start_Date)}\n\n                                        <span className={`rounded-5 ms-2 ${getSignal(o?.Task_Sch_Status)}`} style={{ padding: '5.2px' }} />\n\n                                        {/* new code */}\n                                        <span>\n                                            <Dropdown>\n                                                <Dropdown.Toggle\n                                                    variant=\"success\"\n                                                    id=\"actions\"\n                                                    className=\"rounded-5 bg-transparent text-dark border-0 btn\"\n                                                >\n                                                </Dropdown.Toggle>\n                                                <Dropdown.Menu>\n                                                    {Number(rights?.edit) === 1 && (\n                                                        <MenuItem\n                                                            onClick={() => {\n                                                                taskDialogSwitch(false, {\n                                                                    Sch_Project_Id: projectData?.Project_Id,\n                                                                    Sch_Id: obj?.Sch_Id,\n                                                                    Task_Levl_Id: o?.Task_Levl_Id,\n                                                                    Task_Id: o?.Task_Id,\n                                                                    Type_Task_Id: o?.Type_Task_Id,\n                                                                    Task_Sch_Duaration: o?.Task_Sch_Duaration,\n                                                                    Task_Start_Time: o?.Task_Start_Time,\n                                                                    Task_End_Time: o?.Task_End_Time,\n                                                                    Task_Est_Start_Date: ISOString(o?.Task_Est_Start_Date),\n                                                                    Task_Est_End_Date: ISOString(o?.Task_Est_End_Date),\n                                                                    Task_Sch_Status: o?.Task_Sch_Status,\n                                                                    Levl_Id: 3,\n                                                                    Task_Depend_Level_Id: '',\n                                                                    TasksGet: o?.TaskNameGet,\n                                                                })\n                                                                setSelectedDependencyTasks([...o?.DependancyTasks?.map(depObj => ({\n                                                                    Task_Levl_Id: depObj?.Task_Depend_Level_Id,\n                                                                    TaskNameGet: depObj?.TaskNameGet\n                                                                }))])\n                                                                setDependencyTasks(obj?.LevelTwoTasks.flatMap(item => item?.TaskGroup))\n                                                            }}>\n                                                            <Edit className=\"fa-in me-2 text-primary\" />\n                                                            Edit\n                                                        </MenuItem>\n                                                    )}\n                                                    {Number(rights?.delete) === 1 && (<MenuItem onClick={() => {\n                                                        switchTaskDeleteDialog({ ...taskScheduleInput, Task_Levl_Id: o?.Task_Levl_Id })\n                                                    }}>\n                                                        <Delete className=\"fa-in me-2 text-danger \" />\n                                                        Delete\n                                                    </MenuItem>)}\n                                                    <MenuItem onClick={\n                                                        () => nav('taskActivity',\n                                                            {\n                                                                state: {\n                                                                    taskDetails: {\n                                                                        ...o,\n                                                                        Project_Id: projectData?.Project_Id,\n                                                                        Sch_Id: obj?.Sch_Id,\n                                                                    },\n                                                                    rights: location.state?.rights,\n                                                                    retObj: location.state\n                                                                }\n                                                            }\n                                                        )\n                                                    }>\n                                                        <Launch className=\"fa-in me-2 text-primary \" />\n                                                        Open Task\n                                                    </MenuItem>\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        </span>\n                                    </span>\n                                </div>\n\n                                <hr className=\"mt-0 mb-2\" />\n                                {o?.DependancyTasks?.length > 0 && <p className=\"mb-1 text-primary\">Dependency Tasks ({o?.DependancyTasks?.length})</p>}\n\n                                <div className=\"d-flex overflow-auto\">\n                                    {o?.DependancyTasks?.map((depobj, depindex) => (\n                                        <span key={depindex} className=\"rounded-4 mt-2 me-2 px-3 py-1 fa-13 fw-bold\" style={{ backgroundColor: '#E2E4F6' }}>\n                                            {findNum(obj?.LevelTwoTasks.flatMap(item => item?.TaskGroup), depobj.Task_Depend_Level_Id)}\n                                            {depobj?.TaskNameGet}\n                                        </span>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </Collapse>\n                </Fragment>\n            )\n        }\n\n        return (\n            <>\n\n                <div className=\"cus-card p-2\">\n                    <h5 className=\"mb-0 d-flex px-3 py-2 align-items-center\">\n                        <span className=\"flex-grow-1\">\n                            Schedule: {SNo + ' '}\n                            <br />\n                            <span className=\"fa-12\">\n                                By: {obj?.SchByGet}\n                            </span>\n                        </span>\n                        <span className=\" d-flex fa-14\">\n                            <span>\n                                {obj?.SchTypGet + ' (' + obj?.SchDays + ') '}\n                                <br />\n                                <span className=\"fa-12\">(\n                                    {LocalDate(obj?.Sch_Est_Start_Date)}\n                                    {' - '}\n                                    {LocalDate(obj?.Sch_Est_End_Date)}\n                                    )\n                                </span>\n                            </span>\n                            <Dropdown>\n                                <Dropdown.Toggle\n                                    variant=\"success\"\n                                    id=\"actions\"\n                                    className=\"rounded-5 bg-transparent text-dark border-0 btn\"\n                                >\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu>\n\n                                    {Number(rights?.edit) === 1 && (\n                                        <MenuItem onClick={() => {\n                                            scheduleDialogSwitch({\n                                                Sch_Id: obj?.Sch_Id,\n                                                Sch_Date: ISOString(obj?.Sch_Date),\n                                                Project_Id: projectData?.Project_Id,\n                                                Sch_By: obj?.Sch_By,\n                                                Sch_Type_Id: obj?.Sch_Type_Id,\n                                                Sch_Est_Start_Date: ISOString(obj?.Sch_Est_Start_Date),\n                                                Sch_Est_End_Date: ISOString(obj?.Sch_Est_End_Date),\n                                                Sch_Status: obj?.Sch_Status,\n                                                Entry_By: obj?.Entry_By,\n                                                Entry_Date: ISOString(obj?.Entry_Date),\n                                            });\n                                        }}>\n                                            <Edit className=\"fa-in me-2 text-primary\" />\n                                            Edit\n                                        </MenuItem>\n                                    )}\n\n                                    {Number(rights?.delete) === 1 && (\n                                        <MenuItem onClick={() => switchScheduleDeleteDialog({ ...taskScheduleInput, Sch_Id: obj?.Sch_Id })}>\n                                            <Delete className=\"fa-in me-2 text-danger \" />\n                                            Delete\n                                        </MenuItem>\n                                    )}\n\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </span>\n                    </h5>\n\n                    <hr className=\"mt-0\" />\n\n                    <div className=\"d-flex flex-nowrap overflow-scroll\" style={{ paddingBottom: '4.6em' }}>\n\n                        {/* LevelOneTasks */}\n                        <div className=\"res-width px-3 py-2\">\n                            <div className=\"rounded-4 p-3\" style={{ backgroundColor: '#E7C8DD' }} ref={myDivRef}>\n\n                                <div className=\"d-flex align-items-center\">\n                                    <span className=\"flex-grow-1 ps-2 fw-bold\">Level 1</span>\n                                    {Number(rights?.add) === 1 && (\n                                        <button\n                                            className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center\"\n                                            onClick={() => {\n                                                taskDialogSwitch(false);\n                                                setTaskScheduleInput({ ...taskScheduleInput, Sch_Id: obj?.Sch_Id, Levl_Id: 1 });\n                                                setDependencyTasks([])\n                                            }}>\n                                            Assign Task\n                                        </button>\n                                    )}\n                                </div>\n\n                                {obj?.LevelOneTasks?.map((gobj, indobj) => (\n                                    (gobj?.TaskGroup?.length > 0) &&\n                                    <LevelOneGroup key={indobj} gobj={gobj} />\n                                ))}\n\n                            </div>\n                        </div>\n\n\n                        {/* LevelTwoTasks */}\n                        <div className=\"res-width px-3 py-2\">\n                            <div className=\"rounded-4 p-3\" style={{ backgroundColor: '#E2E4F6', minHeight: height, overflow: 'auto' }}>\n                                <div className=\"d-flex align-items-center\">\n                                    <span className=\"flex-grow-1 ps-2 fw-bold \">Level 2</span>\n                                    {Number(rights?.add) === 1 && (\n                                        <button\n                                            className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center\"\n                                            disabled={obj?.LevelOneTasks.flatMap(item => item?.TaskGroup).length === 0}\n                                            onClick={() => {\n                                                taskDialogSwitch(false);\n                                                setTaskScheduleInput({ ...taskScheduleInput, Sch_Id: obj?.Sch_Id, Levl_Id: 2 });\n                                                setDependencyTasks(obj?.LevelOneTasks.flatMap(item => item?.TaskGroup))\n                                            }}>\n                                            Assign Task\n                                        </button>\n                                    )}\n                                </div>\n\n                                {obj?.LevelTwoTasks.map((gobjlvl2, indexobj) => (\n                                    (gobjlvl2?.TaskGroup?.length > 0) && (\n                                        <LevelTwoGrouped key={indexobj} gobjlvl2={gobjlvl2} />\n                                    )\n                                ))}\n\n                            </div>\n                        </div>\n\n\n                        {/* LevelThreeTasks */}\n                        <div className=\"res-width px-3 py-2\">\n                            <div className=\"rounded-4 p-3\" style={{ backgroundColor: '#B4D2E7', minHeight: height, overflow: 'auto' }}>\n                                <div className=\"d-flex align-items-center\">\n                                    <span className=\"flex-grow-1 ps-2 fw-bold \">Level 3</span>\n                                    {Number(rights?.add) === 1 && (\n                                        <button\n                                            className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center\"\n                                            disabled={obj?.LevelTwoTasks.flatMap(item => item?.TaskGroup).length === 0}\n                                            onClick={() => {\n                                                taskDialogSwitch(false);\n                                                setTaskScheduleInput({ ...taskScheduleInput, Sch_Id: obj?.Sch_Id, Levl_Id: 3 });\n                                                setDependencyTasks(obj?.LevelTwoTasks.flatMap(item => item?.TaskGroup))\n                                            }}>\n                                            Assign Task\n                                        </button>\n                                    )}\n                                </div>\n\n                                {obj.LevelThreeTasks.map((gobjlvl3, indexobj) => (\n                                    (gobjlvl3?.TaskGroup?.length > 0) && (\n                                        <LevelThreeGrouped key={indexobj} gobjlvl3={gobjlvl3} />\n                                    )\n                                ))}\n\n                            </div>\n                        </div>\n\n\n                    </div>\n                </div>\n\n            </>\n        )\n    }\n\n    return Number(rights?.read) === 1 && (\n        <>\n            <div className=\"cus-card p-3\">\n\n                <div className=\"d-flex align-items-center\">\n                    <h5 className=\" flex-grow-1 mb-0 text-muted fa-16 ps-2\">Create New Schedule</h5>\n                    {Number(rights?.add) === 1 && (\n                        <button className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center me-2\" onClick={() => scheduleDialogSwitch()}>\n                            <Add className=\"fa-in me-2\" /> Add\n                        </button>\n                    )}\n                    <button className=\"btn btn-secondary rounded-5 px-3 fa-13 shadow d-flex align-items-center\" onClick={() => nav('/taskManagement/projectActivity')}>\n                        <KeyboardArrowLeft className=\"fa-in me-2\" /> Back\n                    </button>\n                </div>\n\n                <h6 className=\"my-2 d-flex align-items-center\">\n                    <span className={`rounded-5 mx-2 ${getSignal(1)}`} style={{ padding: '5.2px' }} />\n                    New\n                    <span className={`rounded-5 mx-2 ${getSignal(2)}`} style={{ padding: '5.2px' }} />\n                    Progress\n                    <span className={`rounded-5 mx-2 ${getSignal(3)}`} style={{ padding: '5.2px' }} />\n                    Completed\n                    <span className={`rounded-5 mx-2 ${getSignal(4)}`} style={{ padding: '5.2px' }} />\n                    Canceled\n                </h6>\n\n            </div>\n\n            {projectSchedule.map((o, i) => <ScheduleComp key={i} obj={o} SNo={i + 1} />)}\n\n            <Dialog\n                open={dialog.scheduleCreate}\n                onClose={() => scheduleDialogSwitch()}\n                maxWidth='sm' fullWidth>\n                <DialogTitle className=\"fa-18\">{isEdit ? \"Change Schedule\" : 'Create Schedule'}</DialogTitle>\n                <DialogContent>\n                    <table className=\"table\">\n                        <tbody>\n                            {(Number(parseData?.UserTypeId) === 0 || Number(parseData?.UserTypeId) === 1) && <tr>\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Scheduled By</td>\n                                <td className=\"border-bottom-0 fa-15\">\n                                    <select\n                                        className=\"cus-inpt\"\n                                        value={scheduleInput.Sch_By}\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_By: e.target.value })}>\n                                        {userDropdown.map((o, i) => (\n                                            <option key={i} value={o?.UserId}>{o?.Name}</option>\n                                        ))}\n                                    </select>\n                                </td>\n                            </tr>}\n                            <tr>\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}> Date</td>\n                                <td className=\"border-bottom-0 fa-15\">\n                                    <input\n                                        type='date'\n                                        className=\"cus-inpt\"\n                                        value={scheduleInput.Sch_Date}\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_Date: e.target.value })} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Type</td>\n                                <td className=\"border-bottom-0 fa-15\">\n                                    <select\n                                        className=\"cus-inpt\"\n                                        value={scheduleInput.Sch_Type_Id}\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_Type_Id: e.target.value })}>\n                                        {scheduleType.map((o, i) => (\n                                            <option key={i} value={o?.Sch_Type_Id}>{o?.Sch_Type + \" (\" + o?.Sch_Days + \" Day)\"}</option>\n                                        ))}\n                                    </select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Status</td>\n                                <td className=\"border-bottom-0 fa-15\">\n                                    <select\n                                        className=\"cus-inpt\"\n                                        value={scheduleInput.Sch_Status}\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_Status: e.target.value })}>\n                                        {workStatus.map((o, i) => (\n                                            <option key={i} value={o?.Status_Id}>{o?.Status}</option>\n                                        ))}\n                                    </select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Date</td>\n                                <td className=\"border-bottom-0 fa-15\">\n                                    <input\n                                        type='date'\n                                        className=\"cus-inpt\"\n                                        value={scheduleInput.Sch_Est_Start_Date}\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_Est_Start_Date: e.target.value })} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => scheduleDialogSwitch()}>cancel</Button>\n                    <Button onClick={postAndPutScheduleFun} >{isEdit ? 'Update' : 'Create'}</Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={dialog?.taskSchedule}\n                onClose={() => taskDialogSwitch(true)}\n                maxWidth='sm' fullWidth>\n                <DialogTitle>{isEdit ? 'Manage Task' : 'Assign Task'}</DialogTitle>\n                <form onSubmit={e => {\n                    e.preventDefault();\n                    postAndPutTaskFun()\n                }}>\n                    <DialogContent>\n                        <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Task</td>\n                                    <td className=\"border-bottom-0 fa-15\">\n                                        <Select\n                                            value={{ value: taskScheduleInput?.Task_Id, label: taskScheduleInput?.TasksGet }}\n                                            onChange={(e) => setTaskScheduleInput({ ...taskScheduleInput, Task_Id: e.value, TasksGet: e.label })}\n                                            options={[...tasks.map(obj => ({ value: obj.Task_Id, label: obj.Task_Name }))]}\n                                            styles={customSelectStyles}\n                                            isSearchable={true} required\n                                            placeholder={\"Select Task\"} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Task Type</td>\n                                    <td className=\"border-bottom-0 fa-15\">\n                                        <select\n                                            className=\"cus-inpt\"\n                                            value={taskScheduleInput?.Type_Task_Id} required\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Type_Task_Id: e.target.value })}>\n                                            {taskType.map((o, i) => <option key={i} value={o?.Task_Type_Id}>{o?.Task_Type}</option>)}\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Date</td>\n                                    <td className=\"border-bottom-0 fa-15\">\n                                        <input\n                                            type='date'\n                                            className=\"cus-inpt\" required\n                                            value={taskScheduleInput?.Task_Est_Start_Date && new Date(taskScheduleInput?.Task_Est_Start_Date).toISOString().split('T')[0]}\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_Est_Start_Date: e.target.value })} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>End Date</td>\n                                    <td className=\"border-bottom-0 fa-15\">\n                                        <input\n                                            type='date'\n                                            className=\"cus-inpt\" required min={taskScheduleInput?.Task_Est_Start_Date}\n                                            value={taskScheduleInput?.Task_Est_End_Date && new Date(taskScheduleInput?.Task_Est_End_Date).toISOString().split('T')[0]}\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_Est_End_Date: e.target.value })} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Time</td>\n                                    <td className=\"border-bottom-0 fa-15\">\n                                        <input\n                                            type='time'\n                                            className=\"cus-inpt\"\n                                            value={taskScheduleInput?.Task_Start_Time} required\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_Start_Time: e.target.value })} />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>End Time</td>\n                                    <td className=\"border-bottom-0 fa-15\">\n                                        <input\n                                            type='time'\n                                            className=\"cus-inpt\" required min={taskScheduleInput?.Task_Start_Time}\n                                            value={taskScheduleInput?.Task_End_Time}\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_End_Time: e.target.value })} />\n                                    </td>\n                                </tr>\n                                {isEdit && (\n                                    <tr>\n                                        <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Status</td>\n                                        <td className=\"border-bottom-0 fa-15\">\n                                            <select\n                                                className=\"cus-inpt\"\n                                                value={taskScheduleInput.Task_Sch_Status} required\n                                                onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_Sch_Status: e.target.value })}>\n                                                {workStatus.map((o, i) => (\n                                                    <option key={i} value={o?.Status_Id}>{o?.Status}</option>\n                                                ))}\n                                            </select>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                        {Number(taskScheduleInput?.Levl_Id) !== 1 && (\n                            <>\n                                <label className=\"mb-2\">Select Dependency Tasks</label>\n                                <Autocomplete\n                                    multiple\n                                    id=\"checkboxes-tags-demo\"\n                                    options={dependancyTasks}\n                                    disableCloseOnSelect\n                                    getOptionLabel={(option) => option?.TaskNameGet}\n                                    value={selectedDependencyTasks}\n                                    onChange={(f, e) => setSelectedDependencyTasks(e)}\n                                    renderOption={(props, option, { selected }) => (\n                                        <li {...props}>\n                                            <Checkbox\n                                                icon={icon}\n                                                checkedIcon={checkedIcon}\n                                                style={{ marginRight: 8 }}\n                                                checked={selected}\n                                            />\n                                            {option?.TaskNameGet}\n                                        </li>\n                                    )}\n                                    style={{ width: '100%' }}\n                                    isOptionEqualToValue={(opt, val) => Number(opt?.Task_Levl_Id) === Number(val?.Task_Levl_Id)}\n                                    renderInput={(params) => (\n                                        <TextField {...params} label=\"Tasks\" placeholder=\"Select Dependency Tasks\" />\n                                    )}\n                                />\n                            </>\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='button' onClick={() => taskDialogSwitch(true)}>close</Button>\n                        <Button type='submit'>\n                            {isEdit ? 'Update' : 'Assign Task'}\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n\n            <Dialog\n                open={dialog?.scheduleDelete}\n                onClose={() => switchScheduleDeleteDialog()}>\n                <DialogTitle>Confirmation</DialogTitle>\n                <DialogContent>\n                    Do you want to delete the Schedule?\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => switchScheduleDeleteDialog()}>cancel</Button>\n                    <Button onClick={deleteScheduleFun} >Delete</Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog\n                open={dialog?.taskDelete}\n                onClose={() => switchTaskDeleteDialog()}>\n                <DialogTitle>Confirmation</DialogTitle>\n                <DialogContent>\n                    Do you want to delete the Task?\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => switchTaskDeleteDialog()}>cancel</Button>\n                    <Button onClick={deleteTaskFun} >Delete</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default ProjectDetails;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","control","provided","state","_objectSpread","height","background","menu","zIndex","menuPortal","base","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","icon","_jsx","CheckBoxOutlineBlankIcon","checkedIcon","CheckBoxIcon","ProjectDetails","_location$state","_location$state2","localData","localStorage","getItem","parseData","JSON","parse","location","useLocation","projectData","project","rights","nav","useNavigate","scheduleInitialValue","Sch_Id","Sch_Date","Date","toISOString","split","Project_Id","Sch_By","UserId","Sch_Type_Id","Sch_Est_Start_Date","Sch_Est_End_Date","Sch_Status","Entry_By","Entry_Date","scheduleTaskInitalValue","Sch_Project_Id","Task_Levl_Id","Task_Id","Type_Task_Id","Task_Sch_Duaration","Task_Start_Time","Task_End_Time","Task_Est_Start_Date","Task_Est_End_Date","Task_Sch_Status","Levl_Id","Task_Depend_Level_Id","TasksGet","userDropdown","setUsersDropdown","useState","scheduleType","setScheleType","workStatus","setWorkStatus","projectSchedule","setProjectSchedule","tasks","setTasks","taskType","setTaskType","dependancyTasks","setDependencyTasks","selectedDependencyTasks","setSelectedDependencyTasks","scheduleInput","setScheduleInput","taskScheduleInput","setTaskScheduleInput","isEdit","setIsEdit","reload","setReload","dialog","setDialog","scheduleCreate","scheduleDelete","taskSchedule","taskDelete","useEffect","fetchLink","concat","then","data","success","catch","e","console","error","Company_id","sort","a","b","Status_Id","BranchId","getScheduleDates","find","obj","Number","findEndDate","getDay","getDate","setDate","Sch_Days","changeFormat","opt","hours1","minutes1","map","hours2","minutes2","date1","date2","difference","Math","abs","hours","floor","minutes","formattedHours","String","padStart","formattedMinutes","length","numStr","join","scheduleDialogSwitch","val","taskDialogSwitch","bool","switchScheduleDeleteDialog","switchTaskDeleteDialog","getSignal","status","ScheduleComp","_ref","_obj$LevelOneTasks","SNo","myDivRef","useRef","setHeight","current","offsetHeight","findNum","arr","num","index","findIndex","o","LevelOneGroup","_ref2","_gobj$TaskGroup","gobj","open","setOpen","_jsxs","Fragment","children","className","IconButton","onClick","ExpandLess","sx","ExpandMore","Task_Type","Collapse","in","unmountOnExit","TaskGroup","i","TaskNameGet","LocalDate","padding","Dropdown","Toggle","Menu","edit","MenuItem","Edit","delete","Delete","_location$state3","taskDetails","retObj","Launch","LevelTwoGrouped","_ref3","_gobjlvl2$TaskGroup","gobjlvl2","_o$DependancyTasks2","_o$DependancyTasks3","_o$DependancyTasks4","_o$DependancyTasks","ISOString","DependancyTasks","depObj","LevelOneTasks","flatMap","item","_location$state4","depobj","depindex","LevelThreeGrouped","_ref4","_gobjlvl3$TaskGroup","gobjlvl3","_o$DependancyTasks6","_o$DependancyTasks7","_o$DependancyTasks8","_o$DependancyTasks5","LevelTwoTasks","_location$state5","_Fragment","SchByGet","SchTypGet","SchDays","paddingBottom","ref","add","indobj","_gobj$TaskGroup2","minHeight","overflow","disabled","indexobj","_gobjlvl2$TaskGroup2","LevelThreeTasks","_gobjlvl3$TaskGroup2","read","Add","KeyboardArrowLeft","Dialog","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","UserTypeId","verticalAlign","value","onChange","target","Name","type","Sch_Type","Status","DialogActions","Button","postAndPutScheduleFun","method","headers","bodyData","toast","message","finally","onSubmit","preventDefault","postAndPutTaskFun","warn","Select","label","options","Task_Name","styles","isSearchable","required","placeholder","Task_Type_Id","min","Autocomplete","multiple","disableCloseOnSelect","getOptionLabel","option","f","renderOption","props","_ref5","selected","Checkbox","marginRight","checked","isOptionEqualToValue","renderInput","params","TextField","deleteScheduleFun","deleteTaskFun","createSvgIcon","d"],"sourceRoot":""}
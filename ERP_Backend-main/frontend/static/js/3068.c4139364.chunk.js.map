{"version":3,"file":"static/js/3068.c4139364.chunk.js","mappings":"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","sources":["Pages/Inventry/stockReport.jsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@mui/icons-material';\nimport { Card, CardContent } from \"@mui/material\";\nimport { NumberFormat } from \"../../Components/functions\";\nimport { fetchLink } from \"../../Components/fetchComponent\";\n\n\nconst StockReport = () => {\n    const storage = JSON.parse(localStorage.getItem(\"user\"));\n    const [StockData, setStockData] = useState([])\n    const [search, setSearch] = useState({\n        zero: false,\n        inm: '',\n        date: new Date().toISOString().split('T')[0],\n    })\n    const [laks, setLaks] = useState(true)\n\n    useEffect(() => {\n        if (storage?.Company_id) {\n            setStockData([]);\n            fetchLink({\n                address: `reports/stockReport?ReportDate=${search.date}`,\n                headers: {\n                    \"Db\": storage?.Company_id\n                }\n            }).then(data => {\n                if (data.success) {\n                    setStockData(data.data);\n                } else {\n                    setStockData([])\n                }\n            }).catch(e => console.error(e));\n        }\n    }, [search.date])\n\n    const filteredStockData = useMemo(() => {\n        if (StockData !== null) {\n            return StockData.map((o) => {\n                const filteredProductDetails = o.product_details.filter(\n                    (obj) =>\n                        (search.zero || Number(obj.Bal_Qty) !== 0) &&\n                        (!search.inm || ((obj.Group_Name).toLowerCase()).includes((search.inm).toLowerCase()))\n                );\n                return { ...o, product_details: filteredProductDetails };\n            });\n        } else {\n            return [];\n        }\n    }, [StockData, search.zero, search.inm]);\n\n    const TableRows = ({ rows }) => {\n        const [open, setOpen] = useState(false);\n        const [laks, setLaks] = useState(true);\n\n        const calcBalQty = (colmn) => {\n            let count = 0;\n            rows?.product_details?.forEach(obj => {\n                count += Number(obj[colmn]);\n            })\n            return Number(count)\n        }\n\n        function calculateMean() {\n            let total = 0;\n            rows?.product_details?.forEach(ob => {\n                if (ob.CL_Rate) {\n                    total += Number(ob.CL_Rate)\n                }\n            })\n            let mean = total / rows?.product_details.length\n            return mean\n        }\n\n        return (\n            <>\n                <tr>\n                    <td className=\"border fa-13 text-center\">\n                        <button onClick={() => setOpen(!open)} className=\"icon-btn\">\n                            {open ? <KeyboardArrowUp sx={{ fontSize: 'inherit' }} /> : <KeyboardArrowDown sx={{ fontSize: 'inherit' }} />}\n                        </button>\n                    </td>\n                    <td className=\"fa-13 text-center bg-light\">\n                        {rows.Stock_Group}\n                        <span className=\"text-danger\"> ({rows.product_details.length})</span>\n                    </td>\n                    <td className=\"fa-13 text-end text-primary\">\n                        {NumberFormat((calcBalQty('Bal_Qty') / 1000))}\n                    </td>\n                    <td className=\"fa-13 text-end text-primary bg-light\">\n                        {calculateMean() ? NumberFormat(calculateMean()) : 0}\n                    </td>\n                    <td className=\"fa-13 text-end text-primary\" onClick={() => setLaks(!laks)}>\n                        {laks\n                            ? NumberFormat((calcBalQty('Stock_Value') / 100000))\n                            : NumberFormat(calcBalQty('Stock_Value'))\n                        }\n                    </td>\n                    <td className=\"fa-13 text-end text-primary bg-light\">\n                        {NumberFormat(calcBalQty('Bal_Qty'))}\n                    </td>\n                </tr>\n\n                {open && (\n                    <tr>\n                        <td colSpan={6} className=\"px-0 py-2\">\n                            <table className=\"table mb-0\">\n                                <thead>\n                                    <tr>\n                                        {['SNo', 'INM', 'Quantity', 'Rate', 'Value (₹)'].map((o, i) => (\n                                            <th className=\"fa-13 border text-center\" key={i}>{o}</th>\n                                        ))}\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {rows?.product_details?.map((obj, i) => (\n                                        <tr key={i}>\n                                            <td className=\"fa-13 bg-light\">{i + 1}</td>\n                                            <td className=\"fa-13\">{obj.Group_Name}</td>\n                                            <td className=\"fa-13 text-end bg-light\">{NumberFormat(obj.Bal_Qty)}</td>\n                                            <td className=\"fa-13 text-end\">{NumberFormat(obj.CL_Rate)}</td>\n                                            <td className=\"fa-13 text-end fw-bold bg-light\">{NumberFormat(obj.Stock_Value)}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </td>\n                    </tr>\n                )}\n            </>\n        )\n    }\n\n    const memoComp = useMemo(() => {\n        return filteredStockData.map((o, i) => {\n            return <TableRows key={i} rows={o} />;\n        });\n    }, [filteredStockData, search.zero]);\n\n\n    const overAllTotal = () => {\n        let total = 0;\n        filteredStockData.forEach(o => {\n            o.product_details.forEach(ob => {\n                total += Number(ob.Stock_Value)\n            })\n        })\n        return total;\n    }\n\n    return (\n        <>\n            <Card>\n\n                <div className=\"px-3 py-2 d-flex justify-content-between align-items-center fw-bold text-dark\" style={{ backgroundColor: '#eae0cc' }}>\n                    <span>\n                        {storage?.Company_Name}\n                    </span>\n                    <span>\n                        <input\n                            type={'search'}\n                            className='cus-inpt ps-3 w-100 rounded-5 border-0'\n                            value={search.inm}\n                            placeholder=\"Search\"\n                            onChange={(e) => {\n                                setSearch({ ...search, inm: e.target.value });\n                            }}\n                        />\n                    </span>\n                </div>\n\n                <div className=\"d-flex justify-content-between align-items-center px-3 py-2\" style={{ boxShadow: 'none' }}>\n                    <input\n                        type={'date'}\n                        className='cus-inpt w-auto ps-3 border rounded-5'\n                        value={search.date}\n                        onChange={(e) => {\n                            setSearch({ ...search, date: e.target.value });\n                        }}\n                    />\n                    <h6>\n                        {/* Value : */}\n                        <span className=\"text-primary fw-bold\" onClick={() => setLaks(!laks)}>\n                            ₹{laks\n                                ? NumberFormat((overAllTotal() / 100000)) + ' (L)'\n                                : NumberFormat(overAllTotal())\n                            }\n                        </span>\n                    </h6>\n                </div>\n                <CardContent className=\"overflow-scroll pt-0\" style={{ maxHeight: '75vh' }}>\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                {['-', 'Group Name', 'Tonnage', 'Rate', 'Value (L)', 'Quantity'].map((o, i) => (\n                                    <th className=\"tble-hed-stick text-center fa-14 border\" key={i}>{o}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {memoComp}\n                        </tbody>\n                    </table>\n                </CardContent>\n            </Card>\n\n        </>\n    )\n}\n\n\nexport default StockReport;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["StockReport","storage","JSON","parse","localStorage","getItem","StockData","setStockData","useState","search","setSearch","zero","inm","date","Date","toISOString","split","laks","setLaks","useEffect","Company_id","fetchLink","address","concat","headers","then","data","success","catch","e","console","error","filteredStockData","useMemo","map","o","filteredProductDetails","product_details","filter","obj","Number","Bal_Qty","Group_Name","toLowerCase","includes","_objectSpread","TableRows","_ref","_rows$product_details3","rows","open","setOpen","calcBalQty","colmn","_rows$product_details","count","forEach","calculateMean","_rows$product_details2","total","ob","CL_Rate","length","_jsxs","_Fragment","children","_jsx","className","onClick","KeyboardArrowUp","sx","fontSize","KeyboardArrowDown","Stock_Group","NumberFormat","colSpan","i","Stock_Value","memoComp","overAllTotal","Card","style","backgroundColor","Company_Name","type","value","placeholder","onChange","target","boxShadow","CardContent","maxHeight","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined"],"sourceRoot":""}
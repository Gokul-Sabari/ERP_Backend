{"version":3,"file":"static/js/1392.d7bc4bc3.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ArrowRight.js","Pages/Reports/dayBook/dayBook.jsx","../node_modules/@mui/icons-material/esm/OpenInNew.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m10 17 5-5-5-5z\"\n}), 'ArrowRight');","import { useEffect, useMemo, useState } from \"react\";\r\nimport { Addition, getSessionUser, ISOString, isValidDate, NumberFormat, stringCompare, toArray } from '../../../Components/functions'\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { Card, CardContent, IconButton, Tooltip } from \"@mui/material\";\r\nimport { ArrowRight, KeyboardArrowDown, KeyboardArrowUp, OpenInNew, Search } from \"@mui/icons-material\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport LastSynedTime from \"../../Dashboard/tallyLastSyncedTime\";\r\nimport { ButtonActions } from \"../../../Components/filterableTable2\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst DayBookOfERP = ({ loadingOn, loadingOff }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const user = getSessionUser().user;\r\n    const [dayBookData, setDayBookData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: defaultFilters.Fromdate,\r\n        Todate: defaultFilters.Todate,\r\n        fetchFrom: defaultFilters.Fromdate,\r\n        fetchTo: defaultFilters.Todate,\r\n        filterDialog: false,\r\n        refresh: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n        setDayBookData([])\r\n        fetchLink({\r\n            address: `dashboard/dayBook?Fromdate=${filters?.fetchFrom}&Todate=${filters?.fetchTo}`,\r\n            headers: {\r\n                \"Db\": user?.Company_id\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setDayBookData(data.data);\r\n            }\r\n        }).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        }).catch(e => console.error(e))\r\n    }, [filters?.fetchFrom, filters?.fetchTo])\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n        };\r\n        setFilters(pre => ({ ...pre, fetchFrom: queryFilters.Fromdate, fetchTo: queryFilters.Todate }));\r\n    }, [location.search]);\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setFilters({\r\n            ...filters,\r\n            filterDialog: false,\r\n        });\r\n    }\r\n\r\n    const RowComp = ({ row, Sno }) => {\r\n        const [open, setOpen] = useState(false);\r\n\r\n        const ERP_Rows = useMemo(() => toArray(row?.groupedData).filter(\r\n            item => stringCompare(item?.dataSource, 'ERP')\r\n        ), [row]);\r\n\r\n        const Tally_Rows = useMemo(() => toArray(row?.groupedData).filter(\r\n            item => stringCompare(item?.dataSource, 'TALLY')\r\n        ), [row]);\r\n\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td>{Sno}</td>\r\n                    <td>{row?.ModuleName}</td>\r\n                    <td>\r\n                        {ERP_Rows.reduce((acc, item) => Addition(acc, item?.VoucherBreakUpCount), 0)}\r\n                    </td>\r\n                    <td>{NumberFormat(ERP_Rows.reduce((acc, item) => Addition(acc, item.Amount), 0))}</td>\r\n                    <td>\r\n                        {Tally_Rows.reduce((acc, item) => Addition(acc, item?.VoucherBreakUpCount), 0)}\r\n                    </td>\r\n                    <td>{NumberFormat(Tally_Rows.reduce((acc, item) => Addition(acc, item.Amount), 0))}</td>\r\n                    <td className=\"p-0 text-center vctr\">\r\n\r\n                        <ButtonActions \r\n                            buttonsData={[\r\n                                {\r\n                                    name: 'Expand',\r\n                                    onclick: () => setOpen(pre => !pre),\r\n                                    icon: open \r\n                                        ? <KeyboardArrowUp sx={{ fontSize: 'inherit' }} /> \r\n                                        : <KeyboardArrowDown sx={{ fontSize: 'inherit' }} />\r\n                                },\r\n                                {\r\n                                    name: 'Open Detail (T)',\r\n                                    icon: <OpenInNew sx={{ fontSize: 'inherit' }} />,\r\n                                    onclick: () => {\r\n                                        navigate(Tally_Rows[0]?.navLink, {\r\n                                            state: {\r\n                                                ModuleName: row.ModuleName,\r\n                                                Fromdate: filters?.fetchFrom,\r\n                                                Todate: filters?.fetchTo\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                },\r\n                                {\r\n                                    name: 'Open Detail (ERP)',\r\n                                    icon: <OpenInNew sx={{ fontSize: 'inherit' }} />,\r\n                                    onclick: () => {\r\n                                        navigate(ERP_Rows[0]?.navLink, {\r\n                                            state: {\r\n                                                ModuleName: row.ModuleName,\r\n                                                Fromdate: filters?.fetchFrom,\r\n                                                Todate: filters?.fetchTo\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                }\r\n                            ]}\r\n                        />\r\n\r\n                    </td>\r\n                </tr>\r\n\r\n                {open && (\r\n                    <>\r\n                        <tr>\r\n                            <td colSpan={7} className=\"bg-light fw-bold\">\r\n                                ERP {`(${ERP_Rows.length})`}\r\n                            </td>\r\n                        </tr>\r\n\r\n                        {ERP_Rows.map((item, index) => (\r\n                            <tr key={index}>\r\n                                <td>{Sno + '.1.' + (index + 1)}</td>\r\n                                <td>{item?.Voucher_Type}</td>\r\n                                <td>{item?.VoucherBreakUpCount}</td>\r\n                                <td>{NumberFormat(item?.Amount)}</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td className=\"p-0 text-center vctr\">\r\n                                    <Tooltip title={'Open ' + item?.Voucher_Type + ' Details'}>\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                navigate(item?.navLink, {\r\n                                                    state: {\r\n                                                        ...item,\r\n                                                        Fromdate: filters?.fetchFrom,\r\n                                                        Todate: filters?.fetchTo\r\n                                                    }\r\n                                                })\r\n                                            }}\r\n                                            className=\"icon-btn\"\r\n                                        >\r\n                                            <ArrowRight sx={{ fontSize: 'inherit' }} />\r\n                                        </button>\r\n                                    </Tooltip>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n\r\n                        <tr>\r\n                            <td colSpan={7} className=\"bg-light fw-bold\">\r\n                                TALLY {`(${Tally_Rows.length})`}\r\n                            </td>\r\n                        </tr>\r\n\r\n                        {Tally_Rows?.map((item, index) => (\r\n                            <tr key={index}>\r\n                                <td>{Sno + '.2.' + (index + 1)}</td>\r\n                                <td>{item?.Voucher_Type}</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>{item?.VoucherBreakUpCount}</td>\r\n                                <td>{NumberFormat(item?.Amount)}</td>\r\n                                <td className=\"p-0 text-center vctr\">\r\n                                    <Tooltip title={'Open ' + item?.Voucher_Type + ' Details'}>\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                navigate(item?.navLink, {\r\n                                                    state: {\r\n                                                        ...item,\r\n                                                        Fromdate: filters?.fetchFrom,\r\n                                                        Todate: filters?.fetchTo\r\n                                                    }\r\n                                                })\r\n                                            }}\r\n                                            className=\"icon-btn\"\r\n                                        >\r\n                                            <ArrowRight sx={{ fontSize: 'inherit' }} />\r\n                                        </button>\r\n                                    </Tooltip>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </>\r\n                )}\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card>\r\n                <div className=\"p-2 d-flex align-items-center flex-wrap border-bottom\">\r\n                    <h5 className=\"m-0 my-1 flex-grow-1 d-flex align-items-center flex-wrap\">\r\n                        <span className=\"mx-2\">Day Book</span>\r\n                        <LastSynedTime />\r\n                    </h5>\r\n                    <div>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={filters.Fromdate}\r\n                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                            className=\"cus-inpt w-auto p-1\"\r\n                        />\r\n                    </div>\r\n                    <span className=\"px-2\">To</span>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={filters.Todate}\r\n                        onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                        className=\"cus-inpt me-2 w-auto p-1\"\r\n                    />\r\n                    <IconButton\r\n                        onClick={() => {\r\n                            const updatedFilters = {\r\n                                Fromdate: filters?.Fromdate,\r\n                                Todate: filters?.Todate\r\n                            };\r\n                            updateQueryString(updatedFilters);\r\n                            closeDialog();\r\n                        }}\r\n                        variant=\"outlined\" size=\"small\"\r\n                    ><Search /></IconButton>\r\n                </div>\r\n                <CardContent>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered fa-13\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Sno</th>\r\n                                    <th>Voucher</th>\r\n                                    {/* <th>Voucher Count</th> */}\r\n                                    {/* <th>Total Amount</th> */}\r\n                                    <th>ERP Entries</th>\r\n                                    <th>ERP Amount</th>\r\n                                    <th>Tally Entries</th>\r\n                                    <th>Tally Amount</th>\r\n                                    <th>Detilas</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {dayBookData.map((item, index) => (\r\n                                    <RowComp key={index} row={item} Sno={index + 1} />\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DayBookOfERP;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'OpenInNew');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["createSvgIcon","_jsx","d","defaultFilters","Fromdate","ISOString","Todate","_ref","loadingOn","loadingOff","navigate","useNavigate","location","useLocation","query","URLSearchParams","search","user","getSessionUser","dayBookData","setDayBookData","useState","filters","setFilters","fetchFrom","fetchTo","filterDialog","refresh","useEffect","fetchLink","address","concat","headers","Company_id","then","data","success","finally","catch","e","console","error","queryFilters","get","isValidDate","pre","_objectSpread","RowComp","_ref2","row","Sno","open","setOpen","ERP_Rows","useMemo","toArray","groupedData","filter","item","stringCompare","dataSource","Tally_Rows","_jsxs","_Fragment","children","ModuleName","reduce","acc","Addition","VoucherBreakUpCount","NumberFormat","Amount","className","ButtonActions","buttonsData","name","onclick","icon","KeyboardArrowUp","sx","fontSize","KeyboardArrowDown","OpenInNew","_Tally_Rows$","navLink","state","_ERP_Rows$","colSpan","length","map","index","Voucher_Type","Tooltip","title","onClick","ArrowRight","Card","LastSynedTime","type","value","onChange","target","IconButton","newFilters","params","toString","replace","updateQueryString","variant","size","Search","CardContent","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","styles","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}
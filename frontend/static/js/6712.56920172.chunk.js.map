{"version":3,"file":"static/js/6712.56920172.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","Components/tablecolumn.js","Pages/Inventry/Processing/normalView.jsx","Pages/Inventry/Processing/listProcessing.jsx","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name]\r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign]\r\n * @property {string} [ColumnHeader]\r\n * @property {string} [tdClass]\r\n * @property {0|1} [isVisible]\r\n * @property {'left'|'right'|'center'} [align]\r\n * @property {boolean} [isCustomCell]\r\n * @property {(row: object) => JSX.Element} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name]\r\n * @property {JSX.Element} [icon]\r\n * @property {() => void} [onclick]\r\n * @property {boolean} [disabled]\r\n */\r\n\r\n/**\r\n * @typedef {Object} FilterableTableProps\r\n * @property {Array<Object>} [dataArray]\r\n * @property {Array<Column>} [columns]\r\n * @property {Function} [onClickFun]\r\n * @property {boolean} [isExpendable]\r\n * @property {JSX.Element} [expandableComp]\r\n * @property {number} [tableMaxHeight]\r\n * @property {number} [initialPageCount]\r\n * @property {boolean} [EnableSerialNumber]\r\n * @property {'small'|'medium'|'large'} [CellSize]\r\n * @property {boolean} [disablePagination]\r\n * @property {string} [title]\r\n * @property {boolean} [PDFPrintOption]\r\n * @property {boolean} [ExcelPrintOption]\r\n * @property {boolean} [maxHeightOption]\r\n * @property {JSX.Element} [ButtonArea]\r\n * @property {Array<Menu>} [MenuButtons]\r\n * @property {number} [bodyFontSizePx]\r\n * @property {number} [headerFontSizePx]\r\n */\r\n\r\n/**\r\n * @param {FilterableTableProps} props\r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (\r\n    field = '', \r\n    type = 'string', \r\n    ColumnHeader = '', \r\n    align = 'left', \r\n    verticalAlign = 'center', \r\n    isVisible = 1\r\n) => {\r\n    return {\r\n        isVisible: isVisible,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return val ? NumberFormat(val) : val;\r\n        case 'date':\r\n            return val ? LocalDate(val) : val;\r\n        case 'time':\r\n            return val ? LocalTime(val) : val;\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n\r\n                        const tdClass = (row, Field_Name, tdIndex) => (\r\n                            column?.tdClass ? ` ${column?.tdClass({ row, Field_Name, index: tdIndex })} ` : ''\r\n                        );\r\n\r\n                        const horizondalalignClass = column.align\r\n                            ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                            : '';\r\n\r\n                        const verticalAlignClass = column.verticalAlign\r\n                            ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class\r\n                            : ' vctr ';\r\n\r\n                        if (isColumnVisible && isCommonValue) {\r\n                            const foundEntry = Object.entries(row).find(([key]) => key === column.Field_Name);\r\n\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {foundEntry ? formatString(foundEntry[1], column?.Fied_Data) : '-'}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        if (isColumnVisible && isCustomCell) {\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ${horizondalalignClass} ${verticalAlignClass}`}\r\n                            >\r\n                                -\r\n                            </TableCell>\r\n                        );\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name)\r\n                                                    ? ' fw-bold border-end border-top p-2 appFont '\r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align\r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func,\r\n        tdClass: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n    formatString\r\n}","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import FilterableTable, { createCol, formatString } from \"../../../Components/filterableTable2\"\r\nimport { Addition, checkIsNumber, NumberFormat } from \"../../../Components/functions\";\r\n\r\n\r\nconst ProcessingView = ({ dataArray, ButtonArea }) => {\r\n\r\n    const calculateDifference = (sourceQty, destQty) => {\r\n        if (sourceQty === 0) return 0;\r\n\r\n        return ((sourceQty - destQty) / sourceQty) * 100;\r\n    };\r\n\r\n    return (\r\n        <FilterableTable\r\n            headerFontSizePx={11}\r\n            bodyFontSizePx={11}\r\n            dataArray={dataArray}\r\n            ButtonArea={ButtonArea ? ButtonArea : <></>}\r\n            title=\"PRODUCTIONS\"\r\n            maxHeightOption\r\n            EnableSerialNumber\r\n            columns={\r\n                [...[\r\n                    { col: 'Process_date', type: 'date', title: 'Date' },\r\n                    { col: 'PR_Inv_Id', type: 'string', title: 'Vch.No' },\r\n                    { col: 'VoucherTypeGet', type: 'string', title: 'Voucher' },\r\n                    { col: 'StartDateTime', type: 'time', title: 'Start' },\r\n                    { col: 'EndDateTime', type: 'time', title: 'End' },\r\n                    { col: 'BranchName', type: 'string', title: 'Branch' },\r\n                    { col: 'GodownNameGet', type: 'string', title: 'Location' },\r\n                ].map(col => createCol(col.col, col.type, col.title)),\r\n                {\r\n                    isVisible: 1,\r\n                    ColumnHeader: 'Difference (%)',\r\n                    isCustomCell: true,\r\n                    Cell: ({ row }) => {\r\n                        const sourceQtySum = row?.SourceDetails?.reduce((acc, source) => Addition(acc, source.Sour_Qty), 0);\r\n                        const destinationQtySum = row?.DestinationDetails?.reduce((acc, destination) => Addition(acc, destination.Dest_Qty), 0);\r\n                        return NumberFormat(calculateDifference(sourceQtySum, destinationQtySum));\r\n                    }\r\n                },\r\n                ]\r\n            }\r\n            isExpendable={true}\r\n            expandableComp={({ row }) => (\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 p-1\">\r\n                        <FilterableTable\r\n                            title=\"Source\"\r\n                            headerFontSizePx={11}\r\n                            bodyFontSizePx={11}\r\n                            EnableSerialNumber\r\n                            dataArray={row?.SourceDetails}\r\n                            columns={[\r\n                                createCol('Product_Name', 'string', 'Item'),\r\n                                createCol('Godown_Name', 'string', 'Godown'),\r\n                                createCol('Sour_Qty', 'number', 'QTY'),\r\n                                // createCol('Sour_Unit', 'string', 'Unit'),\r\n                                // createCol('Sour_Rate', 'number', 'Rate'),\r\n                                // createCol('Sour_Amt', 'number', 'Amount'),\r\n                            ]}\r\n                            disablePagination\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-6 p-1\">\r\n                        <FilterableTable\r\n                            title=\"Destination\"\r\n                            headerFontSizePx={11}\r\n                            bodyFontSizePx={11}\r\n                            EnableSerialNumber\r\n                            dataArray={row?.DestinationDetails}\r\n                            columns={[\r\n                                createCol('Product_Name', 'string', 'Item'),\r\n                                createCol('Godown_Name', 'string', 'Godown'),\r\n                                createCol('Dest_Qty', 'number', 'QTY'),\r\n                                // createCol('Dest_Unit', 'string', 'Unit'),\r\n                                // createCol('Dest_Rate', 'number', 'Rate'),\r\n                                // createCol('Dest_Amt', 'number', 'Amount'),\r\n                            ]}\r\n                            disablePagination\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProcessingView;","import { useEffect, useMemo, useState } from \"react\";\r\nimport { checkIsNumber, getSessionFiltersByPageId, isEqualNumber, ISOString, isValidDate, setSessionFilters, Subraction, toArray } from '../../../Components/functions';\r\nimport FilterableTable, { formatString } from '../../../Components/filterableTable2';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tooltip } from \"@mui/material\";\r\nimport { Edit, FilterAlt, Search, ToggleOff, ToggleOn } from \"@mui/icons-material\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport Select from 'react-select';\r\nimport ProcessingView from \"./normalView\";\r\n\r\n\r\nconst transformStockJournalData = (data) => {\r\n    let transformedData = [];\r\n\r\n    data.forEach((entry, entryIndex) => {\r\n        const maxRows = Math.max(entry?.SourceDetails?.length, entry?.DestinationDetails?.length, entry?.StaffsDetails?.length);\r\n\r\n        const totalSourceQty = entry.SourceDetails.reduce((sum, item) => sum + (item.Sour_Qty || 0), 0);\r\n        const totalDestinationQty = entry.DestinationDetails.reduce((sum, item) => sum + (item.Dest_Qty || 0), 0);\r\n\r\n        const diffPercentage = totalSourceQty !== 0\r\n            ? ((totalDestinationQty - totalSourceQty) / totalSourceQty) * 100\r\n            : 0;\r\n\r\n        transformedData.push({\r\n            SNo: entryIndex + 1,\r\n            Date: ISOString(entry.Process_date),\r\n            VoucherType: entry.VoucherTypeGet,\r\n            VoucherNo: entry.PR_Inv_Id,\r\n            SourceItem: \"\",\r\n            SourceGodown: \"\",\r\n            SourceQty: totalSourceQty,\r\n            DestinationItem: \"\",\r\n            DestinationGodown: \"\",\r\n            DestinationQty: totalDestinationQty,\r\n            DifferentQTY: Subraction(totalDestinationQty, totalSourceQty),\r\n            DifferentPercentage: diffPercentage,\r\n            Staffs: \"\",\r\n            processObjecet: entry\r\n        });\r\n\r\n        for (let i = 0; i < maxRows; i++) {\r\n            transformedData.push({\r\n                SNo: '',\r\n                Date: '',\r\n                VoucherType: '',\r\n                VoucherNo: '',\r\n                SourceItem: entry.SourceDetails[i]?.Product_Name || \"\",\r\n                SourceGodown: entry.SourceDetails[i]?.Godown_Name || \"\",\r\n                SourceQty: entry.SourceDetails[i]?.Sour_Qty || \"\",\r\n                DestinationItem: entry.DestinationDetails[i]?.Product_Name || \"\",\r\n                DestinationGodown: entry.DestinationDetails[i]?.Godown_Name || \"\",\r\n                DestinationQty: entry.DestinationDetails[i]?.Dest_Qty || \"\",\r\n                DifferentQTY: \"\",\r\n                DifferentPercentage: \"\",\r\n                Staffs: entry.StaffsDetails[i]?.EmpNameGet || \"\",\r\n            });\r\n        }\r\n    });\r\n\r\n    return transformedData;\r\n};\r\n\r\nconst StockMangement = ({ loadingOn, loadingOff, EditRights, AddRights, DeleteRights, pageID }) => {\r\n    const sessionValue = sessionStorage.getItem('filterValues');\r\n    const defaultFiltes = {\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        sourceGodown: \"\",\r\n        destinationGodown: \"\",\r\n        VoucherType: { label: 'Select', value: '' },\r\n        Branch: { label: 'Select', value: '' },\r\n        filterItems: [],\r\n    }\r\n    const navigate = useNavigate();\r\n    const [responseData, setResponseData] = useState([]);\r\n    const [godowns, setGodowns] = useState([]);\r\n    const [productUsedInProcess, setProductUsedInProcess] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        ...defaultFiltes,\r\n        filterDialog: false,\r\n        refresh: false,\r\n        view: 'report',\r\n        pagination: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `dataEntry/godownLocationMaster`\r\n        }).then(data => {\r\n            const godownLocations = (data.success ? data.data : []).sort(\r\n                (a, b) => String(a?.Godown_Name).localeCompare(b?.Godown_Name)\r\n            );\r\n            setGodowns(godownLocations);\r\n        });\r\n\r\n        fetchLink({\r\n            address: `inventory/stockProcessing/itemsUsed`\r\n        }).then(data => {\r\n            setProductUsedInProcess(toArray(data.data));\r\n        }).catch(e => console.error(e));\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        const otherSessionFiler = getSessionFiltersByPageId(pageID);\r\n        const {\r\n            Fromdate, Todate,\r\n            sourceGodown = defaultFiltes.sourceGodown,\r\n            destinationGodown = defaultFiltes.destinationGodown,\r\n            VoucherType = defaultFiltes.VoucherType,\r\n            Branch = defaultFiltes.Branch,\r\n            filterItems = defaultFiltes.filterItems,\r\n        } = otherSessionFiler;\r\n\r\n        setFilters(pre => ({\r\n            ...pre,\r\n            Fromdate: Fromdate,\r\n            Todate: Todate,\r\n            sourceGodown, destinationGodown,\r\n            VoucherType, Branch, filterItems\r\n        }));\r\n\r\n    }, [sessionValue, pageID]);\r\n\r\n    useEffect(() => {\r\n        const otherSessionFiler = getSessionFiltersByPageId(pageID);\r\n        const {\r\n            Fromdate, Todate,\r\n            filterItems = defaultFiltes.filterItems\r\n        } = otherSessionFiler;\r\n\r\n        const itemId = toArray(filterItems).map(\r\n            val => val.value\r\n        ).filter(fil => checkIsNumber(fil))\r\n\r\n        fetchLink({\r\n            address: `inventory/stockProcessing/getWithFilters`,\r\n            method: 'POST',\r\n            bodyData: {\r\n                Fromdate, Todate, filterItems: itemId\r\n            },\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setResponseData(data.data)\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n    }, [sessionValue, pageID]);\r\n\r\n    const closeDialog = () => {\r\n        setFilters({\r\n            ...filters,\r\n            filterDialog: false,\r\n        });\r\n    }\r\n\r\n    const uniqueVoucher = useMemo(() => {\r\n        const allVoucher = responseData.map(pro => pro?.VoucherTypeGet);\r\n        return [...new Set(allVoucher)].map((name) => ({\r\n            value: name,\r\n            label: name,\r\n        }));\r\n    }, [responseData]);\r\n\r\n    const uniqueBranch = useMemo(() => {\r\n        return [...new Set(responseData.map(sj => sj.BranchName))].map(branch => ({ value: branch, label: branch }));\r\n    }, [responseData]);\r\n\r\n    const filteredData = useMemo(() => {\r\n        return responseData.filter((stj) => {\r\n            const hasFromGodownMatch = filters.sourceGodown\r\n                ? stj.SourceDetails.some((product) =>\r\n                    isEqualNumber(filters.sourceGodown, product.Sour_Goodown_Id)\r\n                )\r\n                : true;\r\n\r\n            const hasToGodownMatch = filters.destinationGodown\r\n                ? stj.DestinationDetails.some((product) =>\r\n                    isEqualNumber(filters.destinationGodown, product.Dest_Goodown_Id)\r\n                )\r\n                : true;\r\n\r\n            const hasVoucherMatch = filters.VoucherType?.value\r\n                ? filters.VoucherType.value === stj.VoucherTypeGet\r\n                : true;\r\n\r\n            const hasBranchMatch = filters.Branch?.value\r\n                ? filters.Branch.value === stj.BranchName\r\n                : true;\r\n\r\n            return (\r\n                hasFromGodownMatch &&\r\n                hasToGodownMatch &&\r\n                hasVoucherMatch &&\r\n                hasBranchMatch\r\n            );\r\n        });\r\n    }, [\r\n        filters.sourceGodown,\r\n        filters.destinationGodown,\r\n        filters.VoucherType,\r\n        filters.Branch,\r\n        responseData\r\n    ]);\r\n\r\n    const displayData = useMemo(() => {\r\n        return (filters.sourceGodown || filters.destinationGodown || filters.VoucherType.value || filters.Branch.value)\r\n            ? transformStockJournalData(filteredData)\r\n            : transformStockJournalData(responseData)\r\n    }, [filters.sourceGodown, filters.destinationGodown, filters.VoucherType, filters.Branch, filteredData, responseData]);\r\n\r\n    const ButtonArea = () => (\r\n        <>\r\n            <Tooltip title='Filters'>\r\n                <IconButton\r\n                    size=\"small\"\r\n                    onClick={() => setFilters({ ...filters, filterDialog: true })}\r\n                ><FilterAlt /></IconButton>\r\n            </Tooltip>\r\n\r\n            {AddRights && (\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    onClick={() => navigate('create')}\r\n                >Add</Button>\r\n            )}\r\n\r\n            <select\r\n                value={filters.view} className=\"cus-inpt p-1 py-2 mx-1 w-auto\"\r\n                onChange={e => setFilters(pre => ({ ...pre, view: e.target.value }))}\r\n            >\r\n                <option value=\"report\">Report</option>\r\n                <option value=\"listing\">Listing</option>\r\n            </select>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {filters.view === 'report' && (\r\n                <FilterableTable\r\n                    headerFontSizePx={11}\r\n                    bodyFontSizePx={11}\r\n                    dataArray={displayData}\r\n                    title=\"PRODUCTIONS\"\r\n                    maxHeightOption\r\n                    ButtonArea={<ButtonArea />}\r\n                    MenuButtons={[{\r\n                        name: 'Pagination',\r\n                        icon: filters.pagination\r\n                            ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                            : <ToggleOff fontSize=\"small\" />,\r\n                        onclick: () => setFilters(pre => ({ ...pre, pagination: !pre.pagination }))\r\n                    }]}\r\n                    ExcelPrintOption\r\n                    PDFPrintOption\r\n                    disablePagination={!filters.pagination}\r\n                    columns={[...[\r\n                        { col: 'SNo', type: 'string', title: 'Sno' },\r\n                        { col: 'Date', type: 'date', title: 'Date' },\r\n                        { col: 'VoucherNo', type: 'string', title: 'Vch.No' },\r\n                        { col: 'VoucherType', type: 'string', title: 'Voucher' },\r\n                        { col: 'SourceItem', type: 'string', title: 'Consumption' },\r\n                        { col: 'SourceGodown', type: 'string', title: 'From' },\r\n                        { col: 'SourceQty', type: 'number', title: 'C.Tonnage' },\r\n                        { col: 'DestinationItem', type: 'string', title: 'Productions' },\r\n                        { col: 'DestinationGodown', type: 'string', title: 'To' },\r\n                        { col: 'DestinationQty', type: 'number', title: 'P.Tonnage' },\r\n                        { col: 'DifferentQTY', type: 'number', title: 'Diff' },\r\n                        { col: 'DifferentPercentage', type: 'number', title: 'Diff (%)' },\r\n                        { col: 'Staffs', type: 'string', title: 'Staffs' },\r\n                    ].map(cel => ({\r\n                        isVisible: 1,\r\n                        ColumnHeader: cel.title,\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => formatString(row[cel.col], cel.type),\r\n                        tdClass: ({ row }) => checkIsNumber(row?.SNo) ? 'fw-bold bg-light' : ''\r\n                    })), {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Action',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => {\r\n                            return (row?.processObjecet && EditRights) && (\r\n                                <>\r\n                                    <IconButton size=\"small\" onClick={() => {\r\n                                        navigate('create', {\r\n                                            state: {\r\n                                                ...row.processObjecet,\r\n                                                SourceDetails: Array.isArray(row?.processObjecet?.SourceDetails) ? row?.processObjecet?.SourceDetails : [],\r\n                                                DestinationDetails: Array.isArray(row?.processObjecet?.DestinationDetails) ? row?.processObjecet?.DestinationDetails : [],\r\n                                                StaffsDetails: Array.isArray(row?.processObjecet?.StaffsDetails) ? row?.processObjecet?.StaffsDetails : [],\r\n                                                isEditable: true\r\n                                            }\r\n                                        })\r\n                                    }}>\r\n                                        <Edit className=\"fa-20\" />\r\n                                    </IconButton>\r\n                                </>\r\n                            )\r\n                        }\r\n                    }\r\n                    ]}\r\n                />\r\n            )}\r\n\r\n            {filters.view === 'listing' && (\r\n                <ProcessingView dataArray={filteredData} ButtonArea={<ButtonArea />} />\r\n            )}\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td className=\"py-1\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt p-2\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td className=\"py-1\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt p-2\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Source Godown</td>\r\n                                    <td className=\"py-1\">\r\n                                        <select\r\n                                            value={filters.sourceGodown}\r\n                                            onChange={e => setFilters(pre => ({ ...pre, sourceGodown: e.target.value }))}\r\n                                            className=\"cus-inpt p-2\"\r\n                                        >\r\n                                            <option value=\"\">All Godown</option>\r\n                                            {godowns.map((g, gi) => (\r\n                                                <option value={g.Godown_Id} key={gi}>{g.Godown_Name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Destination Godown</td>\r\n                                    <td className=\"py-1\">\r\n                                        <select\r\n                                            value={filters.destinationGodown}\r\n                                            onChange={e => setFilters(pre => ({ ...pre, destinationGodown: e.target.value }))}\r\n                                            className=\"cus-inpt p-2\"\r\n                                        >\r\n                                            <option value=\"\">All Godown</option>\r\n                                            {godowns.map((g, gi) => (\r\n                                                <option value={g.Godown_Id} key={gi}>{g.Godown_Name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Voucher</td>\r\n                                    <td className=\"py-1\">\r\n                                        <Select\r\n                                            value={filters.VoucherType}\r\n                                            onChange={(selectedOptions) =>\r\n                                                setFilters((prev) => ({ ...prev, VoucherType: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueVoucher}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select Voucher\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Branch</td>\r\n                                    <td className=\"py-1\">\r\n                                        <Select\r\n                                            value={filters.Branch}\r\n                                            onChange={(selectedOptions) =>\r\n                                                setFilters((prev) => ({ ...prev, Branch: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueBranch}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select Branch\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Items</td>\r\n                                    <td className=\"py-1\">\r\n                                        <Select\r\n                                            value={filters.filterItems}\r\n                                            onChange={(selectedOptions) =>\r\n                                                setFilters((prev) => ({ ...prev, filterItems: selectedOptions }))\r\n                                            }\r\n                                            isMulti={true}\r\n                                            menuPortalTarget={document.body}\r\n                                            options={productUsedInProcess}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select Items\"}\r\n                                            maxMenuHeight={300}\r\n                                            closeMenuOnSelect={false}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            closeDialog();\r\n                            setSessionFilters({\r\n                                Fromdate: filters?.Fromdate,\r\n                                Todate: filters.Todate,\r\n                                pageID,\r\n                                sourceGodown: filters.sourceGodown,\r\n                                destinationGodown: filters.destinationGodown,\r\n                                VoucherType: filters.VoucherType,\r\n                                Branch: filters.Branch,\r\n                                filterItems: filters.filterItems,\r\n                            });\r\n                        }}\r\n                        startIcon={<Search />}\r\n                        variant=\"outlined\"\r\n                    >Search</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StockMangement;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","key","Field_Name","createCol","arguments","length","undefined","Fied_Data","align","verticalAlign","ButtonActions","_ref","buttonsData","ToolTipText","anchorEl","setAnchorEl","useState","popOverOpen","Boolean","_jsxs","_Fragment","children","_jsx","Tooltip","title","IconButton","onClick","event","currentTarget","className","size","MoreVert","Popover","open","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","onclick","disabled","ListItemIcon","icon","ListItemText","name","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","FilterableTable","_ref2","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","type","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","RowComp","_ref3","setOpen","fontSize","Fragment","TableRow","TableCell","sx","pre","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isEqualNumber","isCommonValue","tdClass","tdIndex","horizondalalignClass","find","verticalAlignClass","foundEntry","Object","entries","_ref4","console","log","colSpan","Number","Card","component","Paper","ToggleOn","color","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","backgroundColor","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","value","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","customTableStyles","table","style","width","headCells","customSelectStyles","menu","provided","state","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","companyDetails","dataBase","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","col","_row$SourceDetails","_row$DestinationDetai","sourceQtySum","SourceDetails","reduce","acc","source","Addition","Sour_Qty","destinationQtySum","DestinationDetails","destination","Dest_Qty","destQty","sourceQty","calculateDifference","transformStockJournalData","transformedData","entry","entryIndex","_entry$SourceDetails","_entry$DestinationDet","_entry$StaffsDetails","maxRows","Math","max","StaffsDetails","totalSourceQty","sum","item","totalDestinationQty","diffPercentage","push","SNo","Date","ISOString","Process_date","VoucherType","VoucherTypeGet","VoucherNo","PR_Inv_Id","SourceItem","SourceGodown","SourceQty","DestinationItem","DestinationGodown","DestinationQty","DifferentQTY","Subraction","DifferentPercentage","Staffs","processObjecet","_entry$SourceDetails$","_entry$SourceDetails$2","_entry$SourceDetails$3","_entry$DestinationDet2","_entry$DestinationDet3","_entry$DestinationDet4","_entry$StaffsDetails$","Product_Name","Godown_Name","EmpNameGet","loadingOn","loadingOff","EditRights","AddRights","DeleteRights","pageID","sessionValue","sessionStorage","getItem","defaultFiltes","Fromdate","Todate","sourceGodown","destinationGodown","label","Branch","filterItems","navigate","useNavigate","responseData","setResponseData","godowns","setGodowns","productUsedInProcess","setProductUsedInProcess","filters","setFilters","filterDialog","refresh","view","pagination","useEffect","fetchLink","then","godownLocations","success","localeCompare","toArray","catch","otherSessionFiler","getSessionFiltersByPageId","itemId","fil","checkIsNumber","method","bodyData","closeDialog","uniqueVoucher","useMemo","allVoucher","pro","uniqueBranch","sj","BranchName","branch","filteredData","stj","_filters$VoucherType","_filters$Branch","hasFromGodownMatch","some","product","Sour_Goodown_Id","hasToGodownMatch","Dest_Goodown_Id","hasVoucherMatch","hasBranchMatch","displayData","FilterAlt","Button","onChange","cel","_row$processObjecet","_row$processObjecet2","_row$processObjecet3","_row$processObjecet4","_row$processObjecet5","_row$processObjecet6","isArray","isEditable","Edit","ProcessingView","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","g","gi","Godown_Id","Select","selectedOptions","prev","menuPortalTarget","document","options","styles","isSearchable","placeholder","maxMenuHeight","isMulti","closeMenuOnSelect","DialogActions","setSessionFilters","startIcon","Search","createSvgIcon","d"],"sourceRoot":""}
{"version":3,"file":"static/js/7332.22746b19.chunk.js","mappings":"mMAIA,SAAeA,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,4SACD,wB,yBCFJ,MAAMC,EAASC,GAAQC,MAAMC,QAAQF,GAExBG,EAAuBC,IAAsC,IAArC,KAAEC,EAAO,GAAE,OAAEC,EAAS,SAASF,EAEhE,OAAQE,GACJ,IAAK,QACL,IAAK,iBACL,IAAK,eACD,OACQ,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAME,QAAO,CAACC,EAAKC,KACf,IAAKR,MAAMC,QAAY,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMC,aAAc,OAAOF,EAE9C,MAAMG,EAAcF,EAAKC,YAAYE,KAAIC,IAAC,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnCJ,GAAC,IACJK,aAAc,CACVC,GAAQ,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMU,GACVC,IAAS,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMW,IACXC,OAAY,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAMY,OACdC,MAAW,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMa,MACbC,SAAc,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAMc,SAChBC,SAAuB,QAAfV,EAAEL,EAAKe,gBAAQ,IAAAV,EAAAA,EAAI,GAC3BW,WAAYhB,EAAKgB,WACjBC,UAAWjB,EAAKiB,UAChBC,UAAWlB,EAAKkB,UAChBjB,YAAiB,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMC,YACnBkB,YAAiB,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,YACnBC,aAAc9B,EAAMU,EAAKoB,cAAgBpB,EAAKoB,aAAe,GAC7DC,kBAAmB/B,EAAMU,EAAKqB,mBAAqBrB,EAAKqB,kBAAoB,GAC5EC,gBAAiBhC,EAAMU,EAAKsB,iBAAmBtB,EAAKsB,gBAAkB,GACtEC,oBAAqBjC,EAAMU,EAAKuB,qBAAuBvB,EAAKuB,oBAAsB,GAClFC,YAAaxB,EAAKwB,YAClBC,qBAA0B,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,qBAC5BC,QAAqB,QAAdpB,EAAEN,EAAK0B,eAAO,IAAApB,EAAAA,EAAI,GACzBqB,UAAW3B,EAAK2B,UAChBC,aAAc5B,EAAK4B,aACnBC,QAAqB,QAAdtB,EAAEP,EAAK6B,eAAO,IAAAtB,EAAAA,EAAI,GACzBuB,UAAW9B,EAAK8B,UAChBC,iBAAkB/B,EAAK+B,iBACvBC,QAAShC,EAAKgC,QACdC,iBAAkBjC,EAAKiC,iBACvBC,YAAalC,EAAKkC,YAClBC,eAAgBnC,EAAKmC,eACrBC,2BAA2BC,EAAAA,EAAAA,IAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,2BAC1CX,sBAAsBY,EAAAA,EAAAA,IAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,wBACxC,IAGL,OAAO1B,EAAIuC,OAAOpC,EAAY,GAC/B,IAGX,IAAK,gBACL,IAAK,kBACD,OACQ,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAME,QAAO,CAACC,EAAKC,KAAU,IAADuC,EACxB,IAAK/C,MAAMC,QAAY,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMC,aAAc,OAAOF,EAE9C,MAAMG,EAAkB,OAAJF,QAAI,IAAJA,GAAiB,QAAbuC,EAAJvC,EAAMC,mBAAW,IAAAsC,OAAb,EAAJA,EAAmBC,QAAOC,IAAQ,IAADC,EACjD,MACMC,GADsB,OAAJ3C,QAAI,IAAJA,GAAqB,QAAjB0C,EAAJ1C,EAAMsB,uBAAe,IAAAoB,OAAjB,EAAJA,EAAuBF,QAAOI,IAAOC,EAAAA,EAAAA,IAAcD,EAAIE,OAAW,OAAHL,QAAG,IAAHA,OAAG,EAAHA,EAAKK,WACxDhD,QAAO,CAACiD,EAAKC,KAAaC,EAAAA,EAAAA,IAASF,EAAa,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUE,SAAS,GAC/F,OACIC,OAAOR,GAAeQ,OAAU,OAAHV,QAAG,IAAHA,OAAG,EAAHA,EAAKS,UAC/BE,EAAAA,EAAAA,IAAepD,EAAKmB,gBAAiBiC,EAAAA,EAAAA,IAAe,WAAW,IAEvEjD,KAAIC,IAAC,IAAAiD,EAAAC,EAAAC,EAAA,OAAA/C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDJ,GAAC,IACJK,aAAc,CACVC,GAAQ,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMU,GACVC,IAAS,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMW,IACXC,OAAY,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAMY,OACdC,MAAW,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMa,MACbC,SAAc,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAMc,SAChBC,SAAuB,QAAfsC,EAAErD,EAAKe,gBAAQ,IAAAsC,EAAAA,EAAI,GAC3BrC,WAAYhB,EAAKgB,WACjBC,UAAWjB,EAAKiB,UAChBC,UAAWlB,EAAKkB,UAChBjB,YAAiB,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMC,YACnBkB,YAAiB,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,YACnBC,aAAc9B,EAAMU,EAAKoB,cAAgBpB,EAAKoB,aAAe,GAC7DC,kBAAmB/B,EAAMU,EAAKqB,mBAAqBrB,EAAKqB,kBAAoB,GAC5EC,gBAAiBhC,EAAMU,EAAKsB,iBAAmBtB,EAAKsB,gBAAkB,GACtEC,oBAAqBjC,EAAMU,EAAKuB,qBAAuBvB,EAAKuB,oBAAsB,GAClFC,YAAaxB,EAAKwB,YAClBC,qBAA0B,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,qBAC5BC,QAAqB,QAAd4B,EAAEtD,EAAK0B,eAAO,IAAA4B,EAAAA,EAAI,GACzB3B,UAAW3B,EAAK2B,UAChBC,aAAc5B,EAAK4B,aACnBC,QAAqB,QAAd0B,EAAEvD,EAAK6B,eAAO,IAAA0B,EAAAA,EAAI,GACzBzB,UAAW9B,EAAK8B,UAChBC,iBAAkB/B,EAAK+B,iBACvBC,QAAShC,EAAKgC,QACdC,iBAAkBjC,EAAKiC,iBACvBC,YAAalC,EAAKkC,YAClBC,eAAgBnC,EAAKmC,eACrBC,2BAA2BC,EAAAA,EAAAA,IAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,2BAC1CX,sBAAsBY,EAAAA,EAAAA,IAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,wBACxC,IAGL,OAAO1B,EAAIuC,OAAOpC,EAAY,GAC/B,IAGX,IAAK,gBACD,OACQ,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAME,QAAO,CAACC,EAAKC,KAAU,IAADwD,EACxB,IAAKhE,MAAMC,QAAY,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMC,aAAc,OAAOF,EAE9C,MAAMG,EAAkB,OAAJF,QAAI,IAAJA,GAAiB,QAAbwD,EAAJxD,EAAMC,mBAAW,IAAAuD,OAAb,EAAJA,EAAmBhB,QAAOC,IAAQ,IAADgB,EACjD,MACMd,GADsB,OAAJ3C,QAAI,IAAJA,GAAqB,QAAjByD,EAAJzD,EAAMsB,uBAAe,IAAAmC,OAAjB,EAAJA,EAAuBjB,QAAOI,IAAOC,EAAAA,EAAAA,IAAcD,EAAIE,OAAW,OAAHL,QAAG,IAAHA,OAAG,EAAHA,EAAKK,WACxDhD,QAAO,CAACiD,EAAKC,KAAaC,EAAAA,EAAAA,IAASF,EAAa,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUE,SAAS,GAC/F,OAAOC,OAAOR,IAAgBQ,OAAU,OAAHV,QAAG,IAAHA,OAAG,EAAHA,EAAKS,OAAO,IAClD/C,KAAIC,IAAC,IAAAsD,EAAAC,EAAAC,EAAA,OAAApD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDJ,GAAC,IACJK,aAAc,CACVC,GAAQ,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMU,GACVC,IAAS,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMW,IACXC,OAAY,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAMY,OACdC,MAAW,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMa,MACbC,SAAc,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAMc,SAChBC,SAAuB,QAAf2C,EAAE1D,EAAKe,gBAAQ,IAAA2C,EAAAA,EAAI,GAC3B1C,WAAYhB,EAAKgB,WACjBC,UAAWjB,EAAKiB,UAChBC,UAAWlB,EAAKkB,UAChBjB,YAAiB,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMC,YACnBkB,YAAiB,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,YACnBC,aAAc9B,EAAMU,EAAKoB,cAAgBpB,EAAKoB,aAAe,GAC7DC,kBAAmB/B,EAAMU,EAAKqB,mBAAqBrB,EAAKqB,kBAAoB,GAC5EC,gBAAiBhC,EAAMU,EAAKsB,iBAAmBtB,EAAKsB,gBAAkB,GACtEC,oBAAqBjC,EAAMU,EAAKuB,qBAAuBvB,EAAKuB,oBAAsB,GAClFC,YAAaxB,EAAKwB,YAClBC,qBAA0B,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,qBAC5BC,QAAqB,QAAdiC,EAAE3D,EAAK0B,eAAO,IAAAiC,EAAAA,EAAI,GACzBhC,UAAW3B,EAAK2B,UAChBC,aAAc5B,EAAK4B,aACnBC,QAAqB,QAAd+B,EAAE5D,EAAK6B,eAAO,IAAA+B,EAAAA,EAAI,GACzB9B,UAAW9B,EAAK8B,UAChBC,iBAAkB/B,EAAK+B,iBACvBC,QAAShC,EAAKgC,QACdC,iBAAkBjC,EAAKiC,iBACvBC,YAAalC,EAAKkC,YAClBC,eAAgBnC,EAAKmC,eACrBC,2BAA2BC,EAAAA,EAAAA,IAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,2BAC1CX,sBAAsBY,EAAAA,EAAAA,IAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,wBACxC,IAGL,OAAO1B,EAAIuC,OAAOpC,EAAY,GAC/B,IAGX,IAAK,gBACL,IAAK,iBACD,OACQ,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAME,QAAO,CAACC,EAAKC,KACf,IAAKR,MAAMC,QAAY,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMsB,iBAAkB,OAAOvB,EAElD,MAAMuB,EAAkBtB,EAAKsB,gBAAgBnB,KAAIC,IAAC,IAAAyD,EAAAC,EAAAC,EAAA,OAAAvD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3CJ,GAAC,IACJK,aAAc,CACVC,GAAQ,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMU,GACVC,IAAS,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMW,IACXC,OAAY,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAMY,OACdC,MAAW,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMa,MACbC,SAAc,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAMc,SAChBC,SAAuB,QAAf8C,EAAE7D,EAAKe,gBAAQ,IAAA8C,EAAAA,EAAI,GAC3B7C,WAAYhB,EAAKgB,WACjBC,UAAWjB,EAAKiB,UAChBC,UAAWlB,EAAKkB,UAChBjB,YAAaX,EAAMU,EAAKC,aAAeD,EAAKC,YAAc,GAC1DmB,aAAc9B,EAAMU,EAAKoB,cAAgBpB,EAAKoB,aAAe,GAC7DC,kBAAmB/B,EAAMU,EAAKqB,mBAAqBrB,EAAKqB,kBAAoB,GAC5EC,gBAAiBhC,EAAMU,EAAKsB,iBAAmBtB,EAAKsB,gBAAkB,GACtEC,oBAAqBjC,EAAMU,EAAKuB,qBAAuBvB,EAAKuB,oBAAsB,GAClFJ,YAAiB,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,YACnBK,YAAaxB,EAAKwB,YAClBC,qBAA0B,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,qBAC5BC,QAAqB,QAAdoC,EAAE9D,EAAK0B,eAAO,IAAAoC,EAAAA,EAAI,GACzBnC,UAAW3B,EAAK2B,UAChBC,aAAc5B,EAAK4B,aACnBC,QAAqB,QAAdkC,EAAE/D,EAAK6B,eAAO,IAAAkC,EAAAA,EAAI,GACzBjC,UAAW9B,EAAK8B,UAChBC,iBAAkB/B,EAAK+B,iBACvBC,QAAShC,EAAKgC,QACdC,iBAAkBjC,EAAKiC,iBACvBC,YAAalC,EAAKkC,YAClBC,eAAgBnC,EAAKmC,eACrBC,2BAA2BC,EAAAA,EAAAA,IAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,2BAC1CX,sBAAsBY,EAAAA,EAAAA,IAAa,OAAJrC,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,wBACxC,IAGL,OAAO1B,EAAIuC,OAAOhB,EAAgB,GACnC,IAGX,IAAK,SACD,OAAO1B,EACX,IAAK,iBACD,OAAOA,EAAKE,QAAO,CAACC,EAAKC,KAAU,IAADgE,EAE9B,OAAKxE,MAAMC,QAAY,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMsB,mBAAoB2C,EAAAA,EAAAA,IAAmB,OAAJjE,QAAI,IAAJA,GAAqB,QAAjBgE,EAAJhE,EAAMsB,uBAAe,IAAA0C,OAAjB,EAAJA,EAAuBE,OAAQ,GAAWnE,EAE/FA,EAAIuC,OAAOtC,EAAK,GAExB,IACP,IAAK,iBACD,OAAOJ,EAAKE,QAAO,CAACC,EAAKC,KAAU,IAADmE,EAE9B,OAAK3E,MAAMC,QAAY,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMsB,mBAAoBuB,EAAAA,EAAAA,IAAkB,OAAJ7C,QAAI,IAAJA,GAAqB,QAAjBmE,EAAJnE,EAAMsB,uBAAe,IAAA6C,OAAjB,EAAJA,EAAuBD,OAAQ,GAAWnE,EAE9FA,EAAIuC,OAAOtC,EAAK,GAExB,IACP,IAAK,mBACD,OAAOJ,EAAKE,QAAO,CAACC,EAAKC,IAEK,eAAlB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,aAAoCpB,EAEvCA,EAAIuC,OAAOtC,IAEnB,IACP,IAAK,sBACD,OAAOJ,EAAKE,QAAO,CAACC,EAAKC,IAEK,eAAlB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,aAAoCpB,EAEvCA,EAAIuC,OAAOtC,IAEnB,IACP,QACI,MAAO,GACf,EAGEoE,EACQ,8CADRA,EAES,iDAFTA,EAGS,oDAHTA,EAIQ,2DAGRC,EAAeC,IAEjB,OAAQA,GACJ,IAAK,YAAa,OAAOF,EACzB,IAAK,aAAc,OAAOA,EAC1B,IAAK,YAAa,OAAOA,EACzB,IAAK,WAAY,OAAOA,EACxB,QAAS,MAAO,GACpB,EAGEG,EAAYA,CAACC,EAAOC,EAAMC,KAC5BlE,EAAAA,EAAAA,GAAA,CACImE,UAAW,EACXC,WAAYJ,EACZK,UAAWJ,GACPC,GAAgB,CAAEA,iBAejBI,EAAiBC,IASvB,IATwB,YAC3B5D,EAAc,QAAO,QACrB6D,EAAO,gBACPC,EAAe,WACfC,EAAU,SACVC,EAAQ,WACRC,EAAU,aACVC,EAAY,UACZC,GACHP,EAGmBR,EAAU,UAAW,SAAU,YAA/C,MAEI5C,EAAY,CACRgD,UAAW,EACXD,aAAc,SACda,cAAc,EACdC,KAAMC,IAAc,IAADC,EAAA,IAAZ,IAAEC,GAAKF,EACV,OAAU,OAAHE,QAAG,IAAHA,GAAiB,QAAdD,EAAHC,EAAKvE,oBAAY,IAAAsE,OAAd,EAAHA,EAAmBlD,QAAOoD,GAAiC,WAAxBA,EAAMC,gBAA4B1F,KAAIyF,GAC5EA,EAAME,WACPC,KAAK,KAAK,GAGrB/E,EAAa,CACT2D,UAAW,EACXD,aAAc,UACda,cAAc,EACdC,KAAMQ,IAAc,IAADC,EAAA,IAAZ,IAAEN,GAAKK,EACV,OAAU,OAAHL,QAAG,IAAHA,GAAiB,QAAdM,EAAHN,EAAKvE,oBAAY,IAAA6E,OAAd,EAAHA,EAAmBzD,QAAOoD,GAAiC,WAAxBA,EAAMC,gBAA4B1F,KAAIyF,GAC5EA,EAAME,WACPC,KAAK,KAAK,GAGrBjE,EAAYyC,EAAU,YAAa,SAAU,SAE7CvC,GADmBuC,EAAU,mBAAoB,SAAU,qBACjDA,EAAU,UAAW,WAC/BtC,EAAmBsC,EAAU,mBAAoB,OAAQ,sBAGzD2B,GAFc3B,EAAU,cAAe,OAAQ,gBACnCA,EAAU,mBAAoB,SAAU,aACnC,CACbI,UAAW,EACXD,aAAc,QACda,cAAc,EACdC,KAAMW,IAAA,IAAAC,EAAA,IAAC,IAAET,GAAKQ,EAAA,OAAQ,OAAHR,QAAG,IAAHA,GAAiB,QAAdS,EAAHT,EAAKlF,oBAAY,IAAA2F,OAAd,EAAHA,EAAmBtE,SAAS,IAChDuE,EAAe,CACd1B,UAAW,EACXD,aAAc,SACda,cAAc,EACdC,KAAMc,IAAc,IAAb,IAAEX,GAAKW,EACV,MAAM7F,EAAekF,GACf,YACF1F,EAAc,GAAE,gBAChBqB,EAAkB,GAAE,aACpBF,EAAe,GAAE,kBACjBC,EAAoB,GAAE,oBACtBE,EAAsB,IACtBd,EAEE2B,GAA4BS,EAAAA,EAAAA,IAAiB,OAAH8C,QAAG,IAAHA,OAAG,EAAHA,EAAKvD,0BAA2B,GAC1EX,GAAuBoB,EAAAA,EAAAA,IAAiB,OAAH8C,QAAG,IAAHA,OAAG,EAAHA,EAAKlE,qBAAsB,GAEtE,OACI8E,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIrH,EAAAA,EAAAA,KAACsH,EAAAA,EAAO,CAACC,MAAM,gBAAeF,UAC1BrH,EAAAA,EAAAA,KAAA,QAAAqH,UACIrH,EAAAA,EAAAA,KAACwH,EAAAA,EAAU,CACPC,KAAK,QACLC,MAAM,UACNC,QAASA,IAAM9B,GAAgB+B,IAAGxG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3BwG,GAAG,IACNvG,aAAcA,EACdwG,gBAAiBhH,EACjBiH,cAAe5F,EACf6F,gBAAiB9F,EACjB+F,WAAYhG,EAEZiG,SAAS,MACTZ,UACPrH,EAAAA,EAAAA,KAACkI,EAAAA,EAAU,CAACC,UAAU,gBAK3BrC,GACG9C,GAC8B,eAAlB,OAAZ3B,QAAY,IAAZA,OAAY,EAAZA,EAAcU,cACdmE,IAEClG,EAAAA,EAAAA,KAACsH,EAAAA,EAAO,CAACC,MAAM,qBAAoBF,UAC/BrH,EAAAA,EAAAA,KAACwH,EAAAA,EAAU,CACPC,KAAK,QACLE,QAASA,KACL7B,EAAW,CACPsC,KAAM,+BACNC,gBAAiB,CACbC,YAAa,CACTC,UAAuB,OAAZlH,QAAY,IAAZA,OAAY,EAAZA,EAAcK,SACzB8G,aAAaC,EAAAA,EAAAA,MACbC,cAA2B,OAAZrH,QAAY,IAAZA,GAAAA,EAAce,aAAcqG,EAAAA,EAAAA,IAAsB,OAAZpH,QAAY,IAAZA,OAAY,EAAZA,EAAce,cAAeqG,EAAAA,EAAAA,MAClFE,YAAyB,OAAZtH,QAAY,IAAZA,OAAY,EAAZA,EAAcoB,QAC3BmG,cAA2B,OAAZvH,QAAY,IAAZA,OAAY,EAAZA,EAAcqB,WAEjCmG,UAAW3G,EAAgBkB,QACvBC,IAAOJ,EAAAA,EAAAA,IAASI,EAAIyF,sBAAwB,IAC9C/H,KAAIH,IAAI,CACNmI,UAAW,GACXC,WAAgB,OAAJpI,QAAI,IAAJA,OAAI,EAAJA,EAAMqI,cAClBC,QAAa,OAAJtI,QAAI,IAAJA,OAAI,EAAJA,EAAMsI,QACfC,YAAiB,OAAJvI,QAAI,IAAJA,OAAI,EAAJA,EAAMwI,WACnBC,QAAa,OAAJzI,QAAI,IAAJA,OAAI,EAAJA,EAAM8C,OACf4F,SAAc,OAAJ1I,QAAI,IAAJA,OAAI,EAAJA,EAAMkI,qBAChBS,QAAa,OAAJ3I,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,OACf0F,aAAkB,OAAJ5I,QAAI,IAAJA,OAAI,EAAJA,EAAM6I,SACpBC,UAAe,OAAJ9I,QAAI,IAAJA,OAAI,EAAJA,EAAM+I,WACjBC,QAAQC,EAAAA,EAAAA,IAAmB,OAAJjJ,QAAI,IAAJA,OAAI,EAAJA,EAAM+I,WAAgB,OAAJ/I,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,QAC/CgG,SAAU,EACVC,SAAc,OAAJnJ,QAAI,IAAJA,OAAI,EAAJA,EAAMoJ,kBAEpBC,UAAWjI,EAAajB,KAAIyF,IAAK,CAC7B0D,gBAAiBnG,OAAOyC,EAAM2D,YAC9BC,kBAAmB5D,EAAME,SACzB2D,oBAAqBtG,OAAOyC,EAAM8D,gBAG5C,EACJjD,UACLrH,EAAAA,EAAAA,KAACuK,EAAoB,QAIhCzE,IAAezD,GAAwB2D,IACrChG,EAAAA,EAAAA,KAACsH,EAAAA,EAAO,CAACC,MAAM,OAAMF,UACjBrH,EAAAA,EAAAA,KAAA,QAAAqH,UACIrH,EAAAA,EAAAA,KAACwH,EAAAA,EAAU,CACPC,KAAK,QACLE,QAASA,KACL7B,EAAW,CACPsC,KAAM,SACNC,gBAAiB,CACbhH,aAAcA,EACdwG,gBAAiBhH,EACjBiH,cAAe5F,EACf6F,gBAAiB9F,EACjB+F,WAAYhG,EACZwI,SAAU,6BAEhB,EACJnD,UACLrH,EAAAA,EAAAA,KAACyK,EAAAA,EAAI,CAACtC,UAAU,gBAK5BnF,IACGhD,EAAAA,EAAAA,KAACsH,EAAAA,EAAO,CAACC,MAAM,eAAcF,UACzBrH,EAAAA,EAAAA,KAAA,QAAAqH,UACIrH,EAAAA,EAAAA,KAACwH,EAAAA,EAAU,CACPC,KAAK,QACLE,QAASA,IAAM/B,GAAQgC,IAAGxG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUwG,GAAG,IAAE8C,mBAAmB,EAAMC,cAAkB,OAAHpE,QAAG,IAAHA,OAAG,EAAHA,EAAKjF,OACtFoG,MAAM,QAAOL,UAChBrH,EAAAA,EAAAA,KAAC4K,EAAAA,EAAM,CAACzC,UAAU,kBAIhC,GAGZ0C,EAAgB,CACftF,UAAW,EACXD,aAAc,SACda,cAAc,EACdC,KAAM0E,IAAc,IAAb,IAAEvE,GAAKuE,EACV,MAAM/I,EAAiB,OAAHwE,QAAG,IAAHA,OAAG,EAAHA,EAAKxE,YACzB,OACI/B,EAAAA,EAAAA,KAAA,QAAMmI,UAAWlD,EAAYlD,GAAasF,SACrC0D,OAAOhJ,GAAaiJ,QAAQ,IAAK,KAC/B,GAGhBC,EAAa9F,EAAU,QAAS,SAAU,YAI7C+F,EAAY,CACR3F,UAAW,EACXD,aAAc,WACda,cAAc,EACdC,KAAM+E,IAAA,IAAAC,EAAAC,EAAA,IAAC,IAAE9E,GAAK4E,EAAA,OAA6B,QAA7BC,EAAQ,OAAH7E,QAAG,IAAHA,GAAiB,QAAd8E,EAAH9E,EAAKlF,oBAAY,IAAAgK,OAAd,EAAHA,EAAmB5J,aAAK,IAAA2J,EAAAA,EAAI,EAAE,GAErDE,EAAWnG,EAAU,WAAY,SAAU,QAC3CoG,EAAOpG,EAAU,OAAQ,UACzBqG,EAAgB,CACZjG,UAAW,EACXD,aAAc,SACda,cAAc,EACdC,KAAMqF,IAAA,IAAC,IAAElF,GAAKkF,EAAA,OAAKC,EAAAA,EAAAA,IAAiB,OAAHnF,QAAG,IAAHA,OAAG,EAAHA,EAAKzC,SAAU6H,EAAAA,EAAAA,IAAgB,OAAHpF,QAAG,IAAHA,OAAG,EAAHA,EAAKzC,QAAU,CAAC,GAE9E8H,EAAsB,CACrBrG,UAAW,EACXD,aAAc,mBACda,cAAc,EACdC,KAAMyF,IAAc,IAADC,EAAAC,EAAA,IAAZ,IAAExF,GAAKsF,EAGV,OAF2B,OAAHtF,QAAG,IAAHA,GAAiB,QAAduF,EAAHvF,EAAKlF,oBAAY,IAAAyK,GAAiB,QAAjBC,EAAjBD,EAAmB5J,uBAAe,IAAA6J,OAA/B,EAAHA,EAAoC3I,QAAOI,IAAOC,EAAAA,EAAAA,IAAcD,EAAIE,OAAW,OAAH6C,QAAG,IAAHA,OAAG,EAAHA,EAAK7C,WACrEhD,QAAO,CAACC,EAAKC,KAASiD,EAAAA,EAAAA,IAASlD,EAAS,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,SAAS,EACrE,GAEvBkI,EAAsB,CACrBzG,UAAW,EACXD,aAAc,mBACda,cAAc,EACdC,KAAM6F,IAAc,IAADC,EAAAC,EAAA,IAAZ,IAAE5F,GAAK0F,EACV,MACM1I,GADqB,OAAHgD,QAAG,IAAHA,GAAiB,QAAd2F,EAAH3F,EAAKlF,oBAAY,IAAA6K,GAAiB,QAAjBC,EAAjBD,EAAmBhK,uBAAe,IAAAiK,OAA/B,EAAHA,EAAoC/I,QAAOI,IAAOC,EAAAA,EAAAA,IAAcD,EAAIE,OAAW,OAAH6C,QAAG,IAAHA,OAAG,EAAHA,EAAK7C,WACrEhD,QAAO,CAACC,EAAKC,KAASiD,EAAAA,EAAAA,IAASlD,EAAS,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,SAAS,GACvF,OAAOsI,EAAAA,EAAAA,IAAc,OAAH7F,QAAG,IAAHA,OAAG,EAAHA,EAAKzC,OAAQP,EAAY,GAEhD8I,EAAuB,CACtB9G,UAAW,EACXY,cAAc,EACdb,aAAc,OACdc,KAAMkG,IAAA,IAAAC,EAAA,IAAC,IAAEhG,GAAK+F,EAAA,OAAKE,EAAAA,EAAAA,IAAa,OAAHjG,QAAG,IAAHA,GAAiB,QAAdgG,EAAHhG,EAAKlF,oBAAY,IAAAkL,OAAd,EAAHA,EAAmB1J,iBAAiB,GAalE4J,EAAgB,CACflH,UAAW,EACXD,aAAc,SACda,cAAc,EACdC,KAAMsG,IAAc,IAAb,IAAEnG,GAAKmG,EACV,MAAMrL,EAAkB,OAAHkF,QAAG,IAAHA,OAAG,EAAHA,EAAKlF,cACpB,aAAEW,GAAiBX,EACzB,OAAmB,OAAZW,QAAY,IAAZA,OAAY,EAAZA,EAAcoB,QAAOoD,GAAiC,WAAxBA,EAAMC,gBAA4B1F,KAAIyF,GACvEA,EAAME,WACPC,KAAK,KAAK,GAElBgG,EAAiB,CAChBpH,UAAW,EACXD,aAAc,UACda,cAAc,EACdC,KAAMwG,IAAc,IAAb,IAAErG,GAAKqG,EACV,MAAMvL,EAAkB,OAAHkF,QAAG,IAAHA,OAAG,EAAHA,EAAKlF,cACpB,aAAEW,GAAiBX,EACzB,OAAmB,OAAZW,QAAY,IAAZA,OAAY,EAAZA,EAAcoB,QAAOoD,GAAiC,WAAxBA,EAAMC,gBAA4B1F,KAAIyF,GACvEA,EAAME,WACPC,KAAK,KAAK,GAElBkG,EAAc,CACbtH,UAAW,EACXD,aAAc,SACda,cAAc,EACdC,KAAM0G,IAAc,IAAb,IAAEvG,GAAKuG,EAEV,MAAMzL,EAAkB,OAAHkF,QAAG,IAAHA,OAAG,EAAHA,EAAKlF,cACpB,YAAER,EAAW,gBAAEqB,EAAe,kBAAED,EAAiB,aAAED,GAAiBX,EAEpEgB,GAAuBoB,EAAAA,EAAAA,IAAiB,OAAH8C,QAAG,IAAHA,OAAG,EAAHA,EAAKlE,qBAAsB,GAGtE,OACI8E,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIrH,EAAAA,EAAAA,KAACsH,EAAAA,EAAO,CAACC,MAAM,gBAAeF,UAC1BrH,EAAAA,EAAAA,KAAA,QAAAqH,UACIrH,EAAAA,EAAAA,KAACwH,EAAAA,EAAU,CACPC,KAAK,QACLC,MAAM,UACNC,QAASA,IAAM9B,GAAgB+B,IAAGxG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC3BwG,GAAG,IACNvG,eACAwG,gBAAiBhH,EACjBiH,cAAe5F,EACf6F,gBAAiB9F,EACjB+F,WAAYhG,EACZiG,SAAS,MACTZ,UACPrH,EAAAA,EAAAA,KAACkI,EAAAA,EAAU,CAACC,UAAU,gBAI7BrC,IAAezD,GAAwB2D,IACrChG,EAAAA,EAAAA,KAACsH,EAAAA,EAAO,CAACC,MAAM,OAAMF,UACjBrH,EAAAA,EAAAA,KAAA,QAAAqH,UACIrH,EAAAA,EAAAA,KAACwH,EAAAA,EAAU,CACPC,KAAK,QACLE,QAASA,IAAM7B,EAAW,CACtBsC,KAAM,SACNC,gBAAiB,CACbhH,eACAwG,gBAAiBhH,EACjBiH,cAAe5F,EACf6F,gBAAiB9F,EACjB+F,WAAYhG,EACZwI,SAAU,8BAEfnD,UACNrH,EAAAA,EAAAA,KAACyK,EAAAA,EAAI,CAACtC,UAAU,kBAI9B,GAMb4E,EAAc,CAChBxH,UAAW,EACXY,cAAc,EACdb,aAAc,eACdc,KAAM4G,IAAA,IAAC,IAAEzG,GAAKyG,EAAA,OAAQ,OAAHzG,QAAG,IAAHA,GAAAA,EAAK0G,aAAcT,EAAAA,EAAAA,IAAa,OAAHjG,QAAG,IAAHA,OAAG,EAAHA,EAAK0G,aAAe,EAAE,GACvEC,EAAkB/H,EAAU,WAAY,UACvCgI,EAAc,CACV5H,UAAW,EACXD,aAAc,OACda,cAAc,EACdC,KAAMgH,IAAc,IAADC,EAAAC,EAAAC,EAAAC,EAAA,IAAZ,IAAEjH,GAAK6G,EACV,MACMK,EAAiF,QAAtEF,EAAgE,QAAhEC,GADIpN,MAAMC,QAAW,OAAHkG,QAAG,IAAHA,GAAiB,QAAd8G,EAAH9G,EAAKlF,oBAAY,IAAAgM,OAAd,EAAHA,EAAmBxM,aAAkB,OAAH0F,QAAG,IAAHA,GAAiB,QAAd+G,EAAH/G,EAAKlF,oBAAY,IAAAiM,OAAd,EAAHA,EAAmBzM,YAAc,IACrE6M,MAAK1M,IAAKyC,EAAAA,EAAAA,IAAe,OAADzC,QAAC,IAADA,OAAC,EAADA,EAAG0C,OAAW,OAAH6C,QAAG,IAAHA,OAAG,EAAHA,EAAK7C,iBAAQ,IAAA8J,OAAA,EAA7DA,EAA+DjC,YAAI,IAAAgC,EAAAA,EAAI,EACrF5D,EAAa5F,OAAU,OAAHwC,QAAG,IAAHA,OAAG,EAAHA,EAAKoD,YAC/B,MAAM,GAANzG,OAAUyG,EAAU,MAAAzG,QAAK2B,EAAAA,EAAAA,IAAe8E,EAAY8D,GAAgB,KAAO9D,EAAa8D,GAAiB,KAAOA,EAAc9D,GAAY,OAQlJgE,GAFuBxI,EAAU,cAAe,SAAU,mBAClCA,EAAU,iBAAkB,SAAU,sBAC1C,CAChBI,UAAW,EACXD,aAAc,kBACda,cAAc,EACdC,KAAMwH,IAAA,IAAAC,EAAA,IAAC,IAAEtH,GAAKqH,EAAA,OAAQ,OAAHrH,QAAG,IAAHA,GAAiB,QAAdsH,EAAHtH,EAAKlF,oBAAY,IAAAwM,OAAd,EAAHA,EAAmB/K,WAAW,IAClDgL,EAAuB,CACtBvI,UAAW,EACXD,aAAc,qBACda,cAAc,EACdC,KAAM2H,IAAA,IAAAC,EAAA,IAAC,IAAEzH,GAAKwH,EAAA,OAAQ,OAAHxH,QAAG,IAAHA,GAAiB,QAAdyH,EAAHzH,EAAKlF,oBAAY,IAAA2M,OAAd,EAAHA,EAAmBjL,cAAc,GACrDkL,EAAY9I,EAAU,aAAc,SAAU,cACjD+I,EAAa/I,EAAU,cAAe,SAAU,eAGpD,OAAQpD,GACJ,IAAK,QACL,IAAK,gBACL,IAAK,gBACD,MAAO,CACHmJ,EAAWpE,EAAgBuF,EAAsBf,EAAUE,EAC3DI,EAAqBI,EAAqBT,EAAMkB,EAAeE,EAAgBE,GAEvF,IAAK,SACL,IAAK,mBACL,IAAK,sBACD,MAAO,CACH5B,EAAYpI,EAAkBH,EAAWd,EAAYW,EAAWK,EAASiI,EAAe5D,GAEhG,IAAK,iBACL,IAAK,iBACD,MAAO,CACHgE,EAAYpI,EAAkBH,EAAWd,EAAYW,EAAWK,EAASqE,GAGjF,IAAK,iBACD,MAAO,CACHiE,EAAWmB,EAAsBsB,EAAmBG,EAAsBI,EAAY1C,EAAeD,EAAMS,EAAqBa,GAExI,IAAK,eAIL,IAAK,kBACD,MAAO,CACH3B,EAAWmB,EAAsB6B,EAAYD,EAAWzC,EAAeD,EAAMS,EAAqB2B,EAAmBG,EAAsBjB,GAEnJ,IAAK,gBACD,MAAO,CACH3B,EAAW6B,EAAaG,EAAiBgB,EAAYD,EAAWzC,EAAe2B,EAAaQ,EAAmBG,EAAsBjB,GAE7I,IAAK,iBACD,MAAO,CACH3B,EAAW6B,EAAaG,EAAiBS,EAAmBG,EAAsBI,EAAYf,EAAa3B,EAAeQ,EAAqBa,GAEvJ,QACI,MAAO,GACf,C,mJCtpBJ,MAiQA,EAjQqCtM,IAO9B,IAAD4N,EAAAC,EAAAC,EAAAC,EAAA,IAPgC,aAClCjN,EAAe,CAAC,EAAC,gBACjBwG,EAAkB,GAAE,cACpBC,EAAgB,GAAE,gBAClBC,EAAkB,GAAE,QACpBE,GAAU,EAAK,cACfsG,GACHhO,EAEG,MAAOiO,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,GAC/BC,EAAU,oBACVC,GAAWC,EAAAA,EAAAA,QAAO,OAExBC,EAAAA,EAAAA,YAAU,KACNL,IAAUxG,EAAuB,GAClC,CAACA,IAEJ,MAAM8G,EAAcA,KACZR,GAAeA,IACnBE,GAAU,EAAM,EAGdO,GAAcC,EAAAA,EAAAA,iBAAgB,CAChCC,QAASA,IAAMN,EAASO,UAG5B,OACInP,EAAAA,EAAAA,KAAAoH,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,MAACiI,EAAAA,EAAM,CACHC,KAAMb,EACNc,QAASP,EAAaQ,SAAS,KAAKC,WAAS,EAAAnI,SAAA,EAE7CF,EAAAA,EAAAA,MAACsI,EAAAA,EAAW,CAACtH,UAAU,8DAA6Dd,SAAA,EAChFrH,EAAAA,EAAAA,KAAA,QAAAqH,SAAM,mBACNrH,EAAAA,EAAAA,KAAA,QAAAqH,UACIrH,EAAAA,EAAAA,KAAC0P,EAAAA,EAAM,CACHC,WAAW3P,EAAAA,EAAAA,KAAC4P,EAAAA,EAAQ,IACpBC,QAAQ,WACRlI,QAASqH,EAAY3H,SACxB,mBAKTrH,EAAAA,EAAAA,KAAC8P,EAAAA,EAAa,CAACC,IAAKnB,EAASvH,UACzBF,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,mBAAkBd,SAAA,EAE7BrH,EAAAA,EAAAA,KAAA,SAAOmI,UAAU,YAAWd,UACxBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,iDAAiDtH,SAAE,mBAG5ErH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,kCAAkCtH,SAAE,sBAIjEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,gBAAgBtH,UACrCrH,EAAAA,EAAAA,KAAA,SAAOmI,UAAU,aAAYd,UACzBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAC,kBACxBrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SACN,OAAZhG,QAAY,IAAZA,GAAAA,EAAce,aAAcoK,EAAAA,EAAAA,IAAsB,OAAZnL,QAAY,IAAZA,OAAY,EAAZA,EAAce,aAAe,SAG5E+E,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAC,wBACxBrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SACN,OAAZhG,QAAY,IAAZA,GAAAA,EAAcwB,kBAAmB2J,EAAAA,EAAAA,IAAsB,OAAZnL,QAAY,IAAZA,OAAY,EAAZA,EAAcwB,kBAAoB,SAGtFsE,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAC,gBACxBrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SACN,OAAZhG,QAAY,IAAZA,OAAY,EAAZA,EAAckB,gBAGvB4E,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAC,iBACxBrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SACN,OAAZhG,QAAY,IAAZA,OAAY,EAAZA,EAAcO,wBAMnC5B,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,iBAAiBtH,UAEtCrH,EAAAA,EAAAA,KAAA,SAAOmI,UAAU,gBAAed,UAC5BF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,UACnBF,EAAAA,EAAAA,MAAA,MAAIgB,UAAU,MAAKd,SAAA,CAAC,gBAAYrH,EAAAA,EAAAA,KAAA,SAAM,WAAgC,QAAxBmO,EAAa,OAAZ9M,QAAY,IAAZA,OAAY,EAAZA,EAAcqB,iBAAS,IAAAyL,EAAAA,EAAI,UAE9EnO,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,UACnBF,EAAAA,EAAAA,MAAA,MAAIgB,UAAU,MAAKd,SAAA,CAAC,mBAAerH,EAAAA,EAAAA,KAAA,SAAM,WAAmC,QAA3BoO,EAAa,OAAZ/M,QAAY,IAAZA,OAAY,EAAZA,EAAcmB,oBAAY,IAAA4L,EAAAA,EAAI,aAGxFjH,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,UACnBF,EAAAA,EAAAA,MAAA,MAAIgB,UAAU,MAAKd,SAAA,CAAC,uBAAmBrH,EAAAA,EAAAA,KAAA,SAAM,WAAuC,QAA/BqO,EAAa,OAAZhN,QAAY,IAAZA,OAAY,EAAZA,EAAcsB,wBAAgB,IAAA0L,EAAAA,EAAI,UAE5FrO,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,UACnBF,EAAAA,EAAAA,MAAA,MAAIgB,UAAU,MAAKd,SAAA,CAAC,aAASrH,EAAAA,EAAAA,KAAA,SAAM,WAA8B,QAAtBsO,EAAa,OAAZjN,QAAY,IAAZA,OAAY,EAAZA,EAAcuB,eAAO,IAAA0L,EAAAA,EAAI,4BAsBrGnH,EAAAA,EAAAA,MAAA,SAAOgB,UAAU,YAAWd,SAAA,EACxBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAAqH,UACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,8CAA+CqB,QAAS,EAAE3I,SAAC,mBAIxFF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,SACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,eACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,aACzCF,EAAAA,EAAAA,MAAA,MAAIgB,UAAWwG,EAAU,eAAetH,SAAA,CAAC,SAChCrH,EAAAA,EAAAA,KAAA,SAAM,mBAGfA,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,cACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,6BAIjDrH,EAAAA,EAAAA,KAAA,SAAAqH,SACKQ,EAAgB9G,KAAI,CAACC,EAAGiP,KACrB9I,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAE4I,EAAI,KAC7BjQ,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGsK,YAC5BtL,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,UAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAG8C,QAAS,KAAO,OAAD9C,QAAC,IAADA,OAAC,EAADA,EAAGkP,UAC9ClQ,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGuK,QAC5BvL,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGmP,YAC5BnQ,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGoP,qBANvBH,WAYrB9I,EAAAA,EAAAA,MAAA,SAAOgB,UAAU,YAAWd,SAAA,EACxBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAAqH,UACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,8CAA+CqB,QAAS,GAAG3I,SAAC,wBAEzFF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,SACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,cACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,kBACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,eACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,aAEzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,aACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,eACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,cACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,iBACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,mBACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,4BAKjDrH,EAAAA,EAAAA,KAAA,SAAAqH,SACKS,EAAc/G,KAAI,CAACC,EAAGiP,KAAC,IAAAI,EAAA,OACpBlJ,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAE4I,EAAI,KAC7BjQ,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGsP,YAC5BtQ,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,GAAAA,EAAGiM,aAAcT,EAAAA,EAAAA,IAAW,OAADxL,QAAC,IAADA,OAAC,EAADA,EAAGiM,aAAe,MACtEjN,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGsK,YAC5BtL,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGuP,WAE5BvQ,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGwP,UAC5BxQ,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,GAAAA,EAAGyP,UAAWjE,EAAAA,EAAAA,IAAW,OAADxL,QAAC,IAADA,OAAC,EAADA,EAAGyP,UAAY,MAChEzQ,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGyI,YAC5BzJ,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAe,QAAfgJ,EAAG,OAADrP,QAAC,IAADA,OAAC,EAADA,EAAG2I,kBAAU,IAAA0G,EAAAA,EAAI,KAC1CrQ,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,UAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAG8C,QAAS,KAAO,OAAD9C,QAAC,IAADA,OAAC,EAADA,EAAGkP,UAC9ClQ,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGgJ,kBAZvBiG,EAcJ,UAKjB9I,EAAAA,EAAAA,MAAA,SAAOgB,UAAU,YAAWd,SAAA,EACxBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAAqH,UACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,8CAA+CqB,QAAS,EAAE3I,SAAC,qBAIxFF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAgB+B,QAAS,EAAErJ,SAAC,SACrDrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAgBqB,QAAS,EAAE3I,SAAC,gBACrDrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAgBqB,QAAS,EAAE3I,SAAC,kBACrDrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,YACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAgBqB,QAAS,EAAE3I,SAAC,0BAEzDF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,UACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,WACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,UACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,WACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,aACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,UACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,gBACzCrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAU,eAAetH,SAAC,wBAIjDrH,EAAAA,EAAAA,KAAA,SAAAqH,SACKU,EAAgBhH,KAAI,CAACC,EAAGiP,KACrB9I,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIrH,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAE4I,EAAI,KAC7BjQ,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAG2P,gBAC5B3Q,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAG4P,iBAC5B5Q,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAG6P,kBAC5B7Q,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAG8P,mBAC5B9Q,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAG+P,SAC5B/Q,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGgQ,cAC5BhR,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGiQ,aAC5BjR,EAAAA,EAAAA,KAAA,MAAImI,UAAWwG,EAAQtH,SAAG,OAADrG,QAAC,IAADA,OAAC,EAADA,EAAGkQ,gBATvBjB,gBAiB7BjQ,EAAAA,EAAAA,KAACmR,EAAAA,EAAa,CAAA9J,UACVrH,EAAAA,EAAAA,KAAC0P,EAAAA,EAAM,CAAC/H,QAASoH,EAAY1H,SAAC,gBAGvC,C,6DC/PX,SAAetH,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,6EACD,S,4DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,uIACD,O,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,kJACD,Y,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,mNACD,a","sources":["../node_modules/@mui/icons-material/esm/ShoppingCartCheckout.js","Pages/DataEntry/purchaseOrderDataArray.js","Pages/DataEntry/purchaseOrderPreviewTemplate.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Visibility.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2m10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2m-8.9-5h7.45c.75 0 1.41-.41 1.75-1.03L21 4.96 19.25 4l-3.7 7H8.53L4.27 2H1v2h2l3.6 7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7zM12 2l4 4-4 4-1.41-1.41L12.17 7H8V5h4.17l-1.59-1.59z\"\n}), 'ShoppingCartCheckout');","import { Addition, isEqualNumber, isGraterNumber, ISOString, LocalDate, Multiplication, Subraction, Division, checkIsNumber, NumberFormat, filterableText, toNumber } from \"../../Components/functions\";\r\nimport { IconButton, Tooltip } from '@mui/material';\r\nimport { Delete, Edit, ShoppingCartCheckout, Visibility } from '@mui/icons-material';\r\n\r\nconst isArr = (arr) => Array.isArray(arr)\r\n\r\nexport const purchaseOrderDataSet = ({ data = [], status = 'ITEMS' }) => {\r\n\r\n    switch (status) {\r\n        case 'ITEMS':\r\n        case 'PO-Vendor-Wise':\r\n        case 'PO-Item-Wise':\r\n            return (\r\n                data?.reduce((acc, item) => {\r\n                    if (!Array.isArray(item?.ItemDetails)) return acc;\r\n\r\n                    const itemDetails = item.ItemDetails.map(o => ({\r\n                        ...o,\r\n                        OrderDetails: {\r\n                            Id: item?.Id,\r\n                            Sno: item?.Sno,\r\n                            PoYear: item?.PoYear,\r\n                            PO_ID: item?.PO_ID,\r\n                            BranchId: item?.BranchId,\r\n                            BrokerId: item.BrokerId ?? '',\r\n                            BrokerName: item.BrokerName,\r\n                            CreatedBy: item.CreatedBy,\r\n                            CreatedAt: item.CreatedAt,\r\n                            ItemDetails: item?.ItemDetails,\r\n                            OrderStatus: item?.OrderStatus,\r\n                            StaffDetails: isArr(item.StaffDetails) ? item.StaffDetails : [],\r\n                            TranspoterDetails: isArr(item.TranspoterDetails) ? item.TranspoterDetails : [],\r\n                            DeliveryDetails: isArr(item.DeliveryDetails) ? item.DeliveryDetails : [],\r\n                            ConvertedAsInvoices: isArr(item.ConvertedAsInvoices) ? item.ConvertedAsInvoices : [],\r\n                            LoadingDate: item.LoadingDate,\r\n                            IsConvertedAsInvoice: item?.IsConvertedAsInvoice,\r\n                            OwnerId: item.OwnerId ?? '',\r\n                            OwnerName: item.OwnerName,\r\n                            PartyAddress: item.PartyAddress,\r\n                            PartyId: item.PartyId ?? '',\r\n                            PartyName: item.PartyName,\r\n                            PaymentCondition: item.PaymentCondition,\r\n                            Remarks: item.Remarks,\r\n                            TradeConfirmDate: item.TradeConfirmDate,\r\n                            Ledger_Name: item.Ledger_Name,\r\n                            Party_District: item.Party_District,\r\n                            isConvertableArrivalExist: toNumber(item?.isConvertableArrivalExist),\r\n                            IsConvertedAsInvoice: toNumber(item?.IsConvertedAsInvoice)\r\n                        }\r\n                    }));\r\n\r\n                    return acc.concat(itemDetails);\r\n                }, [])\r\n            )\r\n\r\n        case 'ITEMS PENDING':\r\n        case 'PO-Pending-Only':\r\n            return (\r\n                data?.reduce((acc, item) => {\r\n                    if (!Array.isArray(item?.ItemDetails)) return acc;\r\n\r\n                    const itemDetails = item?.ItemDetails?.filter(fil => {\r\n                        const itemsInDelivery = item?.DeliveryDetails?.filter(del => isEqualNumber(del.ItemId, fil?.ItemId));\r\n                        const WeightTotal = itemsInDelivery.reduce((sum, delivery) => Addition(sum, delivery?.Weight), 0);\r\n                        return (\r\n                            Number(WeightTotal) < Number(fil?.Weight)\r\n                            && filterableText(item.OrderStatus) !== filterableText('Canceled')\r\n                        );\r\n                    }).map(o => ({\r\n                        ...o,\r\n                        OrderDetails: {\r\n                            Id: item?.Id,\r\n                            Sno: item?.Sno,\r\n                            PoYear: item?.PoYear,\r\n                            PO_ID: item?.PO_ID,\r\n                            BranchId: item?.BranchId,\r\n                            BrokerId: item.BrokerId ?? '',\r\n                            BrokerName: item.BrokerName,\r\n                            CreatedBy: item.CreatedBy,\r\n                            CreatedAt: item.CreatedAt,\r\n                            ItemDetails: item?.ItemDetails,\r\n                            OrderStatus: item?.OrderStatus,\r\n                            StaffDetails: isArr(item.StaffDetails) ? item.StaffDetails : [],\r\n                            TranspoterDetails: isArr(item.TranspoterDetails) ? item.TranspoterDetails : [],\r\n                            DeliveryDetails: isArr(item.DeliveryDetails) ? item.DeliveryDetails : [],\r\n                            ConvertedAsInvoices: isArr(item.ConvertedAsInvoices) ? item.ConvertedAsInvoices : [],\r\n                            LoadingDate: item.LoadingDate,\r\n                            IsConvertedAsInvoice: item?.IsConvertedAsInvoice,\r\n                            OwnerId: item.OwnerId ?? '',\r\n                            OwnerName: item.OwnerName,\r\n                            PartyAddress: item.PartyAddress,\r\n                            PartyId: item.PartyId ?? '',\r\n                            PartyName: item.PartyName,\r\n                            PaymentCondition: item.PaymentCondition,\r\n                            Remarks: item.Remarks,\r\n                            TradeConfirmDate: item.TradeConfirmDate,\r\n                            Ledger_Name: item.Ledger_Name,\r\n                            Party_District: item.Party_District,\r\n                            isConvertableArrivalExist: toNumber(item?.isConvertableArrivalExist),\r\n                            IsConvertedAsInvoice: toNumber(item?.IsConvertedAsInvoice)\r\n                        }\r\n                    }));\r\n\r\n                    return acc.concat(itemDetails);\r\n                }, [])\r\n            )\r\n\r\n        case 'ITEMS ARRIVED':\r\n            return (\r\n                data?.reduce((acc, item) => {\r\n                    if (!Array.isArray(item?.ItemDetails)) return acc;\r\n\r\n                    const itemDetails = item?.ItemDetails?.filter(fil => {\r\n                        const itemsInDelivery = item?.DeliveryDetails?.filter(del => isEqualNumber(del.ItemId, fil?.ItemId));\r\n                        const WeightTotal = itemsInDelivery.reduce((sum, delivery) => Addition(sum, delivery?.Weight), 0);\r\n                        return Number(WeightTotal) >= Number(fil?.Weight);\r\n                    }).map(o => ({\r\n                        ...o,\r\n                        OrderDetails: {\r\n                            Id: item?.Id,\r\n                            Sno: item?.Sno,\r\n                            PoYear: item?.PoYear,\r\n                            PO_ID: item?.PO_ID,\r\n                            BranchId: item?.BranchId,\r\n                            BrokerId: item.BrokerId ?? '',\r\n                            BrokerName: item.BrokerName,\r\n                            CreatedBy: item.CreatedBy,\r\n                            CreatedAt: item.CreatedAt,\r\n                            ItemDetails: item?.ItemDetails,\r\n                            OrderStatus: item?.OrderStatus,\r\n                            StaffDetails: isArr(item.StaffDetails) ? item.StaffDetails : [],\r\n                            TranspoterDetails: isArr(item.TranspoterDetails) ? item.TranspoterDetails : [],\r\n                            DeliveryDetails: isArr(item.DeliveryDetails) ? item.DeliveryDetails : [],\r\n                            ConvertedAsInvoices: isArr(item.ConvertedAsInvoices) ? item.ConvertedAsInvoices : [],\r\n                            LoadingDate: item.LoadingDate,\r\n                            IsConvertedAsInvoice: item?.IsConvertedAsInvoice,\r\n                            OwnerId: item.OwnerId ?? '',\r\n                            OwnerName: item.OwnerName,\r\n                            PartyAddress: item.PartyAddress,\r\n                            PartyId: item.PartyId ?? '',\r\n                            PartyName: item.PartyName,\r\n                            PaymentCondition: item.PaymentCondition,\r\n                            Remarks: item.Remarks,\r\n                            TradeConfirmDate: item.TradeConfirmDate,\r\n                            Ledger_Name: item.Ledger_Name,\r\n                            Party_District: item.Party_District,\r\n                            isConvertableArrivalExist: toNumber(item?.isConvertableArrivalExist),\r\n                            IsConvertedAsInvoice: toNumber(item?.IsConvertedAsInvoice)\r\n                        }\r\n                    }));\r\n\r\n                    return acc.concat(itemDetails);\r\n                }, [])\r\n            )\r\n\r\n        case 'AR-Item-Based':\r\n        case 'AR-Vendor-Wise':\r\n            return (\r\n                data?.reduce((acc, item) => {\r\n                    if (!Array.isArray(item?.DeliveryDetails)) return acc;\r\n\r\n                    const DeliveryDetails = item.DeliveryDetails.map(o => ({\r\n                        ...o,\r\n                        OrderDetails: {\r\n                            Id: item?.Id,\r\n                            Sno: item?.Sno,\r\n                            PoYear: item?.PoYear,\r\n                            PO_ID: item?.PO_ID,\r\n                            BranchId: item?.BranchId,\r\n                            BrokerId: item.BrokerId ?? '',\r\n                            BrokerName: item.BrokerName,\r\n                            CreatedBy: item.CreatedBy,\r\n                            CreatedAt: item.CreatedAt,\r\n                            ItemDetails: isArr(item.ItemDetails) ? item.ItemDetails : [],\r\n                            StaffDetails: isArr(item.StaffDetails) ? item.StaffDetails : [],\r\n                            TranspoterDetails: isArr(item.TranspoterDetails) ? item.TranspoterDetails : [],\r\n                            DeliveryDetails: isArr(item.DeliveryDetails) ? item.DeliveryDetails : [],\r\n                            ConvertedAsInvoices: isArr(item.ConvertedAsInvoices) ? item.ConvertedAsInvoices : [],\r\n                            OrderStatus: item?.OrderStatus,\r\n                            LoadingDate: item.LoadingDate,\r\n                            IsConvertedAsInvoice: item?.IsConvertedAsInvoice,\r\n                            OwnerId: item.OwnerId ?? '',\r\n                            OwnerName: item.OwnerName,\r\n                            PartyAddress: item.PartyAddress,\r\n                            PartyId: item.PartyId ?? '',\r\n                            PartyName: item.PartyName,\r\n                            PaymentCondition: item.PaymentCondition,\r\n                            Remarks: item.Remarks,\r\n                            TradeConfirmDate: item.TradeConfirmDate,\r\n                            Ledger_Name: item.Ledger_Name,\r\n                            Party_District: item.Party_District,\r\n                            isConvertableArrivalExist: toNumber(item?.isConvertableArrivalExist),\r\n                            IsConvertedAsInvoice: toNumber(item?.IsConvertedAsInvoice)\r\n                        }\r\n                    }));\r\n\r\n                    return acc.concat(DeliveryDetails);\r\n                }, [])\r\n            )\r\n\r\n        case 'ORDERS':\r\n            return data\r\n        case 'ORDERS PENDING':\r\n            return data.reduce((acc, item) => {\r\n\r\n                if (!Array.isArray(item?.DeliveryDetails) || isGraterNumber(item?.DeliveryDetails?.length, 0)) return acc;\r\n\r\n                return acc.concat(item);\r\n\r\n            }, [])\r\n        case 'ORDERS ARRIVED':\r\n            return data.reduce((acc, item) => {\r\n\r\n                if (!Array.isArray(item?.DeliveryDetails) || isEqualNumber(item?.DeliveryDetails?.length, 0)) return acc;\r\n\r\n                return acc.concat(item);\r\n\r\n            }, [])\r\n        case 'COMPLETED ORDERS':\r\n            return data.reduce((acc, item) => {\r\n\r\n                if (item?.OrderStatus !== 'Completed') return acc;\r\n\r\n                return acc.concat(item);\r\n\r\n            }, [])\r\n        case 'IN-COMPLETED ORDERS':\r\n            return data.reduce((acc, item) => {\r\n\r\n                if (item?.OrderStatus === 'Completed') return acc;\r\n\r\n                return acc.concat(item);\r\n\r\n            }, [])\r\n        default:\r\n            return []\r\n    }\r\n}\r\n\r\nconst statusColor = {\r\n    NewOrder: ' bg-info fw-bold fa-11 px-2 py-1 rounded-3 ',\r\n    OnProcess: ' bg-warning fw-bold fa-11 px-2 py-1 rounded-3 ',\r\n    Completed: ' bg-success text-light fa-11 px-2 py-1 rounded-3 ',\r\n    Canceled: ' bg-danger text-light fw-bold fa-11 px-2 py-1 rounded-3 '\r\n}\r\n\r\nconst chooseColor = (orderStatus) => {\r\n    // const DeliveryDetails = Number(orderStatus) > 0 ? 'Arrived' : 'Pending';\r\n    switch (orderStatus) {\r\n        case 'New Order': return statusColor.NewOrder;\r\n        case 'On Process': return statusColor.OnProcess;\r\n        case 'Completed': return statusColor.Completed;\r\n        case 'Canceled': return statusColor.Canceled;\r\n        default: return ''\r\n    }\r\n}\r\n\r\nconst createCol = (field, type, ColumnHeader) => {\r\n    return {\r\n        isVisible: 1,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\n// const findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\n// const getActQty = (item, products) => {\r\n//     console.log(item)\r\n//     const productDetails = findProductDetails(products, item?.ItemId);\r\n//     const pack = parseFloat(productDetails?.PackGet ?? 0);\r\n//     const Quantity = Division(item.Weight, pack);\r\n//     console.log({pack, Quantity})\r\n//     return Quantity;\r\n// }\r\n\r\nexport const displayColumns = ({ \r\n    OrderStatus = 'ITEMS', \r\n    dialogs, \r\n    setOrderPreview, \r\n    navigation, \r\n    products,\r\n    EditRights,\r\n    DeleteRights,\r\n    AddRights,\r\n}) => {\r\n\r\n    // Order Based Cells\r\n    const OrderId = createCol('OrderId', 'string', 'Order Id'),\r\n        // OwnerName = createCol('OwnerName', 'string', 'Owner Name'),\r\n        OwnerName = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Owners',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return row?.StaffDetails?.filter(staff => staff.Cost_Category === 'Owners').map(staff => (\r\n                    staff.Emp_Name\r\n                )).join(', ')\r\n            }\r\n        },\r\n        BrokerName = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Brokers',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return row?.StaffDetails?.filter(staff => staff.Cost_Category === 'Broker').map(staff => (\r\n                    staff.Emp_Name\r\n                )).join(', ')\r\n            }\r\n        },\r\n        PartyName = createCol('PartyName', 'string', 'Party'),\r\n        PaymentCondition = createCol('PaymentCondition', 'string', 'Payment Condition'),\r\n        Remarks = createCol('Remarks', 'string'),\r\n        TradeConfirmDate = createCol('TradeConfirmDate', 'date', 'Trade Confirm Date'),\r\n        LoadingDate = createCol('LoadingDate', 'date', 'Loading Date'),\r\n        Condition = createCol('QualityCondition', 'string', 'Condition'),\r\n        OrderPartyName = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Party',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => row?.OrderDetails?.PartyName\r\n        }, OrderActions = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Action',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const OrderDetails = row;\r\n                const {\r\n                    ItemDetails = [],\r\n                    DeliveryDetails = [],\r\n                    StaffDetails = [],\r\n                    TranspoterDetails = [],\r\n                    ConvertedAsInvoices = []\r\n                } = OrderDetails;\r\n\r\n                const isConvertableArrivalExist = isEqualNumber(row?.isConvertableArrivalExist, 1);\r\n                const IsConvertedAsInvoice = isEqualNumber(row?.IsConvertedAsInvoice, 1);\r\n\r\n                return (\r\n                    <>\r\n                        <Tooltip title='Preview Order'>\r\n                            <span>\r\n                                <IconButton\r\n                                    size='small'\r\n                                    color='primary'\r\n                                    onClick={() => setOrderPreview(pre => ({\r\n                                        ...pre,\r\n                                        OrderDetails: OrderDetails,\r\n                                        OrderItemsArray: ItemDetails,\r\n                                        DeliveryArray: DeliveryDetails,\r\n                                        TranspoterArray: TranspoterDetails,\r\n                                        StaffArray: StaffDetails,\r\n                                        // ConvertedAsInvoices: ConvertedAsInvoices,\r\n                                        display: true,\r\n                                    }))}\r\n                                ><Visibility className=\"fa-16\" /></IconButton>\r\n                            </span>\r\n                        </Tooltip>\r\n\r\n                        {(\r\n                            navigation\r\n                            && isConvertableArrivalExist\r\n                            && OrderDetails?.OrderStatus === 'Completed'\r\n                            && AddRights\r\n                        ) && (\r\n                                <Tooltip title='Convert to invoice'>\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            navigation({\r\n                                                page: '/erp/purchase/invoice/create',\r\n                                                stateToTransfer: {\r\n                                                    invoiceInfo: {\r\n                                                        Branch_Id: OrderDetails?.BranchId,\r\n                                                        Po_Inv_Date: ISOString(),\r\n                                                        Po_Entry_Date: OrderDetails?.LoadingDate ? ISOString(OrderDetails?.LoadingDate) : ISOString(),\r\n                                                        Retailer_Id: OrderDetails?.PartyId,\r\n                                                        Retailer_Name: OrderDetails?.PartyName\r\n                                                    },\r\n                                                    orderInfo: DeliveryDetails.filter(\r\n                                                        fil => toNumber(fil.pendingInvoiceWeight) > 0\r\n                                                    ).map(item => ({\r\n                                                        POI_St_Id: '',\r\n                                                        DeliveryId: item?.Trip_Item_SNo,\r\n                                                        OrderId: item?.OrderId,\r\n                                                        Location_Id: item?.LocationId,\r\n                                                        Item_Id: item?.ItemId,\r\n                                                        Bill_Qty: item?.pendingInvoiceWeight,\r\n                                                        Act_Qty: item?.Weight,\r\n                                                        Bill_Alt_Qty: item?.Quantity,\r\n                                                        Item_Rate: item?.BilledRate,\r\n                                                        Amount: Multiplication(item?.BilledRate, item?.Weight),\r\n                                                        Free_Qty: 0,\r\n                                                        Batch_No: item?.BatchLocation,\r\n                                                    })),\r\n                                                    staffInfo: StaffDetails.map(staff => ({\r\n                                                        Involved_Emp_Id: Number(staff.EmployeeId),\r\n                                                        Involved_Emp_Name: staff.Emp_Name,\r\n                                                        Cost_Center_Type_Id: Number(staff.CostType),\r\n                                                    }))\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                    ><ShoppingCartCheckout /></IconButton>\r\n                                </Tooltip>\r\n                            )}\r\n\r\n                        {(navigation && !IsConvertedAsInvoice && EditRights) && (\r\n                            <Tooltip title='Edit'>\r\n                                <span>\r\n                                    <IconButton\r\n                                        size='small'\r\n                                        onClick={() => {\r\n                                            navigation({\r\n                                                page: 'create',\r\n                                                stateToTransfer: {\r\n                                                    OrderDetails: OrderDetails,\r\n                                                    OrderItemsArray: ItemDetails,\r\n                                                    DeliveryArray: DeliveryDetails,\r\n                                                    TranspoterArray: TranspoterDetails,\r\n                                                    StaffArray: StaffDetails,\r\n                                                    editPage: 'PurchaseOderWithDelivery'\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                    ><Edit className=\"fa-16\" /></IconButton>\r\n                                </span>\r\n                            </Tooltip >\r\n                        )}\r\n\r\n                        {isConvertableArrivalExist && (\r\n                            <Tooltip title='Delete Order'>\r\n                                <span>\r\n                                    <IconButton\r\n                                        size='small'\r\n                                        onClick={() => dialogs(pre => ({ ...pre, deleteOrderDialog: true, deleteOrderId: row?.Id }))}\r\n                                        color='error'\r\n                                    ><Delete className=\"fa-16\" /></IconButton>\r\n                                </span>\r\n                            </Tooltip>\r\n                        )}\r\n                    </>\r\n                )\r\n            }\r\n        }, GeneralStatus = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Status',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const OrderStatus = row?.OrderStatus;\r\n                return (\r\n                    <span className={chooseColor(OrderStatus)}>\r\n                        {String(OrderStatus).replace(' ', '')}\r\n                    </span>\r\n                )\r\n            }\r\n        }, OrderPO_ID = createCol('PO_ID', 'string', 'Order ID')\r\n\r\n    // Item Based Cells\r\n    const\r\n        ItemPO_ID = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Order ID',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => row?.OrderDetails?.PO_ID ?? ''\r\n        },\r\n        ItemName = createCol('ItemName', 'string', 'Item'),\r\n        Rate = createCol('Rate', 'number'),\r\n        WeightWithUOM = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Weight',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => checkIsNumber(row?.Weight) ? NumberFormat(row?.Weight) : 0\r\n            // + ' ' + row?.Units\r\n        }, ItemArrivedQuantity = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Arrived Quantity',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const itemsInDelivery = row?.OrderDetails?.DeliveryDetails?.filter(del => isEqualNumber(del.ItemId, row?.ItemId));\r\n                const WeightTotal = itemsInDelivery.reduce((acc, item) => Addition(acc, item?.Weight), 0);\r\n                return WeightTotal\r\n            }\r\n        }, PendingItemQuantity = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Pending-Quantity',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const itemsInDelivery = row?.OrderDetails?.DeliveryDetails?.filter(del => isEqualNumber(del.ItemId, row?.ItemId));\r\n                const WeightTotal = itemsInDelivery.reduce((acc, item) => Addition(acc, item?.Weight), 0);\r\n                return Subraction(row?.Weight, WeightTotal);\r\n            }\r\n        }, ItemTradeConfirmDate = {\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            ColumnHeader: 'Date',\r\n            Cell: ({ row }) => LocalDate(row?.OrderDetails?.TradeConfirmDate)\r\n        }, ItemOrderStatus = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Status',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const OrderStatus = row?.OrderDetails?.OrderStatus;\r\n                return (\r\n                    <span className={chooseColor(OrderStatus)}>\r\n                        {String(OrderStatus).replace(' ', '')}\r\n                    </span>\r\n                )\r\n            }\r\n        }, ItemOwnerName = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Owners',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const OrderDetails = row?.OrderDetails;\r\n                const { StaffDetails } = OrderDetails;\r\n                return StaffDetails?.filter(staff => staff.Cost_Category === 'Owners').map(staff => (\r\n                    staff.Emp_Name\r\n                )).join(', ')\r\n            }\r\n        }, ItemBrokerName = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Brokers',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const OrderDetails = row?.OrderDetails;\r\n                const { StaffDetails } = OrderDetails;\r\n                return StaffDetails?.filter(staff => staff.Cost_Category === 'Broker').map(staff => (\r\n                    staff.Emp_Name\r\n                )).join(', ')\r\n            }\r\n        }, ItemActions = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Action',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n\r\n                const OrderDetails = row?.OrderDetails;\r\n                const { ItemDetails, DeliveryDetails, TranspoterDetails, StaffDetails } = OrderDetails;\r\n                // const isConvertableArrivalExist = isEqualNumber(row?.isConvertableArrivalExist, 1);\r\n                const IsConvertedAsInvoice = isEqualNumber(row?.IsConvertedAsInvoice, 1);\r\n\r\n\r\n                return (\r\n                    <>\r\n                        <Tooltip title='Preview Order'>\r\n                            <span>\r\n                                <IconButton\r\n                                    size='small'\r\n                                    color='primary'\r\n                                    onClick={() => setOrderPreview(pre => ({\r\n                                        ...pre,\r\n                                        OrderDetails,\r\n                                        OrderItemsArray: ItemDetails,\r\n                                        DeliveryArray: DeliveryDetails,\r\n                                        TranspoterArray: TranspoterDetails,\r\n                                        StaffArray: StaffDetails,\r\n                                        display: true,\r\n                                    }))}\r\n                                ><Visibility className=\"fa-16\" /></IconButton>\r\n                            </span>\r\n                        </Tooltip>\r\n\r\n                        {(navigation && !IsConvertedAsInvoice && EditRights) && (\r\n                            <Tooltip title='Edit'>\r\n                                <span>\r\n                                    <IconButton\r\n                                        size='small'\r\n                                        onClick={() => navigation({\r\n                                            page: 'create',\r\n                                            stateToTransfer: {\r\n                                                OrderDetails,\r\n                                                OrderItemsArray: ItemDetails,\r\n                                                DeliveryArray: DeliveryDetails,\r\n                                                TranspoterArray: TranspoterDetails,\r\n                                                StaffArray: StaffDetails,\r\n                                                editPage: 'PurchaseOderWithDelivery'\r\n                                            }\r\n                                        })}\r\n                                    ><Edit className=\"fa-16\" /></IconButton>\r\n                                </span>\r\n                            </Tooltip >\r\n                        )}\r\n                    </>\r\n                )\r\n            }\r\n        };\r\n\r\n    // Delivery Based Columns \r\n    const ArrivedDate = {\r\n        isVisible: 1,\r\n        isCustomCell: true,\r\n        ColumnHeader: 'Arrived Date',\r\n        Cell: ({ row }) => row?.ArrivalDate ? LocalDate(row?.ArrivalDate) : ''\r\n    }, ArrivedLocation = createCol('Location', 'string'),\r\n        ArrivalRate = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'Rate',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const OrderedItems = Array.isArray(row?.OrderDetails?.ItemDetails) ? row?.OrderDetails?.ItemDetails : [];\r\n                const OrderedRate = OrderedItems.find(o => isEqualNumber(o?.ItemId, row?.ItemId))?.Rate ?? 0\r\n                const BilledRate = Number(row?.BilledRate);\r\n                return `${BilledRate} (${isGraterNumber(BilledRate, OrderedRate) ? ('+' + (BilledRate - OrderedRate)) : ('-' + (OrderedRate - BilledRate))})`\r\n            }\r\n        }\r\n\r\n\r\n    // Tally Column\r\n    const OrderLOLLedgerName = createCol('Ledger_Name', 'string', 'LOL Ledger Name'),\r\n        OrderLOLPartyDistrict = createCol('Party_District', 'string', 'LOL Party District'),\r\n        ItemLOLLedgerName = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'LOL Ledger Name',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => row?.OrderDetails?.Ledger_Name\r\n        }, ItemLOLPartyDistrict = {\r\n            isVisible: 1,\r\n            ColumnHeader: 'LOL Party District',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => row?.OrderDetails?.Party_District\r\n        }, StockItem = createCol('Stock_Item', 'string', 'Stock Item'),\r\n        StockGroup = createCol('Stock_Group', 'string', 'Stock Group');\r\n\r\n\r\n    switch (OrderStatus) {\r\n        case 'ITEMS':\r\n        case 'ITEMS PENDING':\r\n        case 'ITEMS ARRIVED':\r\n            return [\r\n                ItemPO_ID, OrderPartyName, ItemTradeConfirmDate, ItemName, WeightWithUOM,\r\n                ItemArrivedQuantity, PendingItemQuantity, Rate, ItemOwnerName, ItemBrokerName, ItemActions\r\n            ];\r\n        case 'ORDERS':\r\n        case 'COMPLETED ORDERS':\r\n        case 'IN-COMPLETED ORDERS':\r\n            return [\r\n                OrderPO_ID, TradeConfirmDate, PartyName, BrokerName, OwnerName, Remarks, GeneralStatus, OrderActions,\r\n            ]\r\n        case 'ORDERS PENDING':\r\n        case 'ORDERS ARRIVED':\r\n            return [\r\n                OrderPO_ID, TradeConfirmDate, PartyName, BrokerName, OwnerName, Remarks, OrderActions,\r\n            ]\r\n\r\n        case 'PO-Vendor-Wise':\r\n            return [\r\n                ItemPO_ID, ItemTradeConfirmDate, ItemLOLLedgerName, ItemLOLPartyDistrict, StockGroup, WeightWithUOM, Rate, PendingItemQuantity, ItemActions\r\n            ]\r\n        case 'PO-Item-Wise':\r\n            return [\r\n                ItemPO_ID, ItemTradeConfirmDate, StockGroup, StockItem, WeightWithUOM, Rate, PendingItemQuantity, ItemLOLLedgerName, ItemLOLPartyDistrict, ItemActions\r\n            ]\r\n        case 'PO-Pending-Only':\r\n            return [\r\n                ItemPO_ID, ItemTradeConfirmDate, StockGroup, StockItem, WeightWithUOM, Rate, PendingItemQuantity, ItemLOLLedgerName, ItemLOLPartyDistrict, ItemActions\r\n            ]\r\n        case 'AR-Item-Based':\r\n            return [\r\n                ItemPO_ID, ArrivedDate, ArrivedLocation, StockGroup, StockItem, WeightWithUOM, ArrivalRate, ItemLOLLedgerName, ItemLOLPartyDistrict, ItemActions\r\n            ]\r\n        case 'AR-Vendor-Wise':\r\n            return [\r\n                ItemPO_ID, ArrivedDate, ArrivedLocation, ItemLOLLedgerName, ItemLOLPartyDistrict, StockGroup, ArrivalRate, WeightWithUOM, PendingItemQuantity, ItemActions\r\n            ]\r\n        default:\r\n            return [];\r\n    }\r\n}","import { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { LocalDate } from '../../Components/functions';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { Download } from '@mui/icons-material';\r\n\r\nconst PurchaseOrderPreviewTemplate = ({\r\n    OrderDetails = {},\r\n    OrderItemsArray = [],\r\n    DeliveryArray = [],\r\n    TranspoterArray = [],\r\n    display = false,\r\n    onCloseDialog\r\n}) => {\r\n\r\n    const [dialog, setDialog] = useState(false);\r\n    const tdStyle = 'border fa-14 vctr';\r\n    const printRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setDialog(display ? true : false);\r\n    }, [display])\r\n\r\n    const closeDialog = () => {\r\n        if (onCloseDialog) onCloseDialog();\r\n        setDialog(false);\r\n    }\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={closeDialog} maxWidth='lg' fullWidth\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between align-items-center flex-wrap'>\r\n                    <span>Order Preview</span>\r\n                    <span>\r\n                        <Button\r\n                            startIcon={<Download />}\r\n                            variant='outlined'\r\n                            onClick={handlePrint}\r\n                        >\r\n                            Download\r\n                        </Button>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent ref={printRef}>\r\n                    <div className=\"table-responsive\">\r\n\r\n                        <table className=\"table m-0\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className={tdStyle + ' text-primary fw-bold bg-light border-bottom-0'} >\r\n                                        ORDER DETAILS\r\n                                    </td>\r\n                                    <td className={tdStyle + ' text-primary fw-bold bg-light '} >\r\n                                        PARTY DETAILS\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className={tdStyle + ' p-0 border-0'}>\r\n                                        <table className=\"table m-0 \">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className={tdStyle}>Loading Date</td>\r\n                                                    <td className={tdStyle}>\r\n                                                        {OrderDetails?.LoadingDate ? LocalDate(OrderDetails?.LoadingDate) : ''}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className={tdStyle}>Trade Confirm Date</td>\r\n                                                    <td className={tdStyle}>\r\n                                                        {OrderDetails?.TradeConfirmDate ? LocalDate(OrderDetails?.TradeConfirmDate) : ''}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className={tdStyle}>Owner Name</td>\r\n                                                    <td className={tdStyle}>\r\n                                                        {OrderDetails?.OwnerName}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className={tdStyle}>Broker Name</td>\r\n                                                    <td className={tdStyle}>\r\n                                                        {OrderDetails?.BrokerName}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                    <td className={tdStyle + ' p-0 border-0 '}>\r\n\r\n                                        <table className=\"table m-0 p-0\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className={tdStyle}>\r\n                                                        <h6 className='m-0'>Party Name: <br /> &emsp; {OrderDetails?.PartyName ?? '-'}</h6>\r\n                                                    </td>\r\n                                                    <td className={tdStyle}>\r\n                                                        <h6 className='m-0'>Party Address: <br /> &emsp; {OrderDetails?.PartyAddress ?? '-'}</h6>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className={tdStyle}>\r\n                                                        <h6 className='m-0'>Payment Condition: <br /> &emsp; {OrderDetails?.PaymentCondition ?? '-'}</h6>\r\n                                                    </td>\r\n                                                    <td className={tdStyle}>\r\n                                                        <h6 className='m-0'>Remarks: <br /> &emsp; {OrderDetails?.Remarks ?? '-'}</h6>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        {/* <div className=\"d-flex flex-wrap bg-white\">\r\n                                            <span className='flex-grow-1 p-2'>\r\n                                                <h6>Party Name: {OrderDetails?.PartyName}</h6>\r\n                                                <h6>Party Address: {OrderDetails?.PartyAddress}</h6>\r\n                                            </span>\r\n\r\n                                            <span className='p-2'>\r\n                                                <h6>Payment Condition: {OrderDetails?.PaymentCondition}</h6>\r\n                                                <h6>Remarks: {OrderDetails?.Remarks}</h6>\r\n                                            </span>\r\n                                        </div> */}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table className=\"table m-0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td className={tdStyle + ' text-primary fw-bold bg-light border-top-0'} colSpan={7}>\r\n                                        ORDER ITEMS\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className={tdStyle + ' text-center'}>SNo</th>\r\n                                    <th className={tdStyle + ' text-center'}>Item Name</th>\r\n                                    <th className={tdStyle + ' text-center'}>Tonnage</th>\r\n                                    <th className={tdStyle + ' text-center'}>\r\n                                        Rate <br />\r\n                                        Deliver/Spot\r\n                                    </th>\r\n                                    <th className={tdStyle + ' text-center'}>Discount</th>\r\n                                    <th className={tdStyle + ' text-center'}>Quality Condition</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {OrderItemsArray.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className={tdStyle}>{i + 1}</td>\r\n                                        <td className={tdStyle}>{o?.ItemName}</td>\r\n                                        <td className={tdStyle}>{o?.Weight + ' ' + o?.Units}</td>\r\n                                        <td className={tdStyle}>{o?.Rate}</td>\r\n                                        <td className={tdStyle}>{o?.Discount}</td>\r\n                                        <td className={tdStyle}>{o?.QualityCondition}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table className=\"table m-0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td className={tdStyle + ' text-primary fw-bold bg-light border-top-0'} colSpan={11}>DELIVERY DETAILS</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className={tdStyle + ' text-center'}>SNo</th>\r\n                                    <th className={tdStyle + ' text-center'}>Location</th>\r\n                                    <th className={tdStyle + ' text-center'}>Arrival Date</th>\r\n                                    <th className={tdStyle + ' text-center'}>Item Name</th>\r\n                                    <th className={tdStyle + ' text-center'}>Concern</th>\r\n\r\n                                    <th className={tdStyle + ' text-center'}>Bill No</th>\r\n                                    <th className={tdStyle + ' text-center'}>Bill Date</th>\r\n                                    <th className={tdStyle + ' text-center'}>Quantity</th>\r\n                                    <th className={tdStyle + ' text-center'}>Billed Rate</th>\r\n                                    <th className={tdStyle + ' text-center'}>Tonnage / KGs</th>\r\n                                    <th className={tdStyle + ' text-center'}>Batch / Location</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {DeliveryArray.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className={tdStyle}>{i + 1}</td>\r\n                                        <td className={tdStyle}>{o?.Location}</td>\r\n                                        <td className={tdStyle}>{o?.ArrivalDate ? LocalDate(o?.ArrivalDate) : ''}</td>\r\n                                        <td className={tdStyle}>{o?.ItemName}</td>\r\n                                        <td className={tdStyle}>{o?.Concern}</td>\r\n\r\n                                        <td className={tdStyle}>{o?.BillNo}</td>\r\n                                        <td className={tdStyle}>{o?.BillDate ? LocalDate(o?.BillDate) : ''}</td>\r\n                                        <td className={tdStyle}>{o?.Quantity}</td>\r\n                                        <td className={tdStyle}>{o?.BilledRate ?? 0}</td>\r\n                                        <td className={tdStyle}>{o?.Weight + ' ' + o?.Units}</td>\r\n                                        <td className={tdStyle}>{o?.BatchLocation}</td>\r\n\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table className=\"table m-0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td className={tdStyle + ' text-primary fw-bold bg-light border-top-0'} colSpan={9}>\r\n                                        OTHER DETAILS\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className={tdStyle + ' text-center'} rowSpan={2}>SNo</th>\r\n                                    <th className={tdStyle + ' text-center'} colSpan={2}>Loading Wt</th>\r\n                                    <th className={tdStyle + ' text-center'} colSpan={2}>Unloading Wt</th>\r\n                                    <th className={tdStyle + ' text-center'}>Weight</th>\r\n                                    <th className={tdStyle + ' text-center'} colSpan={3}>Transport Details</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className={tdStyle + ' text-center'}>Load</th>\r\n                                    <th className={tdStyle + ' text-center'}>Empty</th>\r\n                                    <th className={tdStyle + ' text-center'}>Load</th>\r\n                                    <th className={tdStyle + ' text-center'}>Empty</th>\r\n                                    <th className={tdStyle + ' text-center'}>EX / SH</th>\r\n                                    <th className={tdStyle + ' text-center'}>Name</th>\r\n                                    <th className={tdStyle + ' text-center'}>Vehicle No</th>\r\n                                    <th className={tdStyle + ' text-center'}>Phone Number</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {TranspoterArray.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className={tdStyle}>{i + 1}</td>\r\n                                        <td className={tdStyle}>{o?.Loading_Load}</td>\r\n                                        <td className={tdStyle}>{o?.Loading_Empty}</td>\r\n                                        <td className={tdStyle}>{o?.Unloading_Load}</td>\r\n                                        <td className={tdStyle}>{o?.Unloading_Empty}</td>\r\n                                        <td className={tdStyle}>{o?.EX_SH}</td>\r\n                                        <td className={tdStyle}>{o?.DriverName}</td>\r\n                                        <td className={tdStyle}>{o?.VehicleNo}</td>\r\n                                        <td className={tdStyle}>{o?.PhoneNumber}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PurchaseOrderPreviewTemplate;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');"],"names":["createSvgIcon","_jsx","d","isArr","arr","Array","isArray","purchaseOrderDataSet","_ref","data","status","reduce","acc","item","ItemDetails","itemDetails","map","o","_item$BrokerId","_item$OwnerId","_item$PartyId","_objectSpread","OrderDetails","Id","Sno","PoYear","PO_ID","BranchId","BrokerId","BrokerName","CreatedBy","CreatedAt","OrderStatus","StaffDetails","TranspoterDetails","DeliveryDetails","ConvertedAsInvoices","LoadingDate","IsConvertedAsInvoice","OwnerId","OwnerName","PartyAddress","PartyId","PartyName","PaymentCondition","Remarks","TradeConfirmDate","Ledger_Name","Party_District","isConvertableArrivalExist","toNumber","concat","_item$ItemDetails","filter","fil","_item$DeliveryDetails","WeightTotal","del","isEqualNumber","ItemId","sum","delivery","Addition","Weight","Number","filterableText","_item$BrokerId2","_item$OwnerId2","_item$PartyId2","_item$ItemDetails2","_item$DeliveryDetails2","_item$BrokerId3","_item$OwnerId3","_item$PartyId3","_item$BrokerId4","_item$OwnerId4","_item$PartyId4","_item$DeliveryDetails3","isGraterNumber","length","_item$DeliveryDetails4","statusColor","chooseColor","orderStatus","createCol","field","type","ColumnHeader","isVisible","Field_Name","Fied_Data","displayColumns","_ref2","dialogs","setOrderPreview","navigation","products","EditRights","DeleteRights","AddRights","isCustomCell","Cell","_ref3","_row$StaffDetails","row","staff","Cost_Category","Emp_Name","join","_ref4","_row$StaffDetails2","OrderPartyName","_ref5","_row$OrderDetails","OrderActions","_ref6","_jsxs","_Fragment","children","Tooltip","title","IconButton","size","color","onClick","pre","OrderItemsArray","DeliveryArray","TranspoterArray","StaffArray","display","Visibility","className","page","stateToTransfer","invoiceInfo","Branch_Id","Po_Inv_Date","ISOString","Po_Entry_Date","Retailer_Id","Retailer_Name","orderInfo","pendingInvoiceWeight","POI_St_Id","DeliveryId","Trip_Item_SNo","OrderId","Location_Id","LocationId","Item_Id","Bill_Qty","Act_Qty","Bill_Alt_Qty","Quantity","Item_Rate","BilledRate","Amount","Multiplication","Free_Qty","Batch_No","BatchLocation","staffInfo","Involved_Emp_Id","EmployeeId","Involved_Emp_Name","Cost_Center_Type_Id","CostType","ShoppingCartCheckout","editPage","Edit","deleteOrderDialog","deleteOrderId","Delete","GeneralStatus","_ref7","String","replace","OrderPO_ID","ItemPO_ID","_ref8","_row$OrderDetails$PO_","_row$OrderDetails2","ItemName","Rate","WeightWithUOM","_ref9","checkIsNumber","NumberFormat","ItemArrivedQuantity","_ref10","_row$OrderDetails3","_row$OrderDetails3$De","PendingItemQuantity","_ref11","_row$OrderDetails4","_row$OrderDetails4$De","Subraction","ItemTradeConfirmDate","_ref12","_row$OrderDetails5","LocalDate","ItemOwnerName","_ref14","ItemBrokerName","_ref15","ItemActions","_ref16","ArrivedDate","_ref17","ArrivalDate","ArrivedLocation","ArrivalRate","_ref18","_row$OrderDetails7","_row$OrderDetails8","_OrderedItems$find$Ra","_OrderedItems$find","OrderedRate","find","ItemLOLLedgerName","_ref19","_row$OrderDetails9","ItemLOLPartyDistrict","_ref20","_row$OrderDetails10","StockItem","StockGroup","_OrderDetails$PartyNa","_OrderDetails$PartyAd","_OrderDetails$Payment","_OrderDetails$Remarks","onCloseDialog","dialog","setDialog","useState","tdStyle","printRef","useRef","useEffect","closeDialog","handlePrint","useReactToPrint","content","current","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","Button","startIcon","Download","variant","DialogContent","ref","colSpan","i","Units","Discount","QualityCondition","_o$BilledRate","Location","Concern","BillNo","BillDate","rowSpan","Loading_Load","Loading_Empty","Unloading_Load","Unloading_Empty","EX_SH","DriverName","VehicleNo","PhoneNumber","DialogActions"],"sourceRoot":""}
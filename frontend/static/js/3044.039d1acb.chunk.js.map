{"version":3,"file":"static/js/3044.039d1acb.chunk.js","mappings":"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","sources":["Pages/Reports/productclosingStockReports.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n\r\n  ISOString\r\n} from \"../../Components/functions\";\r\n\r\nimport { Card } from \"@mui/material\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport FilterableTable, { createCol }  from \"../../Components/filterableTable2\";\r\n\r\nfunction ProductclosingStockReports({ loadingOn, loadingOff }) {\r\n\r\n  const initialValue = {\r\n    Id: 0,\r\n    fromDate: ISOString(),\r\n    ToDate: ISOString(),\r\n    godown_Id: \"\",\r\n    godown_Name: \"\",\r\n    reqDate: ISOString(),\r\n    reqLocation: \"MILL\",\r\n    dialog: false,\r\n  };\r\n  const [activityData, setActivityData] = useState([]);\r\n\r\n  const [reload, setReload] = useState(false);\r\n  const [filter, setFilter] = useState(initialValue);\r\n  const [location, setLocation] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (loadingOn) loadingOn();\r\n    fetchLink({\r\n      address: `delivery/closingStock?fromDate=${filter?.fromDate}&toDate=${filter?.ToDate}&godownId=${filter.godown_Id}`,\r\n    })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          setActivityData(data.data);\r\n        }\r\n      })\r\n      .catch((e) => console.error(e))\r\n      .finally(() => {\r\n        if (loadingOff) {\r\n          loadingOff();\r\n        }\r\n      });\r\n  }, [reload, filter.fromDate, filter.ToDate, filter?.godown_Id]);\r\n\r\n  useEffect(() => {\r\n    fetchLink({\r\n      address: `dataEntry/godownLocationMaster`,\r\n    }).then((data) => {\r\n      if (data.success) {\r\n        setLocation(data.data);\r\n        setReload(true)\r\n      }\r\n    });\r\n  }, []);\r\n\r\n\r\n  const ExpendableComponent = ({ row }) => {\r\n    return (\r\n      <table className=\"table w-full\">\r\n        <tbody>\r\n        \r\n           \r\n         \r\n              <table className=\"table table-sm w-full\">\r\n                <thead>\r\n                  <tr className=\"bg-secondary text-white\">\r\n                    <th className=\"border p-1\">Product Name</th>\r\n                    <th className=\"border p-1\">Opening Stock</th>\r\n                    <th className=\"border p-1\">Total Arrival</th>\r\n                    <th className=\"border p-1\">Total Delivery</th>\r\n                    <th className=\"border p-1\">Closing Stock</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {row?.Products?.map((data, i) => (\r\n                    <tr key={data.Product_Id}>\r\n                      <td className=\"border p-1\">{data.Product_Name}</td>\r\n                      <td className=\"border p-1 text-center\">{data.OpeningStock}</td>\r\n                      <td className=\"border p-1 text-center\">{data.Total_Arrival}</td>\r\n                      <td className=\"border p-1 text-center\">{data.Total_Delivery}</td>\r\n                      <td className=\"border p-1 text-center\">{data.ClosingStock}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n          \r\n         \r\n  \r\n        \r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Card>\r\n        <div className=\"p-2 border-bottom fa-16 fw-bold d-flex justify-content-between align-items-center\">\r\n          <span className=\"text-primary text-uppercase ps-3\">\r\n            Stock Reports\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"d-flex px-3 gap-4\">\r\n          <div className=\"d-flex flex-column\">\r\n            <label className=\"mb-1 w-100\">FROM DATE</label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"cus-inpt w-auto\"\r\n              value={filter.fromDate}\r\n              onChange={(e) =>\r\n                setFilter((pre) => ({ ...pre, fromDate: e.target.value }))\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-column\">\r\n            <label className=\"mb-1 w-100\">TO DATE</label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"cus-inpt w-auto\"\r\n              value={filter.ToDate}\r\n              onChange={(e) =>\r\n                setFilter((pre) => ({ ...pre, ToDate: e.target.value }))\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"d-flex flex-column\">\r\n            <label className=\"mb-1 w-100\">LOCATION</label>\r\n            <select\r\n              className=\"cus-inpt w-auto\"\r\n              onChange={(e) => {\r\n                const value =\r\n                  e.target.value === \"\" ? \"\" : Number(e.target.value);\r\n                setFilter({ ...filter, godown_Id: value });\r\n              }}\r\n              value={filter?.godown_Id || \"\"}\r\n            >\r\n              <option value=\"\" label=\"ALL\">\r\n                select Branch\r\n              </option>\r\n              {location.map((loc, ind) => (\r\n                <option value={loc.Godown_Id} key={ind}>\r\n                  {loc.Godown_Name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <FilterableTable\r\n                title=\"Opening Stock\"\r\n                dataArray={activityData}\r\n                EnableSerialNumber\r\n                columns={[\r\n                    createCol('Pro_Group', 'string', 'Product_Group')\r\n                ]}\r\n             \r\n                // EnableSerialNumber={true}\r\n                isExpendable={true}\r\n                tableMaxHeight={550}\r\n                expandableComp={ExpendableComponent}\r\n            />\r\n       \r\n      </Card>\r\n\r\n      {/*      \r\n            <datalist id='staffList'>\r\n                {staffs.map((o, i) => <option key={i} value={o.WeingtCheckedBy} />)}\r\n            </datalist>\r\n\r\n            <datalist id='StockItem'>\r\n                {stockItems.map((o, i) => <option key={i} value={o.StockItem} />)}\r\n            </datalist> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductclosingStockReports;\r\n"],"names":["_ref","loadingOn","loadingOff","initialValue","Id","fromDate","ISOString","ToDate","godown_Id","godown_Name","reqDate","reqLocation","dialog","activityData","setActivityData","useState","reload","setReload","filter","setFilter","location","setLocation","useEffect","fetchLink","address","then","data","success","catch","e","console","error","finally","_jsx","_Fragment","children","_jsxs","Card","className","type","value","onChange","pre","target","Number","label","map","loc","ind","Godown_Id","Godown_Name","FilterableTable","title","dataArray","EnableSerialNumber","columns","createCol","isExpendable","tableMaxHeight","expandableComp","_ref2","_row$Products","row","Products","i","Product_Name","OpeningStock","Total_Arrival","Total_Delivery","ClosingStock","Product_Id"],"sourceRoot":""}
{"version":3,"file":"static/js/4764.ee02c14b.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","Components/requiredStar.jsx","Components/tablecolumn.js","Pages/Receipts/ReceiptMaster/salesReceipt.jsx","Pages/Receipts/ReceiptMaster/chooseReceipt.jsx","Pages/Receipts/ReceiptMaster/displayStockJournal.jsx","Pages/Receipts/ReceiptMaster/listCostingDetail.jsx","Pages/Receipts/ReceiptMaster/expencesReceipt.jsx","Pages/Receipts/ReceiptMaster/addReference.jsx","Pages/Receipts/ReceiptMaster/variable.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Done.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name]\r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign]\r\n * @property {string} [ColumnHeader]\r\n * @property {string} [tdClass]\r\n * @property {0|1} [isVisible]\r\n * @property {'left'|'right'|'center'} [align]\r\n * @property {boolean} [isCustomCell]\r\n * @property {(row: object) => JSX.Element} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name]\r\n * @property {JSX.Element} [icon]\r\n * @property {() => void} [onclick]\r\n * @property {boolean} [disabled]\r\n */\r\n\r\n/**\r\n * @typedef {Object} FilterableTableProps\r\n * @property {Array<Object>} [dataArray]\r\n * @property {Array<Column>} [columns]\r\n * @property {Function} [onClickFun]\r\n * @property {boolean} [isExpendable]\r\n * @property {JSX.Element} [expandableComp]\r\n * @property {number} [tableMaxHeight]\r\n * @property {number} [initialPageCount]\r\n * @property {boolean} [EnableSerialNumber]\r\n * @property {'small'|'medium'|'large'} [CellSize]\r\n * @property {boolean} [disablePagination]\r\n * @property {string} [title]\r\n * @property {boolean} [PDFPrintOption]\r\n * @property {boolean} [ExcelPrintOption]\r\n * @property {boolean} [maxHeightOption]\r\n * @property {JSX.Element} [ButtonArea]\r\n * @property {Array<Menu>} [MenuButtons]\r\n * @property {number} [bodyFontSizePx]\r\n * @property {number} [headerFontSizePx]\r\n */\r\n\r\n/**\r\n * @param {FilterableTableProps} props\r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (\r\n    field = '', \r\n    type = 'string', \r\n    ColumnHeader = '', \r\n    align = 'left', \r\n    verticalAlign = 'center', \r\n    isVisible = 1\r\n) => {\r\n    return {\r\n        isVisible: isVisible,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return val ? NumberFormat(val) : val;\r\n        case 'date':\r\n            return val ? LocalDate(val) : val;\r\n        case 'time':\r\n            return val ? LocalTime(val) : val;\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n\r\n                        const tdClass = (row, Field_Name, tdIndex) => (\r\n                            column?.tdClass ? ` ${column?.tdClass({ row, Field_Name, index: tdIndex })} ` : ''\r\n                        );\r\n\r\n                        const horizondalalignClass = column.align\r\n                            ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                            : '';\r\n\r\n                        const verticalAlignClass = column.verticalAlign\r\n                            ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class\r\n                            : ' vctr ';\r\n\r\n                        if (isColumnVisible && isCommonValue) {\r\n                            const foundEntry = Object.entries(row).find(([key]) => key === column.Field_Name);\r\n\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {foundEntry ? formatString(foundEntry[1], column?.Fied_Data) : '-'}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        if (isColumnVisible && isCustomCell) {\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ${horizondalalignClass} ${verticalAlignClass}`}\r\n                            >\r\n                                -\r\n                            </TableCell>\r\n                        );\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name)\r\n                                                    ? ' fw-bold border-end border-top p-2 appFont '\r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align\r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func,\r\n        tdClass: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n    formatString\r\n}","const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { Addition, checkIsNumber, isEqualNumber, LocalDate, NumberFormat, onlynum, RoundNumber, stringCompare, Subraction, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { Close, Delete } from \"@mui/icons-material\";\r\nimport FilterableTable, { ButtonActions, createCol } from \"../../../Components/filterableTable2\";\r\nimport { receiptBillInfoInitialValue } from \"./variable\";\r\n\r\n\r\n\r\nconst SalesInvoiceReceipt = ({\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    receiptValue = {},\r\n    receiptBillInfo = [],\r\n    setReceiptBillInfo,\r\n    filters,\r\n    baseData,\r\n    setreceiptValue,\r\n    updateFilterData,\r\n    updateBaseData,\r\n    closeDialog,\r\n}) => {\r\n\r\n    const onClickSalesInvoice = (invoiceDetails, deleteOption) => {\r\n        setReceiptBillInfo(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !(\r\n                stringCompare(o?.bill_name, invoiceDetails.bill_name) &&\r\n                isEqualNumber(o?.bill_id, invoiceDetails?.bill_id)\r\n            ));\r\n\r\n            let updateBillInfo;\r\n            if (deleteOption) {\r\n                updateBillInfo = excludeCurrentValue;\r\n            } else {\r\n                const reStruc = Object.fromEntries(\r\n                    Object.entries(receiptBillInfoInitialValue).map(([key, value]) => {\r\n                        switch (key) {\r\n                            case 'bill_id': return [key, invoiceDetails?.Do_Id];\r\n                            case 'bill_name': return [key, invoiceDetails?.Do_Inv_No];\r\n                            case 'bill_amount': return [key, toNumber(invoiceDetails?.Total_Invoice_value)];\r\n                            case 'Debit_Amo': return [key, 0];\r\n                            case 'Credit_Amo': return [key, 0];\r\n                            case 'JournalBillType': return [key, 'SALES INVOICE'];\r\n\r\n                            case 'SalesInvoiceDate': return [key, invoiceDetails.Do_Date];\r\n                            case 'TotalPaidAmount': return [key, invoiceDetails.totalReference];\r\n                            case 'PendingAmount': return [key, Subraction(\r\n                                invoiceDetails?.Total_Invoice_value,\r\n                                invoiceDetails.totalReference\r\n                            )];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                )\r\n                updateBillInfo = [...excludeCurrentValue, reStruc];\r\n            }\r\n            return updateBillInfo;\r\n        })\r\n    }\r\n\r\n    const onChangeAmount = (invoice, amount) => {\r\n        setReceiptBillInfo(pre => {\r\n            const selectedInvoices = [...pre];\r\n\r\n            const indexOfInvoice = selectedInvoices.findIndex(\r\n                inv => (\r\n                    stringCompare(invoice.bill_name, inv.bill_name) &&\r\n                    isEqualNumber(invoice.bill_id, inv.bill_id)\r\n                )\r\n            );\r\n\r\n            if (indexOfInvoice !== -1) {\r\n                selectedInvoices[indexOfInvoice].Credit_Amo = toNumber(amount);\r\n            }\r\n            return selectedInvoices;\r\n        })\r\n    }\r\n\r\n    const onInputValidate = (input, max) => {\r\n        const inputValue = checkIsNumber(input) ? RoundNumber(input) : 0;\r\n        return inputValue < max ? inputValue : max;\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered fa-13\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Against Reference</th>\r\n                            <th colSpan={6} className=\"text-end\">\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"outlined\"\r\n                                    disabled={toArray(baseData.salesInvoiceSearchResult).length === 0}\r\n                                    onClick={() => updateFilterData('selectSalesInvoice', true)}\r\n                                >Add reference</Button>\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            {['Sno', 'Sales InvoiceNo', 'Date', 'Invoice Value',\r\n                                'Paid Amount',\r\n                                // 'Pending Amount',\r\n                                'Payment Amount', 'Action'].map(\r\n                                    (col, colInd) => <th key={colInd} className=\"bg-light text-muted\">{col}</th>\r\n                                )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {receiptBillInfo.map(\r\n                            (invoice, invoiceInd) => (\r\n                                <tr key={invoiceInd}>\r\n                                    <td>{invoiceInd + 1}</td>\r\n                                    <td>{invoice?.bill_name}</td>\r\n                                    <td>{LocalDate(invoice?.SalesInvoiceDate)}</td>\r\n                                    <td>{NumberFormat(invoice?.bill_amount)}</td>\r\n                                    <td>{invoice?.TotalPaidAmount}</td>\r\n                                    {/* <td>{Subraction(invoice?.bill_amount, invoice?.TotalPaidAmount)}</td> */}\r\n                                    <td className=\"p-0\">\r\n                                        <input\r\n                                            value={invoice.Credit_Amo || ''}\r\n                                            className=\"cus-inpt p-2 border-0 text-primary\"\r\n                                            placeholder=\"Enter Amount\"\r\n                                            type=\"number\"\r\n                                            onChange={e => {\r\n                                                const maxAmount = Subraction(invoice?.bill_amount, invoice?.TotalPaidAmount);\r\n                                                const validated = onInputValidate(e.target.value, maxAmount);\r\n                                                onChangeAmount(invoice, validated);\r\n                                            }}\r\n                                        />\r\n\r\n                                    </td>\r\n                                    <td className=\"p-0 vctr cntr\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => onClickSalesInvoice(invoice, true)}\r\n                                        ><Delete className=\"fa-20\" color=\"error\" /></IconButton>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        )}\r\n                        <tr>\r\n                            <td colSpan={3} className=\"text-end fw-bold\">Total</td>\r\n                            <td className=\"fw-bold text-muted\">\r\n                                {receiptBillInfo.reduce(\r\n                                    (acc, invoice) => Addition(acc, invoice.bill_amount), 0\r\n                                )}\r\n                            </td>\r\n                            <td></td>\r\n                            <td className=\"fw-bold text-muted\">\r\n                                {receiptBillInfo.reduce(\r\n                                    (acc, invoice) => Addition(acc, invoice.Credit_Amo), 0\r\n                                )}\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n            <Dialog\r\n                open={filters.selectSalesInvoice}\r\n                onClose={closeDialog} fullScreen\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Add Ref - Sales Invoice</span>\r\n                    <IconButton onClick={closeDialog}><Close color=\"error\" /></IconButton>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <table className=\"table table-bordered fa-13\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Pending Invoices</th>\r\n                                <th colSpan={6} className=\"text-end\">\r\n\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                {['Sno', 'Sales InvoiceNo', 'Source', 'Date', 'Invoice Value', 'Paid Amount', 'Pending Amount', '#'].map(\r\n                                    (col, colInd) => <td key={colInd}>{col}</td>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {baseData.salesInvoiceSearchResult.map(\r\n                                (invoice, invoiceInd) => (\r\n                                    <tr key={invoiceInd}>\r\n                                        <td>{invoiceInd + 1}</td>\r\n                                        <td>{invoice?.Do_Inv_No}</td>\r\n                                        <td>{invoice?.dataSource}</td>\r\n                                        <td>{LocalDate(invoice?.Do_Date)}</td>\r\n                                        <td>{invoice?.Total_Invoice_value}</td>\r\n                                        <td>{invoice?.Paid_Amount}</td>\r\n                                        <td>{Subraction(invoice?.Total_Invoice_value, invoice?.totalReference)}</td>\r\n                                        <td>\r\n                                            {(() => {\r\n                                                const isChecked = receiptBillInfo.findIndex(o =>\r\n                                                    stringCompare(o?.bill_name, invoice.Do_Inv_No)\r\n                                                ) !== -1;\r\n\r\n                                                return (\r\n                                                    <div>\r\n                                                        <input\r\n                                                            className=\"form-check-input shadow-none pointer\"\r\n                                                            style={{ padding: '0.7em' }}\r\n                                                            type=\"checkbox\"\r\n                                                            checked={isChecked}\r\n                                                            onChange={() => {\r\n                                                                if (isChecked) onClickSalesInvoice({\r\n                                                                    ...invoice, \r\n                                                                    bill_name: invoice.Do_Inv_No,\r\n                                                                    bill_id: invoice.Do_Id\r\n                                                                }, true)\r\n                                                                else onClickSalesInvoice({\r\n                                                                    ...invoice, \r\n                                                                    bill_name: invoice.Do_Inv_No,\r\n                                                                    bill_id: invoice.Do_Id\r\n                                                                })\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                )\r\n                                            })()}\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            )}\r\n                            <tr>\r\n                                <td colSpan={4} rowSpan={3}></td>\r\n                                <td>Total Amount: </td>\r\n                                <td colSpan={2} className=\"fw-bold fa-15\">\r\n                                    {baseData.salesInvoiceSearchResult.reduce(\r\n                                        (acc, invoice) => Addition(acc, invoice?.Total_Invoice_value), 0\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Selected Bill Amount: </td>\r\n                                <td colSpan={2} className=\"text-primary fw-bold\">\r\n                                    {baseData.salesInvoiceSearchResult.reduce(\r\n                                        (acc, invoice) => {\r\n                                            const isChecked = receiptBillInfo.findIndex(o =>\r\n                                                isEqualNumber(o?.bill_id, invoice.Do_Id)\r\n                                            ) !== -1;\r\n\r\n                                            if (isChecked) return Addition(acc, invoice?.Total_Invoice_value);\r\n\r\n                                            return acc\r\n                                        }, 0\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Pending Bill Amount: </td>\r\n                                <td colSpan={2} className=\"text-danger\">\r\n                                    {baseData.salesInvoiceSearchResult.reduce(\r\n                                        (acc, invoice) => {\r\n                                            const isNotChecked = receiptBillInfo.findIndex(o =>\r\n                                                isEqualNumber(o?.bill_id, invoice.Do_Id)\r\n                                            ) === -1;\r\n\r\n                                            if (isNotChecked) return Addition(acc, invoice?.Total_Invoice_value);\r\n\r\n                                            return acc\r\n                                        }, 0\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SalesInvoiceReceipt;","import { Button, Dialog, DialogContent, DialogTitle, DialogActions, IconButton } from \"@mui/material\";\r\nimport { Addition, checkIsNumber, isEqualNumber, NumberFormat, Subraction, toArray } from \"../../../Components/functions\";\r\nimport { receiptTypes } from \"./variable\";\r\nimport { Close, Search, Done } from \"@mui/icons-material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { toast } from 'react-toastify';\r\nimport { useMemo } from \"react\";\r\n\r\nconst ChooseReceiptComponent = ({\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    receiptValue = {},\r\n    receiptBillInfo = [],\r\n    filters,\r\n    baseData,\r\n    setReceiptValue,\r\n    updateFilterData,\r\n    updateBaseData,\r\n    closeDialog,\r\n    loadingOn,\r\n    loadingOff\r\n}) => {\r\n\r\n    const searchReceipts = (debitAccount, creditAccount, receiptType) => {\r\n\r\n        if (!checkIsNumber(receiptType)) return toast.warn('Select Bill Type')\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/search?debit_ledger=${debitAccount}&credit_ledger=${creditAccount}&receipt_bill_type=${receiptType}`,\r\n            loadingOn,\r\n            loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                updateBaseData('receiptInvoiceSearchResult', toArray(data.data))\r\n            }\r\n        })\r\n    }\r\n\r\n    const onSelectReceipt = (invoiceDetails) => {\r\n        setReceiptValue(pre => {\r\n            return Object.fromEntries(\r\n                Object.entries(pre).map(([key, value]) => [key, invoiceDetails[key] || value])\r\n            )\r\n        })\r\n    }\r\n\r\n    const TotalAgainstRef = useMemo(() => {\r\n        return receiptBillInfo.reduce(\r\n            (acc, invoice) => Addition(acc, invoice.Credit_Amo), 0\r\n        )\r\n    }, [receiptBillInfo]);\r\n\r\n    const PendingAgainstRef = useMemo(() => {\r\n        return Subraction(receiptValue.credit_amount, TotalAgainstRef)\r\n    }, [TotalAgainstRef, receiptValue.credit_amount])\r\n\r\n    return (\r\n        <>\r\n            {/* choose Receipt */}\r\n            <table className=\"table table-bordered fa-13\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Receipt Details</th>\r\n                        <th colSpan={5} className=\"text-end\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                type=\"button\"\r\n                                onClick={() => updateFilterData('selectReceiptDialog', true)}\r\n                            >Choose Receipt</Button>\r\n                        </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th className=\"text-muted\">Receipt Type</th>\r\n                        <td style={cellStyle}>\r\n                            {receiptTypes.find(\r\n                                type => isEqualNumber(type.value, receiptValue.receipt_bill_type)\r\n                            ).label}\r\n                        </td>\r\n\r\n                        <th className=\"text-muted\">Debit Account</th>\r\n                        <td style={cellStyle}>{receiptValue.debit_ledger_name}</td>\r\n\r\n                        <th className=\"text-muted\">Receipt Value</th>\r\n                        <td style={cellStyle} className=\"text-primary fw-bold\">{NumberFormat(receiptValue.credit_amount)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th className=\"text-muted\">Receipt No</th>\r\n                        <td style={cellStyle}>{receiptValue.receipt_invoice_no}</td>\r\n\r\n                        <th className=\"text-muted\">Credit Account</th>\r\n                        <td style={cellStyle}>{receiptValue.credit_ledger_name}</td>\r\n\r\n                        <th className=\"text-muted\">Against balance</th>\r\n                        <td style={cellStyle} className=\"text-danger fw-bold\">{NumberFormat(PendingAgainstRef)}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <Dialog\r\n                open={filters.selectReceiptDialog}\r\n                onClose={closeDialog} fullScreen\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Choose Receipt </span>\r\n                    <IconButton onClick={closeDialog}><Close color=\"error\" /></IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"row\">\r\n\r\n                        {/* Receipt type */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                            <label>Receipt Type<RequiredStar /></label>\r\n                            <Select\r\n                                value={filters.receiptType}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => updateFilterData('receiptType', e)}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...receiptTypes\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                required\r\n                                placeholder={\"Select payment type\"}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* debit account */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                            <label>Debit Account</label>\r\n                            <Select\r\n                                value={filters.debitAccount}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => updateFilterData('debitAccount', e)}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...toArray(baseData.accounts).map(\r\n                                        acc => ({\r\n                                            value: acc.Acc_Id,\r\n                                            label: acc.Account_name\r\n                                        })\r\n                                    )\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                required\r\n                                placeholder={\"Select Debit Account\"}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* credit account */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                            <label>Credit Account</label>\r\n                            <Select\r\n                                value={filters.creditAccount}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => updateFilterData('creditAccount', e)}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...toArray(baseData.accounts).map(\r\n                                        acc => ({\r\n                                            value: acc.Acc_Id,\r\n                                            label: acc.Account_name\r\n                                        })\r\n                                    )\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                required\r\n                                placeholder={\"Select Credit Account\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2 d-flex flex-column\">\r\n                            <div className=\"mt-auto\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    startIcon={<Search />}\r\n                                    onClick={() => searchReceipts(\r\n                                        filters.debitAccount.value,\r\n                                        filters.creditAccount.value,\r\n                                        filters.receiptType.value,\r\n                                    )}\r\n                                >\r\n                                    Search\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <FilterableTable\r\n                        title=\"Receipts List\"\r\n                        EnableSerialNumber\r\n                        headerFontSizePx={13}\r\n                        bodyFontSizePx={12}\r\n                        tableMaxHeight={450}\r\n                        dataArray={baseData.receiptInvoiceSearchResult}\r\n                        columns={[\r\n                            createCol('receipt_invoice_no', 'string', 'InvoiceNo'),\r\n                            createCol('receipt_date', 'date', 'Date'),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Bill Type',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => (\r\n                                    receiptTypes.find(type => isEqualNumber(type.value, row?.receipt_bill_type)).label\r\n                                )\r\n                            },\r\n                            createCol('debit_ledger_name', 'string', 'Debit Acc'),\r\n                            createCol('credit_ledger_name', 'string', 'Credit Acc'),\r\n                            createCol('credit_amount', 'number', 'Amount'),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Pending Ref Amount',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => Subraction(row?.credit_amount, row?.TotalReferenceAdded)\r\n                            },\r\n                            createCol('credit_amount', 'number', ''),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Action',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => (\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            onSelectReceipt(row);\r\n                                            closeDialog();\r\n                                            updateFilterData('receiptType', initialSelectValue);\r\n                                            updateFilterData('debitAccount', initialSelectValue);\r\n                                            updateFilterData('creditAccount', initialSelectValue);\r\n                                        }}\r\n                                    ><Done className=\"fa-20\" /></IconButton>\r\n                                )\r\n                            }\r\n                        ]}\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChooseReceiptComponent;","import { useState } from \"react\"\r\nimport { isEqualNumber, LocalDate } from \"../../../Components/functions\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Done, KeyboardArrowDown, KeyboardArrowUp } from \"@mui/icons-material\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\n\r\n\r\n\r\nconst DisplayStockJournal = ({\r\n    arrayData = [],\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    receiptBillInfo = [],\r\n    onSelect\r\n}) => {\r\n\r\n    const TableRows = ({ row = {}, sno }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const isProcessing = row?.BillType === 'PROCESSING';\r\n\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td>{sno}</td>\r\n                    <td>{row?.journalVoucherNo || '-'}</td>\r\n                    <td>{row?.journalDate ? LocalDate(row?.journalDate) : '-'}</td>\r\n                    <td>{row?.BillType || '-'}</td>\r\n                    <td>{row?.voucherTypeGet || '-'}</td>\r\n                    <td>{row?.narration || '-'}</td>\r\n                    <td>{row?.paidAmount}</td>\r\n                    <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            {(() => {\r\n                                const isChecked = receiptBillInfo.findIndex(o =>\r\n                                    isEqualNumber(o?.bill_id, row.journalId)\r\n                                ) !== -1;\r\n\r\n                                return (\r\n                                    <div>\r\n                                        <input\r\n                                            className=\"form-check-input shadow-none pointer\"\r\n                                            style={{ padding: '0.7em' }}\r\n                                            type=\"checkbox\"\r\n                                            checked={isChecked}\r\n                                            onChange={() => {\r\n                                                if (isChecked) onSelect(row, true)\r\n                                                else onSelect(row)\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })()}\r\n\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                className=\"mx-1\"\r\n                                onClick={() => setOpen(pre => !pre)}\r\n                            >\r\n                                {open ? <KeyboardArrowUp className=\"fa-20\" /> : <KeyboardArrowDown className=\"fa-20\" />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n\r\n                {open && (\r\n                    <tr>\r\n                        <td colSpan={8} className=\"p-4\">\r\n\r\n                            <div className=\"row \">\r\n\r\n                                {isProcessing && (\r\n                                    <div className={\"col-md-6 p-1\"}>\r\n                                        <FilterableTable\r\n                                            title=\"Source\"\r\n                                            headerFontSizePx={11}\r\n                                            bodyFontSizePx={11}\r\n                                            EnableSerialNumber\r\n                                            dataArray={row?.SourceDetails}\r\n                                            columns={[\r\n                                                createCol('Product_Name', 'string', 'Item'),\r\n                                                createCol('Godown_Name', 'string', 'From'),\r\n                                                createCol('Sour_Qty', 'number', 'QTY'),\r\n                                            ]}\r\n                                            disablePagination\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                <div className={isProcessing ? \"col-md-6 p-1\" : 'col-12 p-1'}>\r\n                                    <FilterableTable\r\n                                        title={isProcessing ? \"Destination\" : 'Items'}\r\n                                        headerFontSizePx={11}\r\n                                        bodyFontSizePx={11}\r\n                                        EnableSerialNumber\r\n                                        dataArray={row?.Products_List}\r\n                                        columns={[\r\n                                            createCol('productNameGet', 'string', 'Item'),\r\n                                            ...(!isProcessing ? [\r\n                                                createCol('fromLocationGet', 'string', 'From'),\r\n                                            ] : []),\r\n                                            createCol('toLocationGet', 'string', 'To'),\r\n                                            createCol('quantity', 'number', 'QTY'),\r\n                                            createCol('expence_value', 'number', 'Expence'),\r\n                                        ]}\r\n                                        disablePagination\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered fa-12\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-primary fa-15 vctr\" colSpan={3} >Stock Journal</th>\r\n                            <th colSpan={5} className=\"text-end\"></th>\r\n                        </tr>\r\n                        <tr>\r\n                            {['Sno', 'Journal-No', 'Date', 'Journal Type', 'Voucher', 'Narration', 'Paid Amount', '#'].map(\r\n                                (col, colInd) => <td key={colInd}>{col}</td>\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {arrayData.map((journal, jouInd) => <TableRows row={journal} sno={jouInd + 1} key={jouInd} />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayStockJournal","import { Delete, KeyboardArrowDown, KeyboardArrowUp } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// Local utility functions\r\nconst toNumber = (val) => Number(val) || 0;\r\n\r\nconst add = (a, b) => toNumber(a) + toNumber(b);\r\nconst subtract = (a, b) => toNumber(a) - toNumber(b);\r\nconst multiply = (a, b) => toNumber(a) * toNumber(b);\r\nconst divide = (a, b) => b !== 0 ? toNumber(a) / toNumber(b) : 0;\r\nconst roundNumber = (num, precision = 2) => Number(toNumber(num).toFixed(precision));\r\nconst isEqualNumber = (a, b) => toNumber(a) === toNumber(b);\r\nconst numberFormat = (num) => new Intl.NumberFormat().format(toNumber(num));\r\nconst localDate = (dateStr) => new Date(dateStr).toLocaleDateString();\r\n\r\nconst ListCostingDetails = ({\r\n    receiptBillInfo = [],\r\n    receiptCostingInfo = [],\r\n    setReceiptBillInfo,\r\n    setReceiptCostingInfo,\r\n    onInputValidate,\r\n    onSelectStockJournal,\r\n    journalAmountOnChange,\r\n}) => {\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const onChangeAmount = (itemDetails, amount) => {\r\n        setReceiptCostingInfo((pre) => {\r\n            const selectedItem = [...pre];\r\n            const indexOfInvoice = selectedItem.findIndex(\r\n                (inv) =>\r\n                    isEqualNumber(itemDetails.bill_id, inv.bill_id) &&\r\n                    isEqualNumber(itemDetails.item_id, inv.item_id) &&\r\n                    isEqualNumber(itemDetails.arr_id, inv.arr_id)\r\n            );\r\n\r\n            if (indexOfInvoice !== -1) {\r\n                selectedItem[indexOfInvoice].expence_value = toNumber(amount);\r\n            }\r\n            return selectedItem;\r\n        });\r\n    };\r\n\r\n    // Weighted average distribution when user enters journal amount\r\n    const onChangeJournalAmount = (journal, amount = 0) => {\r\n        const totalAmount = toNumber(amount);\r\n\r\n        setReceiptBillInfo((pre) => {\r\n            const updated = [...pre];\r\n            const index = updated.findIndex((b) => isEqualNumber(b.bill_id, journal.bill_id));\r\n            if (index !== -1) updated[index].Credit_Amo = totalAmount;\r\n            return updated;\r\n        });\r\n\r\n        setReceiptCostingInfo((prev) => {\r\n            const items = prev.filter((item) => isEqualNumber(item.bill_id, journal.bill_id));\r\n\r\n            // const shouldDistribute = items.every((item) => !item.expence_value || Number(item.expence_value) === 0);\r\n\r\n            // if (!shouldDistribute || items.length === 0) return prev;\r\n\r\n            const totalQty = items.reduce((sum, item) => add(sum, item.itemQuantity), 0);\r\n            const unitCost = divide(totalAmount, totalQty);\r\n\r\n            let distributed = 0;\r\n\r\n            const updatedItems = items.map((item, index) => {\r\n                const weighted = roundNumber(multiply(item.itemQuantity, unitCost));\r\n                if (index < items.length - 1) {\r\n                    distributed = add(distributed, weighted);\r\n                    return {\r\n                        ...item,\r\n                        expence_value: weighted,\r\n                    };\r\n                } else {\r\n                    return {\r\n                        ...item,\r\n                        expence_value: roundNumber(subtract(totalAmount, distributed)),\r\n                    };\r\n                }\r\n            });\r\n\r\n            return prev.map((item) => {\r\n                if (isEqualNumber(item.bill_id, journal.bill_id)) {\r\n                    const updated = updatedItems.find((i) => (\r\n                        isEqualNumber(i.item_id, item.item_id) &&\r\n                        isEqualNumber(i.arr_id, item.arr_id)\r\n                    ));\r\n                    return updated || item;\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                {receiptBillInfo.map((journal, journalIndex) => (\r\n                    <table className=\"table table-bordered fa-12 my-3\" key={journalIndex}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"bg-light\">{journalIndex + 1}</th>\r\n                                <th className=\"bg-light text-primary vctr\">{journal.bill_name}</th>\r\n                                <th className=\"bg-light\">\r\n                                    Date: {journal.StockJournalDate ? localDate(journal.StockJournalDate) : \"-\"}\r\n                                </th>\r\n                                <th className=\"bg-light\">{journal.JournalBillType}</th>\r\n                                <th className=\"bg-light\">Paid: {journal.TotalPaidAmount}</th>\r\n                                <th className=\"bg-light vctr p-0 text-end\">\r\n                                    <input\r\n                                        value={journal.Credit_Amo || \"\"}\r\n                                        className=\"cus-inpt p-2 border-dark text-primary bg-light\"\r\n                                        placeholder=\"Enter Amount\"\r\n                                        type=\"number\"\r\n                                        onChange={(e) => onChangeJournalAmount(journal, e.target.value)}\r\n                                    />\r\n                                </th>\r\n                                <th className=\"bg-light vctr p-0 text-end\">\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() =>\r\n                                            onSelectStockJournal(\r\n                                                {\r\n                                                    ...journal,\r\n                                                    journalId: journal.bill_id,\r\n                                                },\r\n                                                true\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <Delete className=\"fa-20\" color=\"error\" />\r\n                                    </IconButton>\r\n                                    {/* \r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        className=\"mx-1\"\r\n                                        onClick={() => setOpen((pre) => !pre)}\r\n                                    >\r\n                                        {open ? (\r\n                                            <KeyboardArrowUp className=\"fa-20\" />\r\n                                        ) : (\r\n                                            <KeyboardArrowDown className=\"fa-20\" />\r\n                                        )}\r\n                                    </IconButton> \r\n                                    */}\r\n                                </th>\r\n                            </tr>\r\n\r\n                            {open && (\r\n                                <tr>\r\n                                    <td className=\"vctr\">Sno</td>\r\n                                    <td className=\"vctr\" colSpan={2}>\r\n                                        Item\r\n                                    </td>\r\n                                    <td className=\"vctr\">Quantity</td>\r\n                                    <td className=\"vctr\">Paid Amount</td>\r\n                                    <td className=\"vctr\" colSpan={2}>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <span>Payment Amount</span>\r\n                                            <span className=\"fa-17 text-primary\">\r\n                                                {numberFormat(toNumber(journal.Credit_Amo))}\r\n                                            </span>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </thead>\r\n                        {open && (\r\n                            <tbody>\r\n                                {receiptCostingInfo\r\n                                    .filter((itemDetails) => isEqualNumber(itemDetails.bill_id, journal.bill_id))\r\n                                    .map((item, itemIndex) => (\r\n                                        <tr key={itemIndex}>\r\n                                            <td>{`${journalIndex + 1}.${itemIndex + 1}`}</td>\r\n                                            <td colSpan={2}>{item.item_name}</td>\r\n                                            <td>{item?.itemQuantity}</td>\r\n                                            <td>{item?.PaidAmount}</td>\r\n                                            <td colSpan={2} className=\"p-0\">\r\n                                                <input\r\n                                                    value={item.expence_value || \"\"}\r\n                                                    className=\"cus-inpt p-2 border-0 text-primary\"\r\n                                                    placeholder=\"Enter Amount\"\r\n                                                    type=\"number\"\r\n                                                    onChange={(e) => onChangeAmount(item, e.target.value)}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        )}\r\n                    </table>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListCostingDetails;\r\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { checkIsNumber, isEqualNumber, ISOString, RoundNumber, stringCompare, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { Close, Search } from \"@mui/icons-material\";\r\nimport { receiptBillInfoInitialValue, receiptCostingInfoInitialValue, stockJournalTypes } from \"./variable\";\r\nimport { useEffect, useState } from \"react\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport DisplayStockJournal from \"./displayStockJournal\";\r\nimport ListCostingDetails from \"./listCostingDetail\";\r\n\r\nconst ExpenceReceipt = ({\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    filters,\r\n    baseData,\r\n    receiptValue = {},\r\n    receiptBillInfo = [],\r\n    receiptCostingInfo = [],\r\n    setreceiptValue,\r\n    setReceiptBillInfo,\r\n    setReceiptCostingInfo,\r\n    updateFilterData,\r\n    updateBaseData,\r\n    closeDialog,\r\n    loadingOn,\r\n    loadingOff\r\n}) => {\r\n\r\n    const [searchFilter, setSearchFilter] = useState({\r\n        reqDate: ISOString(),\r\n        stockJournalType: stockJournalTypes[0].value,\r\n        itemFilter: [],\r\n        journalVoucher: { label: 'ALL', value: '' }\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/products/dropDown`,\r\n        }).then(data => {\r\n            if (data.success) return updateBaseData('itemDropDownData', toArray(data.data));\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/voucher`,\r\n        }).then(data => {\r\n            if (data.success) return updateBaseData('journalVoucherData', toArray(data.data));\r\n        }).catch(e => console.error(e))\r\n    }, [])\r\n\r\n    const searchStockJournal = (date, journalType, items, voucher) => {\r\n        fetchLink({\r\n            address: `payment/paymentMaster/searchStockJournal`,\r\n            method: 'POST',\r\n            bodyData: { reqDate: date, stockJournalType: journalType, filterItems: items, voucher: voucher },\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.data) {\r\n                updateBaseData('stockJournalSearchResult', toArray(data.data))\r\n            } else {\r\n                updateBaseData('stockJournalSearchResult', [])\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    const onSelectStockJournal = (invoiceDetails, deleteOption) => {\r\n\r\n        setReceiptBillInfo(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !isEqualNumber(o?.bill_id, invoiceDetails.journalId));\r\n\r\n            let updateBillInfo;\r\n            if (deleteOption) {\r\n                updateBillInfo = excludeCurrentValue;\r\n            } else {\r\n                const reStruc = Object.fromEntries(\r\n                    Object.entries(receiptBillInfoInitialValue).map(([key, value]) => {\r\n                        switch (key) {\r\n                            case 'bill_id': return [key, invoiceDetails?.journalId];\r\n                            case 'bill_name': return [key, invoiceDetails?.journalVoucherNo];\r\n                            case 'JournalBillType': return [key, invoiceDetails?.BillType];\r\n                            case 'Credit_Amo': return [key, 0];\r\n\r\n                            case 'StockJournalDate': return [key, invoiceDetails.journalDate];\r\n                            case 'TotalPaidAmount': return [key, invoiceDetails.Paid_Amount];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                )\r\n                updateBillInfo = [...excludeCurrentValue, reStruc];\r\n            }\r\n            return updateBillInfo;\r\n        });\r\n\r\n        setReceiptCostingInfo(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !isEqualNumber(o?.bill_id, invoiceDetails.journalId));\r\n\r\n            let updateCostinInfo;\r\n            if (deleteOption) {\r\n                updateCostinInfo = excludeCurrentValue;\r\n            } else {\r\n                const reStruc = invoiceDetails.Products_List.map(journalProduct => Object.fromEntries(\r\n                    Object.entries(receiptCostingInfoInitialValue).map(([key, value]) => {\r\n                        switch (key) {\r\n                            case 'bill_id': return [key, invoiceDetails?.journalId];\r\n                            case 'pur_date': return [key, invoiceDetails?.journalDate];\r\n                            case 'JournalBillType': return [key, invoiceDetails?.BillType];\r\n\r\n                            case 'arr_id': return [key, journalProduct?.Arr_Id];\r\n                            case 'item_id': return [key, journalProduct?.productId];\r\n                            case 'item_name': return [key, journalProduct?.productNameGet];\r\n                            case 'itemQuantity': return [key, journalProduct?.quantity];\r\n                            case 'PaidAmount': return [key, journalProduct.Paid_Amount];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                ))\r\n                updateCostinInfo = [...excludeCurrentValue, ...reStruc];\r\n            }\r\n            return updateCostinInfo;\r\n        })\r\n\r\n    }\r\n\r\n    const onChangeAmount = (invoice, amount) => {\r\n        setReceiptBillInfo(pre => {\r\n            const selectedInvoices = [...pre];\r\n\r\n            const indexOfInvoice = selectedInvoices.findIndex(\r\n                inv => isEqualNumber(invoice.bill_id, inv.bill_id)\r\n            );\r\n\r\n            if (indexOfInvoice !== -1) {\r\n                selectedInvoices[indexOfInvoice].Credit_Amo = toNumber(amount);\r\n            }\r\n            return selectedInvoices;\r\n        })\r\n    }\r\n\r\n    const onInputValidate = (input, max) => {\r\n        const inputValue = checkIsNumber(input) ? RoundNumber(input) : 0;\r\n        return inputValue < max ? inputValue : max;\r\n    };\r\n\r\n    const getJournalType = (typeId) => {\r\n        return [\r\n            {\r\n                label: 'MATERIAL INWARD',\r\n                value: 1\r\n            },\r\n            {\r\n                label: 'OTHER GODOWN',\r\n                value: 2\r\n            },\r\n            {\r\n                label: 'PROCESSING',\r\n                value: 3\r\n            },\r\n        ].find(journal => isEqualNumber(journal.value, typeId)).label\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n\r\n                <div className=\"border d-flex align-items-center fw-bold text-primary justify-content-between p-2\">\r\n                    <span>Against Reference ({receiptBillInfo.length})</span>\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => updateFilterData('selectStockJournal', true)}\r\n                    >Add reference</Button>\r\n                </div>\r\n\r\n                <ListCostingDetails\r\n                    receiptBillInfo={receiptBillInfo}\r\n                    setReceiptBillInfo={setReceiptBillInfo}\r\n                    receiptCostingInfo={receiptCostingInfo}\r\n                    setReceiptCostingInfo={setReceiptCostingInfo}\r\n                    onInputValidate={onInputValidate}\r\n                    onChangeAmount={onChangeAmount}\r\n                    onSelectStockJournal={onSelectStockJournal}\r\n                />\r\n            </div>\r\n\r\n            <Dialog\r\n                open={filters.selectStockJournal}\r\n                onClose={closeDialog} fullScreen\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Add Ref - Stock Journal Expences</span>\r\n                    <IconButton onClick={closeDialog}><Close color=\"error\" /></IconButton>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        searchStockJournal(\r\n                            searchFilter.reqDate,\r\n                            searchFilter.stockJournalType,\r\n                            searchFilter.itemFilter.map((item) => item.value),\r\n                            searchFilter.journalVoucher.value\r\n                        );\r\n                    }}>\r\n                        <div className=\"row\">\r\n                            {/* Date filter */}\r\n                            <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Date<RequiredStar /></label>\r\n                                <input\r\n                                    value={searchFilter.reqDate}\r\n                                    type=\"date\"\r\n                                    className=\"cus-inpt p-2 \"\r\n                                    onChange={e => setSearchFilter(pre => ({ ...pre, reqDate: e.target.value }))}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            {/* stock jounal type filter */}\r\n                            <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Stock Journal Type <RequiredStar /></label>\r\n                                <select\r\n                                    value={searchFilter.stockJournalType}\r\n                                    className=\"cus-inpt p-2 \"\r\n                                    onChange={e => setSearchFilter(pre => ({\r\n                                        ...pre,\r\n                                        stockJournalType: e.target.value,\r\n                                        journalVoucher: { label: 'ALL ', value: '' }\r\n                                    }))}\r\n                                    required\r\n                                >\r\n                                    {stockJournalTypes.map((type, typeIndex) => (\r\n                                        <option value={type.value} key={typeIndex}>{type.label}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            {/* item filter */}\r\n                            <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Item Filter <RequiredStar /></label>\r\n                                <Select\r\n                                    value={searchFilter.itemFilter}\r\n                                    onChange={e => setSearchFilter(pre => ({ ...pre, itemFilter: e }))}\r\n                                    menuPortalTarget={document.body}\r\n                                    options={[\r\n                                        initialSelectValue,\r\n                                        ...toArray(baseData.itemDropDownData).map(\r\n                                            (item) => ({ value: item.Product_Id, label: item.Product_Name })\r\n                                        )\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    isMulti={true}\r\n                                    closeMenuOnSelect={false}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* voucher filter */}\r\n                            <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Journal Voucher <RequiredStar /></label>\r\n                                <Select\r\n                                    value={searchFilter.journalVoucher}\r\n                                    onChange={e => setSearchFilter(pre => ({ ...pre, journalVoucher: e }))}\r\n                                    menuPortalTarget={document.body}\r\n                                    options={[\r\n                                        { value: '', label: 'ALL' },\r\n                                        ...toArray(baseData.journalVoucherData).filter(\r\n                                            fil => stringCompare(\r\n                                                fil.Type,\r\n                                                getJournalType(searchFilter.stockJournalType)\r\n                                            )\r\n                                        ).map(\r\n                                            (voucher) => ({ value: voucher.Vocher_Type_Id, label: voucher.Voucher_Type })\r\n                                        )\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    closeMenuOnSelect={false}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* submit search */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2 d-flex flex-column\">\r\n                            <div className=\"mt-auto\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"outlined\"\r\n                                    startIcon={<Search />}\r\n                                >Search</Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n                    <DisplayStockJournal\r\n                        arrayData={toArray(baseData.stockJournalSearchResult)}\r\n                        receiptBillInfo={receiptBillInfo}\r\n                        onSelect={onSelectStockJournal}\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"button\" onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExpenceReceipt;","import { Button } from \"@mui/material\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Save } from \"@mui/icons-material\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { Addition, checkIsNumber, isEqualNumber, ISOString, isValidObject, Subraction, toArray } from \"../../../Components/functions\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { receiptValueInitialValue, receiptGeneralInfoInitialValue } from \"./variable\";\r\n\r\nimport SalesInvoiceReceipt from \"./salesReceipt\";\r\nimport ChooseReceiptComponent from \"./chooseReceipt\";\r\nimport ExpenceReceipt from \"./expencesReceipt\";\r\n\r\n\r\nconst initialSelectValue = { value: '', label: '' };\r\nconst filterInitialValue = {\r\n    receiptInvoice: initialSelectValue,\r\n    debitAccount: initialSelectValue,\r\n    creditAccount: initialSelectValue,\r\n    receiptType: initialSelectValue,\r\n    journalType: initialSelectValue,\r\n    itemFilter: initialSelectValue,\r\n    journalDate: '',\r\n    selectReceiptDialog: false,\r\n    selectSalesInvoice: false,\r\n    selectStockJournal: false,\r\n}\r\n\r\nconst AddPaymentReference = ({ loadingOn, loadingOff, AddRights, EditRights, DeleteRights }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const editValues = location.state;\r\n    const cellStyle = { minWidth: '130px' };\r\n    const cellHeadStype = { width: '150px' };\r\n\r\n    const [receiptValue, setReceiptValue] = useState(receiptGeneralInfoInitialValue);\r\n    const [receiptBillInfo, setReceiptBillInfo] = useState([]);\r\n    const [receiptCostingInfo, setReceiptCostingInfo] = useState([]);\r\n\r\n    const [baseData, setBaseData] = useState({\r\n        accountGroup: [],\r\n        accounts: [],\r\n        receiptInvoiceSearchResult: [],\r\n        stockJournalSearchResult: [],\r\n        salesInvoiceSearchResult: [],\r\n        itemDropDownData: [],\r\n        journalVoucherData: [],\r\n    });\r\n\r\n    const [filters, setFilters] = useState(filterInitialValue)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    accountGroupResponse,\r\n                    accountResponse,\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `payment/accountGroup` }),\r\n                    fetchLink({ address: `payment/accounts` }),\r\n                ]);\r\n\r\n                const accountGroup = toArray(accountGroupResponse.success ? accountGroupResponse.data : []).sort(\r\n                    (a, b) => String(a?.Group_Name).localeCompare(b?.Group_Name)\r\n                );\r\n                const accounts = toArray(accountResponse.success ? accountResponse.data : []).sort(\r\n                    (a, b) => String(a?.Account_name).localeCompare(b?.Account_name)\r\n                );\r\n\r\n                updateBaseData('accountGroup', accountGroup);\r\n                updateBaseData('accounts', accounts);\r\n\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!isEqualNumber(receiptValue.receipt_bill_type, 1) || !receiptValue.credit_ledger || !checkIsNumber(receiptValue.credit_ledger)) {\r\n            updateBaseData('salesInvoiceSearchResult', []);\r\n            return;\r\n        }\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/pendingSalesInvoiceReceipt?Acc_Id=${receiptValue.credit_ledger}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                updateBaseData('salesInvoiceSearchResult', toArray(data.data));\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [receiptValue.credit_ledger, receiptValue.receipt_bill_type]);\r\n\r\n    useEffect(() => {\r\n        if (\r\n            !checkIsNumber(receiptValue.receipt_id)\r\n            || !checkIsNumber(receiptValue.receipt_bill_type)\r\n            || (\r\n                !isEqualNumber(receiptValue.receipt_bill_type, 1)\r\n                && !isEqualNumber(receiptValue.receipt_bill_type, 2)\r\n            )\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/againstRef?receipt_id=${receiptValue.receipt_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const reSturc = toArray(data.data).map(bill => ({\r\n                    ...bill,\r\n                    SalesInvoiceDate: bill.referenceBillDate,\r\n                    StockJournalDate: bill.referenceBillDate,\r\n                    TotalPaidAmount: bill.totalPaidAmount,\r\n                    PendingAmount: Subraction(bill?.Total_Invoice_value, bill.totalPaidAmount),\r\n                }));\r\n                setReceiptBillInfo(reSturc);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/againstRef/costingInfo?receipt_id=${receiptValue.receipt_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setReceiptCostingInfo(toArray(data.data));\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n    }, [receiptValue.receipt_id, receiptValue.receipt_bill_type])\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(editValues)) {\r\n            setReceiptValue(\r\n                Object.fromEntries(\r\n                    Object.entries(receiptGeneralInfoInitialValue).map(([key, value]) => {\r\n                        if (key === 'receipt_date') return [key, editValues[key] ? ISOString(editValues[key]) : value];\r\n                        return [key, editValues[key] ?? value]\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    }, [editValues])\r\n\r\n    const updateBaseData = (key = '', value = []) => {\r\n        setBaseData(pre => ({ ...pre, [key]: value }));\r\n    }\r\n\r\n    const updateFilterData = (key = '', value = []) => {\r\n        setFilters(pre => ({ ...pre, [key]: value }));\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        updateFilterData('selectReceiptDialog', false);\r\n        updateFilterData('selectSalesInvoice', false);\r\n        updateFilterData('selectStockJournal', false);\r\n    }\r\n\r\n    const resetAll = () => {\r\n        setReceiptValue(receiptGeneralInfoInitialValue);\r\n        setReceiptBillInfo([]);\r\n        setReceiptCostingInfo([]);\r\n        setFilters(filterInitialValue);\r\n        updateBaseData('receiptInvoiceSearchResult', []);\r\n        updateBaseData('stockJournalSearchResult', []);\r\n        updateBaseData('salesInvoiceSearchResult', []);\r\n    }\r\n\r\n    const TotalAgainstRef = useMemo(() => {\r\n        return receiptBillInfo.reduce(\r\n            (acc, invoice) => Addition(acc, invoice.Credit_Amo), 0\r\n        )\r\n    }, [receiptBillInfo]);\r\n\r\n    const SavePayment = () => {\r\n        if (TotalAgainstRef > receiptValue.credit_amount) return toast.warn('Receipt amount is invalid');\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/againstRef`,\r\n            method: 'POST',\r\n            bodyData: {\r\n                receipt_id: receiptValue.receipt_id,\r\n                receipt_no: receiptValue.receipt_invoice_no,\r\n                receipt_date: receiptValue.receipt_date,\r\n                receipt_bill_type: receiptValue.receipt_bill_type,\r\n                BillsDetails: toArray(receiptBillInfo),\r\n                CostingDetails: toArray(receiptCostingInfo),\r\n                DR_CR_Acc_Id: receiptValue.credit_ledger\r\n            },\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                resetAll();\r\n                navigate('/erp/receipts/listReceipts', { state: editValues });\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-white p-2 rounded-2\">\r\n\r\n                <div className=\"table-responsive\">\r\n\r\n                    {/* payment invoices */}\r\n                    <div className=\"p-2 d-flex align-items-center mb-3\">\r\n                        <h5 className=\"m-0 flex-grow-1\">Receipt Reference Creation</h5>\r\n\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant='contained'\r\n                            className=\"mx-1\"\r\n                            onClick={() => navigate('/erp/receipts/listReceipts', { state: editValues })}\r\n                        >back</Button>\r\n                    </div>\r\n\r\n                    {/* choose Payment */}\r\n                    <ChooseReceiptComponent\r\n                        cellHeadStype={cellHeadStype}\r\n                        cellStyle={cellStyle}\r\n                        receiptValue={receiptValue}\r\n                        receiptBillInfo={receiptBillInfo}\r\n                        filters={filters}\r\n                        baseData={baseData}\r\n                        setReceiptValue={setReceiptValue}\r\n                        updateFilterData={updateFilterData}\r\n                        updateBaseData={updateBaseData}\r\n                        closeDialog={closeDialog}\r\n                        loadingOn={loadingOn}\r\n                        loadingOff={loadingOff}\r\n                    />\r\n\r\n                    {/* choose Purchase invoice */}\r\n                    {isEqualNumber(receiptValue.receipt_bill_type, 1) && (\r\n                        <SalesInvoiceReceipt\r\n                            cellHeadStype={cellHeadStype}\r\n                            cellStyle={cellStyle}\r\n                            receiptValue={receiptValue}\r\n                            filters={filters}\r\n                            baseData={baseData}\r\n                            setReceiptValue={setReceiptValue}\r\n                            updateFilterData={updateFilterData}\r\n                            updateBaseData={updateBaseData}\r\n                            closeDialog={closeDialog}\r\n                            receiptBillInfo={receiptBillInfo}\r\n                            setReceiptBillInfo={setReceiptBillInfo}\r\n                        />\r\n                    )}\r\n\r\n                    {/* choose Stock journal */}\r\n                    {isEqualNumber(receiptValue.receipt_bill_type, 2) && (\r\n                        <ExpenceReceipt\r\n                            cellHeadStype={cellHeadStype}\r\n                            cellStyle={cellStyle}\r\n                            filters={filters}\r\n                            baseData={baseData}\r\n                            receiptValue={receiptValue}\r\n                            receiptBillInfo={receiptBillInfo}\r\n                            receiptCostingInfo={receiptCostingInfo}\r\n                            setReceiptValue={setReceiptValue}\r\n                            setReceiptBillInfo={setReceiptBillInfo}\r\n                            setReceiptCostingInfo={setReceiptCostingInfo}\r\n                            updateFilterData={updateFilterData}\r\n                            updateBaseData={updateBaseData}\r\n                            closeDialog={closeDialog}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                        />\r\n                    )}\r\n\r\n                </div>\r\n\r\n                <hr className=\"my-2\" />\r\n\r\n                <div className=\"p-2 d-flex justify-content-end\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<Save />}\r\n                        disabled={\r\n                            !checkIsNumber(receiptValue.receipt_id)\r\n                            // || receiptBillInfo.length === 0\r\n                        }\r\n                        onClick={SavePayment}\r\n                    >Save</Button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPaymentReference;","import { checkIsNumber, ISOString, getSessionUser } from \"../../../Components/functions\";\r\nconst userDetails = getSessionUser().user;\r\n\r\nexport const receiptGeneralInfoInitialValue = {\r\n    receipt_id: '',\r\n    year_id: '',\r\n    receipt_voucher_type_id: '',\r\n    receipt_sno: '',\r\n    receipt_invoice_no: '',\r\n\r\n    receipt_date: ISOString(),\r\n    receipt_bill_type: 1,\r\n    credit_ledger: '',\r\n    credit_ledger_name: 'Select',\r\n    credit_amount: 0,\r\n    debit_ledger: '',\r\n    debit_ledger_name: 'Select',\r\n    debit_amount: 0,\r\n    remarks: '',\r\n    status: 1,\r\n    is_new_ref: 0,\r\n    is_journal_type: 0,\r\n    transaction_type: '',\r\n\r\n    check_no: '',\r\n    check_date: '',\r\n    bank_name: '',\r\n    bank_date: '',\r\n\r\n    created_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    altered_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    created_on: '',\r\n    alterd_on: '',\r\n}\r\n\r\nexport const receiptBillInfoInitialValue = {\r\n    auto_id: '',\r\n    // general info\r\n    created_on: '',\r\n    receipt_id: '',\r\n    receipt_no: '',\r\n    receipt_date: '',\r\n    receipt_bill_type: '',\r\n    DR_CR_Acc_Id: '',\r\n\r\n    // form values\r\n    bill_id: '',\r\n    JournalBillType: '',\r\n    bill_name: '',\r\n    bill_amount: 0,\r\n    Debit_Amo: 0,\r\n    Credit_Amo: 0,\r\n\r\n    // frontEndColumns\r\n    SalesInvoiceDate: '',\r\n    StockJournalDate: '',\r\n    TotalPaidAmount: 0,\r\n    PendingAmount: 0,\r\n}\r\n\r\nexport const receiptCostingInfoInitialValue = {\r\n    // backend\r\n    auto_id: '',\r\n    receipt_id: '',\r\n    receipt_no: '',\r\n    receipt_date: '',\r\n    receipt_bill_type: '',\r\n    Debit_Ledger_Id: '',\r\n    created_on: '',\r\n\r\n    // frontend \r\n    bill_id: '',\r\n    JournalBillType: '',\r\n    arr_id: '',\r\n    item_id: '',\r\n    item_name: '',\r\n    expence_value: 0,\r\n\r\n    // to show previous payment (frontend only).\r\n    itemQuantity: 0,\r\n    PaidAmount: 0,\r\n}\r\n\r\nexport const receiptTypes = [\r\n    {\r\n        value: 1,\r\n        label: 'CUSTOMER - SALES INVOICE'\r\n    },\r\n    {\r\n        value: 2,\r\n        label: 'EXPENCES - RETURN'\r\n    },\r\n    {\r\n        value: 3,\r\n        label: 'ON ACCOUNT'\r\n    },\r\n];\r\n\r\nexport const stockJournalTypes = [\r\n    {\r\n        label: 'MATERIAL INWARD',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'GODOWN TRANSFER',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'PROCESSING',\r\n        value: 3\r\n    },\r\n]\r\n\r\nexport const receiptStatus = [\r\n    {\r\n        label: 'New',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'Process',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'Completed',\r\n        value: 3\r\n    },\r\n    {\r\n        label: 'Canceled',\r\n        value: 0\r\n    },\r\n];\r\n\r\nexport const transactionTypes = [\r\n    {\r\n        label: 'Select',\r\n        value: ''\r\n    },\r\n    {\r\n        label: 'ATM',\r\n        value: 'ATM'\r\n    },\r\n    {\r\n        label: 'Card',\r\n        value: 'Card'\r\n    },\r\n    {\r\n        label: 'Cash',\r\n        value: 'Cash'\r\n    },\r\n    {\r\n        label: 'Cheque/DD',\r\n        value: 'Cheque/DD'\r\n    },\r\n    {\r\n        label: 'ECS',\r\n        value: 'ECS'\r\n    },\r\n    {\r\n        label: 'e-Fund Transfer',\r\n        value: 'e-Fund Transfer'\r\n    },\r\n    {\r\n        label: 'Electronic Cheque',\r\n        value: 'Electronic Cheque'\r\n    },\r\n    {\r\n        label: 'Electronic DD/PO',\r\n        value: 'Electronic DD/PO'\r\n    },\r\n    {\r\n        label: 'UPI',\r\n        value: 'UPI'\r\n    },\r\n    {\r\n        label: 'Others',\r\n        value: 'Others'\r\n    },\r\n]","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4z\"\n}), 'Done');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","key","Field_Name","createCol","arguments","length","undefined","Fied_Data","align","verticalAlign","ButtonActions","_ref","buttonsData","ToolTipText","anchorEl","setAnchorEl","useState","popOverOpen","Boolean","_jsxs","_Fragment","children","_jsx","Tooltip","title","IconButton","onClick","event","currentTarget","className","size","MoreVert","Popover","open","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","onclick","disabled","ListItemIcon","icon","ListItemText","name","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","FilterableTable","_ref2","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","type","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","RowComp","_ref3","setOpen","fontSize","Fragment","TableRow","TableCell","sx","pre","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isEqualNumber","isCommonValue","tdClass","tdIndex","horizondalalignClass","find","verticalAlignClass","foundEntry","Object","entries","_ref4","console","log","colSpan","Number","Card","component","Paper","ToggleOn","color","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","backgroundColor","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","value","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","RequiredStar","style","fontWeight","customTableStyles","table","width","headCells","customSelectStyles","menu","provided","state","zIndex","menuPortal","base","groupHeading","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","companyDetails","dataBase","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","cellHeadStype","cellStyle","minWidth","initialSelectValue","label","receiptValue","receiptBillInfo","setReceiptBillInfo","filters","baseData","setreceiptValue","updateFilterData","updateBaseData","closeDialog","onClickSalesInvoice","invoiceDetails","deleteOption","excludeCurrentValue","toArray","stringCompare","bill_name","bill_id","updateBillInfo","reStruc","fromEntries","receiptBillInfoInitialValue","Do_Id","Do_Inv_No","toNumber","Total_Invoice_value","Do_Date","totalReference","Subraction","Button","salesInvoiceSearchResult","col","colInd","invoice","invoiceInd","SalesInvoiceDate","bill_amount","TotalPaidAmount","Credit_Amo","placeholder","onChange","maxAmount","validated","onInputValidate","input","max","inputValue","checkIsNumber","RoundNumber","onChangeAmount","amount","selectedInvoices","indexOfInvoice","findIndex","inv","Delete","reduce","acc","Addition","Dialog","selectSalesInvoice","fullScreen","DialogTitle","Close","DialogContent","dataSource","Paid_Amount","isChecked","checked","rowSpan","DialogActions","setReceiptValue","loadingOn","loadingOff","TotalAgainstRef","useMemo","PendingAgainstRef","credit_amount","receiptTypes","receipt_bill_type","debit_ledger_name","receipt_invoice_no","credit_ledger_name","selectReceiptDialog","Select","receiptType","menuPortalTarget","document","options","isDisabled","styles","isSearchable","required","debitAccount","accounts","Acc_Id","Account_name","creditAccount","startIcon","Search","searchReceipts","toast","warn","fetchLink","then","success","receiptInvoiceSearchResult","TotalReferenceAdded","_ref5","Done","arrayData","onSelect","TableRows","sno","isProcessing","BillType","journalVoucherNo","journalDate","voucherTypeGet","narration","paidAmount","journalId","SourceDetails","Products_List","journal","jouInd","add","subtract","roundNumber","num","precision","toFixed","receiptCostingInfo","setReceiptCostingInfo","onSelectStockJournal","journalAmountOnChange","onChangeJournalAmount","totalAmount","updated","prev","items","item","totalQty","sum","itemQuantity","unitCost","divide","distributed","updatedItems","weighted","multiply","expence_value","item_id","arr_id","journalIndex","StockJournalDate","dateStr","Date","toLocaleDateString","JournalBillType","Intl","format","itemDetails","itemIndex","item_name","PaidAmount","selectedItem","searchFilter","setSearchFilter","reqDate","ISOString","stockJournalType","stockJournalTypes","itemFilter","journalVoucher","useEffect","catch","updateCostinInfo","journalProduct","receiptCostingInfoInitialValue","Arr_Id","productId","productNameGet","quantity","ListCostingDetails","selectStockJournal","onSubmit","searchStockJournal","date","journalType","voucher","preventDefault","method","bodyData","filterItems","typeIndex","itemDropDownData","Product_Id","Product_Name","isMulti","closeMenuOnSelect","journalVoucherData","fil","Type","typeId","Vocher_Type_Id","Voucher_Type","DisplayStockJournal","stockJournalSearchResult","filterInitialValue","receiptInvoice","AddRights","EditRights","DeleteRights","navigate","useNavigate","editValues","useLocation","receiptGeneralInfoInitialValue","setBaseData","accountGroup","setFilters","async","accountGroupResponse","accountResponse","Promise","all","Group_Name","localeCompare","fetchData","credit_ledger","receipt_id","reSturc","bill","referenceBillDate","totalPaidAmount","PendingAmount","isValidObject","_editValues$key","ChooseReceiptComponent","SalesInvoiceReceipt","ExpenceReceipt","Save","SavePayment","receipt_no","receipt_date","BillsDetails","CostingDetails","DR_CR_Acc_Id","message","userDetails","getSessionUser","user","year_id","receipt_voucher_type_id","receipt_sno","debit_ledger","debit_amount","remarks","status","is_new_ref","is_journal_type","transaction_type","check_no","check_date","bank_name","bank_date","created_by","UserId","altered_by","created_on","alterd_on","auto_id","Debit_Amo","Debit_Ledger_Id","receiptStatus","transactionTypes","createSvgIcon","d"],"sourceRoot":""}
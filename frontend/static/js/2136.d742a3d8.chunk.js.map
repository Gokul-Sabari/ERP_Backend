{"version":3,"file":"static/js/2136.d742a3d8.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Pages/Sales/SalesReportComponent/DeliveryDetailsList.jsx","Pages/Sales/SalesReportComponent/NewDeliveryOrder.jsx","Pages/Sales/convertedStatus.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, Button, Dialog, Tooltip, IconButton, DialogTitle, DialogContent, DialogActions, Switch } from \"@mui/material\";\r\n// import '../common.css'\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { getPreviousDate, isEqualNumber, ISOString, isValidObject } from \"../../../Components/functions\";\r\nimport DeliveryInvoiceTemplate from \"../SalesReportComponent/newInvoiceTemplate\";\r\nimport { Edit, FilterAlt,Delete } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\n// import SalesDelivery from \"./SalesReportComponent/SalesDeliveryConvert\"\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NewDeliveryOrder from \"./NewDeliveryOrder\";\r\nconst DeliveryDetailsList = ({ loadingOn, loadingOff, onToggle,reload }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [screen, setScreen] = useState(true);\r\n    const [orderInfo, setOrderInfo] = useState({});\r\n    const [viewOrder, setViewOrder] = useState({});\r\n    \r\n    const [deleteConfirm, setDeleteConfirm] = useState(false)\r\n   const [itemTodelete,setItemToDelete]=useState({})\r\n    const [isDeliveryDetailsVisible, setIsDeliveryDetailsVisible] = useState(false)\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: getPreviousDate(7),\r\n        Todate: ISOString(),\r\n        Retailer_Id: '',\r\n        RetailerGet: 'ALL',\r\n        Created_by: '',\r\n        CreatedByGet: 'ALL',\r\n        Delivery_Person_Id: '',\r\n        Delivery_Person_Name: 'ALL',\r\n        Cancel_status: 0\r\n    });\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `delivery/deliveryOrderList?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Delivery_Person_Id=${filters?.Delivery_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSaleOrders(data?.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n       \r\n    }, [\r\n        filters.Fromdate,\r\n        filters?.Todate,\r\n        filters?.Retailer_Id,\r\n        filters?.Delivery_Person_Id,\r\n        filters?.Created_by,\r\n        filters?.Cancel_status,\r\n        reload\r\n    ])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSalePerson(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/user/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setUsers(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [])\r\n    const openDeleteDialog = (itemData) => {\r\n      \r\n        setItemToDelete({\r\n            So_No: itemData.So_No,\r\n            Do_Id: itemData.Do_Id\r\n        });\r\n        setDeleteConfirm(true);\r\n    };\r\n    \r\n    const saleOrderColumn = [\r\n        {\r\n            Field_Name: 'Do_Id',\r\n            ColumnHeader: 'Delivery ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'So_No',\r\n            ColumnHeader: 'Sale Order ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'Retailer_Name',\r\n            ColumnHeader: 'Customer',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'SalesDate',\r\n            ColumnHeader: 'Sale Order Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Do_Date',\r\n            ColumnHeader: 'Delivery Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n\r\n        // {\r\n        //     Field_Name: 'Products',\r\n        //     ColumnHeader: 'Products / Quantity',\r\n        //     isVisible: 1,\r\n        //     align: 'center',\r\n        //     isCustomCell: true,\r\n        //     Cell: ({ row }) => (\r\n        //         <>\r\n        //             <span>{row?.Products_List?.length ?? 0}</span> /&nbsp;\r\n        //             <span>{row?.Products_List?.reduce((sum, item) => sum += item?.Bill_Qty ?? 0, 0) ?? 0}</span>\r\n        //         </>\r\n        //     )\r\n        // },\r\n        {\r\n            Field_Name: 'Total_Before_Tax',\r\n            ColumnHeader: 'Before Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Tax',\r\n            ColumnHeader: 'Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Invoice_value',\r\n            ColumnHeader: 'Invoice Value',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'DeliveryStatusName',\r\n            ColumnHeader: 'Delivery Status ',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        // {\r\n        //     Field_Name: 'DeliveryStatusName',\r\n        //     // ColumnHeader: 'DeliveryStatusName',\r\n        //     isVisible: 1,\r\n        //     Field_Data:'String',\r\n        //     align: 'center',\r\n        //     // isCustomCell: true,\r\n         \r\n        // },\r\n        // {\r\n        //     Field_Name: 'Sales_Person_Name',\r\n        //     ColumnHeader: 'Sales Person',\r\n        //     Fied_Data: 'string',\r\n        //     isVisible: 1,\r\n        // },\r\n        {\r\n            Field_Name: 'Action',\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return (\r\n                    <>\r\n                      \r\n                        <Tooltip title='Edit'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    switchScreen();\r\n                                    setOrderInfo({ ...row, isEdit: true });\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <Edit className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title='Delete'>\r\n                            <IconButton\r\n                               onClick={()=>openDeleteDialog(row)}\r\n                            \r\n                                size=\"small\"\r\n                            >\r\n                                <Delete className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n    ];\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n\r\n        return (\r\n            <>\r\n\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Branch</td>\r\n                            <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Delivery Person</td>\r\n                            <td className=\"border p-2\">{row.Delivery_Person_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Round off</td>\r\n                            <td className=\"border p-2\">{row.Round_off}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.GST_Inclusive, 1) && 'Inclusive'}\r\n                                {isEqualNumber(row.GST_Inclusive, 0) && 'Exclusive'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.IS_IGST, 1) && 'IGST'}\r\n                                {isEqualNumber(row.IS_IGST, 0) && 'GST'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Narration</td>\r\n                            <td className=\"border p-2\" colSpan={5}>{row.Narration}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const switchScreen = () => {\r\n        setScreen(!screen)\r\n        setOrderInfo({});\r\n        setIsDeliveryDetailsVisible(!isDeliveryDetailsVisible);\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setDialog({\r\n            ...dialog,\r\n            filters: false,\r\n            orderDetails: false,\r\n        });\r\n        setOrderInfo({});\r\n   \r\n      \r\n        setDeleteConfirm(false)  \r\n      }\r\n\r\n        const confirmData = async () => {\r\n       \r\n            if (!itemTodelete) return;\r\n            fetchLink({\r\n                address: 'delivery/deliveryOrder',\r\n                method: 'DELETE',\r\n                bodyData: ({ Order_Id: itemTodelete.So_No, Do_Id: itemTodelete.Do_Id })\r\n\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    toast.success(data?.message);\r\n                   reload()\r\n                } else {\r\n                    toast.error(data?.message)\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => loadingOff())\r\n\r\n            setDeleteConfirm(false) \r\n        \r\n        };\r\n        \r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                    <h6 className=\"fa-18 m-0 p-0\">{\r\n                        screen\r\n                            ? 'Delivery Orders'\r\n                            : isValidObject(orderInfo)\r\n                                ? 'Modify Delivery Order'\r\n                                : ''  }\r\n                    </h6>\r\n                    <span>\r\n                        {screen && (\r\n                            <Tooltip title='Filters'>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n\r\n                        {screen && (\r\n                          <Switch\r\n                                checked={!screen}\r\n                                onChange={onToggle}\r\n                                label={'Delivery Details'}\r\n                                inputProps={{ 'aria-label': 'controlled' }}\r\n                                \r\n                            />\r\n                        )}\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent className=\"p-0 \">\r\n                    {screen ? (\r\n                        <FilterableTable\r\n                            dataArray={saleOrders}\r\n                            columns={saleOrderColumn}\r\n                            // EnableSerialNumber={true}\r\n                            isExpendable={true}\r\n                            tableMaxHeight={550}\r\n                            expandableComp={ExpendableComponent}\r\n                        />\r\n                    ) : (\r\n                        <NewDeliveryOrder\r\n                            editValues={orderInfo}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            reload={() => {\r\n                                setScreen(pre => !pre)\r\n                            }}\r\n                            switchScreen={switchScreen}\r\n                        />\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <DeliveryInvoiceTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={'Sale Order'}\r\n                />\r\n            )}\r\n\r\n\r\n            <Dialog\r\n                open={deleteConfirm}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <DialogContent>\r\n                 <div>Are You Want to Move the order Into the Sale Order Again</div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                   \r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button onClick={confirmData}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Retailer_Id, label: filters?.RetailerGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Retailer_Id: e.value, RetailerGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Delivery Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Delivery_Person_Id, label: filters?.Delivery_Person_Name }}\r\n                                            onChange={(e) => setFilters({ ...filters, Delivery_Person_Id: e.value, Delivery_Person_Name: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...salesPerson.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Created_by, label: filters?.CreatedByGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Created_by: e.value, CreatedByGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...users.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Canceled Order</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.Cancel_status}\r\n                                            onChange={e => setFilters({ ...filters, Cancel_status: Number(e.target.value) })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={1}>Show</option>\r\n                                            <option value={0}>Hide</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeliveryDetailsList;\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, IconButton } from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    isEqualNumber, isGraterNumber, isValidObject, ISOString, getUniqueData,\r\n    Multiplication, Division, NumberFormat, Subraction, numberToWords,\r\n    RoundNumber, Addition\r\n} from \"../../../Components/functions\";\r\nimport { Add, Clear, ClearAll, Delete, Edit, Save } from \"@mui/icons-material\";\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\n\r\n\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst NewDeliveryOrder = ({ editValues, loadingOn, loadingOff, reload, switchScreen, editOn }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [productBrand, setProductBrand] = useState([]);\r\n    const [productUOM, setProductUOM] = useState([]);\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const [voucherType, setVoucherType] = useState([]);\r\n\r\n    const [branch, setBranch] = useState([]);\r\n    const initialValue = {\r\n        Company_Id: storage?.Company_id,\r\n        Do_Date: ISOString(),\r\n        VoucherType: '',\r\n        Retailer_Id: '',\r\n        Retailer_Name: 'Select',\r\n        Delivery_Status: 1,\r\n        Delivery_Person_Id: 0,\r\n        Payment_Ref_No: '',\r\n        Delivery_Person_Name: '',\r\n        Payment_Mode: 0,\r\n        Payment_Status: 0,\r\n        Branch_Id: storage?.BranchId,\r\n        Narration: '',\r\n        Created_by: storage?.UserId,\r\n        Product_Array: [],\r\n        So_No: editValues?.So_Id,\r\n        GST_Inclusive: 1,\r\n        IS_IGST: 0,\r\n    }\r\n\r\n    const productInitialDetails = {\r\n        Item_Id: '',\r\n        ItemName: 'Search Item',\r\n        Bill_Qty: 0,\r\n        Item_Rate: 0,\r\n        UOM: '',\r\n        Units: '',\r\n        Product: {},\r\n        Group: 'Search Group',\r\n        GroupID: '',\r\n        Brand: 'Search Brand',\r\n        BrandID: '',\r\n        Amount: 0\r\n    }\r\n\r\n    const [orderDetails, setOrderDetails] = useState(initialValue)\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n    const [productDetails, setProductDetails] = useState(productInitialDetails);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [addProductDialog, setAddProductDialog] = useState(false);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n    const [deliveryPerson, setDeliveryPerson] = useState(null);\r\n    const [deliveryPersonList, setDeliveryPersonList] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchLocation = async () => {\r\n            try {\r\n                const position = await new Promise((resolve, reject) => {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n                });\r\n                const { latitude, longitude } = position.coords;\r\n\r\n                setOrderDetails(pre => ({\r\n                    ...pre,\r\n                    Delivery_Latitude: latitude,\r\n                    Delivery_Longitude: longitude,\r\n                }));\r\n            } catch (error) {\r\n                console.error(error)\r\n                toast.warn('Unable to fetch location. Allow location access.');\r\n            }\r\n        };\r\n\r\n        if (isValidObject(editValues)) {\r\n\r\n            setOrderDetails(pre => ({\r\n                ...pre,\r\n                Do_Id: editValues?.Do_Id,\r\n                Do_Date: editValues?.Do_Date ?? ISOString(),\r\n                VoucherType: editValues?.Voucher_Type,\r\n                Retailer_Id: editValues?.Retailer_Id,\r\n                Retailer_Name: editValues?.Retailer_Name,\r\n                Delivery_Status: editValues?.Delivery_Status,\r\n                Delivery_Person_Id: editValues?.Delivery_Person_Id,\r\n                Delivery_Person_Name: editValues?.Delivery_Person_Name,\r\n                Payment_Status: editValues?.Payment_Status,\r\n                Payment_Mode: editValues?.Payment_Mode,\r\n                Branch_Id: editValues?.Branch_Id,\r\n                Narration: editValues?.Narration,\r\n                Created_by: editValues?.Created_by,\r\n                Payment_Ref_No: editValues?.Payment_Ref_No,\r\n                So_No: editValues?.So_Id,\r\n                GST_Inclusive: editValues?.GST_Inclusive,\r\n                IS_IGST: editValues?.IS_IGST,\r\n\r\n            }));\r\n            setOrderProducts(editValues?.Products_List?.map(pro => ({\r\n                ...pro,\r\n                Item_Id: pro.Item_Id ?? '',\r\n                ItemName: pro?.Product_Name ?? \"\",\r\n                Bill_Qty: pro?.Bill_Qty ?? 0,\r\n                Item_Rate: pro?.Item_Rate ?? 0,\r\n                UOM: pro?.Unit_Id ?? '',\r\n                Units: pro?.Units ?? '',\r\n                Product: {\r\n                    ...pro,\r\n                    Cgst_P: Number(findProductDetails(products, pro.Item_Id)?.Cgst_P) ?? 0,\r\n                    Sgst_P: Number(findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0,\r\n                    Igst_P: Number(findProductDetails(products, pro.Item_Id)?.Igst_P) ?? 0,\r\n                    Gst_P: Addition(findProductDetails(products, pro.Item_Id)?.Cgst_P, findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0\r\n                } ?? {},\r\n                Group: 'Search Group',\r\n                GroupID: '',\r\n                Brand: 'Search Brand',\r\n                BrandID: '',\r\n                Amount: pro?.Amount ?? 0\r\n            })));\r\n            setIsEdit(true)\r\n            if (!editValues?.Latitude || !editValues?.Longitude) {\r\n                fetchLocation();\r\n            }\r\n        } else {\r\n            setOrderDetails(initialValue);\r\n            setOrderProducts([])\r\n            setIsEdit(false)\r\n        }\r\n    }, [editValues, products])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/uom`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProductUOM(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/products?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProducts(data.data);\r\n\r\n                const uniqueBrand = getUniqueData(data.data, 'Brand', ['Brand_Name']);\r\n                setProductBrand(uniqueBrand);\r\n\r\n            } else {\r\n                setProducts([]);\r\n                setProductBrand([]);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setDeliveryPersonList(data.data);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `purchase/voucherType`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setVoucherType(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/branch/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setBranch(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    const handleProductInputChange = (productId, value, rate, obj, UOM_Id, Units) => {\r\n        const productIndex = orderProducts.findIndex(item => isEqualNumber(item.Item_Id, productId));\r\n\r\n        if (productIndex !== -1) {\r\n            const updatedValues = [...orderProducts];\r\n            updatedValues[productIndex].Bill_Qty = Number(value);\r\n            updatedValues[productIndex].Item_Rate = Number(rate);\r\n            updatedValues[productIndex].UOM = UOM_Id;\r\n            updatedValues[productIndex].Units = Units;\r\n            updatedValues[productIndex].Amount = Multiplication(value, rate);\r\n            updatedValues[productIndex] = { ...updatedValues[productIndex], Product: obj }\r\n\r\n            setOrderProducts(updatedValues);\r\n        } else {\r\n            setOrderProducts(prevValues => [...prevValues, {\r\n                Item_Id: productId,\r\n                Bill_Qty: Number(value),\r\n                Item_Rate: Number(rate),\r\n                UOM: UOM_Id,\r\n                Units: Units,\r\n                Amount: Multiplication(value, rate),\r\n                Product: obj\r\n            }]);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const postSaleOrder = () => {\r\n        if (orderProducts?.length > 0 && orderDetails?.Retailer_Id) {\r\n            loadingOn();\r\n            console.log(\"fasdadadas\", orderProducts)\r\n            fetchLink({\r\n                address: `delivery/deliveryOrder`,\r\n                method: (isEdit && !editOn) ? 'PUT' : 'POST',\r\n\r\n                bodyData: {\r\n                    ...orderDetails,\r\n                    Product_Array: orderProducts.filter(o => isGraterNumber(o?.Bill_Qty, 0)),\r\n                    Delivery_Person_Id: deliveryPerson ? deliveryPerson.UserId : Number(orderDetails?.Delivery_Person_Id),\r\n                    Payment_Status: (orderDetails?.Payment_Status) ? Number(orderDetails?.Payment_Status) : 1,\r\n                    Payment_Ref_No: orderDetails?.Payment_Ref_No,\r\n                    Delivery_Status: (orderDetails?.Delivery_Status) ? Number(orderDetails?.Delivery_Status) : 1,\r\n                    Payment_Mode: (orderDetails?.Payment_Mode) ? Number(orderDetails?.Payment_Mode) : 1\r\n                }\r\n\r\n            }).then(data => {\r\n\r\n                if (data.success) {\r\n                    toast.success(data?.message);\r\n\r\n                    setOrderDetails(initialValue);\r\n                    setOrderProducts([])\r\n                    reload()\r\n                } else {\r\n                    toast.error(data?.message)\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => loadingOff())\r\n\r\n        } else {\r\n            if (orderProducts.length <= 0) {\r\n                return toast.error('Enter any one product quantity')\r\n            }\r\n            if (!orderDetails?.Retailer_Id) {\r\n                toast.error('Select Retailer')\r\n                return toast.error('Select Retailer')\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeAddProduct = () => {\r\n        setAddProductDialog(false);\r\n        setProductDetails(productInitialDetails);\r\n    }\r\n\r\n    const Total_Invoice_value = orderProducts.reduce((o, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty);\r\n        const Amount = Multiplication(billQty, itemRate);\r\n\r\n        if (isInclusive || isNotTaxableBill) {\r\n            return o += Amount;\r\n        }\r\n\r\n        if (isExclusiveBill) {\r\n            const product = findProductDetails(products, item.Item_Id);\r\n            const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n            const tax = taxCalc(0, itemRate, gstPercentage)\r\n            return o += (Amount + (tax * billQty));\r\n        }\r\n        return o;\r\n    }, 0);\r\n\r\n    const totalValueBeforeTax = orderProducts.reduce((acc, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty) || 0;\r\n\r\n        if (isNotTaxableBill) {\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n            return acc;\r\n        }\r\n\r\n        const product = findProductDetails(products, item.Item_Id);\r\n        const gstPercentage = IS_IGST ? product.Igst_P : product.Gst_P;\r\n\r\n        if (isInclusive) {\r\n            const itemTax = taxCalc(1, itemRate, gstPercentage);\r\n            const basePrice = Subraction(itemRate, itemTax);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, basePrice);\r\n        }\r\n        if (isExclusiveBill) {\r\n            const itemTax = taxCalc(0, itemRate, gstPercentage);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n        }\r\n\r\n        return acc;\r\n    }, {\r\n        TotalValue: 0,\r\n        TotalTax: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n        setOrderProducts(pre => pre?.map(pro => ({\r\n            ...pro,\r\n            Amount: Multiplication(pro?.Item_Rate, pro?.Bill_Qty)\r\n        })));\r\n    }, [orderDetails.GST_Inclusive])\r\n\r\n    const handleDeliveryPersonChange = (selectedOption) => {\r\n\r\n        setDeliveryPerson(selectedOption ? { UserId: selectedOption.value, Name: selectedOption.label } : null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {editOn && (\r\n                <>\r\n                    <h6 className=\"fa-18 m-0 p-3 py-2 d-flex align-items-center justify-content-between\">Create Delivery Order</h6>\r\n                </>\r\n            )}\r\n\r\n            <div className=\"p-3 pt-0\">\r\n                {/* CompnayInfo  */}\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">From:</h5>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-md-7\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\" colSpan={2}>\r\n                                            {companyInfo?.Company_Name}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{companyInfo?.Company_Address}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{companyInfo?.Telephone_Number}</td>\r\n                                    </tr>\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-5\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Date:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={orderDetails?.Do_Date ? ISOString(orderDetails?.Do_Date) : ''}\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Do_Date: e.target.value })}\r\n                                                className=\"cus-inpt p-1\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Invoice Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, GST_Inclusive: Number(e.target.value) })}\r\n                                                value={orderDetails.GST_Inclusive}\r\n                                            >\r\n                                                <option value={1}>Inclusive Tax</option>\r\n                                                <option value={0}>Exclusive Tax</option>\r\n                                                <option value={2}>Not Taxable</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Tax Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, IS_IGST: Number(e.target.value) })}\r\n                                                value={orderDetails.IS_IGST}\r\n                                            >\r\n                                                <option value='0'>GST</option>\r\n                                                <option value='1'>IGST</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Branch</td>\r\n\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1 \"\r\n                                                onChange={e => setOrderDetails({\r\n                                                    ...orderDetails,\r\n                                                    VoucherType: e.target.value\r\n                                                })}\r\n\r\n                                                value={orderDetails.VoucherType}\r\n                                            >\r\n\r\n                                                <option value='' disabled>select voucher</option>\r\n                                                {voucherType.map((vou, ind) => (\r\n                                                    <option\r\n                                                        value={vou.Vocher_Type_Id}\r\n                                                        key={ind}\r\n                                                    >\r\n                                                        {vou.Voucher_Type}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Branch</td>\r\n\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Branch_Id: Number(e.target.value) })}\r\n                                                value={orderDetails.Branch_Id}\r\n                                            >\r\n                                                <option value='' disabled>select Branch</option>\r\n                                                {branch.map((branch, ind) => (\r\n                                                    <option value={branch.BranchId} key={ind}>{branch.BranchName}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Customer Info */}\r\n\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">To:</h5>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Retailer Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Retailer_Id, label: orderDetails?.Retailer_Name }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Retailer_Id: e.value, Retailer_Name: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Retailer Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{storage.Name}</td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{ }</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Delivery_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Delivery_Status: e.target.value })}\r\n                                                value={orderDetails.Delivery_Status ? orderDetails.Delivery_Status : 1}\r\n                                            >\r\n                                                <option value={5}>Pending</option>\r\n\r\n                                                <option value={7}>Delivered</option>\r\n                                                <option value={6}>Return</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Mode:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Payment_Mode: e.target.value })}\r\n                                                value={orderDetails.Payment_Mode || 0}\r\n                                            >\r\n                                                <option value={0}></option>\r\n                                                <option value={1}>Cash</option>\r\n                                                <option value={3}>QR-Pay</option>\r\n                                                <option value={2}>G-Pay</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Q-Pay:</td>\r\n                                        <td className=\"border-0 bg-light\">{10}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Frequency Days:</td>\r\n                                        <td className=\"border-0 bg-light\">{20}</td>\r\n                                    </tr>\r\n\r\n\r\n\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Payment_Status: Number(e.target.value) })}\r\n                                                value={orderDetails.Payment_Status}\r\n                                            >\r\n                                                <option value={1}>Pending</option>\r\n\r\n                                                <option value={3}>Complete</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Delivery Person Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={\r\n                                                    deliveryPerson\r\n                                                        ? { value: deliveryPerson.UserId, label: deliveryPerson.Name }\r\n                                                        : { value: orderDetails?.Delivery_Person_Id, label: orderDetails?.Delivery_Person_Name }\r\n                                                }\r\n                                                onChange={handleDeliveryPersonChange}\r\n                                                options={[\r\n                                                    { value: '', label: 'Select', isDisabled: true },\r\n                                                    ...deliveryPersonList.map((obj) => ({\r\n                                                        value: obj.UserId,\r\n                                                        label: obj.Name,\r\n                                                    })),\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\r\n                                                    deliveryPerson\r\n                                                        ? deliveryPerson.Name\r\n                                                        : 'Sales Person Name'\r\n                                                }\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment Reference No:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Payment_Ref_No: e.target.value })}\r\n                                                value={orderDetails?.Payment_Ref_No}  // Default to empty string if no value available\r\n                                                placeholder=\"Enter Payment Reference Number\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* Actions */}\r\n                <div className=\"d-flex align-items-end justify-content-end flex-wrap mb-3\">\r\n\r\n                    <Button\r\n                        onClick={() => setAddProductDialog(true)}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        startIcon={<Add />}\r\n                    >Add Product</Button>\r\n                </div>\r\n\r\n                <FilterableTable\r\n                    dataArray={orderProducts}\r\n                    columns={[\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.Product_Name,\r\n                            ColumnHeader: 'Product',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.HSN_Code,\r\n                            ColumnHeader: 'HSN Code',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Bill_Qty + ' ' + (row?.Units ?? ''),\r\n                            ColumnHeader: 'Quantity',\r\n                            isVisible: 1,\r\n                            align: 'center'\r\n                        },\r\n                        {\r\n                            Field_Name: 'Item_Rate',\r\n                            ColumnHeader: \"Rate\",\r\n                            Fied_Data: 'number',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Taxable Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST ? row?.Product?.Igst_P : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage);\r\n                                return NumberFormat(\r\n                                    isInclusive ? (amount - tax) : amount\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST ? row?.Product?.Igst_P : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                return NumberFormat(\r\n                                    taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                ) + ' (' + percentage + '%)'\r\n                            },\r\n                            ColumnHeader: 'Tax',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST\r\n                                        ? row?.Product?.Igst_P\r\n                                        : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)\r\n                                ) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                return NumberFormat(\r\n                                    isEqualNumber(orderDetails.GST_Inclusive, 1) ? amount : (amount + tax)\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return (\r\n                                    <>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                setProductDetails({\r\n                                                    Item_Id: row.Item_Id,\r\n                                                    ItemName: row?.Product?.Product_Name,\r\n                                                    Bill_Qty: row.Bill_Qty,\r\n                                                    Item_Rate: row.Item_Rate,\r\n                                                    UOM: row.Product.UOM_Id,\r\n                                                    Product: row.Product,\r\n                                                    Group: row?.Product?.Pro_Group,\r\n                                                    GroupID: row?.Product?.Product_Group,\r\n                                                    Brand: row?.Product?.Brand_Name,\r\n                                                    BrandID: row?.Product?.Brand,\r\n                                                    Amount: row?.Amount\r\n                                                });\r\n                                                setAddProductDialog(true);\r\n                                            }}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setOrderProducts(pre => pre.filter(obj => !isEqualNumber(obj.Item_Id, row.Item_Id)))\r\n                                            }}\r\n                                            color='error'\r\n                                        >\r\n                                            <Delete />\r\n                                        </IconButton>\r\n\r\n                                    </>\r\n                                )\r\n                            },\r\n                            ColumnHeader: 'Action',\r\n                            isVisible: 1,\r\n                        },\r\n                    ]}\r\n                    EnableSerialNumber\r\n                    CellSize=\"small\"\r\n                    disablePagination={true}\r\n                />\r\n\r\n\r\n                {orderProducts.length > 0 && (\r\n                    <div className=\"d-flex justify-content-end py-2\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border p-2\" rowSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 4 : 5}>\r\n                                        Total in words: {numberToWords(parseInt(Total_Invoice_value))}\r\n                                    </td>\r\n                                    <td className=\"border p-2\">Total Taxable Amount</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                    </td>\r\n                                </tr>\r\n                                {!isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">CGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">SGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </>\r\n                                ) : (\r\n                                    <tr>\r\n                                        <td className=\"border p-2\">IGST</td>\r\n                                        <td className=\"border p-2\">\r\n                                            {NumberFormat(totalValueBeforeTax.TotalTax)}\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Round Off</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(\r\n                                            Total_Invoice_value - (\r\n                                                totalValueBeforeTax.TotalValue + totalValueBeforeTax.TotalTax\r\n                                            )\r\n                                        )}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Total</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(Total_Invoice_value)}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n\r\n                <p className=\"fa-15 mt-3 m-0\">Narration</p>\r\n                <textarea\r\n                    className=\"cus-inpt \"\r\n                    value={orderDetails.Narration}\r\n                    onChange={e => setOrderDetails(pre => ({ ...pre, Narration: e.target.value }))}\r\n                />\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                        variant='outlined'\r\n                        startIcon={<Clear />}\r\n                        onClick={switchScreen}\r\n                    >\r\n                        {'cancel'}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={postSaleOrder}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        color='success'\r\n                        startIcon={<Save />}\r\n                        disabled={orderProducts?.length === 0 || !orderDetails?.Retailer_Id}\r\n                    >Save</Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={addProductDialog}\r\n                onClose={closeAddProduct}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (productDetails.Item_Id && productDetails.Bill_Qty && productDetails.Item_Rate) {\r\n                        handleProductInputChange(\r\n                            productDetails.Item_Id,\r\n                            productDetails.Bill_Qty,\r\n                            productDetails.Item_Rate,\r\n                            productDetails.Product,\r\n                            productDetails.UOM,\r\n                            productDetails.Units,\r\n                        );\r\n                        closeAddProduct();\r\n                    } else {\r\n                        toast.warn(!productDetails.Item_Id ? 'Select Product' : !productDetails.Bill_Qty ? 'Enter Quantity' : 'Enter Rate or Amount');\r\n                    }\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.BrandID, label: productDetails.Brand }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, BrandID: e.value, Brand: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productBrand.map(obj => ({ value: obj?.Brand, label: obj?.Brand_Name }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, GroupID: e.value, Group: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productGroup.map(obj => ({ value: obj?.Product_Group, label: obj?.Pro_Group }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div> */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({ ...pre, GroupID: e.value, Group: e.label }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...products\r\n                                            .filter(\r\n                                                (pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 p-2\">\r\n                                <label>Item Name <RequiredStar /></label>\r\n                                <Select\r\n                                    value={{ value: productDetails.Item_Id, label: productDetails.ItemName }}\r\n                                    onChange={e => {\r\n                                        const productInfo = products.find(pro => isEqualNumber(pro.Product_Id, e.value))\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n                                            Item_Id: e.value,\r\n                                            ItemName: e.label,\r\n                                            Product: productInfo ?? {},\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n                                            UOM: productInfo.UOM_Id ?? pre.UOM,\r\n                                            Units: productInfo.Units ?? pre.Units,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Amount: 0,\r\n                                            Bill_Qty: 0,\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter(pro => productDetails.BrandID ? isEqualNumber(pro.Brand, productDetails.BrandID) : true)\r\n                                                .filter(pro => productDetails.GroupID ? isEqualNumber(pro.Product_Group, productDetails.GroupID) : true)\r\n                                        ].map(obj => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled: (\r\n                                                orderProducts.findIndex(ind => isEqualNumber(\r\n                                                    ind?.Item_Id, obj?.Product_Id\r\n                                                ))\r\n                                            ) === -1 ? false : true\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Quantity <RequiredStar /></label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : ''}\r\n                                    onChange={e => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(productDetails.Item_Rate, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else if (productDetails.Amount) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(pre.Amount, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Rate </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Item_Rate ? NumberFormat(productDetails.Item_Rate) : ''}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Item_Rate: e.target.value,\r\n                                        Amount: pre.Bill_Qty ? Multiplication(e.target.value, pre.Bill_Qty) : pre.Amount\r\n                                    }))}\r\n                                    min={1}\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <select\r\n                                    value={productDetails.UOM}\r\n                                    onChange={e => {\r\n                                        const selectedIndex = e.target.selectedIndex;\r\n                                        const label = e.target.options[selectedIndex].text;\r\n                                        const value = e.target.value;\r\n                                        setProductDetails(pre => ({ ...pre, UOM: value, Units: label }));\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                >\r\n                                    <option value=\"\" disabled>select</option>\r\n                                    {productUOM.map((o, i) => (\r\n                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Amount ? productDetails.Amount : ''}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Amount: e.target.value,\r\n                                        Item_Rate: pre.Bill_Qty ? Division(e.target.value, pre.Bill_Qty) : pre.Item_Rate\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions className=\"d-flex justify-content-between align-items-center\">\r\n                        <Button onClick={() => setProductDetails(productInitialDetails)} type='button' startIcon={<ClearAll />}>Clear</Button>\r\n                        <span>\r\n                            <Button type=\"button\" onClick={closeAddProduct}>cancel</Button>\r\n                            <Button type='submit' variant=\"outlined\">Add</Button>\r\n                        </span>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default NewDeliveryOrder;","export const convertedStatus = [\r\n    {\r\n        id: 0,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 1,\r\n        label: 'Verified',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Converted',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","_ref","loadingOn","loadingOff","onToggle","reload","storage","JSON","parse","localStorage","getItem","saleOrders","setSaleOrders","useState","retailers","setRetailers","salesPerson","setSalePerson","users","setUsers","screen","setScreen","orderInfo","setOrderInfo","viewOrder","setViewOrder","deleteConfirm","setDeleteConfirm","itemTodelete","setItemToDelete","isDeliveryDetailsVisible","setIsDeliveryDetailsVisible","filters","setFilters","Fromdate","getPreviousDate","Todate","ISOString","Retailer_Id","RetailerGet","Created_by","CreatedByGet","Delivery_Person_Id","Delivery_Person_Name","Cancel_status","dialog","setDialog","orderDetails","useEffect","fetchLink","address","concat","then","data","success","catch","e","console","error","Company_id","saleOrderColumn","Field_Name","ColumnHeader","Fied_Data","isVisible","align","isCustomCell","Cell","_ref2","row","_jsxs","_Fragment","Tooltip","title","IconButton","onClick","switchScreen","_objectSpread","isEdit","size","Edit","className","openDeleteDialog","So_No","itemData","Do_Id","Delete","closeDialog","Card","isValidObject","FilterAlt","Switch","checked","onChange","label","inputProps","CardContent","FilterableTable","dataArray","columns","isExpendable","tableMaxHeight","expandableComp","_ref3","Branch_Name","Round_off","isEqualNumber","GST_Inclusive","IS_IGST","Sales_Person_Name","colSpan","Narration","NewDeliveryOrder","editValues","pre","Object","keys","length","DeliveryInvoiceTemplate","orderProducts","download","actionOpen","clearDetails","TitleText","Dialog","open","fullWidth","maxWidth","DialogTitle","DialogContent","DialogActions","Button","async","method","bodyData","Order_Id","toast","message","finally","onClose","verticalAlign","Select","value","options","map","obj","Retailer_Name","styles","customSelectStyles","isSearchable","placeholder","UserId","Name","type","target","Number","taxCalc","amount","arguments","undefined","percentage","RoundNumber","findProductDetails","_arr$find","productid","find","Product_Id","editOn","products","setProducts","productBrand","setProductBrand","productUOM","setProductUOM","companyInfo","setCompanyInfo","voucherType","setVoucherType","branch","setBranch","initialValue","Company_Id","Do_Date","VoucherType","Delivery_Status","Payment_Ref_No","Payment_Mode","Payment_Status","Branch_Id","BranchId","Product_Array","So_Id","productInitialDetails","Item_Id","ItemName","Bill_Qty","Item_Rate","UOM","Units","Product","Group","GroupID","Brand","BrandID","Amount","setOrderDetails","setOrderProducts","productDetails","setProductDetails","setIsEdit","addProductDialog","setAddProductDialog","isExclusiveBill","isInclusive","isNotTaxableBill","deliveryPerson","setDeliveryPerson","deliveryPersonList","setDeliveryPersonList","_editValues$Products_","_editValues$Do_Date","Voucher_Type","Products_List","pro","_pro$Item_Id","_pro$Product_Name","_pro$Bill_Qty","_pro$Item_Rate","_pro$Unit_Id","_pro$Units","_pro$Cgst_P$Sgst_P$Ig","_Number","_findProductDetails","_Number2","_findProductDetails2","_Number3","_findProductDetails3","_Addition","_findProductDetails4","_findProductDetails5","_pro$Amount","Product_Name","Unit_Id","Cgst_P","Sgst_P","Igst_P","Gst_P","Addition","Latitude","Longitude","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","Delivery_Latitude","Delivery_Longitude","warn","fetchLocation","uniqueBrand","getUniqueData","closeAddProduct","Total_Invoice_value","reduce","o","item","itemRate","billQty","parseInt","Multiplication","product","gstPercentage","totalValueBeforeTax","acc","TotalValue","itemTax","basePrice","Subraction","TotalTax","Company_Name","Company_Address","Telephone_Number","disabled","vou","ind","Vocher_Type_Id","BranchName","isDisabled","maxMenuHeight","selectedOption","sx","ml","variant","startIcon","Add","_row$Product","_row$Product2","HSN_Code","_ref4","_row$Units","_ref5","_ref6","_row$Product3","_row$Product4","_row$Product5","_row$Amount","tax","NumberFormat","_ref7","_ref8","_row$Product6","_row$Product7","_row$Product8","_row$Amount2","_ref9","_ref10","_row$Product9","_row$Product10","_row$Product11","_row$Amount3","_ref11","_row$Product12","_row$Product13","_row$Product14","_row$Product15","_row$Product16","UOM_Id","Pro_Group","Product_Group","Brand_Name","filter","EnableSerialNumber","CellSize","disablePagination","rowSpan","numberToWords","Clear","postSaleOrder","log","isGraterNumber","Save","onSubmit","preventDefault","handleProductInputChange","productId","rate","productIndex","findIndex","updatedValues","prevValues","some","grp","push","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$UOM_Id","_productInfo$Units","_productInfo$Item_Rat","required","Division","min","selectedIndex","text","i","ClearAll","convertedStatus","id"],"sourceRoot":""}
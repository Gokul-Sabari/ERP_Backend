{"version":3,"file":"static/js/844.e0ed1765.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","Pages/Inventry/TripMaster/TripSheets.jsx","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/icons-material/esm/Visibility.js"],"sourcesContent":["\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n            ? '#E2ECF9'\r\n            : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tooltip } from \"@mui/material\";\r\nimport FilterableTable, { ButtonActions, createCol } from \"../../../Components/filterableTable2\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { Addition, checkIsNumber, ISOString, isValidDate, isValidObject, LocalDate, LocalTime, NumberFormat, numberToWords, Subraction, timeDuration, toNumber } from \"../../../Components/functions\";\r\nimport { Download, Edit, FilterAlt, Search, Visibility } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst TripSheets = ({ loadingOn, loadingOff }) => {\r\n\r\n    const nav = useNavigate();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const [tripData, setTripData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: defaultFilters.Fromdate,\r\n        Todate: defaultFilters.Todate,\r\n        fetchFrom: defaultFilters.Fromdate,\r\n        fetchTo: defaultFilters.Todate,\r\n        filterDialog: false,\r\n        refresh: false,\r\n        printPreviewDialog: false,\r\n        FromGodown: [],\r\n        ToGodown: [],\r\n        Staffs: [],\r\n        Items: [],\r\n        VoucherType: [],\r\n    });\r\n    const [selectedRow, setSelectedRow] = useState({});\r\n    const printRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n\r\n        fetchLink({\r\n            address: `inventory/tripSheet?Fromdate=${filters?.fetchFrom}&Todate=${filters?.fetchTo}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTripData(data.data);\r\n            }\r\n        }).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        }).catch(e => console.error(e))\r\n    }, [filters?.fetchFrom, filters?.fetchTo]);\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n        };\r\n        setFilters(pre => ({ ...pre, fetchFrom: queryFilters.Fromdate, fetchTo: queryFilters.Todate }));\r\n    }, [location.search]);\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        nav(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setFilters({\r\n            ...filters,\r\n            filterDialog: false,\r\n        });\r\n    }\r\n\r\n    const TaxData = (Array.isArray(selectedRow?.Products_List) ? selectedRow.Products_List : []).reduce((data, item) => {\r\n        const HSNindex = data.findIndex(obj => obj.hsnCode == item.HSN_Code);\r\n\r\n        const {\r\n            Taxable_Value = 0, Cgst_P = 0, Sgst_P = 0, Igst_P = 0, HSN_Code\r\n        } = item;\r\n\r\n        if (HSNindex !== -1) {\r\n            const prev = data[HSNindex];\r\n            const newValue = {\r\n                ...prev,\r\n                taxableValue: Addition(prev.taxableValue, Taxable_Value),\r\n                cgst: Addition(prev.cgst, Cgst_P),\r\n                sgst: Addition(prev.sgst, Sgst_P),\r\n                igst: Addition(prev.igst, Igst_P),\r\n                totalTax: Addition(prev.totalTax, Addition(Addition(Cgst_P, Sgst_P), Igst_P)),\r\n            };\r\n\r\n            data[HSNindex] = newValue;\r\n            return data;\r\n        }\r\n\r\n        const newEntry = {\r\n            hsnCode: HSN_Code,\r\n            taxableValue: Number(Taxable_Value) ?? 0,\r\n            cgst: Number(Cgst_P) ?? 0,\r\n            sgst: Number(Sgst_P) ?? 0,\r\n            igst: Number(Igst_P) ?? 0,\r\n            totalTax: Addition(Addition(Cgst_P, Sgst_P), Igst_P),\r\n        };\r\n\r\n        return [...data, newEntry];\r\n    }, []);\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n    });\r\n\r\n    const uniqueFromLocations = useMemo(() => {\r\n        const allLocations = tripData.flatMap((trip) =>\r\n            trip.Products_List.map((product) => product.FromLocation)\r\n        );\r\n        return [...new Set(allLocations)].map((location) => ({\r\n            value: location,\r\n            label: location,\r\n        }));\r\n    }, [tripData]);\r\n\r\n    const uniqueToLocations = useMemo(() => {\r\n        const allLocations = tripData.flatMap((trip) =>\r\n            trip.Products_List.map((product) => product.ToLocation)\r\n        );\r\n        return [...new Set(allLocations)].map((location) => ({\r\n            value: location,\r\n            label: location,\r\n        }));\r\n    }, [tripData]);\r\n\r\n    const uniqueItems = useMemo(() => {\r\n        const allItems = tripData.flatMap((trip) =>\r\n            trip.Products_List.map((product) => product.Product_Name)\r\n        );\r\n        return [...new Set(allItems)].map(items => ({\r\n            value: items,\r\n            label: items,\r\n        }));\r\n    }, [tripData]);\r\n\r\n    const uniqueStaffs = useMemo(() => {\r\n        const allStaffs = tripData.flatMap((trip) =>\r\n            trip.Employees_Involved.map((staff) => staff.Emp_Name)\r\n        );\r\n        return [...new Set(allStaffs)].map((name) => ({\r\n            value: name,\r\n            label: name,\r\n        }));\r\n    }, [tripData]);\r\n\r\n    const uniqueVoucher = useMemo(() => {\r\n        const allVoucher = tripData.map(trip => trip?.VoucherTypeGet);\r\n        return [...new Set(allVoucher)].map((name) => ({\r\n            value: name,\r\n            label: name,\r\n        }));\r\n    }, [tripData]);\r\n    \r\n    const filteredData = useMemo(() => {\r\n        return tripData.filter(trip => {\r\n            const hasFromGodownMatch = filters.FromGodown.length > 0\r\n                ? trip.Products_List.some(product =>\r\n                    filters.FromGodown.some(selected => selected.value === product.FromLocation)\r\n                )\r\n                : false;\r\n    \r\n            const hasToGodownMatch = filters.ToGodown.length > 0\r\n                ? trip.Products_List.some(product =>\r\n                    filters.ToGodown.some(selected => selected.value === product.ToLocation)\r\n                )\r\n                : false;\r\n    \r\n            const hasItemMatch = filters.Items.length > 0\r\n                ? trip.Products_List.some(product =>\r\n                    filters.Items.some(selected => selected.value === product.Product_Name)\r\n                )\r\n                : false;\r\n    \r\n            const hasEmployeeMatch = filters.Staffs.length > 0\r\n                ? trip.Employees_Involved.some(staff =>\r\n                    filters.Staffs.some(selected => selected.value === staff.Emp_Name)\r\n                )\r\n                : false;\r\n    \r\n            const hasVoucherMatch = filters.VoucherType.length > 0\r\n                ? filters.VoucherType.some(selected => selected.value === trip.VoucherTypeGet)\r\n                : false;\r\n    \r\n            return hasFromGodownMatch || hasToGodownMatch || hasItemMatch || hasEmployeeMatch || hasVoucherMatch;\r\n        });\r\n    }, [tripData, filters]);\r\n    \r\n\r\n    const statusColor = {\r\n        NewOrder: ' bg-info fw-bold fa-11 px-2 py-1 rounded-3 ',\r\n        OnProcess: ' bg-warning fw-bold fa-11 px-2 py-1 rounded-3 ',\r\n        Completed: ' bg-success text-light fa-11 px-2 py-1 rounded-3 ',\r\n        Canceled: ' bg-danger text-light fw-bold fa-11 px-2 py-1 rounded-3 '\r\n    }\r\n\r\n    const chooseColor = (orderStatus) => {\r\n        switch (orderStatus) {\r\n            case 'New': return statusColor.NewOrder;\r\n            case 'OnProcess': return statusColor.OnProcess;\r\n            case 'Completed': return statusColor.Completed;\r\n            case 'Canceled': return statusColor.Canceled;\r\n            default: return ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <FilterableTable\r\n                dataArray={(\r\n                    filters.FromGodown.length > 0 ||\r\n                    filters.ToGodown.length > 0 ||\r\n                    filters.Staffs.length > 0 ||\r\n                    filters.Items.length > 0 ||\r\n                    filters.VoucherType.length > 0\r\n                ) ? filteredData : tripData}\r\n                title=\"Trip Sheets\"\r\n                maxHeightOption\r\n                ExcelPrintOption\r\n                ButtonArea={\r\n                    <>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            onClick={() => nav('/erp/inventory/tripSheet/searchGodown')}\r\n                        >Add</Button>\r\n                        <Tooltip title='Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({ ...filters, filterDialog: true })}\r\n                            ><FilterAlt /></IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                }\r\n                EnableSerialNumber\r\n                initialPageCount={10}\r\n                columns={[\r\n                    createCol('Trip_Date', 'date', 'Date'),\r\n                    createCol('Trip_No', 'string'),\r\n                    createCol('TR_INV_ID', 'string', 'Inovice'),\r\n                    createCol('VoucherTypeGet', 'string', 'Voucher'),\r\n                    createCol('Vehicle_No', 'string', 'Vehicle'),\r\n                    createCol('Branch_Name', 'string', 'Branch'),\r\n                    createCol('StartTime', 'time', 'Start Time'),\r\n                    createCol('EndTime', 'time', 'End Time'),\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Time Taken',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => {\r\n                            const startTime = row?.StartTime ? new Date(row.StartTime) : '';\r\n                            const endTime = row.EndTime ? new Date(row.EndTime) : '';\r\n                            const timeTaken = (startTime && endTime) ? timeDuration(startTime, endTime) : '00:00';\r\n                            return (\r\n                                <span className=\"cus-badge bg-light\">{timeTaken}</span>\r\n                            )\r\n                        }\r\n                    },\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Distance',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => NumberFormat(Subraction(row?.Trip_EN_KM, row?.Trip_ST_KM))\r\n                    },\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Status',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => {\r\n                            const OrderStatus = row?.TripStatus;\r\n                            return (\r\n                                <span className={chooseColor(OrderStatus)}>\r\n                                    {String(OrderStatus).replace(' ', '')}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    },\r\n                    // {\r\n                    //     isVisible: 1,\r\n                    //     ColumnHeader: 'Total Qty',\r\n                    //     isCustomCell: true,\r\n                    //     Cell: ({ row }) => row?.Products_List?.reduce((acc, product) => Addition(product.QTY ?? 0, acc), 0)\r\n                    // },\r\n                    // {\r\n                    //     isVisible: 1,\r\n                    //     ColumnHeader: 'Total Item',\r\n                    //     isCustomCell: true,\r\n                    //     Cell: ({ row }) => NumberFormat(row.Products_List.length ?? 0)\r\n                    // },\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Action',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => (\r\n                            <ButtonActions\r\n                                buttonsData={[\r\n                                    {\r\n                                        name: 'Edit',\r\n                                        icon: <Edit className=\"fa-14\" />,\r\n                                        onclick: () => nav('/erp/inventory/tripSheet/searchGodown', {\r\n                                            state: {\r\n                                                ...row,\r\n                                                isEditable: false,\r\n                                            },\r\n                                        }),\r\n                                        disabled: toNumber(row?.ConvertedPurchaseOrders?.length) > 0 ? true : false\r\n                                    },\r\n                                    {\r\n                                        name: 'Preview',\r\n                                        icon: <Visibility className=\"fa-14\" />,\r\n                                        onclick: () => {\r\n                                            setFilters(pre => ({ ...pre, printPreviewDialog: true }));\r\n                                            setSelectedRow(row);\r\n                                        }\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        )\r\n                    }\r\n                ]}\r\n                isExpendable={true}\r\n                expandableComp={({ row }) => (\r\n                    <>\r\n                        {row?.Employees_Involved?.length > 0 && (\r\n                            <table className=\"fa-14\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th className=\"py-1 px-2 border text-muted\" colSpan={3}>Involved Employees</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th className=\"py-1 px-2 border text-muted\">SNo</th>\r\n                                        <th className=\"py-1 px-2 border text-muted\">Name</th>\r\n                                        <th className=\"py-1 px-2 border text-muted\">Role</th>\r\n                                    </tr>\r\n                                    {row.Employees_Involved.map((o, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className=\"py-1 px-2 border\">{i + 1}</td>\r\n                                            <td className=\"py-1 px-2 border\">{o?.Emp_Name}</td>\r\n                                            <td className=\"py-1 px-2 border\">{o?.Cost_Category}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n\r\n                        <FilterableTable\r\n                            title=\"Items\"\r\n                            EnableSerialNumber\r\n                            dataArray={Array.isArray(row.Products_List) ? row.Products_List : []}\r\n                            columns={[\r\n                                {\r\n                                    isVisible: 1,\r\n                                    ColumnHeader: 'Reason',\r\n                                    isCustomCell: true,\r\n                                    Cell: ({ row }) => row.Stock_Journal_Bill_type ?? 'Not Available',\r\n                                },\r\n                                createCol('Batch_No', 'string'),\r\n                                createCol('Product_Name', 'string', 'Item'),\r\n                                createCol('HSN_Code', 'string'),\r\n                                createCol('QTY', 'number'),\r\n                                createCol('KGS', 'number'),\r\n                                createCol('Gst_Rate', 'number'),\r\n                                createCol('Total_Value', 'number'),\r\n                                createCol('FromLocation', 'string', 'From'),\r\n                                createCol('ToLocation', 'string', 'To'),\r\n                            ]}\r\n                            disablePagination\r\n                            ExcelPrintOption\r\n                        />\r\n                    </>\r\n                )}\r\n            />\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='md'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Staffs</td>\r\n                                    <td colSpan={3}>\r\n                                        <Select\r\n                                            value={filters.Staffs}\r\n                                            onChange={(selectedOptions) =>\r\n                                                setFilters((prev) => ({ ...prev, Staffs: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueStaffs}\r\n                                            isMulti\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select Staff\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Items</td>\r\n                                    <td colSpan={3}>\r\n                                        <Select\r\n                                            value={filters.Items}\r\n                                            onChange={(selectedOptions) =>\r\n                                                setFilters((prev) => ({ ...prev, Items: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueItems}\r\n                                            isMulti\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select Items\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From Godown</td>\r\n                                    <td colSpan={3}>\r\n                                        <Select\r\n                                            value={filters.FromGodown}\r\n                                            onChange={(selectedOptions) =>\r\n                                                setFilters((prev) => ({ ...prev, FromGodown: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueFromLocations}\r\n                                            isMulti\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select From Godown\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To Godown</td>\r\n                                    <td colSpan={3}>\r\n                                        <Select\r\n                                            value={filters.ToGodown}\r\n                                            onChange={(selectedOptions) =>\r\n                                                setFilters((prev) => ({ ...prev, ToGodown: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueToLocations}\r\n                                            isMulti\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select To Godown\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Voucher</td>\r\n                                    <td colSpan={3}>\r\n                                        <Select\r\n                                            value={filters.VoucherType}\r\n                                            onChange={(selectedOptions) =>\r\n                                                setFilters((prev) => ({ ...prev, VoucherType: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueVoucher}\r\n                                            styles={customSelectStyles}\r\n                                            isMulti\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select Voucher\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            const updatedFilters = {\r\n                                Fromdate: filters?.Fromdate,\r\n                                Todate: filters?.Todate\r\n                            };\r\n                            updateQueryString(updatedFilters);\r\n                            closeDialog();\r\n                        }}\r\n                        startIcon={<Search />}\r\n                        variant=\"outlined\"\r\n                    >Search</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={filters.printPreviewDialog}\r\n                onClose={() => setFilters(pre => ({ ...pre, printPreviewDialog: false }))}\r\n                maxWidth='xl' fullWidth\r\n            >\r\n                <DialogTitle>Print Preview</DialogTitle>\r\n                <DialogContent ref={printRef}>\r\n                    {isValidObject(selectedRow) && <React.Fragment>\r\n\r\n                        <table className=\"table table-bordered fa-13 m-0\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td colSpan={3}>DELIVERY CHALLAN</td>\r\n                                    <td colSpan={3}>GSTIN : 33AADFS4987M1ZL</td>\r\n                                    <td colSpan={2}>ORIGINAL / DUPLICATE</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan={3} rowSpan={2}>\r\n                                        <span className=\"fa-14 fw-bold\">S.M TRADERS</span> <br />\r\n                                        H.O: 153, CHITRAKARA STREET, MADURAI - 625001 <br />\r\n                                        G.O: 746-A, PULIYUR, SAYANAPURAM, SIVAGANGAI - 630611\r\n                                    </td>\r\n                                    <td colSpan={3}>FSSAI No : 12418012000818</td>\r\n                                    <td>Challan No</td>\r\n                                    <td>{selectedRow?.Challan_No}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan={3}>Phone No: 9842131353, 9786131353</td>\r\n                                    <td>Date</td>\r\n                                    <td>{selectedRow.Trip_Date ? LocalDate(selectedRow.Trip_Date) : ''}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan={8} className=\"text-center\">Reason for Transfer - Branch Transfer / Line Sales / Purchase Return / Job Work</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Vehicle No</td>\r\n                                    <td>{selectedRow?.Vehicle_No}</td>\r\n                                    <td>Driver Name</td>\r\n                                    <td>\r\n                                        {selectedRow?.Employees_Involved?.filter(staff => (\r\n                                            staff?.Cost_Category === 'Driver'\r\n                                        ))?.map(staff => staff?.Emp_Name).join(', ')}\r\n                                    </td>\r\n                                    <td>Start Time</td>\r\n                                    <td>{selectedRow?.StartTime ? LocalTime(new Date(selectedRow.StartTime)) : ''}</td>\r\n                                    <td>Start KM</td>\r\n                                    <td>{selectedRow?.Trip_ST_KM}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Trip No</td>\r\n                                    <td>{selectedRow?.Trip_No}</td>\r\n                                    <td>LoadMan</td>\r\n                                    <td>\r\n                                        {selectedRow?.Employees_Involved?.filter(staff => (\r\n                                            staff?.Cost_Category === 'Load Man'\r\n                                        ))?.map(staff => staff?.Emp_Name).join(', ')}\r\n                                    </td>\r\n                                    <td>End Time</td>\r\n                                    <td>{selectedRow?.EndTime ? LocalTime(new Date(selectedRow.EndTime)) : ''}</td>\r\n                                    <td>End KM</td>\r\n                                    <td>{selectedRow?.Trip_ST_KM}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        {/* items */}\r\n                        <table className=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"fa-12 bg-light\">#</th>\r\n                                    <th className=\"fa-12 bg-light\">Reason</th>\r\n                                    <th className=\"fa-12 bg-light\">Party</th>\r\n                                    <th className=\"fa-12 bg-light\">Address</th>\r\n                                    <th className=\"fa-12 bg-light\">Item</th>\r\n                                    <th className=\"fa-12 bg-light\">HSN</th>\r\n\r\n                                    <th className=\"fa-12 bg-light\">Qty</th>\r\n                                    <th className=\"fa-12 bg-light\">KGS</th>\r\n                                    <th className=\"fa-12 bg-light\">Rate</th>\r\n                                    <th className=\"fa-12 bg-light\">Amount</th>\r\n                                    <th className=\"fa-12 bg-light\">Transfer To</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {(Array.isArray(selectedRow?.Products_List) ? selectedRow.Products_List : []).sort(\r\n                                    (a, b) => String(a.Trip_From).localeCompare(b.Trip_From)\r\n                                ).map((item, index, array) => {\r\n                                    const isFirstOccurrence =\r\n                                        index === 0 || item.Trip_From !== array[index - 1]?.Trip_From;\r\n                                    const rowSpan = array.filter((row) => row.Trip_From === item.Trip_From).length;\r\n\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td className=\"fa-10\">{index + 1}</td>\r\n                                            {/* Render the `Trip_From` cell only for the first occurrence */}\r\n                                            {isFirstOccurrence && (\r\n                                                <td className=\"fa-10 vctr\" rowSpan={rowSpan}>\r\n                                                    {item.Trip_From === \"STOCK JOURNAL\" && \"T\"}\r\n                                                </td>\r\n                                            )}\r\n                                            <td className=\"fa-10\"></td>\r\n                                            <td className=\"fa-10\"></td>\r\n                                            <td className=\"fa-10\">{item?.Product_Name}</td>\r\n                                            <td className=\"fa-10\">{item?.HSN_Code}</td>\r\n                                            <td className=\"fa-10\">{NumberFormat(item?.QTY)}</td>\r\n                                            <td className=\"fa-10\">{NumberFormat(item?.KGS)}</td>\r\n                                            <td className=\"fa-10\">{NumberFormat(item?.Gst_Rate)}</td>\r\n                                            <td className=\"fa-10\">{NumberFormat(item?.Total_Value)}</td>\r\n                                            <td className=\"fa-10\">{item?.ToLocation}</td>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n\r\n                                <tr>\r\n                                    <td className=\"fa-10 fw-bold\" colSpan={6}>\r\n                                        Total:&emsp;\r\n                                        {numberToWords((Array.isArray(selectedRow.Products_List) ? selectedRow.Products_List : []).reduce(\r\n                                            (acc, item) => Addition(acc, item.Total_Value ?? 0), 0\r\n                                        ))} Only.\r\n                                    </td>\r\n                                    <td className=\"fa-10 fw-bold \">\r\n                                        {NumberFormat((Array.isArray(selectedRow.Products_List) ? selectedRow.Products_List : []).reduce(\r\n                                            (acc, item) => Addition(acc, item.QTY ?? 0), 0\r\n                                        ))}.\r\n                                    </td>\r\n                                    <td className=\"fa-10 fw-bold\">\r\n                                        {NumberFormat((Array.isArray(selectedRow.Products_List) ? selectedRow.Products_List : []).reduce(\r\n                                            (acc, item) => Addition(acc, item.KGS ?? 0), 0\r\n                                        ))}.\r\n                                    </td>\r\n                                    <td className=\"fa-10\"></td>\r\n                                    <td className=\"fa-10 fw-bold\" colSpan={2}>\r\n                                        {NumberFormat((Array.isArray(selectedRow.Products_List) ? selectedRow.Products_List : []).reduce(\r\n                                            (acc, item) => Addition(acc, item.Total_Value ?? 0), 0\r\n                                        ))}.\r\n                                    </td>\r\n\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        {/* tax calculation */}\r\n\r\n                        <table className=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td className=\"bg-light fa-12 text-center\">HSN / SAC</td>\r\n                                    <td className=\"bg-light fa-12 text-center\">Taxable Value</td>\r\n                                    <td className=\"bg-light fa-12 text-center\">IGST</td>\r\n                                    <td className=\"bg-light fa-12 text-center\">CGST</td>\r\n                                    <td className=\"bg-light fa-12 text-center\">SGST</td>\r\n                                    <td className=\"bg-light fa-12 text-center\">Total</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {TaxData.map((o, i) => {\r\n                                    return (\r\n                                        <tr key={i}>\r\n                                            <td className=\"fa-10 text-end\">{o?.hsnCode}</td>\r\n                                            <td className=\"fa-10 text-end\">{NumberFormat(o?.taxableValue)}</td>\r\n                                            <td className=\"fa-10 text-end\">{NumberFormat(o?.igst)}</td>\r\n                                            <td className=\"fa-10 text-end\">{NumberFormat(o?.cgst)}</td>\r\n                                            <td className=\"fa-10 text-end\">{NumberFormat(o?.sgst)}</td>\r\n                                            <td className=\"fa-10 text-end\">\r\n                                                {NumberFormat(o?.totalTax)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                                <tr>\r\n                                    <td className=\"border fa-10 text-end\">Total</td>\r\n                                    <td className=\"border fa-10 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.taxableValue), 0))}\r\n                                    </td>\r\n                                    <td className=\"border fa-10 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.igst), 0))}\r\n                                    </td>\r\n                                    <td className=\"border fa-10 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.cgst), 0))}\r\n                                    </td>\r\n                                    <td className=\"border fa-10 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.sgst), 0))}\r\n                                    </td>\r\n                                    <td className=\"border fa-10 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0))}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td\r\n                                        colSpan={6}\r\n                                        className='border fa-13 fw-bold'\r\n                                    >\r\n                                        Tax Amount (in words) : INR &nbsp;\r\n                                        {numberToWords(\r\n                                            parseInt(\r\n                                                TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0)\r\n                                            )\r\n                                        )} only.\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table className=\"table table-bordered fa-10\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Prepared By</td>\r\n                                    <td style={{ minWidth: 150 }}></td>\r\n                                    <td>Executed By</td>\r\n                                    <td style={{ minWidth: 150 }}></td>\r\n                                    <td>Verified By</td>\r\n                                    <td style={{ minWidth: 150 }}></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Other Expenses</td>\r\n                                    <td>0</td>\r\n                                    <td>Round Off</td>\r\n                                    <td>0</td>\r\n                                    <td>Grand Total</td>\r\n                                    <td>\r\n                                        {NumberFormat((Array.isArray(selectedRow.Products_List) ? selectedRow.Products_List : []).reduce(\r\n                                            (acc, item) => Addition(acc, item.Total_Value ?? 0), 0\r\n                                        ))}.\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p>This is a Computer Generated Invoice</p>\r\n                        </div>\r\n\r\n                    </React.Fragment>\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setFilters(pre => ({ ...pre, printPreviewDialog: false }))}\r\n                        variant=\"outlined\"\r\n                    >close</Button>\r\n                    <Button\r\n                        startIcon={<Download />}\r\n                        variant='outlined'\r\n                        onClick={handlePrint}\r\n                    >\r\n                        Download\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TripSheets;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","menu","provided","state","_objectSpread","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","defaultFilters","Fromdate","ISOString","Todate","_ref","_selectedRow$Employee","_selectedRow$Employee2","_selectedRow$Employee3","_selectedRow$Employee4","loadingOn","loadingOff","nav","useNavigate","location","useLocation","query","URLSearchParams","search","tripData","setTripData","useState","filters","setFilters","fetchFrom","fetchTo","filterDialog","refresh","printPreviewDialog","FromGodown","ToGodown","Staffs","Items","VoucherType","selectedRow","setSelectedRow","printRef","useRef","useEffect","fetchLink","concat","then","data","success","finally","catch","e","console","error","queryFilters","get","isValidDate","pre","closeDialog","TaxData","Array","isArray","Products_List","reduce","item","_Number","_Number2","_Number3","_Number4","HSNindex","findIndex","obj","hsnCode","HSN_Code","Taxable_Value","Cgst_P","Sgst_P","Igst_P","prev","newValue","taxableValue","Addition","cgst","sgst","igst","totalTax","newEntry","Number","handlePrint","useReactToPrint","content","current","uniqueFromLocations","useMemo","allLocations","flatMap","trip","map","product","FromLocation","Set","value","label","uniqueToLocations","ToLocation","uniqueItems","allItems","Product_Name","items","uniqueStaffs","allStaffs","Employees_Involved","staff","Emp_Name","uniqueVoucher","allVoucher","VoucherTypeGet","filteredData","filter","hasFromGodownMatch","length","some","selected","hasToGodownMatch","hasItemMatch","hasEmployeeMatch","hasVoucherMatch","statusColor","chooseColor","orderStatus","_jsxs","_Fragment","children","_jsx","FilterableTable","dataArray","title","maxHeightOption","ExcelPrintOption","ButtonArea","Button","onClick","Tooltip","IconButton","size","FilterAlt","EnableSerialNumber","initialPageCount","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref2","row","startTime","StartTime","Date","endTime","EndTime","timeTaken","timeDuration","className","_ref3","NumberFormat","Subraction","Trip_EN_KM","Trip_ST_KM","_ref4","OrderStatus","TripStatus","String","replace","_ref5","_row$ConvertedPurchas","ButtonActions","buttonsData","icon","Edit","onclick","isEditable","disabled","toNumber","ConvertedPurchaseOrders","Visibility","isExpendable","expandableComp","_ref6","_row$Employees_Involv","colSpan","o","i","Cost_Category","_ref7","_row$Stock_Journal_Bi","Stock_Journal_Bill_type","disablePagination","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","verticalAlign","type","onChange","target","Select","selectedOptions","menuPortalTarget","document","body","options","isMulti","styles","isSearchable","placeholder","maxMenuHeight","DialogActions","newFilters","params","toString","updateQueryString","startIcon","Search","ref","isValidObject","React","rowSpan","Challan_No","Trip_Date","LocalDate","Vehicle_No","join","LocalTime","Trip_No","sort","a","b","Trip_From","localeCompare","index","array","_array","isFirstOccurrence","QTY","KGS","Gst_Rate","Total_Value","numberToWords","acc","_item$Total_Value","_item$QTY","_item$KGS","_item$Total_Value2","sum","parseInt","minWidth","_item$Total_Value3","Download","createSvgIcon","d"],"sourceRoot":""}
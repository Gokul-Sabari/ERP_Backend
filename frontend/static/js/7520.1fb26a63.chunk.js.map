{"version":3,"file":"static/js/7520.1fb26a63.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","../node_modules/@mui/icons-material/esm/FileDownload.js","../node_modules/@mui/icons-material/esm/SettingsOutlined.js","Components/dynamicMuiTable.jsx","Pages/Analytics/reportTemplates.jsx","../node_modules/@mui/icons-material/esm/ArrowBackIosNewOutlined.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Launch.js","../node_modules/@mui/icons-material/esm/List.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/export-to-csv/output/index.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name]\r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign]\r\n * @property {string} [ColumnHeader]\r\n * @property {string} [tdClass]\r\n * @property {0|1} [isVisible]\r\n * @property {'left'|'right'|'center'} [align]\r\n * @property {boolean} [isCustomCell]\r\n * @property {(row: object) => JSX.Element} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name]\r\n * @property {JSX.Element} [icon]\r\n * @property {() => void} [onclick]\r\n * @property {boolean} [disabled]\r\n */\r\n\r\n/**\r\n * @typedef {Object} FilterableTableProps\r\n * @property {Array<Object>} [dataArray]\r\n * @property {Array<Column>} [columns]\r\n * @property {Function} [onClickFun]\r\n * @property {boolean} [isExpendable]\r\n * @property {JSX.Element} [expandableComp]\r\n * @property {number} [tableMaxHeight]\r\n * @property {number} [initialPageCount]\r\n * @property {boolean} [EnableSerialNumber]\r\n * @property {'small'|'medium'|'large'} [CellSize]\r\n * @property {boolean} [disablePagination]\r\n * @property {string} [title]\r\n * @property {boolean} [PDFPrintOption]\r\n * @property {boolean} [ExcelPrintOption]\r\n * @property {boolean} [maxHeightOption]\r\n * @property {JSX.Element} [ButtonArea]\r\n * @property {Array<Menu>} [MenuButtons]\r\n * @property {number} [bodyFontSizePx]\r\n * @property {number} [headerFontSizePx]\r\n */\r\n\r\n/**\r\n * @param {FilterableTableProps} props\r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (\r\n    field = '', \r\n    type = 'string', \r\n    ColumnHeader = '', \r\n    align = 'left', \r\n    verticalAlign = 'center', \r\n    isVisible = 1\r\n) => {\r\n    return {\r\n        isVisible: isVisible,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return val ? NumberFormat(val) : val;\r\n        case 'date':\r\n            return val ? LocalDate(val) : val;\r\n        case 'time':\r\n            return val ? LocalTime(val) : val;\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n\r\n                        const tdClass = (row, Field_Name, tdIndex) => (\r\n                            column?.tdClass ? ` ${column?.tdClass({ row, Field_Name, index: tdIndex })} ` : ''\r\n                        );\r\n\r\n                        const horizondalalignClass = column.align\r\n                            ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                            : '';\r\n\r\n                        const verticalAlignClass = column.verticalAlign\r\n                            ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class\r\n                            : ' vctr ';\r\n\r\n                        if (isColumnVisible && isCommonValue) {\r\n                            const foundEntry = Object.entries(row).find(([key]) => key === column.Field_Name);\r\n\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {foundEntry ? formatString(foundEntry[1], column?.Fied_Data) : '-'}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        if (isColumnVisible && isCustomCell) {\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ${horizondalalignClass} ${verticalAlignClass}`}\r\n                            >\r\n                                -\r\n                            </TableCell>\r\n                        );\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name)\r\n                                                    ? ' fw-bold border-end border-top p-2 appFont '\r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align\r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func,\r\n        tdClass: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n    formatString\r\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'FileDownload');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4m0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2\"\n}), 'SettingsOutlined');","import React from 'react';\r\nimport { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\r\nimport { isEqualNumber, LocalDate, NumberFormat } from './functions';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { Autocomplete, IconButton, Tooltip, TextField, Checkbox, Dialog, DialogContent, DialogTitle, DialogActions, Button, Box } from '@mui/material';\r\nimport { CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff, FileDownload, SettingsOutlined } from '@mui/icons-material';\r\nimport { mkConfig, generateCsv, download } from 'export-to-csv';\r\nimport { fetchLink } from './fetchComponent';\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return NumberFormat(val)\r\n        case 'date':\r\n            return LocalDate(val);\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst getFun = (dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return {\r\n                filterVariant: 'range',\r\n                filterFn: 'between',\r\n            }\r\n        case 'date':\r\n            return {\r\n                filterVariant: 'text',\r\n            };\r\n        case 'string':\r\n            // const distinctValues = [];\r\n            // dataArray?.forEach(item => (item[key] && (distinctValues.findIndex(o => o?.value === item[key]?.toLocaleLowerCase()) === -1))\r\n            //     ? distinctValues.push({ label: String(item[key]), value: String(item[key]).toLocaleLowerCase() })\r\n            //     : null\r\n            // )\r\n            return {\r\n                filterVariant: 'text',\r\n            }\r\n\r\n        default:\r\n            return {}\r\n    }\r\n}\r\n\r\nconst csvConfig = mkConfig({\r\n    fieldSeparator: ',',\r\n    decimalSeparator: '.',\r\n    useKeysAsHeaders: true,\r\n});\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst DynamicMuiTable = ({ reportId, company, queryFilters, buttons, groupingState }) => {\r\n    const [dispColmn, setDispColmn] = useState([]);\r\n    const [dataArray, setDataArray] = useState([]);\r\n    const [columns, setColumns] = useState([]);\r\n    const [filters, setFilters] = useState({});\r\n    const [filteredData, setFilteredData] = useState(dataArray);\r\n    const filterCount = Object.keys(filters).length;\r\n    const showData = (filterCount > 0) ? filteredData : dataArray;\r\n    const [aggregationValues, setAggregationValues] = useState({});\r\n    const [dialogs, setDialogs] = useState({\r\n        filters: false,\r\n        aggregations: false\r\n    });\r\n    console.log(groupingState)\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/template?ReportId=${reportId}`\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                if (data.data[0]) {\r\n\r\n                    const o = data.data[0];\r\n                    const strucre = {\r\n                        Report_Type_Id: o?.Report_Type_Id,\r\n                        reportName: o?.Report_Name,\r\n                        tables: o?.tablesList?.map(table => ({\r\n                            Table_Id: table?.Table_Id,\r\n                            Table_Name: table?.Table_Name,\r\n                            AliasName: table?.AliasName,\r\n                            Table_Accronym: table?.Table_Accronym,\r\n                            isChecked: true,\r\n                            columns: table?.columnsList?.map(column => ({\r\n                                Column_Data_Type: column?.Column_Data_Type,\r\n                                Column_Name: column?.Column_Name,\r\n                                IS_Default: column?.IS_Default,\r\n                                IS_Join_Key: column?.IS_Join_Key,\r\n                                Order_By: column?.Order_By,\r\n                                Table_Id: column?.Table_Id,\r\n                                isVisible: true,\r\n                                accessColumnName: `${table?.Table_Accronym}_${column?.Column_Name}`\r\n                            }))\r\n                        }))\r\n                    }\r\n                    const allColumns = strucre.tables?.reduce((colArr, table) => {\r\n                        return colArr.concat(table.columns);\r\n                    }, []);\r\n                    setColumns(allColumns);\r\n                }\r\n            }\r\n        }).catch(e => console.log(e))\r\n\r\n    }, [reportId])\r\n\r\n    useEffect(() => {\r\n        if (reportId) {\r\n            fetchLink({\r\n                address: `reports/template/executeQuery`,\r\n                method: 'POST',\r\n                headers: {\r\n                    'Db': company,\r\n                },\r\n                bodyData: {\r\n                    filterReq: queryFilters,\r\n                    ReportID: reportId\r\n                }\r\n            }).then(data => {\r\n                if (data?.success) {\r\n                    setDataArray(data?.data);\r\n                }\r\n            }).catch(e => console.log(e))\r\n        }\r\n    }, [company, reportId])\r\n\r\n    useEffect(() => {\r\n        const displayColumns = [...columns].sort((a, b) => (a.Order_By && b.Order_By) ? a.Order_By - b.Order_By : b.Order_By - a.Order_By)\r\n\r\n        const muiColumns = displayColumns.filter(column =>\r\n            !Boolean(Number(column?.IS_Default)) && !Boolean(Number(column?.IS_Join_Key))\r\n        ).map(column => ({\r\n            header: column?.Column_Name?.replace(/_/g, ' '),\r\n            accessorKey: column?.accessColumnName,\r\n            sortable: true,\r\n            size: 150,\r\n            // ...aggregations(column?.Column_Data_Type, column?.Column_Name),\r\n            aggregationFn: aggregationValues[column?.Column_Name] ? aggregationValues[column?.Column_Name] : '',\r\n            AggregatedCell: ({ cell }) => (\r\n                <div className='blue-text text-center float-end w-100'>\r\n                    {cell.getValue() ? NumberFormat(cell.getValue()) : ''}\r\n                </div>\r\n            ),\r\n            Cell: ({ cell }) => (\r\n                <p className={`m-0 text-center fa-14 w-100`}>\r\n                    {formatString(cell.getValue(), column?.Column_Data_Type)}\r\n                </p>\r\n            ),\r\n            ...getFun(column?.Column_Data_Type),\r\n        }))\r\n\r\n        setDispColmn(muiColumns)\r\n    }, [columns, aggregationValues])\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filters]);\r\n\r\n    const handleExportRows = (rows) => {\r\n        const rowData = rows.map((row) => row.original);\r\n        const csv = generateCsv(csvConfig)(rowData);\r\n        download(csvConfig)(csv);\r\n    };\r\n\r\n    const handleExportData = () => {\r\n        const csv = generateCsv(csvConfig)(dataArray);\r\n        download(csvConfig)(csv);\r\n    };\r\n\r\n    const table = useMaterialReactTable({\r\n        columns: dispColmn,\r\n        data: showData || [],\r\n        enableColumnResizing: true,\r\n        enableGrouping: true,\r\n        enableStickyHeader: true,\r\n        enableStickyFooter: true,\r\n        enableColumnOrdering: true,\r\n        enableRowNumbers: false,\r\n        initialState: {\r\n            density: 'compact',\r\n            // grouping: groupingState?.filter(o => typeof o === 'string')\r\n            // .filter(o => {\r\n            //     const ind = dispColmn.findIndex(indVal => indVal?.accessorKey === o);\r\n            //     return ind !== -1; \r\n            // })\r\n            // ,\r\n            pagination: { pageIndex: 0, pageSize: 100 },\r\n        },\r\n        muiToolbarAlertBannerChipProps: { color: 'primary' },\r\n        muiTableContainerProps: { sx: { maxHeight: '68dvh', minHeight: '46vh' } },\r\n        muiTableProps: {\r\n            sx: {\r\n                caption: {\r\n                    captionSide: 'top',\r\n                },\r\n            },\r\n        },\r\n        muiTableHeadCellProps: {\r\n            sx: {\r\n                fontWeight: 'normal',\r\n            },\r\n            className: ' border text-center'\r\n        },\r\n        muiTableBodyCellProps: {\r\n            className: ' border-end text-center'\r\n        },\r\n        renderTopToolbarCustomActions: ({ table }) => (\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    gap: '16px',\r\n                    padding: '8px',\r\n                    flexWrap: 'wrap',\r\n                }}\r\n            >\r\n                <Button\r\n                    onClick={handleExportData}\r\n                    startIcon={<FileDownload />}\r\n                >\r\n                    All Data\r\n                </Button>\r\n                <Button\r\n                    disabled={table.getPrePaginationRowModel().rows.length === 0}\r\n                    onClick={() =>\r\n                        handleExportRows(table.getPrePaginationRowModel().rows)\r\n                    }\r\n                    startIcon={<FileDownload />}\r\n                >\r\n                    Filtered Rows\r\n                </Button>\r\n                <Button\r\n                    onClick={() => setDialogs(pre => ({ ...pre, aggregations: true }))}\r\n                    startIcon={<SettingsOutlined />}\r\n                >\r\n                    Aggregation\r\n                </Button>\r\n                {/*  */}\r\n                {/* {buttons({grouping: table.getState().grouping})} */}\r\n                <Button\r\n                    onClick={() => setDialogs(pre => ({ ...pre, filters: true }))}\r\n                    className=\"d-md-none d-inline\"\r\n                    startIcon={<FilterAlt />}\r\n                >\r\n                    Filters\r\n                </Button>\r\n            </Box>\r\n        ),\r\n    })\r\n\r\n    const memoizedTableConfig = useMemo(() => table, [table, aggregationValues, showData, groupingState]);\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...dataArray];\r\n        for (const column of columns) {\r\n            if (filters[column.accessColumnName]) {\r\n                if (filters[column.accessColumnName].type === 'range') {\r\n                    const { min, max } = filters[column.accessColumnName];\r\n                    filtered = filtered.filter(item => {\r\n                        const value = item[column.accessColumnName];\r\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\r\n                    });\r\n                } else if (filters[column.accessColumnName].type === 'date') {\r\n                    const { start, end } = filters[column.accessColumnName].value;\r\n                    filtered = filtered.filter(item => {\r\n                        const dateValue = new Date(item[column.accessColumnName]);\r\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\r\n                    });\r\n                } else if (Array.isArray(filters[column.accessColumnName])) {\r\n                    filtered = filters[column.accessColumnName]?.length > 0 ? filtered.filter(item => filters[column.accessColumnName].includes(item[column.accessColumnName].toLowerCase().trim())) : filtered\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { accessColumnName, Column_Name, Column_Data_Type } = column;\r\n        if (Column_Data_Type === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], min: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], max: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, start: e.target.value || undefined } })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, end: e.target.value || undefined } })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'string') {\r\n            const distinctValues = [...new Set(dataArray.map(item => item[accessColumnName]?.toLowerCase()?.trim()))].sort();\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${accessColumnName}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={filters[accessColumnName] || []}\r\n                    onChange={(event, newValue) => handleFilterChange(accessColumnName, newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={Column_Name?.replace(/_/g, ' ')}\r\n                            placeholder={`Select ${Column_Name?.replace(/_/g, ' ')}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row \">\r\n\r\n                <div className=\"col-xxl-10 col-lg-9 col-md-8\">\r\n                    <div className=\"p-2\">\r\n                        <MaterialReactTable table={memoizedTableConfig} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <Dialog\r\n                open={dialogs.filters}\r\n                onClose={() => setDialogs(pre => ({ ...pre, filters: false }))}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setDialogs(pre => ({ ...pre, filters: false }))}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialogs.aggregations}\r\n                onClose={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\r\n                fullWidth maxWidth='lg'\r\n            >\r\n                <DialogTitle>Aggregations</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"row\" style={{ minHeight: '30dvh' }}>\r\n                        {[...columns].filter(column => (\r\n                            isEqualNumber(column?.IS_Default, 0)\r\n                            && isEqualNumber(column?.IS_Join_Key, 0)\r\n                            && (column.Column_Data_Type === 'number'\r\n                                || column.Column_Data_Type === 'string')\r\n                        )).map((o, i) => (\r\n                            <div className=\"col-xxl-3 col-lg-4 col-md-6 p-2\" key={i}>\r\n                                <label>{o?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                <select\r\n                                    className='cus-inpt'\r\n                                    value={aggregationValues[o?.Column_Name] ?? ''}\r\n                                    onChange={e => setAggregationValues(pre => ({ ...pre, [o.Column_Name]: e.target.value }))}\r\n                                >\r\n                                    {\r\n                                        [\r\n                                            { label: 'Select Aggregation', value: '' },\r\n                                            { label: 'count', value: 'count' },\r\n                                            { label: 'extent', value: 'extent' },\r\n                                            { label: 'max', value: 'max' },\r\n                                            { label: 'min', value: 'min' },\r\n                                            { label: 'mean', value: 'mean' },\r\n                                            { label: 'median', value: 'median' },\r\n                                            { label: 'uniqueCount', value: 'uniqueCount' },\r\n                                            { label: 'sum', value: 'sum' },\r\n                                            { label: 'unique', value: 'unique' },\r\n                                        ].map((o, i) => (\r\n                                            <option value={o.value} key={i}>{o.label}</option>\r\n                                        ))\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DynamicMuiTable;","import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n    Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tab, Tabs, Box, Typography,\r\n    ListItemIcon, ListItemText, MenuItem, MenuList, Popover, \r\n} from '@mui/material';\r\nimport { ArrowBackIosNewOutlined, Edit, Visibility, List, Delete, FilterAlt, Launch, Close } from '@mui/icons-material';\r\nimport { isEqualNumber, UTCDateWithTime } from '../../Components/functions';\r\nimport { MyContext } from '../../Components/context/contextProvider';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport DynamicMuiTable from '../../Components/dynamicMuiTable';\r\nimport { toast } from 'react-toastify';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport FilterableTable from '../../Components/filterableTable2'\r\n\r\n\r\n\r\nconst TabPanel = (props) => {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`tabpanel-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ReportTemplates = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'))\r\n    const [templates, setTemplates] = useState([]);\r\n    const variableState = {\r\n        search: '',\r\n        openFilterDialog: false,\r\n        filterTablesAndColumns: {},\r\n        deleteConfirmationDialog: false,\r\n        preFilterDialog: false,\r\n    }\r\n    const [localVariable, setLocalVariable] = useState(variableState);\r\n    const { contextObj } = useContext(MyContext);\r\n    const [filters, setFilters] = useState({})\r\n    const nav = useNavigate();\r\n    const [reload, setReload] = useState(false)\r\n    const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setSelectedTab(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/template`,\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                setTemplates(data?.data);\r\n            }\r\n        }).catch(e => console.log(e))\r\n    }, [reload])\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Column_Name, Column_Data_Type } = column;\r\n        if (Column_Data_Type === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"cus-inpt me-1\"\r\n                        value={filters[Column_Name]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'range',\r\n                            ...filters[Column_Name],\r\n                            min: e.target.value ? parseFloat(e.target.value) : undefined\r\n                        })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"cus-inpt ms-1\"\r\n                        value={filters[Column_Name]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'range',\r\n                            ...filters[Column_Name],\r\n                            max: e.target.value ? parseFloat(e.target.value) : undefined\r\n                        })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between flex-wrap'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"cus-inpt w-auto flex-grow-1 me-1 my-1\"\r\n                        value={filters[Column_Name]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'date',\r\n                            value: { ...filters[Column_Name]?.value, start: e.target.value || undefined }\r\n                        })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"cus-inpt w-auto flex-grow-1 ms-1 my-1\"\r\n                        value={filters[Column_Name]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'date',\r\n                            value: { ...filters[Column_Name]?.value, end: e.target.value || undefined }\r\n                        })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'string') {\r\n            return (\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='Search...'\r\n                    className='cus-inpt'\r\n                    value={filters[Column_Name]?.value ?? ''}\r\n                    onChange={e => handleFilterChange(Column_Name, {\r\n                        type: 'textCompare',\r\n                        value: String(e.target.value).toLowerCase() || ''\r\n                    })}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    const Actions = ({ o }) => {\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n        const dataToForward = {\r\n            Report_Type_Id: o?.Report_Type_Id,\r\n            reportName: o?.Report_Name,\r\n            ReportState: o?.ReportState,\r\n            tables: o?.tablesList?.map(table => ({\r\n                Table_Id: table?.Table_Id,\r\n                Table_Name: table?.Table_Name,\r\n                AliasName: table?.AliasName,\r\n                Table_Accronym: table?.Table_Accronym,\r\n                isChecked: true,\r\n                columns: table?.columnsList?.map(column => ({\r\n                    Column_Data_Type: column?.Column_Data_Type,\r\n                    Column_Name: column?.Column_Name,\r\n                    IS_Default: column?.IS_Default,\r\n                    IS_Join_Key: column?.IS_Join_Key,\r\n                    Order_By: column?.Order_By,\r\n                    Table_Id: column?.Table_Id,\r\n                    isVisible: true\r\n                }))\r\n            }))\r\n        }\r\n\r\n        const popOverOpen = Boolean(anchorEl);\r\n        const id = popOverOpen ? o?.Report_Name : undefined;\r\n\r\n        const handleClick = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setAnchorEl(null);\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <IconButton aria-describedby={id} onClick={handleClick}>\r\n                    <List />\r\n                </IconButton>\r\n\r\n                <Popover\r\n                    id={id}\r\n                    open={popOverOpen}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                >\r\n                    <MenuList>\r\n\r\n                        <MenuItem\r\n                            onClick={\r\n                                () => {\r\n                                    setLocalVariable(pre => ({\r\n                                        ...pre,\r\n                                        filterTablesAndColumns: dataToForward,\r\n                                        openFilterDialog: true,\r\n                                    }));\r\n                                    setSelectedTab(0);\r\n                                    setFilters({})\r\n                                }\r\n                            }\r\n                        >\r\n                            <ListItemIcon><Visibility fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>OPEN</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={\r\n                                !storage?.Company_id\r\n                                    ? () => toast.warn('Select Company!')\r\n                                    : () => {\r\n                                        setLocalVariable(pre => ({\r\n                                            ...pre,\r\n                                            filterTablesAndColumns: dataToForward,\r\n                                            preFilterDialog: true,\r\n                                        }));\r\n                                        setFilters({});\r\n                                        setSelectedTab(0);\r\n                                    }\r\n                            }\r\n                        >\r\n                            <ListItemIcon><FilterAlt fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>FILTERS</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={() => nav('create', { state: { ReportState: dataToForward } })}\r\n                        >\r\n                            <ListItemIcon><Edit fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>EDIT</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={() => setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: true, filterTablesAndColumns: dataToForward }))}\r\n                        >\r\n                            <ListItemIcon><Delete fontSize=\"small\" color='error' /></ListItemIcon>\r\n                            <ListItemText>DELETE</ListItemText>\r\n                        </MenuItem>\r\n\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const RowComp = ({ o }) => {\r\n        return (\r\n            <>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {['SNo', 'Table', 'Column', 'Data-Type', 'Order'].map(o => (\r\n                                    <th className=\"border fa-14 text-center\" key={o} style={{ backgroundColor: '#EDF0F7' }}>{o}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {o?.tablesList?.map((table, tableInd) => (\r\n                                <React.Fragment key={tableInd}>\r\n                                    {table?.columnsList?.map((column, columnInd) => (\r\n                                        <tr key={columnInd}>\r\n                                            {columnInd === 0 && (\r\n                                                <>\r\n                                                    <td className=\"border fa-13 text-center vctr\" rowSpan={table?.columnsList?.length}>{tableInd + 1}</td>\r\n                                                    <td className=\"border fa-13 text-center blue-text vctr\" rowSpan={table?.columnsList?.length}>\r\n                                                        {table?.AliasName}\r\n                                                    </td>\r\n                                                </>\r\n                                            )}\r\n                                            <td\r\n                                                className={`\r\n                                                    border fa-13 vctr\r\n                                                    ${Boolean(Number(column?.IS_Default)) ? ' blue-text ' : ''}\r\n                                                    ${Boolean(Number(column?.IS_Join_Key)) ? ' fw-bold ' : ''}\r\n                                                    `}\r\n                                            >\r\n                                                {column?.Column_Name}\r\n                                            </td>\r\n                                            <td className=\"border fa-13 vctr\">{column?.Column_Data_Type}</td>\r\n                                            <td className=\"border fa-13 vctr\">{column?.Order_By}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </React.Fragment>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, openFilterDialog: false, filterTablesAndColumns: {} }))\r\n    }\r\n\r\n    const closeDeleteConfirmationDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false, filterTablesAndColumns: {} }))\r\n    }\r\n\r\n    const closeFilterDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, preFilterDialog: false }));\r\n        setFilters({})\r\n    }\r\n\r\n    const deleteTemplate = () => {\r\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false }))\r\n        fetchLink({\r\n            address: `reports/template`,\r\n            method: 'DELETE',\r\n            bodyData: {\r\n                Report_Type_Id: localVariable?.filterTablesAndColumns?.Report_Type_Id\r\n            }\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                toast.success(data.message)\r\n                setReload(pre => !pre)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.log(e))\r\n            .finally(() => setLocalVariable(pre => ({ ...pre, filterTablesAndColumns: {} })))\r\n    }\r\n\r\n    // const saveReportGroupingState = (reportid, grouping) => {\r\n    //     fetchLink({\r\n    //         address: `reports/template/templateState`,\r\n    //         method: 'POST',\r\n    //         bodyData: {\r\n    //             Report_Type_Id: reportid,\r\n    //             ReportState: grouping\r\n    //         }\r\n    //     }).then(data => {\r\n    //         if (data.success) {\r\n    //             toast.success(data.message);\r\n    //         } else {\r\n    //             toast.error(data.message)\r\n    //         }\r\n    //     }).catch(e => console.error(e))\r\n    // }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card>\r\n\r\n                <div className=\"p-2 border-bottom fa-16 fw-bold d-flex justify-content-between align-items-center\">\r\n                    <span className=\"text-primary text-uppercase ps-3\">Report Templates</span>\r\n                    {isEqualNumber(contextObj?.Add_Rights, 1) && (\r\n                        <Button variant='outlined' onClick={() => nav('create')}>Add Report</Button>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-end p-3\">\r\n                    <input\r\n                        type=\"search\"\r\n                        className='cus-inpt w-auto'\r\n                        placeholder='Search Report Name'\r\n                        value={localVariable?.search ?? ''}\r\n                        onChange={e => setLocalVariable(pre => ({ ...pre, search: String(e.target.value).toLowerCase() }))}\r\n                    />\r\n                </div>\r\n\r\n                <CardContent className='p-0'>\r\n                    <FilterableTable\r\n                        dataArray={\r\n                            !localVariable?.search ? templates : (\r\n                                [...templates].filter(fil =>\r\n                                    String(fil?.Report_Name).toLowerCase().includes(localVariable.search)\r\n                                )\r\n                            )\r\n                        }\r\n                        columns={[\r\n                            { Field_Name: 'Report_Name', ColumnHeader: 'Report Name', Fied_Data: 'string', isVisible: 1 },\r\n                            { ColumnHeader: 'Tables', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.tablesList?.length },\r\n                            { ColumnHeader: 'Columns', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.tablesList?.reduce((sum, item) => sum += Number(item?.columnsList?.length), 0) },\r\n                            { Field_Name: 'CreatedByGet', ColumnHeader: 'Created By', Fied_Data: 'string', isVisible: 1, },\r\n                            { ColumnHeader: 'Columns', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.CreatedAt ? UTCDateWithTime(row?.CreatedAt) : ' - ' },\r\n                            { ColumnHeader: 'Action', isVisible: 1, isCustomCell: true, Cell: ({ row }) => <Actions o={row} /> },\r\n                        ]}\r\n                        EnableSerialNumber\r\n                        isExpendable={true}\r\n                        expandableComp={({ row }) => <RowComp o={row} />}\r\n                        tableMaxHeight={650}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={localVariable?.openFilterDialog}\r\n                onClose={closeDialog}\r\n                fullScreen\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between align-items-center fa-16'>\r\n                    <span>\r\n                        Report - <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span>\r\n                    </span>\r\n                    <span>\r\n                        <IconButton onClick={closeDialog} color='error' className=' shadow-lg'>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {(localVariable?.filterTablesAndColumns?.Report_Type_Id && storage?.Company_id) && (\r\n                        <DynamicMuiTable\r\n                            reportId={localVariable?.filterTablesAndColumns?.Report_Type_Id}\r\n                            company={storage?.Company_id}\r\n                            queryFilters={filters}\r\n                            // buttons={({ grouping }) => (\r\n                            //     <Button\r\n                            //         onClick={() => saveReportGroupingState(localVariable?.filterTablesAndColumns?.Report_Type_Id, grouping)}\r\n                            //         disabled={grouping.length === 0}\r\n                            //         startIcon={<Save />}\r\n                            //     >\r\n                            //         Save State\r\n                            //     </Button>\r\n                            // )}\r\n                            // groupingState={\r\n                            //     localVariable?.filterTablesAndColumns?.ReportState \r\n                            //         ? JSON.parse(localVariable?.filterTablesAndColumns?.ReportState)\r\n                            //         : []\r\n                            // }\r\n                        />\r\n                    )}\r\n                    {/* {console.log(localVariable)} */}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeDialog}\r\n                        startIcon={<ArrowBackIosNewOutlined />}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={localVariable?.deleteConfirmationDialog}\r\n                onClose={closeDeleteConfirmationDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the Template <span className='blue-text'>{localVariable?.filterTablesAndColumns?.reportName}</span> permanently\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeDeleteConfirmationDialog}\r\n                    >\r\n                        cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={deleteTemplate}\r\n                        startIcon={<Delete />}\r\n                        variant='outlined'\r\n                        color='error'\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={localVariable?.preFilterDialog}\r\n                onClose={closeFilterDialog}\r\n                fullWidth maxWidth='md'\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between'>\r\n                    <span>\r\n                        Filters For <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span> - Report\r\n                    </span>\r\n                    <span>\r\n                        <IconButton onClick={closeFilterDialog} color='error' className='shadow-lg '>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Tabs value={selectedTab} onChange={handleTabChange}>\r\n                        {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\r\n                            <Tab label={table?.AliasName} key={i} />\r\n                        ))}\r\n                    </Tabs>\r\n                    {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\r\n                        <TabPanel value={selectedTab} index={i} key={i}>\r\n                            <div className=\"row\">\r\n                                {table?.columns?.map((column, ii) => (\r\n                                    !Boolean(Number(column?.IS_Default)) &&\r\n                                    !Boolean(Number(column?.IS_Join_Key)) &&\r\n                                    (\r\n                                        <div className=\"p-2 col-md-6 \" key={ii}>\r\n                                            <label className='mb-2 fw-bold text-muted'>{column?.Column_Name}</label>\r\n                                            {renderFilter(column)}\r\n                                        </div>\r\n                                    )\r\n                                ))}\r\n                            </div>\r\n                        </TabPanel>\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeFilterDialog}\r\n                    >\r\n                        cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => setLocalVariable(pre => ({ ...pre, openFilterDialog: true, preFilterDialog: false }))}\r\n                        startIcon={<Launch />}\r\n                        variant='contained'\r\n                    >\r\n                        Open report\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportTemplates","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\n}), 'ArrowBackIosNewOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'Launch');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 13h2v-2H3zm0 4h2v-2H3zm0-8h2V7H3zm4 4h14v-2H7zm0 4h14v-2H7zM7 7v2h14V7z\"\n}), 'List');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","var y={fieldSeparator:\",\",decimalSeparator:\".\",quoteStrings:!0,quoteCharacter:'\"',showTitle:!1,title:\"My Generated Report\",filename:\"generated\",showColumnHeaders:!0,useTextFile:!1,useBom:!0,columnHeaders:[],useKeysAsHeaders:!1,boolDisplay:{true:\"TRUE\",false:\"FALSE\"},replaceUndefinedWith:\"\"},L=\"\\r\\n\",F=\"\\uFEFF\",q=($)=>Object.assign({},y,$);class Q extends Error{constructor($){super($);this.name=\"CsvGenerationError\"}}class T extends Error{constructor($){super($);this.name=\"EmptyHeadersError\"}}class U extends Error{constructor($){super($);this.name=\"CsvDownloadEnvironmentError\"}}class V extends Error{constructor($){super($);this.name=\"UnsupportedDataFormatError\"}}var X=($)=>$,z=($)=>$,Z=X,_=X,Y=X,K=X,N=X;var r=function($,x){if(x=='\"'&&$.indexOf('\"')>-1)return $.replace(/\"/g,'\"\"');return $},D=($)=>typeof $===\"object\"?K($.key):K($),h=($)=>typeof $===\"object\"?N($.displayLabel):N($),P=($,...x)=>x.reduce((W,j)=>j(W),$),S=($)=>(x)=>$.useBom?_(z(x)+F):x,R=($)=>(x)=>$.showTitle?B(_(z(x)+$.title))(Y(\"\")):x,B=($)=>(x)=>_(z($)+z(x)+L),E=($)=>(x,W)=>w($)(Y(z(x)+z(W))),w=($)=>(x)=>X(z(x)+$.fieldSeparator),O=($,x)=>(W)=>{if(!$.showColumnHeaders)return W;if(x.length<1)throw new T(\"Option to show headers but none supplied. Make sure there are keys in your collection or that you've supplied headers through the config options.\");let j=Y(\"\");for(let A=0;A<x.length;A++){const J=h(x[A]);j=E($)(j,b($,z(J)))}return j=Y(z(j).slice(0,-1)),B(W)(j)},C=($,x,W)=>(j)=>{let A=j;for(var J=0;J<W.length;J++){let I=Y(\"\");for(let M=0;M<x.length;M++){const H=D(x[M]),v=W[J][z(H)];I=E($)(I,b($,v))}I=Y(z(I).slice(0,-1)),A=B(A)(I)}return A},l=z,k=($)=>+$===$&&(!isFinite($)||Boolean($%1)),m=($,x)=>{if(k(x)){if($.decimalSeparator===\"locale\")return Z(x.toLocaleString());if($.decimalSeparator)return Z(x.toString().replace(\".\",$.decimalSeparator))}return Z(x.toString())},G=($,x)=>{let W=x;if($.quoteStrings||$.fieldSeparator&&x.indexOf($.fieldSeparator)>-1||$.quoteCharacter&&x.indexOf($.quoteCharacter)>-1||x.indexOf(\"\\n\")>-1||x.indexOf(\"\\r\")>-1)W=$.quoteCharacter+r(x,$.quoteCharacter)+$.quoteCharacter;return Z(W)},p=($,x)=>{const W=x?\"true\":\"false\";return Z($.boolDisplay[W])},g=($,x)=>{if(typeof x===\"undefined\"&&$.replaceUndefinedWith!==void 0)return G($,$.replaceUndefinedWith+\"\");if(x===null)return G($,\"null\");return G($,\"\")},b=($,x)=>{if(typeof x===\"number\")return m($,x);if(typeof x===\"string\")return G($,x);if(typeof x===\"boolean\"&&$.boolDisplay)return p($,x);if(x===null||typeof x===\"undefined\")return g($,x);throw new V(`\n    typeof ${typeof x} isn't supported. Only number, string, boolean, null and undefined are supported.\n    Please convert the data in your object to one of those before generating the CSV.\n    `)};var Q$=($)=>(x)=>{const W=q($),j=W.useKeysAsHeaders?Object.keys(x[0]):W.columnHeaders;let A=P(_(\"\"),S(W),R(W),O(W,j),C(W,j,x));if(z(A).length<1)throw new Q(\"Output is empty. Is your data formatted correctly?\");return A},s=($)=>(x)=>{const W=q($),j=z(x),A=W.useTextFile?\"plain\":\"csv\";return new Blob([j],{type:`text/${A};charset=utf8;`})},T$=($)=>(x)=>{if(!window)throw new U(\"Downloading only supported in a browser environment.\");const W=s($)(x),j=q($),A=j.useTextFile?\"txt\":\"csv\",J=`${j.filename}.${A}`,I=document.createElement(\"a\");I.download=J,I.href=URL.createObjectURL(W),I.setAttribute(\"visibility\",\"hidden\"),document.body.appendChild(I),I.click(),document.body.removeChild(I)};export{q as mkConfig,Q$ as generateCsv,T$ as download,l as asString,s as asBlob};\n"],"names":["preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","key","Field_Name","createCol","arguments","length","undefined","Fied_Data","align","verticalAlign","ButtonActions","_ref","buttonsData","ToolTipText","anchorEl","setAnchorEl","useState","popOverOpen","Boolean","_jsxs","_Fragment","children","_jsx","Tooltip","title","IconButton","onClick","event","currentTarget","className","size","MoreVert","Popover","open","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","onclick","disabled","ListItemIcon","icon","ListItemText","name","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","FilterableTable","_ref2","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","type","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","RowComp","_ref3","setOpen","fontSize","Fragment","TableRow","TableCell","sx","pre","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isEqualNumber","isCommonValue","tdClass","tdIndex","horizondalalignClass","find","verticalAlignClass","foundEntry","Object","entries","_ref4","console","log","colSpan","Number","Card","component","Paper","ToggleOn","color","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","backgroundColor","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","value","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","createSvgIcon","d","getFun","filterVariant","filterFn","csvConfig","mkConfig","fieldSeparator","decimalSeparator","useKeysAsHeaders","CheckBoxOutlineBlank","checkedIcon","CheckBox","reportId","company","queryFilters","buttons","groupingState","dispColmn","setDispColmn","setDataArray","setColumns","filters","setFilters","filteredData","setFilteredData","showData","keys","aggregationValues","setAggregationValues","dialogs","setDialogs","aggregations","useEffect","fetchLink","address","then","success","_o$tablesList","_strucre$tables","strucre","Report_Type_Id","reportName","Report_Name","tables","tablesList","table","_table$columnsList","Table_Id","Table_Name","AliasName","Table_Accronym","isChecked","columnsList","Column_Data_Type","Column_Name","IS_Default","IS_Join_Key","Order_By","accessColumnName","allColumns","reduce","colArr","concat","catch","method","bodyData","filterReq","ReportID","muiColumns","_column$Column_Name","accessorKey","sortable","aggregationFn","AggregatedCell","cell","getValue","applyFilters","handleExportData","csv","generateCsv","download","useMaterialReactTable","enableColumnResizing","enableGrouping","enableStickyHeader","enableStickyFooter","enableColumnOrdering","enableRowNumbers","initialState","density","pagination","pageIndex","pageSize","muiToolbarAlertBannerChipProps","muiTableContainerProps","minHeight","muiTableProps","caption","captionSide","muiTableHeadCellProps","fontWeight","muiTableBodyCellProps","renderTopToolbarCustomActions","Box","display","gap","padding","flexWrap","Button","startIcon","FileDownload","getPrePaginationRowModel","rowData","original","handleExportRows","SettingsOutlined","FilterAlt","memoizedTableConfig","useMemo","handleFilterChange","prevFilters","filtered","min","max","item","start","end","dateValue","Date","isArray","_filters$column$acces","includes","trim","renderFilter","_filters$accessColumn","_filters$accessColumn2","_filters$accessColumn3","_filters$accessColumn4","_filters$accessColumn5","_filters$accessColumn6","_filters$accessColumn7","_filters$accessColumn9","_filters$accessColumn10","_filters$accessColumn11","placeholder","onChange","parseFloat","_filters$accessColumn8","_filters$accessColumn12","distinctValues","_item$accessColumnNam","_item$accessColumnNam2","Autocomplete","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","newValue","renderOption","props","_ref5","selected","Checkbox","style","marginRight","checked","isOptionEqualToValue","opt","renderInput","params","TextField","label","MaterialReactTable","FilterAltOff","overflow","_column$Column_Name2","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","_column$Column_Name3","DialogActions","_o$Column_Name","_aggregationValues$o$","TabPanel","other","role","hidden","p","Typography","ReportTemplates","_localVariable$search","_localVariable$filter2","_localVariable$filter3","_localVariable$filter4","_localVariable$filter5","_localVariable$filter6","_localVariable$filter7","_localVariable$filter8","_localVariable$filter9","_localVariable$filter10","storage","JSON","parse","localStorage","getItem","templates","setTemplates","localVariable","setLocalVariable","search","openFilterDialog","filterTablesAndColumns","deleteConfirmationDialog","preFilterDialog","contextObj","useContext","MyContext","nav","useNavigate","reload","setReload","selectedTab","setSelectedTab","_filters$Column_Name$","_filters$Column_Name","_filters$Column_Name$2","_filters$Column_Name2","_filters$Column_Name$3","_filters$Column_Name3","_filters$Column_Name4","_filters$Column_Name$4","_filters$Column_Name6","_filters$Column_Name7","_filters$Column_Name$5","_filters$Column_Name9","_filters$Column_Name5","_filters$Column_Name8","Actions","dataToForward","ReportState","List","Visibility","Company_id","toast","warn","state","Edit","Delete","_o$tablesList2","tableInd","_table$columnsList2","React","_table$columnsList3","_table$columnsList4","rowSpan","closeDialog","closeDeleteConfirmationDialog","closeFilterDialog","Add_Rights","variant","CardContent","fil","_row$tablesList","_row$tablesList2","sum","_item$columnsList","CreatedAt","UTCDateWithTime","_ref6","_ref7","fullScreen","Close","DynamicMuiTable","ArrowBackIosNewOutlined","deleteTemplate","_localVariable$filter","message","finally","Tabs","handleTabChange","Tab","_table$columns","ii","Launch","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","styles","root","paddingBottom","inProps","ref","useDefaultProps","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","y","quoteStrings","quoteCharacter","showTitle","filename","showColumnHeaders","useTextFile","useBom","columnHeaders","boolDisplay","true","false","replaceUndefinedWith","q","$","assign","Q","Error","constructor","super","this","T","U","V","X","Z","_","Y","K","N","D","h","displayLabel","B","x","E","W","w","m","isFinite","k","toLocaleString","toString","G","indexOf","r","g","Q$","j","A","_len","_key","P","S","R","O","J","C","I","M","H","v","T$","window","Blob","s","document","createElement","href","URL","createObjectURL","setAttribute","appendChild","click","removeChild"],"sourceRoot":""}
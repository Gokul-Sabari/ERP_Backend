{"version":3,"file":"static/js/636.4c123eb6.chunk.js","mappings":"6PAQA,MA4XA,EA5X0BA,IAAgC,IAA/B,UAAEC,EAAS,WAAEC,GAAYF,EAChD,MAAOG,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAElCG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,CACnCK,SAAU,IAAIC,MAAK,IAAIA,MAAOC,SAAQ,IAAID,MAAOE,UAAY,IACxDC,cACAC,MAAM,KAAK,GAChBC,QAAQ,IAAIL,MAAOG,cAAcC,MAAM,KAAK,GAC5CE,SAAS,EACTC,eAAe,EACfC,aAAc,GACdC,eAAgB,GAChBC,gBAAiB,KAGfC,GAAgBC,EAAAA,EAAAA,UAAQ,IACnBpB,EAAOqB,QACVC,IACKnB,EAASoB,MAAKC,IACXC,EAAAA,EAAAA,IAAcH,EAAOI,UAAWF,EAAOE,gBAGpD,CAAC1B,EAAQG,IAENwB,GAAaP,EAAAA,EAAAA,UAAQ,IAChBf,EAAQW,aACThB,EAAOqB,QAAOO,IACVC,EAAAA,EAAAA,IAAeC,OAAOC,OAAOH,GAAKI,KAAK,MAAMC,UACzCJ,EAAAA,EAAAA,IAAexB,EAAQW,iBAG/BhB,GACP,CAACK,EAAQW,aAAchB,IAEpBkC,GAAed,EAAAA,EAAAA,UAAQ,IAClBf,EAAQY,eACTd,EAASkB,QAAOO,IACZC,EAAAA,EAAAA,IAAeC,OAAOC,OAAOH,GAAKI,KAAK,MAAMC,UACzCJ,EAAAA,EAAAA,IAAexB,EAAQY,mBAG/Bd,GACP,CAACE,EAAQY,eAAgBd,IAEtBgC,GAAwBf,EAAAA,EAAAA,UAAQ,IAC3Bf,EAAQa,gBACTC,EAAcE,QAAOO,IACjBC,EAAAA,EAAAA,IAAeC,OAAOC,OAAOH,GAAKI,KAAK,MAAMC,UACzCJ,EAAAA,EAAAA,IAAexB,EAAQa,oBAG/BC,GACP,CAACA,EAAed,EAAQa,mBAE3BkB,EAAAA,EAAAA,YAAU,KACFtC,GAAWA,KAEfuC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,mCAADC,OAAqClC,EAAQE,SAAQ,YAAAgC,OAAWlC,EAAQQ,UAE9E2B,MAAKC,IACF,GAAIA,EAAKC,QAAS,CAAC,IAADC,EACd,MAAMxC,EAAWyC,MAAMC,QAAY,OAAJJ,QAAI,IAAJA,GAAY,QAARE,EAAJF,EAAMK,cAAM,IAAAH,OAAR,EAAJA,EAAcI,aACvCN,EAAKK,OAAOC,YACZ,GACN9C,EAAUwC,EAAKA,MACfrC,EAAYD,EAChB,KAEH6C,OAAMC,IACHC,QAAQC,MAAMF,EAAE,IAEnBG,SAAQ,KACDrD,GAAYA,GAAY,GAC9B,GACP,CAACM,EAAQS,QAAST,EAAQE,SAAUF,EAAQQ,SAE/C,MAqBMwC,EAAsBC,IAAc,IAADC,EAAA,IAAZ,IAAEC,GAAKF,EAChC,OACIG,EAAAA,EAAAA,MAAA,SAAOC,UAAU,QAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAD,UACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sBAAqBC,SAAC,gBACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sBAAqBC,SAAC,kBACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sBAAqBC,SAAC,SACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sBAAqBC,SAAC,WACpCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sBAAqBC,SAAC,sBAG5CC,EAAAA,EAAAA,KAAA,SAAAD,SACQ,OAAHH,QAAG,IAAHA,GAAU,QAAPD,EAAHC,EAAKK,aAAK,IAAAN,OAAP,EAAHA,EAAYO,KAAI,CAACrB,EAAMsB,KACpBN,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAM,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAMuB,SAClCJ,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAM,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,gBAClCL,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAM,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,OAClCN,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAM,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,QAClCP,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SACjB,OAAJlB,QAAI,IAAJA,GAAAA,EAAMyB,KAAW,OAAJzB,QAAI,IAAJA,GAAAA,EAAM0B,KACd1B,EAAKyB,IAAMzB,EAAK0B,KAChB,MARLJ,SAab,EA2BhB,OACIH,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UACIF,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAAAV,SAAA,EACDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCC,SAAA,EAChDF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaC,SAAA,CAAC,yBACDxC,EAAcmD,OAAO,QAEhDV,EAAAA,EAAAA,KAAA,MAAIW,MAAO,CAAEC,cAAe,UAAWb,SAAC,UACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,SACIa,KAAK,OACLC,MAAOrE,EAAQE,SACfoE,SAAU1B,GACN3C,GAAUsE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLvE,GAAO,IACVE,SAAU0C,EAAE4B,OAAOH,SAG3BhB,UAAU,gBAGlBE,EAAAA,EAAAA,KAAA,MAAIW,MAAO,CAAEC,cAAe,UAAWb,SAAC,QACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,SACIa,KAAK,OACLC,MAAOrE,EAAQQ,OACf8D,SAAU1B,GACN3C,GAAUsE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLvE,GAAO,IACVQ,OAAQoC,EAAE4B,OAAOH,SAGzBhB,UAAU,gBAGlBE,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACC,QA/GZC,KACRlF,GAAWA,KAEfuC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,mCAADC,OAAqClC,EAAQE,SAAQ,YAAAgC,OAAWlC,EAAQQ,UAE9E2B,MAAKC,IACF,GAAIA,EAAKC,QAAS,CAAC,IAADuC,EAAAC,EACd,MAAM/E,EAAWyC,MAAMC,QAAY,OAAJJ,QAAI,IAAJA,GAAY,QAARwC,EAAJxC,EAAMK,cAAM,IAAAmC,OAAR,EAAJA,EAAclC,aACnC,OAAJN,QAAI,IAAJA,GAAY,QAARyC,EAAJzC,EAAMK,cAAM,IAAAoC,OAAR,EAAJA,EAAcnC,YACd,GACN9C,EAAUwC,EAAKA,MACfrC,EAAYD,EAChB,KAEH6C,OAAMC,GAAKC,QAAQC,MAAMF,KACzBG,SAAQ,KACDrD,GAAYA,GAAY,GAC9B,EA6FmC4D,SAAC,YAG1BC,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CACPC,KAAK,QACLL,QAASA,KACLzE,GAAW+E,IACaT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbS,GAAI,IACPtE,eAAgBsE,EAAKtE,iBAI3B,EACJ4C,UACFC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,UAGnB1B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2CAGlBrD,EAAQU,eACL6C,EAAAA,EAAAA,KAAC2B,EAAAA,GAAe,CACZC,MAAO,mBACPC,eAAgB,GAChBC,iBAAkB,GAClBC,UAAWxD,EACXyD,QAAS,EACLC,EAAAA,EAAAA,IAAU,YAAa,SAAU,cACjCA,EAAAA,EAAAA,IAAU,QAAS,OAAQ,UAC3BA,EAAAA,EAAAA,IACI,gBACA,SACA,kBAEJA,EAAAA,EAAAA,IAAU,QAAS,SAAU,gBAC7BA,EAAAA,EAAAA,IAAU,UAAW,SAAU,cAC/B,CACIC,WAAY,UACZC,aAAc,UACdC,UAAW,EACXC,cAAc,EACdC,KAAMC,IAAc,IAAb,IAAE3C,GAAK2C,EACV,OACIvC,EAAAA,EAAAA,KAAA,MACIF,UAAU,QACVa,MAAO,CAAE6B,SAAU,QAASzC,UAC5BC,EAAAA,EAAAA,KAACuB,EAAAA,EAAU,CACPC,KAAK,QACLL,QAASA,KAAMsB,OA5G1C5D,EA4GmDe,EA3G5D1D,GAAWA,SAEfuC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,iCAADC,OAAmCE,EAAKf,aAE9Cc,MAAKC,IACEA,EAAKC,QACL4D,EAAAA,GAAM5D,QAAQD,EAAK8D,SAEnBD,EAAAA,GAAMnD,MAAMV,EAAK8D,QACrB,IAEHvD,OAAMC,GAAKC,QAAQC,MAAMF,KACzBG,SAAQ,KACL9C,GAAWkG,IAAW5B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACf4B,GAAW,IACd1F,SAAU0F,EAAY1F,YAEtBf,GAAYA,GAAY,IAnBvB0C,KA4GwD,EAAAkB,UAC7BC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAI,OAER,IAKrBC,cAAc,EACdC,eAAgB,IAChBC,eAAgBvD,EAChBwD,YACIjD,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UACIC,EAAAA,EAAAA,KAAA,SACIa,KAAK,SACLf,UAAU,sBACVgB,MAAOrE,EAAQa,gBACfyD,SAAU1B,GACN3C,GAAWwG,IAAGlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACPkC,GAAG,IACN5F,gBAAiB+B,EAAE4B,OAAOH,UAGlCqC,YAAY,kBAM5BnD,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UACIF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAChBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UACzBC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAe,CACZC,MAAO,cAAgBxF,EAAOsE,OAC9BmB,eAAgB,GAChBC,iBAAkB,GAClBC,UAAWhE,EACXiE,QAAS,EACLC,EAAAA,EAAAA,IACI,YACA,SACA,cAEJA,EAAAA,EAAAA,IAAU,QAAS,OAAQ,UAC3BA,EAAAA,EAAAA,IACI,gBACA,SACA,kBAEJA,EAAAA,EAAAA,IACI,QACA,SACA,gBAEJA,EAAAA,EAAAA,IACI,UACA,SACA,eAGRgB,YACIjD,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UACIC,EAAAA,EAAAA,KAAA,SACIa,KAAK,SACLf,UAAU,sBACVgB,MAAOrE,EAAQW,aACf2D,SAAU1B,GACN3C,GAAWwG,IAAGlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACPkC,GAAG,IACN9F,aACIiC,EAAE4B,OAAOH,UAGrBqC,YAAY,eAKxBL,cAAc,EACdC,eAAgB,IAChBC,eAAgBvD,OAGxBO,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UACzBC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAe,CACZC,MAAO,cAAgBrF,EAASmE,OAChCmB,eAAgB,GAChBC,iBAAkB,GAClBC,UAAWzD,EACX0D,QAAS,EACLC,EAAAA,EAAAA,IACI,YACA,SACA,cAEJA,EAAAA,EAAAA,IAAU,QAAS,OAAQ,UAC3BA,EAAAA,EAAAA,IACI,gBACA,SACA,kBAEJA,EAAAA,EAAAA,IACI,QACA,SACA,gBAEJA,EAAAA,EAAAA,IACI,UACA,SACA,eAGRgB,YACIjD,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UACIC,EAAAA,EAAAA,KAAA,SACIa,KAAK,SACLf,UAAU,sBACVgB,MAAOrE,EAAQY,eACf0D,SAAU1B,GACN3C,GAAWwG,IAAGlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACPkC,GAAG,IACN7F,eACIgC,EAAE4B,OAAOH,UAGrBqC,YAAY,eAIxBL,cAAc,EACdC,eAAgB,IAChBC,eAAgBvD,eAOzC,C,6DC5XX,SAAe2D,EAAAA,EAAAA,IAA4BpD,EAAAA,EAAAA,KAAK,OAAQ,CACtDqD,EAAG,iOACD,O,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4BpD,EAAAA,EAAAA,KAAK,OAAQ,CACtDqD,EAAG,mNACD,a","sources":["Pages/Masters/posproductListing.jsx","../node_modules/@mui/icons-material/esm/Sync.js","../node_modules/@mui/icons-material/esm/Visibility.js"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { filterableText, isEqualNumber } from \"../../Components/functions\";\r\nimport FilterableTable, { createCol } from \"../../Components/filterableTable2\";\r\nimport { Card, IconButton, Button } from \"@mui/material\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Sync, Visibility } from \"@mui/icons-material\";\r\n\r\nconst PosproductListing = ({ loadingOn, loadingOff }) => {\r\n    const [ERPLOL, setERPLOL] = useState([]);\r\n    const [tallyLOL, setTallyLOL] = useState([]);\r\n\r\n    const [filters, setFilters] = useState({\r\n        FromDate: new Date(new Date().setDate(new Date().getDate() - 1))\r\n            .toISOString()\r\n            .split(\"T\")[0],\r\n        ToDate: new Date().toISOString().split(\"T\")[0],\r\n        refresh: false,\r\n        viewNotSynced: false,\r\n        searchERPLol: \"\",\r\n        searchTallyLol: \"\",\r\n        searchNotSynced: \"\",\r\n    });\r\n\r\n    const notSyncedList = useMemo(() => {\r\n        return ERPLOL.filter(\r\n            talFil =>\r\n                !tallyLOL.some(erpFil =>\r\n                    isEqualNumber(talFil.invoiceno, erpFil.invoiceno),\r\n                ),\r\n        );\r\n    }, [ERPLOL, tallyLOL]);\r\n\r\n    const ERPLOLList = useMemo(() => {\r\n        return filters.searchERPLol\r\n            ? ERPLOL.filter(obj =>\r\n                  filterableText(Object.values(obj).join(\" \")).includes(\r\n                      filterableText(filters.searchERPLol),\r\n                  ),\r\n              )\r\n            : ERPLOL;\r\n    }, [filters.searchERPLol, ERPLOL]);\r\n\r\n    const TallyLOLList = useMemo(() => {\r\n        return filters.searchTallyLol\r\n            ? tallyLOL.filter(obj =>\r\n                  filterableText(Object.values(obj).join(\" \")).includes(\r\n                      filterableText(filters.searchTallyLol),\r\n                  ),\r\n              )\r\n            : tallyLOL;\r\n    }, [filters.searchTallyLol, tallyLOL]);\r\n\r\n    const filteredNotSyncedList = useMemo(() => {\r\n        return filters.searchNotSynced\r\n            ? notSyncedList.filter(obj =>\r\n                  filterableText(Object.values(obj).join(\" \")).includes(\r\n                      filterableText(filters.searchNotSynced),\r\n                  ),\r\n              )\r\n            : notSyncedList;\r\n    }, [notSyncedList, filters.searchNotSynced]);\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n\r\n        fetchLink({\r\n            address: `masters/posProductList?FromDate=${filters.FromDate}&ToDate=${filters.ToDate}`,\r\n        })\r\n            .then(data => {\r\n                if (data.success) {\r\n                    const tallyLOL = Array.isArray(data?.others?.tallyResult)\r\n                        ? data.others.tallyResult\r\n                        : [];\r\n                    setERPLOL(data.data);\r\n                    setTallyLOL(tallyLOL);\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n            })\r\n            .finally(() => {\r\n                if (loadingOff) loadingOff();\r\n            });\r\n    }, [filters.refresh, filters.FromDate, filters.ToDate]);\r\n\r\n    const syncLOL = () => {\r\n        if (loadingOn) loadingOn();\r\n\r\n        fetchLink({\r\n            address: `masters/posProductList?FromDate=${filters.FromDate}&ToDate=${filters.ToDate}`,\r\n        })\r\n            .then(data => {\r\n                if (data.success) {\r\n                    const tallyLOL = Array.isArray(data?.others?.tallyResult)\r\n                        ? data?.others?.tallyResult\r\n                        : [];\r\n                    setERPLOL(data.data);\r\n                    setTallyLOL(tallyLOL);\r\n                }\r\n            })\r\n            .catch(e => console.error(e))\r\n            .finally(() => {\r\n                if (loadingOff) loadingOff();\r\n            });\r\n    };\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n        return (\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"border p-2 bg-light\">Product ID</th>\r\n                        <th className=\"border p-2 bg-light\">Product Name</th>\r\n                        <th className=\"border p-2 bg-light\">Qty</th>\r\n                        <th className=\"border p-2 bg-light\">Price</th>\r\n                        <th className=\"border p-2 bg-light\">Total Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {row?.items?.map((data, index) => (\r\n                        <tr key={index}>\r\n                            <td className=\"border p-2\">{data?.icode}</td>\r\n                            <td className=\"border p-2\">{data?.product_name}</td>\r\n                            <td className=\"border p-2\">{data?.qty}</td>\r\n                            <td className=\"border p-2\">{data?.sell}</td>\r\n                            <td className=\"border p-2\">\r\n                                {data?.qty && data?.sell\r\n                                    ? data.qty * data.sell\r\n                                    : 0}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    };\r\n\r\n    const SyncData = data => {\r\n        if (loadingOn) loadingOn();\r\n\r\n        fetchLink({\r\n            address: `masters/syncPOSData?invoiceId=${data.invoiceno}`,\r\n        })\r\n            .then(data => {\r\n                if (data.success) {\r\n                    toast.success(data.message);\r\n                } else {\r\n                    toast.error(data.message);\r\n                }\r\n            })\r\n            .catch(e => console.error(e))\r\n            .finally(() => {\r\n                setFilters(prevFilters => ({\r\n                    ...prevFilters,\r\n                    refresh: !prevFilters.refresh,\r\n                }));\r\n                if (loadingOff) loadingOff();\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"px-3 py-2 fa-14\">\r\n                    <div className=\"d-flex flex-wrap align-items-center\">\r\n                        <h5 className=\"flex-grow-1\">\r\n                            POS SYNC (Differents: {notSyncedList.length})\r\n                        </h5>\r\n                        <td style={{ verticalAlign: \"middle\" }}>From</td>\r\n                        <td>\r\n                            <input\r\n                                type=\"date\"\r\n                                value={filters.FromDate}\r\n                                onChange={e =>\r\n                                    setFilters({\r\n                                        ...filters,\r\n                                        FromDate: e.target.value,\r\n                                    })\r\n                                }\r\n                                className=\"cus-inpt\"\r\n                            />\r\n                        </td>\r\n                        <td style={{ verticalAlign: \"middle\" }}>To</td>\r\n                        <td>\r\n                            <input\r\n                                type=\"date\"\r\n                                value={filters.ToDate}\r\n                                onChange={e =>\r\n                                    setFilters({\r\n                                        ...filters,\r\n                                        ToDate: e.target.value,\r\n                                    })\r\n                                }\r\n                                className=\"cus-inpt\"\r\n                            />\r\n                        </td>\r\n                        <Button onClick={syncLOL}>Search</Button>\r\n                        {/* <IconButton size='small' onClick={syncLOL}><Sync /></IconButton> */}\r\n\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setFilters(prev => {\r\n                                    const updatedFilters = {\r\n                                        ...prev,\r\n                                        viewNotSynced: !prev.viewNotSynced,\r\n                                    };\r\n\r\n                                    return updatedFilters;\r\n                                });\r\n                            }}>\r\n                            <Visibility />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap align-items-center\"></div>\r\n                </div>\r\n\r\n                {filters.viewNotSynced ? (\r\n                    <FilterableTable\r\n                        title={\"Not synced list \"}\r\n                        bodyFontSizePx={11}\r\n                        headerFontSizePx={11}\r\n                        dataArray={filteredNotSyncedList}\r\n                        columns={[\r\n                            createCol(\"invoiceno\", \"string\", \"invoiceno\"),\r\n                            createCol(\"edate\", \"date\", \"edate\"),\r\n                            createCol(\r\n                                \"Retailer_Name\",\r\n                                \"string\",\r\n                                \"Retailer_Name\",\r\n                            ),\r\n                            createCol(\"cusid\", \"string\", \"Customer_Id\"),\r\n                            createCol(\"namount\", \"string\", \"Net Amount\"),\r\n                            {\r\n                                Field_Name: \"Actions\",\r\n                                ColumnHeader: \"Actions\",\r\n                                isVisible: 1,\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => {\r\n                                    return (\r\n                                        <td\r\n                                            className=\"fa-12\"\r\n                                            style={{ minWidth: \"80px\" }}>\r\n                                            <IconButton\r\n                                                size=\"small\"\r\n                                                onClick={() => SyncData(row)}>\r\n                                                <Sync />\r\n                                            </IconButton>\r\n                                        </td>\r\n                                    );\r\n                                },\r\n                            },\r\n                        ]}\r\n                        isExpendable={true}\r\n                        tableMaxHeight={550}\r\n                        expandableComp={ExpendableComponent}\r\n                        ButtonArea={\r\n                            <>\r\n                                <input\r\n                                    type=\"search\"\r\n                                    className=\"cus-inpt p-1 w-auto\"\r\n                                    value={filters.searchNotSynced}\r\n                                    onChange={e =>\r\n                                        setFilters(pre => ({\r\n                                            ...pre,\r\n                                            searchNotSynced: e.target.value,\r\n                                        }))\r\n                                    }\r\n                                    placeholder=\"Search..\"\r\n                                />\r\n                            </>\r\n                        }\r\n                    />\r\n                ) : (\r\n                    <>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 p-1\">\r\n                                <FilterableTable\r\n                                    title={\"Data POS - \" + ERPLOL.length}\r\n                                    bodyFontSizePx={11}\r\n                                    headerFontSizePx={11}\r\n                                    dataArray={ERPLOLList}\r\n                                    columns={[\r\n                                        createCol(\r\n                                            \"invoiceno\",\r\n                                            \"string\",\r\n                                            \"invoiceno\",\r\n                                        ),\r\n                                        createCol(\"edate\", \"date\", \"edate\"),\r\n                                        createCol(\r\n                                            \"Retailer_Name\",\r\n                                            \"string\",\r\n                                            \"Retailer_Name\",\r\n                                        ),\r\n                                        createCol(\r\n                                            \"cusid\",\r\n                                            \"string\",\r\n                                            \"Customer_Id\",\r\n                                        ),\r\n                                        createCol(\r\n                                            \"namount\",\r\n                                            \"string\",\r\n                                            \"Net Amount\",\r\n                                        ),\r\n                                    ]}\r\n                                    ButtonArea={\r\n                                        <>\r\n                                            <input\r\n                                                type=\"search\"\r\n                                                className=\"cus-inpt p-1 w-auto\"\r\n                                                value={filters.searchERPLol}\r\n                                                onChange={e =>\r\n                                                    setFilters(pre => ({\r\n                                                        ...pre,\r\n                                                        searchERPLol:\r\n                                                            e.target.value,\r\n                                                    }))\r\n                                                }\r\n                                                placeholder=\"Search..\"\r\n                                            />\r\n                                        </>\r\n                                    }\r\n                                    // EnableSerialNumber={true}\r\n                                    isExpendable={true}\r\n                                    tableMaxHeight={550}\r\n                                    expandableComp={ExpendableComponent}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-6 p-1\">\r\n                                <FilterableTable\r\n                                    title={\"DataBase - \" + tallyLOL.length}\r\n                                    bodyFontSizePx={11}\r\n                                    headerFontSizePx={11}\r\n                                    dataArray={TallyLOLList}\r\n                                    columns={[\r\n                                        createCol(\r\n                                            \"invoiceno\",\r\n                                            \"string\",\r\n                                            \"invoiceno\",\r\n                                        ),\r\n                                        createCol(\"edate\", \"date\", \"edate\"),\r\n                                        createCol(\r\n                                            \"Retailer_Name\",\r\n                                            \"string\",\r\n                                            \"Retailer_Name\",\r\n                                        ),\r\n                                        createCol(\r\n                                            \"cusid\",\r\n                                            \"string\",\r\n                                            \"Customer_Id\",\r\n                                        ),\r\n                                        createCol(\r\n                                            \"namount\",\r\n                                            \"string\",\r\n                                            \"Net Amount\",\r\n                                        ),\r\n                                    ]}\r\n                                    ButtonArea={\r\n                                        <>\r\n                                            <input\r\n                                                type=\"search\"\r\n                                                className=\"cus-inpt p-1 w-auto\"\r\n                                                value={filters.searchTallyLol}\r\n                                                onChange={e =>\r\n                                                    setFilters(pre => ({\r\n                                                        ...pre,\r\n                                                        searchTallyLol:\r\n                                                            e.target.value,\r\n                                                    }))\r\n                                                }\r\n                                                placeholder=\"Search..\"\r\n                                            />\r\n                                        </>\r\n                                    }\r\n                                    isExpendable={true}\r\n                                    tableMaxHeight={550}\r\n                                    expandableComp={ExpendableComponent}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PosproductListing;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8m0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4z\"\n}), 'Sync');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');"],"names":["_ref","loadingOn","loadingOff","ERPLOL","setERPLOL","useState","tallyLOL","setTallyLOL","filters","setFilters","FromDate","Date","setDate","getDate","toISOString","split","ToDate","refresh","viewNotSynced","searchERPLol","searchTallyLol","searchNotSynced","notSyncedList","useMemo","filter","talFil","some","erpFil","isEqualNumber","invoiceno","ERPLOLList","obj","filterableText","Object","values","join","includes","TallyLOLList","filteredNotSyncedList","useEffect","fetchLink","address","concat","then","data","success","_data$others","Array","isArray","others","tallyResult","catch","e","console","error","finally","ExpendableComponent","_ref2","_row$items","row","_jsxs","className","children","_jsx","items","map","index","icode","product_name","qty","sell","_Fragment","Card","length","style","verticalAlign","type","value","onChange","_objectSpread","target","Button","onClick","syncLOL","_data$others2","_data$others3","IconButton","size","prev","Visibility","FilterableTable","title","bodyFontSizePx","headerFontSizePx","dataArray","columns","createCol","Field_Name","ColumnHeader","isVisible","isCustomCell","Cell","_ref3","minWidth","SyncData","toast","message","prevFilters","Sync","isExpendable","tableMaxHeight","expandableComp","ButtonArea","pre","placeholder","createSvgIcon","d"],"sourceRoot":""}
{"version":3,"file":"static/js/8668.cb4f4364.chunk.js","mappings":"wQAMA,MAuNA,EAvN2BA,IAAoC,IAADC,EAAA,IAAlC,SAAEC,EAAQ,gBAAEC,GAAiBH,EACrD,MAAMI,EAAe,CACjBC,WAAY,GACZC,aAAc,GACdC,kBAAmB,KAEhBC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAcC,IAAmBJ,EAAAA,EAAAA,WAAS,IAC1CK,EAAYC,IAAiBN,EAAAA,EAAAA,UAASN,IACtCa,EAAQC,IAAaR,EAAAA,EAAAA,WAAS,IAC9BS,EAAMC,IAAWV,EAAAA,EAAAA,YAASR,IAE1BmB,EAAaC,IAAkBZ,EAAAA,EAAAA,UAAS,KACxCa,EAAcC,IAAmBd,EAAAA,EAAAA,UAAS,KAEjDe,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,GAAU,CACNC,QAAU,8BACXC,MAAKC,IACAA,EAAKC,SACLrB,EAAcoB,EAAKA,KACvB,IAECE,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAElC,CAACf,IAEJ,MAkCMkB,EAAiBA,KACnBvB,GAAa,GACbI,EAAcZ,EAAa,EAGzBgC,EAAgCA,KAClCpB,EAAcZ,GACdU,GAAgB,EAAM,EAc1B,OACIuB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAWD,SAAA,EAEtBF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iFAAgFD,SAAA,EAC3FF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC3BpC,IACEsC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,KAAK,QAAQC,QAASA,IAAMxB,GAASD,GAAMoB,SAClDpB,GAAOsB,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACC,MAAO,CAAEC,SAAU,OAAQC,MAAO,YAAgBP,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACH,MAAO,CAAEC,SAAU,OAAQC,MAAO,aAE1H,sBAGNP,EAAAA,EAAAA,KAAA,UAAQG,QAASA,IAAMhC,GAAa,GAAO4B,UAAU,mDAAkDD,SAAC,yBAK5GE,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,CAACC,GAAIhC,EAAMiC,eAAa,EAAAb,UAE7BF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,YAAYM,MAAO,CAAEO,UAAYlD,EAA2B,OAAT,OAAiBmD,UAAW,QAASf,SAAA,EAEnGE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,uBAAsBD,UACjCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gBAAeD,UAC1BE,EAAAA,EAAAA,KAAA,SACIc,KAAK,SACLC,MAAOnC,EACPmB,UAAU,WACViB,YAAY,SACZC,SAxChC,SAA4BC,GACxB,MAAMC,EAAOD,EAAME,OAAOL,MAC1BlC,EAAesC,GACf,MAAME,EAAkBtD,EAAWuD,QAAOC,GAC/BC,OAAOC,OAAOF,GAAMG,MAAKX,GAC5BY,OAAOZ,GAAOa,cAAcC,SAASV,EAAKS,mBAGlD7C,EAAgBsC,EACpB,SAoCoBrB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,mBAAkBD,UAC7BF,EAAAA,EAAAA,MAAA,SAAOG,UAAU,QAAOD,SAAA,EACpBE,EAAAA,EAAAA,KAAA,SAAAF,UACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAID,UAAU,eAAcD,SAAC,SAC7BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,eAAcD,SAAC,eAC7BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,eAAcD,SAAC,oBAIrCE,EAAAA,EAAAA,KAAA,SAAAF,SACmF,QADnFtC,EACMsB,EAAagD,OAAS,EAAIhD,EAA+B,KAAhBF,EAAqBb,EAAa,UAAE,IAAAP,OAAA,EAA9EA,EAAiFuE,KAAI,CAACC,EAAGC,KACtFrC,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAID,UAAU,eAAcD,SAAEmC,EAAI,KAClCjC,EAAAA,EAAAA,KAAA,MAAID,UAAU,eAAcD,SAAG,OAADkC,QAAC,IAADA,OAAC,EAADA,EAAGnE,gBACjCmC,EAAAA,EAAAA,KAAA,MAAID,UAAU,eAAcD,SAAG,OAADkC,QAAC,IAADA,OAAC,EAADA,EAAGlE,sBAH5BmE,qBAmBrCrC,EAAAA,EAAAA,MAACsC,EAAAA,EAAM,CACHxD,KAAMR,EACNiE,QAASzC,EACT0C,SAAS,KAAKC,WAAS,EAAAvC,SAAA,EACvBE,EAAAA,EAAAA,KAACsC,EAAAA,EAAW,CAAAxC,SAAC,4BACbF,EAAAA,EAAAA,MAAA,QAAM2C,SAAUhD,IACZA,EAAEiD,kBA7HdvD,EAAAA,EAAAA,GAAU,CACNC,QAAU,4BACVuD,OAAQ,OACRC,SAAUpE,IACXa,MAAKC,IACAA,EAAKC,SACLsD,EAAAA,GAAMtD,QAAQD,EAAKwD,SACnBnE,GAAWD,IAEXmE,EAAAA,GAAMlD,MAAML,EAAKwD,QACrB,IAECtD,OAAMC,GAAKC,QAAQC,MAAMF,KACzBsD,QAAQnD,EAiHa,EAChBI,SAAA,EACEE,EAAAA,EAAAA,KAAC8C,EAAAA,EAAa,CAAAhD,UACVE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,mBAAkBD,UAC7BE,EAAAA,EAAAA,KAAA,SAAOD,UAAU,QAAOD,UACpBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAID,UAAU,iBAAgBD,SAAC,UAC/BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,iBAAgBD,UAC1BE,EAAAA,EAAAA,KAAA,SACID,UAAU,WACVgB,MAAiB,OAAVzC,QAAU,IAAVA,OAAU,EAAVA,EAAYT,aAAckF,UAAQ,EACzC9B,SAAU1B,GAAKhB,EAAc,IAAKD,EAAYT,aAAc0B,EAAE6B,OAAOL,gBAGjFnB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAID,UAAU,iBAAgBD,SAAC,eAC/BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,iBAAgBD,UAC1BF,EAAAA,EAAAA,MAAA,UACIG,UAAU,WACVgB,MAAiB,OAAVzC,QAAU,IAAVA,OAAU,EAAVA,EAAYR,kBAAmBiF,UAAQ,EAC9C9B,SAAU1B,GAAKhB,EAAc,IAAKD,EAAYR,kBAAmByB,EAAE6B,OAAOL,QAASjB,SAAA,EAEnFE,EAAAA,EAAAA,KAAA,UAAQe,MAAM,GAAGiC,UAAQ,EAAAlD,SAAC,sBAC1BE,EAAAA,EAAAA,KAAA,UAAQe,MAAM,SAAQjB,SAAC,YACvBE,EAAAA,EAAAA,KAAA,UAAQe,MAAM,OAAMjB,SAAC,UACrBE,EAAAA,EAAAA,KAAA,UAAQe,MAAM,OAAMjB,SAAC,2BAQjDF,EAAAA,EAAAA,MAACqD,EAAAA,EAAa,CAAAnD,SAAA,EACVE,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CAAC/C,QAAST,EAAgBoB,KAAK,SAAQhB,SAAC,YAC/CE,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CAACpC,KAAK,SAAQhB,SAAC,+BAKlCF,EAAAA,EAAAA,MAACsC,EAAAA,EAAM,CACHxD,KAAMN,EACN+D,QAASxC,EAA8BG,SAAA,EAEvCE,EAAAA,EAAAA,KAACsC,EAAAA,EAAW,CAAAxC,SAAC,oBACbF,EAAAA,EAAAA,MAACkD,EAAAA,EAAa,CAAAhD,SAAA,CAAC,6BAEA,OAAVxB,QAAU,IAAVA,OAAU,EAAVA,EAAYT,gBAAgBmC,EAAAA,EAAAA,KAAA,QAAMD,UAAU,oBAAmBD,SAAY,OAAVxB,QAAU,IAAVA,OAAU,EAAVA,EAAYT,eAAqB,iBAGvG+B,EAAAA,EAAAA,MAACqD,EAAAA,EAAa,CAAAnD,SAAA,EACVE,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CAAC/C,QAASR,EAA8BG,SAAE,YACjDE,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CAAC/C,QAnKAgD,MACpBlE,EAAAA,EAAAA,GAAU,CACNC,QAAU,4BACVuD,OAAQ,SACRC,SAAU,CAAE9E,WAAYU,EAAWV,cACpCuB,MAAKC,IACAA,EAAKC,SACLsD,EAAAA,GAAMtD,QAAQD,EAAKwD,SACnBnE,GAAWD,IAEXmE,EAAAA,GAAMlD,MAAML,EAAKwD,QACrB,IAECtD,OAAMC,GAAKC,QAAQC,MAAMF,KACzBsD,QAAQlD,EAA8B,EAqJEG,SAAC,mBAG3C,C,6DCrNX,SAAesD,EAAAA,EAAAA,IAA4BpD,EAAAA,EAAAA,KAAK,OAAQ,CACtDqD,EAAG,kDACD,a,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4BpD,EAAAA,EAAAA,KAAK,OAAQ,CACtDqD,EAAG,iDACD,a","sources":["Pages/Tasks/taskParameters.jsx","../node_modules/@mui/icons-material/esm/ExpandLess.js","../node_modules/@mui/icons-material/esm/ExpandMore.js"],"sourcesContent":["import { IconButton, Dialog, DialogActions, DialogContent, DialogTitle, Button, Collapse } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport { ExpandLess, ExpandMore } from '@mui/icons-material';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\n\r\nconst TaskParametersComp = ({ isOpened, disableCollapse }) => {\r\n    const initialValue = {\r\n        Paramet_Id: '',\r\n        Paramet_Name: '',\r\n        Paramet_Data_Type: '',\r\n    }\r\n    const [parameters, setParameters] = useState([])\r\n    const [addDialog, setAddDialog] = useState(false);\r\n    const [deleteDialog, setDeleteDialog] = useState(false);\r\n    const [inputValue, setInputValue] = useState(initialValue);\r\n    const [reload, setReload] = useState(false);\r\n    const [open, setOpen] = useState(isOpened ? true : false);\r\n\r\n    const [filterInput, setFilterInput] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `taskManagement/parameters`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setParameters(data.data)\r\n            }\r\n        })\r\n            .catch(e => console.error(e))\r\n\r\n    }, [reload])\r\n\r\n    const AddParameter = () => {\r\n        fetchLink({\r\n            address: `taskManagement/parameters`,\r\n            method: 'POST',\r\n            bodyData: inputValue\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        })\r\n            .catch(e => console.error(e))\r\n            .finally(CloseAddDialog)\r\n    }\r\n\r\n    const DeleteParameter = () => {\r\n        fetchLink({\r\n            address: `taskManagement/parameters`,\r\n            method: 'DELETE',\r\n            bodyData: { Paramet_Id: inputValue.Paramet_Id }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        })\r\n            .catch(e => console.error(e))\r\n            .finally(closeDeleteConfirmationDialog)\r\n    }\r\n\r\n    const CloseAddDialog = () => {\r\n        setAddDialog(false);\r\n        setInputValue(initialValue)\r\n    }\r\n\r\n    const closeDeleteConfirmationDialog = () => {\r\n        setInputValue(initialValue);\r\n        setDeleteDialog(false)\r\n    }\r\n\r\n    function handleSearchChange(event) {\r\n        const term = event.target.value;\r\n        setFilterInput(term);\r\n        const filteredResults = parameters.filter(item => {\r\n            return Object.values(item).some(value =>\r\n                String(value).toLowerCase().includes(term.toLowerCase())\r\n            );\r\n        });\r\n        setFilteredData(filteredResults);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card mb-3\">\r\n\r\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                    <div className=\"flex-grow-1 mb-0\">\r\n                        {!disableCollapse && (\r\n                            <IconButton size='small' onClick={() => setOpen(!open)}>\r\n                                {open ? <ExpandLess style={{ fontSize: '18px', color: 'black' }} /> : <ExpandMore style={{ fontSize: '18px', color: 'black' }} />}\r\n                            </IconButton>\r\n                        )}\r\n                        Task Parameters\r\n                    </div>\r\n                    <button onClick={() => setAddDialog(true)} className=\"btn btn-primary rounded-5 px-3 py-1 fa-13 shadow\">\r\n                        Create Parameter\r\n                    </button>\r\n                </div>\r\n\r\n                <Collapse in={open} unmountOnExit>\r\n\r\n                    <div className=\"card-body\" style={{ maxHeight: !disableCollapse ? '40vh' : 'auto', overflowY: 'auto' }}>\r\n\r\n                        <div className=\"row flex-row-reverse\">\r\n                            <div className=\"col-md-4 pb-2\">\r\n                                <input\r\n                                    type=\"search\"\r\n                                    value={filterInput}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Search\"\r\n                                    onChange={handleSearchChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className='border fa-14'>Sno</th>\r\n                                        <th className='border fa-14'>Parameter</th>\r\n                                        <th className='border fa-14'>Data Type</th>\r\n                                        {/* <th className='border fa-14'>Action</th> */}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {(filteredData.length > 0 ? filteredData : filterInput === '' ? parameters : [])?.map((o, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className='border fa-14'>{i + 1}</td>\r\n                                            <td className='border fa-14'>{o?.Paramet_Name}</td>\r\n                                            <td className='border fa-14'>{o?.Paramet_Data_Type}</td>\r\n                                            {/* <td className='border fa-14'>\r\n                                                <IconButton onClick={() => openDeleteConfirmationDialog(o)}>\r\n                                                    <Delete sx={{color: 'red', fontSize: '16px'}} />\r\n                                                </IconButton>\r\n                                            </td> */}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Collapse>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={addDialog}\r\n                onClose={CloseAddDialog}\r\n                maxWidth='sm' fullWidth>\r\n                <DialogTitle>Create Task Parameters</DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    AddParameter()\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Name</td>\r\n                                        <td className=\"border-0 fa-14\">\r\n                                            <input\r\n                                                className='cus-inpt'\r\n                                                value={inputValue?.Paramet_Name} required\r\n                                                onChange={e => setInputValue({ ...inputValue, Paramet_Name: e.target.value })} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Data Type</td>\r\n                                        <td className=\"border-0 fa-14\">\r\n                                            <select\r\n                                                className='cus-inpt'\r\n                                                value={inputValue?.Paramet_Data_Type} required\r\n                                                onChange={e => setInputValue({ ...inputValue, Paramet_Data_Type: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\" disabled>Select Data Type</option>\r\n                                                <option value='number'>number</option>\r\n                                                <option value='text'>text</option>\r\n                                                <option value='date'>date</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={CloseAddDialog} type='button'>cancel</Button>\r\n                        <Button type='submit'>Create Parameter</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={deleteDialog}\r\n                onClose={closeDeleteConfirmationDialog}\r\n            >\r\n                <DialogTitle>Confirm Delete</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the\r\n                    {inputValue?.Paramet_Name && <span className='text-primary px-1'>{inputValue?.Paramet_Name}</span>}\r\n                    Parameter?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDeleteConfirmationDialog} >Cancel</Button>\r\n                    <Button onClick={DeleteParameter}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskParametersComp;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');"],"names":["_ref","_ref2","isOpened","disableCollapse","initialValue","Paramet_Id","Paramet_Name","Paramet_Data_Type","parameters","setParameters","useState","addDialog","setAddDialog","deleteDialog","setDeleteDialog","inputValue","setInputValue","reload","setReload","open","setOpen","filterInput","setFilterInput","filteredData","setFilteredData","useEffect","fetchLink","address","then","data","success","catch","e","console","error","CloseAddDialog","closeDeleteConfirmationDialog","_jsxs","_Fragment","children","className","_jsx","IconButton","size","onClick","ExpandLess","style","fontSize","color","ExpandMore","Collapse","in","unmountOnExit","maxHeight","overflowY","type","value","placeholder","onChange","event","term","target","filteredResults","filter","item","Object","values","some","String","toLowerCase","includes","length","map","o","i","Dialog","onClose","maxWidth","fullWidth","DialogTitle","onSubmit","preventDefault","method","bodyData","toast","message","finally","DialogContent","required","disabled","DialogActions","Button","DeleteParameter","createSvgIcon","d"],"sourceRoot":""}
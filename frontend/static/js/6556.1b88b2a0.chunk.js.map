{"version":3,"file":"static/js/6556.1b88b2a0.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/tablecolumn.js","Pages/Inventry/Processing/AddProcessing.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: '45px',\r\n        background: 'rgba(255, 255, 255, 0.322)'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 })\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","import { useEffect, useState } from \"react\"\r\nimport {\r\n    Addition, Division, ISOString, Multiplication, checkIsNumber, combineDateTime, extractHHMM,\r\n    formatDateForDatetimeLocal,\r\n    getSessionUser, isEqualNumber, isGraterNumber, isValidObject,\r\n    onlynum\r\n} from \"../../../Components/functions\"\r\nimport { Button, Card, CardContent, IconButton } from \"@mui/material\"\r\nimport { fetchLink } from \"../../../Components/fetchComponent\"\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { Delete } from \"@mui/icons-material\";\r\nimport RequiredStar from '../../../Components/requiredStar';\r\nimport { toast } from 'react-toastify';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst { user } = getSessionUser();\r\n\r\nconst initialStockJournalInfoValues = {\r\n    PR_Id: '',\r\n    PR_Inv_Id: '',\r\n    Year_Id: '',\r\n    Branch_Id: '',\r\n    Process_no: '',\r\n    P_No: '',\r\n\r\n    Godownlocation: '',\r\n    BillType: 'New',\r\n    VoucherType: '',\r\n    Process_date: '',\r\n    Machine_No: '',\r\n    StartDateTime: '',\r\n    EndDateTime: '',\r\n    ST_Reading: '',\r\n    EN_Reading: '',\r\n    Total_Reading: '',\r\n    Narration: '',\r\n    PR_Status: 'NEW',\r\n    Created_By: user?.name,\r\n    Updated_By: user?.name,\r\n}\r\n\r\nconst initialSoruceValue = {\r\n    SJD_Id: '',\r\n    STJ_Id: '',\r\n    Sour_Item_Id: '',\r\n    Sour_Item_Name: '',\r\n    Sour_Goodown_Id: '',\r\n    Sour_Batch_Lot_No: '',\r\n    Sour_Qty: '',\r\n    Sour_Unit_Id: '',\r\n    Sour_Unit: '',\r\n    Sour_Rate: '',\r\n    Sour_Amt: '',\r\n}\r\n\r\nconst initialDestinationValue = {\r\n    SJD_Id: '',\r\n    STJ_Id: '',\r\n    Dest_Item_Id: '',\r\n    Dest_Item_Name: '',\r\n    Dest_Goodown_Id: '',\r\n    Dest_Batch_Lot_No: '',\r\n    Dest_Qty: '',\r\n    Dest_Unit_Id: '',\r\n    Dest_Unit: '',\r\n    Dest_Rate: '',\r\n    Dest_Amt: '',\r\n}\r\n\r\nconst initialStaffInvolvedValue = {\r\n    STJ_Id: '',\r\n    S_Id: '',\r\n    Staff_Id: '',\r\n    Staff_Name: '',\r\n    Staff_Type_Id: '',\r\n}\r\n\r\nconst soruceAndDestination = [\r\n    { source: 'Sour_Item_Id', destination: 'Dest_Item_Id' },\r\n    { source: 'Sour_Item_Name', destination: 'Dest_Item_Name' },\r\n    { source: 'Sour_Goodown_Id', destination: 'Dest_Goodown_Id' },\r\n    { source: 'Sour_Batch_Lot_No', destination: 'Dest_Batch_Lot_No' },\r\n    { source: 'Sour_Qty', destination: 'Dest_Qty' },\r\n    { source: 'Sour_Unit_Id', destination: 'Dest_Unit_Id' },\r\n    { source: 'Sour_Unit', destination: 'Dest_Unit' },\r\n    { source: 'Sour_Rate', destination: 'Dest_Rate' },\r\n    { source: 'Sour_Amt', destination: 'Dest_Amt' },\r\n];\r\n\r\nconst StockManagementCreate = ({ loadingOn, loadingOff }) => {\r\n    const location = useLocation();\r\n    // const navigation = useNavigate();\r\n    const stateDetails = location.state;\r\n    const [baseData, setBaseData] = useState({\r\n        products: [],\r\n        branch: [],\r\n        godown: [],\r\n        voucherType: [],\r\n        uom: [],\r\n        staff: [],\r\n        staffType: []\r\n    });\r\n    const [isViewOnly, setIsViewOnly] = useState(false);\r\n    const [stockJorunalInfo, setStockJorunalInfo] = useState(initialStockJournalInfoValues);\r\n    const [sourceList, setSourceList] = useState([]);\r\n    const [destinationList, setDestinationList] = useState([]);\r\n    const [staffInvolvedList, setStaffInvolvedList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    branchResponse,\r\n                    productsResponse,\r\n                    godownLocationsResponse,\r\n                    voucherTypeResponse,\r\n                    uomResponse,\r\n                    staffResponse,\r\n                    staffCategory,\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `masters/branch/dropDown` }),\r\n                    fetchLink({ address: `masters/products` }),\r\n                    fetchLink({ address: `dataEntry/godownLocationMaster` }),\r\n                    fetchLink({ address: `purchase/voucherType` }),\r\n                    fetchLink({ address: `masters/uom` }),\r\n                    fetchLink({ address: `dataEntry/costCenter` }),\r\n                    fetchLink({ address: `dataEntry/costCenter/category` }),\r\n                ]);\r\n\r\n                const branchData = (branchResponse.success ? branchResponse.data : []).sort(\r\n                    (a, b) => String(a?.BranchName).localeCompare(b?.BranchName)\r\n                );\r\n                const productsData = (productsResponse.success ? productsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Product_Name).localeCompare(b?.Product_Name)\r\n                );\r\n                const godownLocations = (godownLocationsResponse.success ? godownLocationsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Godown_Name).localeCompare(b?.Godown_Name)\r\n                );\r\n                const voucherType = (voucherTypeResponse.success ? voucherTypeResponse.data : []).sort(\r\n                    (a, b) => String(a?.Voucher_Type).localeCompare(b?.Voucher_Type)\r\n                );\r\n                const uomData = (uomResponse.success ? uomResponse.data : []).sort(\r\n                    (a, b) => String(a.Units).localeCompare(b.Units)\r\n                );\r\n                const staffData = (staffResponse.success ? staffResponse.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Center_Name).localeCompare(b?.Cost_Center_Name)\r\n                );\r\n                const staffCategoryData = (staffCategory.success ? staffCategory.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Category).localeCompare(b?.Cost_Category)\r\n                );\r\n\r\n                setBaseData((pre) => ({\r\n                    ...pre,\r\n                    products: productsData,\r\n                    branch: branchData,\r\n                    godown: godownLocations,\r\n                    voucherType: voucherType,\r\n                    uom: uomData,\r\n                    staff: staffData,\r\n                    staffType: staffCategoryData,\r\n                }));\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const source = stateDetails?.SourceDetails;\r\n        const destination = stateDetails?.DestinationDetails;\r\n        const staff = stateDetails?.StaffsDetails;\r\n        if (\r\n            isValidObject(stateDetails)\r\n            && Array.isArray(source)\r\n            && Array.isArray(destination)\r\n            && Array.isArray(staff)\r\n        ) {\r\n            const isEditable = stateDetails?.isEditable ? true : false;\r\n            setIsViewOnly(isEditable);\r\n\r\n            setStockJorunalInfo(\r\n                Object.fromEntries(\r\n                    Object.entries(initialStockJournalInfoValues).map(([key, value]) => {\r\n                        if (key === 'Process_date') return [key, stateDetails[key] ? ISOString(stateDetails[key]) : value]\r\n                        if (key === 'StartDateTime') return [key, stateDetails[key] ? formatDateForDatetimeLocal(stateDetails[key]) : value]\r\n                        if (key === 'EndDateTime') return [key, stateDetails[key] ? formatDateForDatetimeLocal(stateDetails[key]) : value]\r\n                        return [key, stateDetails[key] ?? value]\r\n                    })\r\n                )\r\n            );\r\n\r\n            setSourceList(\r\n                source.map(sourceData => Object.fromEntries(\r\n                    Object.entries(initialSoruceValue).map(([key, value]) => {\r\n                        if (key === 'Sour_Item_Name') return [key, sourceData['Product_Name'] ? sourceData['Product_Name'] : value]\r\n                        return [key, sourceData[key] ?? value]\r\n                    })\r\n                ))\r\n            )\r\n\r\n            setDestinationList(\r\n                destination.map(destinationData => Object.fromEntries(\r\n                    Object.entries(initialDestinationValue).map(([key, value]) => {\r\n                        if (key === 'Dest_Item_Name') return [key, destinationData['Product_Name'] ? destinationData['Product_Name'] : value]\r\n                        return [key, destinationData[key] ?? value]\r\n                    })\r\n                ))\r\n            );\r\n\r\n            setStaffInvolvedList(\r\n                staff.map(staffData => Object.fromEntries(\r\n                    Object.entries(initialStaffInvolvedValue).map(([key, value]) => {\r\n                        if (key === 'Staff_Name') return [key, staffData['Cost_Center_Name'] ? staffData['Cost_Center_Name'] : value]\r\n                        return [key, staffData[key] ?? value]\r\n                    })\r\n                ))\r\n            );\r\n        }\r\n    }, [stateDetails])\r\n\r\n    const changeSourceValue = (rowIndex, key, value) => {\r\n        setSourceList((prev) => {\r\n            return prev.map((item, index) => {\r\n\r\n                if (isEqualNumber(index, rowIndex)) {\r\n                    switch (key) {\r\n                        case 'Sour_Item_Id': {\r\n                            const newItem = { ...item, Sour_Item_Id: value };\r\n                            newItem.Sour_Item_Name = baseData.products?.find(pro =>\r\n                                isEqualNumber(pro?.Product_Id, value)\r\n                            )?.Product_Name ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Unit_Id': {\r\n                            const newItem = { ...item, Sour_Unit_Id: value };\r\n                            newItem.Sour_Unit = baseData.uom?.find(uom =>\r\n                                isEqualNumber(uom?.Unit_Id, value)\r\n                            )?.Units ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Qty': {\r\n                            const newItem = { ...item, Sour_Qty: value };\r\n                            if (item.Sour_Rate) {\r\n                                newItem.Sour_Amt = Multiplication(item.Sour_Rate, value);\r\n                            } else if (item.Sour_Amt) {\r\n                                newItem.Sour_Rate = Division(item.Sour_Amt, value);\r\n                            } else {\r\n                                newItem.Sour_Amt = '';\r\n                                newItem.Sour_Rate = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Rate': {\r\n                            const newItem = { ...item, Sour_Rate: value };\r\n                            if (item.Sour_Qty) {\r\n                                newItem.Sour_Amt = Multiplication(value, item.Sour_Qty);\r\n                            } else if (item.Sour_Amt) {\r\n                                newItem.Sour_Qty = Division(item.Sour_Amt, value);\r\n                            } else {\r\n                                newItem.Sour_Amt = '';\r\n                                newItem.Sour_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Amt': {\r\n                            const newItem = { ...item, Sour_Amt: value };\r\n                            if (checkIsNumber(item.Sour_Qty)) {\r\n                                newItem.Sour_Rate = Division(value, item.Sour_Qty);\r\n                            } else if (checkIsNumber(item.Sour_Rate)) {\r\n                                newItem.Sour_Qty = Division(value, item.Sour_Rate);\r\n                            } else {\r\n                                newItem.Sour_Rate = '';\r\n                                newItem.Sour_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        default:\r\n                            return { ...item, [key]: value };\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n\r\n    const changeDestinationValues = (rowIndex, key, value) => {\r\n        setDestinationList((prev) => {\r\n            return prev.map((item, index) => {\r\n\r\n                if (isEqualNumber(index, rowIndex)) {\r\n                    switch (key) {\r\n                        case 'Dest_Item_Id': {\r\n                            const newItem = { ...item, Dest_Item_Id: value };\r\n                            newItem.Dest_Item_Name = baseData.products?.find(pro =>\r\n                                isEqualNumber(pro?.Product_Id, value)\r\n                            )?.Product_Name ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Dest_Unit_Id': {\r\n                            const newItem = { ...item, Dest_Unit_Id: value };\r\n                            newItem.Dest_Unit = baseData.uom?.find(uom =>\r\n                                isEqualNumber(uom?.Unit_Id, value)\r\n                            )?.Units ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Dest_Qty': {\r\n                            const newItem = { ...item, Dest_Qty: value };\r\n                            if (item.Dest_Rate) {\r\n                                newItem.Dest_Amt = Multiplication(item.Dest_Rate, value);\r\n                            } else if (item.Dest_Amt) {\r\n                                newItem.Dest_Rate = Division(item.Dest_Amt, value);\r\n                            } else {\r\n                                newItem.Dest_Amt = '';\r\n                                newItem.Dest_Rate = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Dest_Rate': {\r\n                            const newItem = { ...item, Dest_Rate: value };\r\n                            if (item.Dest_Qty) {\r\n                                newItem.Dest_Amt = Multiplication(value, item.Dest_Qty);\r\n                            } else if (item.Dest_Amt) {\r\n                                newItem.Dest_Qty = Division(item.Dest_Amt, value);\r\n                            } else {\r\n                                newItem.Dest_Amt = '';\r\n                                newItem.Dest_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Dest_Amt': {\r\n                            const newItem = { ...item, Dest_Amt: value };\r\n                            if (checkIsNumber(item.Dest_Qty)) {\r\n                                newItem.Dest_Rate = Division(value, item.Dest_Qty);\r\n                            } else if (checkIsNumber(item.Dest_Rate)) {\r\n                                newItem.Dest_Qty = Division(value, item.Dest_Rate);\r\n                            } else {\r\n                                newItem.Dest_Rate = '';\r\n                                newItem.Dest_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        default:\r\n                            return { ...item, [key]: value };\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setStockJorunalInfo(initialStockJournalInfoValues)\r\n        setSourceList([])\r\n        setDestinationList([])\r\n        setStaffInvolvedList([])\r\n    }\r\n\r\n    const saveStockJournal = () => {\r\n        if (loadingOn) loadingOn();\r\n\r\n        fetchLink({\r\n            address: `inventory/stockProcessing`,\r\n            method: checkIsNumber(stockJorunalInfo?.STJ_Id) ? 'PUT' : 'POST',\r\n            bodyData: {\r\n                ...stockJorunalInfo,\r\n                Source: sourceList.filter(item => checkIsNumber(item?.Sour_Item_Id) && isGraterNumber(item.Sour_Qty, 0)),\r\n                Destination: destinationList.filter(item => checkIsNumber(item?.Dest_Item_Id) && isGraterNumber(item.Dest_Qty, 0)),\r\n                StaffInvolve: staffInvolvedList.filter(item => checkIsNumber(item?.Staff_Id)),\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                resetForm();\r\n                toast.success(data?.message || 'Saved');\r\n            } else {\r\n                toast.error(data?.message || 'Failed');\r\n            }\r\n        }).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent sx={{ minHeight: '80vh' }}>\r\n                    <h5 className=\"text-center mb-2 border-bottom pb-2\">STOCK MANAGEMENT</h5>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        saveStockJournal();\r\n                    }}>\r\n                        <div className=\"row \">\r\n                            {/* Staff involved Info */}\r\n                            <div className=\"col-xxl-3 col-lg-4 col-md-5 p-2\">\r\n                                <div className=\"border p-2\" style={{ minHeight: '30vh', height: '100%' }}>\r\n                                    <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                                        <h6 className=\"flex-grow-1 m-0\">Staff Involved</h6>\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            color=\"primary\"\r\n                                            type=\"button\"\r\n                                            disabled={isViewOnly}\r\n                                            onClick={() => setStaffInvolvedList([...staffInvolvedList, { ...initialStaffInvolvedValue }])}\r\n                                        >Add</Button>\r\n                                    </div>\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"fa-13\">Sno</th>\r\n                                                <th className=\"fa-13\">Name</th>\r\n                                                <th className=\"fa-13\">Type</th>\r\n                                                <th className=\"fa-13\">#</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {staffInvolvedList.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td className='fa-13 vctr text-center'>{index + 1}</td>\r\n                                                    <td className='fa-13 w-100 p-0'>\r\n                                                        <Select\r\n                                                            value={{ value: row?.Staff_Id, label: row?.Staff_Name }}\r\n                                                            onChange={e => setStaffInvolvedList(prev => {\r\n                                                                return prev.map((item, ind) => {\r\n                                                                    if (isEqualNumber(ind, index)) {\r\n                                                                        const staff = baseData.staff.find(c => isEqualNumber(c.Cost_Center_Id, e.value))\r\n                                                                        return {\r\n                                                                            ...item,\r\n                                                                            Staff_Type_Id:\r\n                                                                                checkIsNumber(item.Staff_Type_Id)\r\n                                                                                    ? item.Staff_Type_Id\r\n                                                                                    : checkIsNumber(staff.User_Type)\r\n                                                                                        ? staff.User_Type\r\n                                                                                        : 0,\r\n                                                                            Staff_Id: e.value,\r\n                                                                            Staff_Name: e.label\r\n                                                                        }\r\n                                                                    }\r\n                                                                    return item;\r\n                                                                });\r\n                                                            })}\r\n                                                            options={\r\n                                                                [...baseData.staff.filter(fil => (\r\n                                                                    staffInvolvedList.findIndex(st => (\r\n                                                                        isEqualNumber(st.Staff_Id, fil.Cost_Center_Id)\r\n                                                                    )) === -1 ? true : false\r\n                                                                ))].map(st => ({\r\n                                                                    value: st.Cost_Center_Id,\r\n                                                                    label: st.Cost_Center_Name\r\n                                                                }))\r\n                                                            }\r\n                                                            styles={customSelectStyles}\r\n                                                            isSearchable={true}\r\n                                                            placeholder={\"Select Staff\"}\r\n                                                        />\r\n                                                    </td>\r\n\r\n                                                    <td className='fa-13 vctr p-0' style={{ maxWidth: '130px', minWidth: '80px' }}>\r\n                                                        <select\r\n                                                            value={row?.Staff_Type_Id}\r\n                                                            onChange={e => setStaffInvolvedList(prev => {\r\n                                                                return prev.map((item, ind) => {\r\n                                                                    if (isEqualNumber(ind, index)) {\r\n                                                                        return {\r\n                                                                            ...item,\r\n                                                                            Staff_Type_Id: e.target.value\r\n                                                                        }\r\n                                                                    }\r\n                                                                    return item;\r\n                                                                });\r\n                                                            })}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        >\r\n                                                            <option value=\"\">Select</option>\r\n                                                            {baseData.staffType.map((st, sti) =>\r\n                                                                <option value={st?.Cost_Category_Id} key={sti}>{st?.Cost_Category}</option>\r\n                                                            )}\r\n                                                        </select>\r\n                                                    </td>\r\n\r\n                                                    <td className='fa-13 vctr p-0'>\r\n                                                        <IconButton\r\n                                                            onClick={() => {\r\n                                                                setStaffInvolvedList(prev => {\r\n                                                                    return prev.filter((_, filIndex) => index !== filIndex);\r\n                                                                });\r\n                                                            }}\r\n                                                            size='small'\r\n                                                        >\r\n                                                            <Delete className=\"fa-20\" color='error' />\r\n                                                        </IconButton>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Stock Journal Details */}\r\n                            <div className=\"col-xxl-9 col-lg-8 col-md-7 py-2 px-0 fa-12\">\r\n                                <div className=\"border p-2\" style={{ minHeight: '30vh', height: '100%' }}>\r\n                                    <div className=\"row px-3\">\r\n                                        {/* Common Details - 1 */}\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Branch</label>\r\n                                            <select\r\n                                                value={stockJorunalInfo.Branch_Id}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Branch_Id: e.target.value })}\r\n                                                placeholder={\"Select Branch\"}\r\n                                                className=\"cus-inpt mb-2 p-2\"\r\n                                                disabled={isViewOnly}\r\n                                            >\r\n                                                <option value=\"\" disabled>Select Branch</option>\r\n                                                {baseData.branch.map((br, bi) => (\r\n                                                    <option key={bi} value={br.BranchId}>{br.BranchName}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Date</label>\r\n                                            <input\r\n                                                value={stockJorunalInfo.Process_date}\r\n                                                type=\"date\"\r\n                                                disabled={isViewOnly}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Process_date: e.target.value })}\r\n                                                className=\"cus-inpt p-2 mb-2\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Voucher Type</label>\r\n                                            <select\r\n                                                value={stockJorunalInfo.VoucherType}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, VoucherType: e.target.value })}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                disabled={isViewOnly}\r\n                                            >\r\n                                                <option value=\"\">Select Voucher</option>\r\n                                                {baseData.voucherType.filter(fil => fil.Type === 'PROCESSING').map((vt, vInd) => (\r\n                                                    <option value={vt.Vocher_Type_Id} key={vInd}>{vt.Voucher_Type}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Machine Number</label>\r\n                                            <input\r\n                                                value={stockJorunalInfo.Machine_No}\r\n                                                placeholder=\"Machine Number\"\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Machine_No: e.target.value })}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                disabled={isViewOnly}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Activity Location</label>\r\n                                            <select\r\n                                                value={stockJorunalInfo.Godownlocation}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Godownlocation: e.target.value })}\r\n                                                className=\"cus-inpt p-2\"\r\n                                            >\r\n                                                <option value={''} disabled>select godown</option>\r\n                                                {baseData.godown.map((god, godInd) => (\r\n                                                    <option value={god.Godown_Id} key={godInd}>{god.Godown_Name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Order Status</label>\r\n                                            <select\r\n                                                className=\"cus-inpt p-2\"\r\n                                                value={stockJorunalInfo?.PR_Status}\r\n                                                onChange={e => setStockJorunalInfo(pre => ({ ...pre, PR_Status: e.target.value }))}\r\n                                            >\r\n                                                <option value=\"New\">New</option>\r\n                                                <option value=\"On Process\">On Process</option>\r\n                                                <option value=\"Completed\">Completed</option>\r\n                                                <option value=\"Canceled\">Canceled</option>\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        {/* Common Details - 2 */}\r\n                                        <div className=\"col-12 p-2 \">\r\n\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-bordered\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th colSpan={2} className=\"fa-13 text-center\">Time-Taken</th>\r\n                                                            <th colSpan={2} className=\"fa-13 text-center\">Meter-Reading</th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th className=\"fa-13 text-center\">Start</th>\r\n                                                            <th className=\"fa-13 text-center\">End</th>\r\n                                                            <th className=\"fa-13 text-center\">Start</th>\r\n                                                            <th className=\"fa-13 text-center\">End</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type='datetime-local'\r\n                                                                    onChange={e => {\r\n                                                                        setStockJorunalInfo(pre => ({ ...pre, StartDateTime: e.target.value }));\r\n                                                                    }}\r\n                                                                    value={stockJorunalInfo?.StartDateTime}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type='datetime-local'\r\n                                                                    onChange={e => setStockJorunalInfo(pre => ({ ...pre, EndDateTime: e.target.value }))}\r\n                                                                    value={stockJorunalInfo?.EndDateTime}\r\n                                                                    min={stockJorunalInfo?.StartDateTime}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type=\"number\"\r\n                                                                    onChange={e => setStockJorunalInfo(pre => ({ ...pre, ST_Reading: e.target.value }))}\r\n                                                                    value={stockJorunalInfo?.ST_Reading}\r\n                                                                    min={0}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    placeholder=\"Ex: 2000\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type=\"number\"\r\n                                                                    onChange={e => setStockJorunalInfo(pre => ({ ...pre, EN_Reading: e.target.value }))}\r\n                                                                    value={stockJorunalInfo?.EN_Reading}\r\n                                                                    min={Addition(stockJorunalInfo?.ST_Reading, 1)}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    placeholder=\"Ex: 2200\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n\r\n                                            <textarea\r\n                                                className=\"cus-inpt\"\r\n                                                placeholder=\"Narration\"\r\n                                                rows={5}\r\n                                                disabled={isViewOnly}\r\n                                                value={stockJorunalInfo.Narration}\r\n                                                onChange={e => setStockJorunalInfo(pre => ({ ...pre, Narration: e.target.value }))}\r\n                                            ></textarea>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Source Details */}\r\n                            <div className=\"col-12 p-2 mb-2\">\r\n                                <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                                    <h5 className=\"flex-grow-1 \">\r\n                                        CONSUMPTION\r\n                                    </h5>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        type=\"button\"\r\n                                        onClick={() => {\r\n                                            setSourceList([...sourceList, { ...initialSoruceValue }]);\r\n                                        }}\r\n                                    >Add</Button>\r\n                                </div>\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"fa-13\">Sno</th>\r\n                                                <th className=\"fa-13\">Item <RequiredStar /></th>\r\n                                                <th className=\"fa-13\">Batch Lot No</th>\r\n                                                <th className=\"fa-13\">Quantity <RequiredStar /></th>\r\n                                                <th className=\"fa-13\">Unit</th>\r\n                                                <th className=\"fa-13\">Rate</th>\r\n                                                <th className=\"fa-13\">Amount</th>\r\n                                                <th className=\"fa-13\">Location <RequiredStar /></th>\r\n                                                <th className=\"fa-13\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {sourceList.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td className='fa-13'>{index + 1}</td>\r\n                                                    <td className='fa-13 p-0' style={{ minWidth: '200px' }}>\r\n                                                        <Select\r\n                                                            value={{ value: row?.Sour_Item_Id, label: row?.Sour_Item_Name }}\r\n                                                            onChange={e => changeSourceValue(index, 'Sour_Item_Id', e.value)}\r\n                                                            options={\r\n                                                                baseData.products\r\n                                                                    .filter(pro =>\r\n                                                                        !sourceList.some(src => isEqualNumber(pro.Product_Id, src.Sour_Item_Id))\r\n                                                                    )\r\n                                                                    .map(pro => ({ value: pro.Product_Id, label: pro.Product_Name }))\r\n                                                            }\r\n                                                            menuPortalTarget={document.body}\r\n                                                            styles={customSelectStyles}\r\n                                                            isSearchable={true}\r\n                                                            placeholder={\"Select Item\"}\r\n                                                            maxMenuHeight={300}\r\n                                                        />\r\n\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Sour_Batch_Lot_No ?? \"\"}\r\n                                                            onChange={e => changeSourceValue(index, 'Sour_Batch_Lot_No', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Sour_Qty ?? \"\"}\r\n                                                            required\r\n                                                            onInput={onlynum}\r\n                                                            onChange={e => changeSourceValue(index, 'Sour_Qty', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <select\r\n                                                            value={row?.Sour_Unit_Id ?? \"\"}\r\n                                                            onChange={e => changeSourceValue(index, 'Sour_Unit_Id', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                            style={{ minWidth: '40px' }}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>Select Unit</option>\r\n                                                            {baseData.uom.map((uom, ind) => (\r\n                                                                <option key={ind} value={uom.Unit_Id}>{uom.Units}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Sour_Rate ?? \"\"}\r\n                                                            onInput={onlynum}\r\n                                                            onChange={e => changeSourceValue(index, 'Sour_Rate', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Sour_Amt ?? \"\"}\r\n                                                            onInput={onlynum}\r\n                                                            onChange={e => changeSourceValue(index, 'Sour_Amt', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <select\r\n                                                            value={row?.Sour_Goodown_Id ?? \"\"}\r\n                                                            required\r\n                                                            onChange={e => changeSourceValue(index, 'Sour_Goodown_Id', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                            style={{ minWidth: '40px' }}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>Select Location</option>\r\n                                                            {baseData.godown.map((god, ind) => (\r\n                                                                <option key={ind} value={god.Godown_Id}>{god.Godown_Name}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 p-0 vctr text-center'>\r\n                                                        <IconButton\r\n                                                            variant=\"contained\"\r\n                                                            color=\"error\"\r\n                                                            type=\"button\"\r\n                                                            size=\"small\"\r\n                                                            onClick={() => {\r\n                                                                setSourceList(sourceList.filter((_, ind) => ind !== index));\r\n                                                            }}\r\n                                                        ><Delete className=\"fa-20\" /></IconButton>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"text-end\">\r\n                                    <span className=\"rounded-2 border bg-light fw-bold text-primary fa-14 p-2\">\r\n                                        <span className=\" py-2 pe-2\">Total Quantity: </span>\r\n                                        {sourceList.reduce((acc, item) => {\r\n                                            return checkIsNumber(item?.Sour_Item_Id) ? Addition(acc, item.Sour_Qty) : acc;\r\n                                        }, 0)}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Destination Entry */}\r\n                            <div className=\"col-12 p-2 mb-2\">\r\n                                <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                                    <h5 className=\"flex-grow-1 \">\r\n                                        PRODUCTION\r\n                                    </h5>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        type=\"button\"\r\n                                        onClick={() => {\r\n                                            setDestinationList([...destinationList, { ...initialDestinationValue }]);\r\n                                        }}\r\n                                    >Add</Button>\r\n                                </div>\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table table-bordered \">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"fa-13\">Sno</th>\r\n                                                <th className=\"fa-13\">Item <RequiredStar /></th>\r\n                                                <th className=\"fa-13\">Batch Lot No</th>\r\n                                                <th className=\"fa-13\">Quantity <RequiredStar /></th>\r\n                                                <th className=\"fa-13\">Unit</th>\r\n                                                <th className=\"fa-13\">Rate</th>\r\n                                                <th className=\"fa-13\">Amount</th>\r\n                                                <th className=\"fa-13\">Location <RequiredStar /></th>\r\n                                                <th className=\"fa-13\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {destinationList.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td className='fa-13'>{index + 1}</td>\r\n                                                    <td className='fa-13 p-0' style={{ minWidth: '200px' }}>\r\n                                                        <Select\r\n                                                            value={{ value: row?.Dest_Item_Id, label: row?.Dest_Item_Name }}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Item_Id', e.value)}\r\n                                                            options={\r\n                                                                baseData.products\r\n                                                                    .filter(pro =>\r\n                                                                        !destinationList.some(src => isEqualNumber(pro.Product_Id, src.Dest_Item_Id))\r\n                                                                    )\r\n                                                                    .map(pro => ({ value: pro.Product_Id, label: pro.Product_Name }))\r\n                                                            }\r\n                                                            menuPortalTarget={document.body}\r\n                                                            styles={customSelectStyles}\r\n                                                            isSearchable={true}\r\n                                                            placeholder={\"Select Item\"}\r\n                                                            maxMenuHeight={300}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Dest_Batch_Lot_No ?? \"\"}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Batch_Lot_No', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Dest_Qty ?? \"\"}\r\n                                                            required\r\n                                                            onInput={onlynum}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Qty', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <select\r\n                                                            value={row?.Dest_Unit_Id ?? \"\"}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Unit_Id', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                            style={{ minWidth: '40px' }}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>Select Unit</option>\r\n                                                            {baseData.uom.map((uom, ind) => (\r\n                                                                <option key={ind} value={uom.Unit_Id}>{uom.Units}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Dest_Rate ?? \"\"}\r\n                                                            onInput={onlynum}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Rate', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Dest_Amt ?? \"\"}\r\n                                                            onInput={onlynum}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Amt', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <select\r\n                                                            value={row?.Dest_Goodown_Id ?? \"\"}\r\n                                                            required\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Goodown_Id', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                            style={{ minWidth: '40px' }}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>Select Location</option>\r\n                                                            {baseData.godown.map((god, ind) => (\r\n                                                                <option key={ind} value={god.Godown_Id}>{god.Godown_Name}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 p-0 vctr text-center'>\r\n                                                        <IconButton\r\n                                                            variant=\"contained\"\r\n                                                            color=\"error\"\r\n                                                            type=\"button\"\r\n                                                            size=\"small\"\r\n                                                            onClick={() => {\r\n                                                                setDestinationList(destinationList.filter((_, ind) => ind !== index));\r\n                                                            }}\r\n                                                        ><Delete className=\"fa-20\" /></IconButton>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"text-end\">\r\n                                    <span className=\"rounded-2 border bg-light fw-bold text-primary fa-14 p-2\">\r\n                                        <span className=\" py-2 pe-2\">Total Quantity: </span>\r\n                                        {destinationList.reduce((acc, item) => {\r\n                                            return checkIsNumber(item?.Dest_Item_Id) ? Addition(acc, item.Dest_Qty) : acc;\r\n                                        }, 0)}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"my-2 d-flex justify-content-end align-items-center \">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                type=\"button\"\r\n                                color=\"secondary\"\r\n                                disabled={isViewOnly}\r\n                                onClick={resetForm}\r\n                            >\r\n                                Reset\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\" className=\"ms-2\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                disabled={isViewOnly}\r\n                            >\r\n                                {checkIsNumber(stockJorunalInfo?.STJ_Id) ? \"Update\" : \"Save\"}\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StockManagementCreate;\r\n\r\nexport {\r\n    initialStockJournalInfoValues,\r\n    initialSoruceValue,\r\n    initialDestinationValue,\r\n    initialStaffInvolvedValue\r\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","customTableStyles","table","width","backgroundColor","rows","headCells","customSelectStyles","control","provided","state","_objectSpread","height","background","menu","zIndex","menuPortal","base","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","user","getSessionUser","initialStockJournalInfoValues","PR_Id","PR_Inv_Id","Year_Id","Branch_Id","Process_no","P_No","Godownlocation","BillType","VoucherType","Process_date","Machine_No","StartDateTime","EndDateTime","ST_Reading","EN_Reading","Total_Reading","Narration","PR_Status","Created_By","Updated_By","initialSoruceValue","SJD_Id","STJ_Id","Sour_Item_Id","Sour_Item_Name","Sour_Goodown_Id","Sour_Batch_Lot_No","Sour_Qty","Sour_Unit_Id","Sour_Unit","Sour_Rate","Sour_Amt","initialDestinationValue","Dest_Item_Id","Dest_Item_Name","Dest_Goodown_Id","Dest_Batch_Lot_No","Dest_Qty","Dest_Unit_Id","Dest_Unit","Dest_Rate","Dest_Amt","initialStaffInvolvedValue","S_Id","Staff_Id","Staff_Name","Staff_Type_Id","_ref","loadingOn","loadingOff","stateDetails","useLocation","baseData","setBaseData","useState","products","branch","godown","voucherType","uom","staff","staffType","isViewOnly","setIsViewOnly","stockJorunalInfo","setStockJorunalInfo","sourceList","setSourceList","destinationList","setDestinationList","staffInvolvedList","setStaffInvolvedList","useEffect","async","branchResponse","productsResponse","godownLocationsResponse","voucherTypeResponse","uomResponse","staffResponse","staffCategory","Promise","all","fetchLink","branchData","success","data","sort","a","b","String","BranchName","localeCompare","productsData","Product_Name","godownLocations","Godown_Name","Voucher_Type","uomData","Units","staffData","Cost_Center_Name","staffCategoryData","Cost_Category","pre","e","console","error","fetchData","source","SourceDetails","destination","DestinationDetails","StaffsDetails","isValidObject","Array","isArray","isEditable","Object","fromEntries","entries","map","_ref2","_stateDetails$key","key","value","ISOString","formatDateForDatetimeLocal","sourceData","_ref3","_sourceData$key","destinationData","_ref4","_destinationData$key","_ref5","_staffData$key","changeSourceValue","rowIndex","prev","item","index","isEqualNumber","_baseData$products$fi","_baseData$products","_baseData$products$fi2","newItem","find","pro","Product_Id","_baseData$uom$find$Un","_baseData$uom","_baseData$uom$find","Unit_Id","Multiplication","Division","checkIsNumber","changeDestinationValues","_baseData$products$fi3","_baseData$products2","_baseData$products2$f","_baseData$uom$find$Un2","_baseData$uom2","_baseData$uom2$find","resetForm","_Fragment","Card","_jsxs","CardContent","sx","minHeight","className","onSubmit","preventDefault","method","bodyData","Source","filter","isGraterNumber","Destination","StaffInvolve","then","toast","message","finally","catch","Button","type","disabled","onClick","row","Select","label","onChange","ind","c","Cost_Center_Id","User_Type","options","fil","findIndex","st","styles","isSearchable","placeholder","maxWidth","minWidth","target","sti","Cost_Category_Id","IconButton","_","filIndex","size","Delete","br","bi","BranchId","Type","vt","vInd","Vocher_Type_Id","god","godInd","Godown_Id","colSpan","min","Addition","_row$Sour_Batch_Lot_N","_row$Sour_Qty","_row$Sour_Unit_Id","_row$Sour_Rate","_row$Sour_Amt","_row$Sour_Goodown_Id","some","src","menuPortalTarget","document","body","maxMenuHeight","required","onInput","onlynum","reduce","acc","_row$Dest_Batch_Lot_N","_row$Dest_Qty","_row$Dest_Unit_Id","_row$Dest_Rate","_row$Dest_Amt","_row$Dest_Goodown_Id","createSvgIcon","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined"],"sourceRoot":""}
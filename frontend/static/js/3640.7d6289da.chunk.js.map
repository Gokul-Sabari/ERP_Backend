{"version":3,"file":"static/js/3640.7d6289da.chunk.js","mappings":"qMAIA,MAyCA,EAzC4BA,IACxB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC3B,IAAEC,GAAQJ,EAMVK,EAAcA,KAChBH,GAAQ,EAAM,EAGlB,OACII,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EAEIC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,MAAM,cAAaH,UACxBC,EAAAA,EAAAA,KAAA,QAAMG,QAZCC,KACfV,GAAQ,EAAK,EAWsBW,MAAO,CAAEC,OAAQ,WAAYP,SAAEP,EAAMO,cAGpED,EAAAA,EAAAA,MAACS,EAAAA,EAAM,CAACd,KAAMA,EAAMe,QAASX,EAAaY,WAAS,EAACC,SAAS,KAAIX,SAAA,EAE7DD,EAAAA,EAAAA,MAACa,EAAAA,EAAW,CAACC,UAAU,oDAAmDb,SAAA,EACtEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mBACNC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACV,QAASN,EAAYE,UAACC,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,GAAI,CAAEC,MAAO,iBAG1DhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAa,CAACL,UAAU,gEAA+Db,UACpFC,EAAAA,EAAAA,KAAA,OAAKkB,IAAKtB,EAAKuB,IAAI,UAAUd,MAAO,CAAEK,SAAU,OAAQU,UAAW,iBAUxE,C,sICtCFC,EAAoB,CAC7BC,MAAO,CACHjB,MAAO,CACHkB,MAAO,OACPC,gBAAiB,gBAIzBC,KAAM,CACFpB,MAAO,CACHmB,gBAAiB,gBAGzBE,UAAW,CACPrB,MAAO,CACHmB,gBAAiB,YACjBR,MAAO,QACPW,SAAU,UAMTC,EAAqB,CAC9BC,QAASA,CAACC,EAAUC,KAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClBF,GAAQ,IACXG,OAAQ,OACRC,WAAY,+BAEhBC,KAAMA,CAACL,EAAUC,KAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfF,GAAQ,IACXM,OAAQ,OAEZC,WAAYC,IAAIN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUM,GAAI,IAAEF,OAAQ,OACxCG,aAAeD,IAAIN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZM,GAAI,IACPd,gBAAiB,UACjBR,MAAO,OACPwB,WAAY,OACZb,SAAU,OACVc,QAAS,WACTC,aAAc,iBACdC,cAAe,cAEnBC,OAAQA,CAACN,EAAMP,KAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbM,GAAI,IACPd,gBAAiBO,EAAMc,WACjB,UACAd,EAAMe,UACN,UACA,QACN9B,MAAOe,EAAMc,WAAa,QAAU,OACpCJ,QAAS,eAmBJM,EAAW,CACpB,CACIC,GAAI,EACJC,SAAU,UACVC,QAAS,OACTC,MAAO,OACP5B,MAAO,KAEX,CACIyB,GAAI,EACJC,SAAU,YAEd,CACID,GAAI,EACJC,SAAU,eAEd,CACID,GAAI,EACJC,SAAU,cAEd,CACID,GAAI,EACJC,SAAU,eAEd,CACID,GAAI,EACJC,SAAU,iBAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,WAILG,EAAiB,CAC1B,CACIC,SAAU,EACVC,KAAM,kBACNC,SAAU,8BACVC,QAAS,iGACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,6BACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,eAEV,CACIV,SAAU,EACVC,KAAM,oBACNC,SAAU,GACVC,QAAS,4JACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,eACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,eAEV,CACIV,SAAU,EACVC,KAAM,kBACNC,SAAU,GACVC,QAAS,4HACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,6BACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,e,gKC3Id,MA8PA,EA9P6BC,KACzB,MAAMC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,UACzCC,EAAYC,IAAkB5E,EAAAA,EAAAA,UAAS,KAE9C6E,EAAAA,EAAAA,YAAU,MAENC,EAAAA,EAAAA,GAAU,CACNjB,QAAQ,uDAADkB,OAAgE,OAAPT,QAAO,IAAPA,OAAO,EAAPA,EAASU,cAC1EC,MAAKC,IACAA,EAAKC,SACLP,EAAeM,EAAKA,KACxB,IACDE,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAEhC,CAAQ,OAAPf,QAAO,IAAPA,OAAO,EAAPA,EAASU,aAEb,MAAMQ,EAAWC,IAAiB,IAAhB,EAAEC,EAAC,IAAEC,GAAKF,EACxB,MAAO3F,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1B4F,EAAYC,IAAiB7F,EAAAA,EAAAA,UAAS,YAoFvC8F,EA3BgCC,KAClC,MAAMC,EAAa,IAAIC,IAuBvB,OArBS,OAATF,QAAS,IAATA,GAAAA,EAAWG,SAAQC,IAAa,IAADC,EACnB,OAARD,QAAQ,IAARA,GAAuB,QAAfC,EAARD,EAAUE,qBAAa,IAAAD,GAAvBA,EAAyBF,SAAQI,IAC7B,MAAMC,EAAiB,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOE,QACnBC,GAAoB,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOI,mBAAwB,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOK,WAChDC,EAAuB,OAALN,QAAK,IAALA,OAAK,EAALA,EAAOI,iBAE/B,GAAIV,EAAWa,IAAIN,GAAY,CAC3B,MAAMO,EAAkBd,EAAWe,IAAIR,GACvCO,EAAgBE,YAAcP,EAC9BK,EAAgBG,eAAiBL,CACrC,MACIZ,EAAWkB,IAAIX,EAAW,CACtBC,QAASD,EACTY,aAAmB,OAALb,QAAK,IAALA,OAAK,EAALA,EAAOa,aACrBH,WAAYP,EACZQ,cAAeL,GAEvB,GACF,IAGCQ,MAAMC,KAAKrB,EAAWsB,SAAS,EAGdC,CAA8B,OAAD7B,QAAC,IAADA,OAAC,EAADA,EAAG8B,UAE5D,OACIrH,EAAAA,EAAAA,MAAAsH,EAAAA,SAAA,CAAArH,SAAA,EACID,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,UACxBC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACwG,KAAK,QAAQlH,QAASA,IAAMT,GAASD,GAAMM,SAClDN,GAAOO,EAAAA,EAAAA,KAACsH,EAAAA,EAAM,CAACvG,GAAI,CAAEY,SAAU,OAAQX,MAAO,UAAchB,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACxG,GAAI,CAAEY,SAAU,eAG1F3B,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAEuF,KAC9BtF,EAAAA,EAAAA,KAAA,MAAIY,UAAU,kCAAiCb,SAAG,OAADsF,QAAC,IAADA,GAAAA,EAAGmC,UAAa,OAADnC,QAAC,IAADA,OAAC,EAADA,EAAGmC,UAAY,aAC/ExH,EAAAA,EAAAA,KAAA,MAAIY,UAAU,wBAAuBb,SAAqB,OAAnB0F,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBgC,UAC5DzH,EAAAA,EAAAA,KAAA,MAAIY,UAAU,6CAA4Cb,UAAE2H,EAAAA,EAAAA,IApDtDC,MAAO,IAADC,EACpB,IAAIC,EAAyB,EAQ7B,OANC,OAADxC,QAAC,IAADA,GAAW,QAAVuC,EAADvC,EAAG8B,gBAAQ,IAAAS,GAAXA,EAAa/B,SAAQC,IAAa,IAADgC,EACrB,OAARhC,QAAQ,IAARA,GAAuB,QAAfgC,EAARhC,EAAUE,qBAAa,IAAA8B,GAAvBA,EAAyBjC,SAAQI,IAC7B4B,GAA0B5B,EAAMI,iBAAmBJ,EAAMK,SAAS,GACpE,IAGCuB,CAAsB,EA2CoDF,UAE7E3H,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAI+H,QAAS,EAAGnH,UAAU,eAAcb,UACpCD,EAAAA,EAAAA,MAACkI,EAAAA,EAAQ,CAACC,GAAIxI,EAAMyI,QAAQ,OAAOC,eAAa,EAAApI,SAAA,EAE5CD,EAAAA,EAAAA,MAAA,OAAKc,UAAU,OAAMb,SAAA,EACjBC,EAAAA,EAAAA,KAAA,SAAOY,UAAU,gCAA+Bb,SAAC,iBACjDD,EAAAA,EAAAA,MAAA,UACIsI,MAAO7C,EACP8C,SAAUrD,GAAKQ,EAAcR,EAAEsD,OAAOF,OACtCxH,UAAU,kBAAiBb,SAAA,EAE3BC,EAAAA,EAAAA,KAAA,UAAQoI,MAAM,WAAUrI,SAAC,oBACzBC,EAAAA,EAAAA,KAAA,UAAQoI,MAAM,UAASrI,SAAC,yBAIhCC,EAAAA,EAAAA,KAAA,OAAKY,UAAU,wBAAuBb,SAjHrCwI,KAAS,IAADC,EACzB,OAAQD,GACJ,IAAK,WACD,OACIzI,EAAAA,EAAAA,MAAA,SAAOc,UAAU,aAAYb,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAAD,SACK,CAAC,GAAI,MAAO,WAAY,WAAY,SAAS0I,KAAI,CAACC,EAAKC,KACpD3I,EAAAA,EAAAA,KAAA,MAAcY,UAAU,eAAcb,SAAE2I,GAA/BC,UAIrB3I,EAAAA,EAAAA,KAAA,SAAAD,SACM,OAADsF,QAAC,IAADA,GAAW,QAAVmD,EAADnD,EAAG8B,gBAAQ,IAAAqB,OAAV,EAADA,EAAaC,KAAI,CAACC,EAAKC,KAAQ3I,EAAAA,EAAAA,KAAC4I,EAAY,CAACvD,EAAGqD,EAAepD,IAAKqD,EAAM,GAAhBA,UAI3E,IAAK,UACD,OACI7I,EAAAA,EAAAA,MAAA,SAAOc,UAAU,QAAOb,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAAD,SACK,CAAC,MAAO,UAAW,WAAY,SAAS0I,KAAI,CAACC,EAAKC,KAC/C3I,EAAAA,EAAAA,KAAA,MAAcY,UAAU,2BAA0Bb,SAAE2I,GAA3CC,UAIrB3I,EAAAA,EAAAA,KAAA,SAAAD,SACwB,OAAnB0F,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBgD,KAAI,CAACI,EAAIC,KAC3BhJ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIY,UAAU,2BAA0Bb,SAAE+I,EAAM,KAChD9I,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAI,OAAF8I,QAAE,IAAFA,OAAE,EAAFA,EAAI/B,gBAClC9G,EAAAA,EAAAA,KAAA,MAAIY,UAAU,wBAAuBb,UAAE2H,EAAAA,EAAAA,IAAe,OAAFmB,QAAE,IAAFA,OAAE,EAAFA,EAAIjC,kBACxD5G,EAAAA,EAAAA,KAAA,MAAIY,UAAU,qCAAoCb,UAAE2H,EAAAA,EAAAA,IAAe,OAAFmB,QAAE,IAAFA,OAAE,EAAFA,EAAIlC,gBAJhEmC,UAU7B,QAAS1B,EAAAA,SACb,EA0EqB2B,CAAYxD,cAK9B,EAILqD,EAAeI,IAAiB,IAADC,EAAAC,EAAA,IAAf,EAAE7D,EAAC,IAAEC,GAAK0D,EAC5B,MAAOvJ,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,GAYjC,OACIG,EAAAA,EAAAA,MAAAsH,EAAAA,SAAA,CAAArH,SAAA,EACID,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACwG,KAAK,QAAQlH,QAASA,IAAMT,GAASD,GAAMM,SAClDN,GAAOO,EAAAA,EAAAA,KAACsH,EAAAA,EAAM,CAACvG,GAAI,CAAEY,SAAU,OAAQX,MAAO,UAAchB,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACxG,GAAI,CAAEY,SAAU,eAG1F3B,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAEuF,KAC9BxF,EAAAA,EAAAA,MAAA,MAAIc,UAAU,eAAcb,SAAA,EACxBC,EAAAA,EAAAA,KAAA,QAAMY,UAAU,qBAAoBb,SAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAG8D,gBAAqB,KAACnJ,EAAAA,EAAAA,KAAA,UAC/DA,EAAAA,EAAAA,KAAA,QAAMY,UAAU,mBAAkBb,SAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAG+D,wBAE3CpJ,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAG,OAADsF,QAAC,IAADA,GAAgB,QAAf4D,EAAD5D,EAAGW,qBAAa,IAAAiD,OAAf,EAADA,EAAkBxB,UAChDzH,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,UACvB2H,EAAAA,EAAAA,IAzBI2B,MAAO,IAADC,EACvB,IAAIzB,EAAyB,EAM7B,OAJC,OAADxC,QAAC,IAADA,GAAgB,QAAfiE,EAADjE,EAAGW,qBAAa,IAAAsD,GAAhBA,EAAkBzD,SAAQI,IACtB4B,IAA+B,OAAL5B,QAAK,IAALA,OAAK,EAALA,EAAOI,mBAAwB,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOK,UAAS,IAGjEuB,CAAsB,EAkBHwB,UAItBrJ,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAI+H,QAAS,EAAGnH,UAAU,eAAcb,UACpCC,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CAACC,GAAIxI,EAAMyI,QAAQ,OAAOC,eAAa,EAAApI,UAC5CC,EAAAA,EAAAA,KAAA,OAAKY,UAAU,wBAAuBb,UAClCD,EAAAA,EAAAA,MAAA,SAAOc,UAAU,QAAOb,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAAD,SACK,CAAC,MAAO,eAAgB,OAAQ,WAAY,OAAQ,SAAS0I,KAAIpD,IAC9DrF,EAAAA,EAAAA,KAAA,MAAIY,UAAU,2BAA0Bb,SAAUsF,GAAJA,UAK1DrF,EAAAA,EAAAA,KAAA,SAAAD,SACM,OAADsF,QAAC,IAADA,GAAgB,QAAf6D,EAAD7D,EAAGW,qBAAa,IAAAkD,OAAf,EAADA,EAAkBT,KAAI,CAACc,EAAKC,KACzB1J,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAEyJ,EAAI,KAClCxJ,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAK,OAAHwJ,QAAG,IAAHA,OAAG,EAAHA,EAAKzC,gBACnC9G,EAAAA,EAAAA,KAAA,MAAIY,UAAU,2BAA0Bb,UAAE0J,EAAAA,EAAAA,IAAa,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKG,YACzD1J,EAAAA,EAAAA,KAAA,MAAIY,UAAU,wBAAuBb,UAAE2H,EAAAA,EAAAA,IAAgB,OAAH6B,QAAG,IAAHA,OAAG,EAAHA,EAAKlD,qBACzDrG,EAAAA,EAAAA,KAAA,MAAIY,UAAU,wBAAuBb,SAAK,OAAHwJ,QAAG,IAAHA,OAAG,EAAHA,EAAKjD,aAC5CtG,EAAAA,EAAAA,KAAA,MAAIY,UAAU,wBAAuBb,SAC5B,OAAHwJ,QAAG,IAAHA,GAAAA,EAAKlD,kBAAuB,OAAHkD,QAAG,IAAHA,GAAAA,EAAKjD,WAAaoB,EAAAA,EAAAA,KAAgB,OAAH6B,QAAG,IAAHA,OAAG,EAAHA,EAAKjD,YAAe,OAAHiD,QAAG,IAAHA,OAAG,EAAHA,EAAKlD,mBAAoB,MAPnGmD,oBAiBtC,EAkBX,OACIxJ,EAAAA,EAAAA,KAAAoH,EAAAA,SAAA,CAAArH,UACID,EAAAA,EAAAA,MAAC6J,EAAAA,EAAI,CAAA5J,SAAA,EACDD,EAAAA,EAAAA,MAAA,OAAKc,UAAU,2EAA0Eb,SAAA,EACrFC,EAAAA,EAAAA,KAAA,MAAIY,UAAU,QAAOb,SAAC,2BACtBD,EAAAA,EAAAA,MAAA,QAAMc,UAAU,WAAUb,SAAA,CAAC,WAAG2H,EAAAA,EAAAA,IAnBxB7C,KAClB,IAAIgD,EAAyB,EAU7B,OARI,OAAJhD,QAAI,IAAJA,GAAAA,EAAMgB,SAAQ+D,IAAS,IAADC,EACd,OAAJD,QAAI,IAAJA,GAAc,QAAVC,EAAJD,EAAMzC,gBAAQ,IAAA0C,GAAdA,EAAgBhE,SAAQC,IAAa,IAADgE,EACxB,OAARhE,QAAQ,IAARA,GAAuB,QAAfgE,EAARhE,EAAUE,qBAAa,IAAA8D,GAAvBA,EAAyBjE,SAAQI,IAC7B4B,IAA+B,OAAL5B,QAAK,IAALA,OAAK,EAALA,EAAOI,mBAAwB,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOK,UAAS,GACtE,GACJ,IAGCuB,CAAsB,EAQ0BwB,CAAa/E,WAE5DtE,EAAAA,EAAAA,KAAC+J,EAAAA,EAAW,CAAAhK,UACRC,EAAAA,EAAAA,KAAA,OAAKY,UAAU,mBAAkBb,UAC7BD,EAAAA,EAAAA,MAAA,SAAOc,UAAU,QAAOb,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAAD,SACK,CAAC,GAAI,MAAO,OAAQ,WAAY,SAAS0I,KAAI,CAACpD,EAAGmE,KAC9CxJ,EAAAA,EAAAA,KAAA,MAAYY,UAAU,2BAA0Bb,SAAEsF,GAAzCmE,UAIrBxJ,EAAAA,EAAAA,KAAA,SAAAD,SACe,OAAVuE,QAAU,IAAVA,OAAU,EAAVA,EAAYmE,KAAI,CAACpD,EAAGmE,KAAMxJ,EAAAA,EAAAA,KAACmF,EAAQ,CAASG,IAAKkE,EAAI,EAAGnE,EAAGA,GAAlBmE,kBAM/D,E,mRCnPX,MAuhBA,EAvhB6BQ,KAAO,IAADC,EAAAC,EAC/B,MAAMjG,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,UACzCqB,EAAWyE,IAAgBxK,EAAAA,EAAAA,UAAS,KACpCyK,EAAUC,IAAe1K,EAAAA,EAAAA,UAAS,KAClC2K,EAAcC,IAAmB5K,EAAAA,EAAAA,UAAS,CAAC,IAC3C6K,EAAqBC,IAA0B9K,EAAAA,EAAAA,UAAS,KACxD+K,EAA6BC,IAAkChL,EAAAA,EAAAA,UAAS,KACxEiL,EAAUC,IAAelL,EAAAA,EAAAA,UAAS,MAClCmL,EAAQC,IAAapL,EAAAA,EAAAA,WAAS,IAE9BqL,EAAQC,IAAatL,EAAAA,EAAAA,UAAS,CACjCuL,cAAc,KAEXC,EAASC,IAAczL,EAAAA,EAAAA,UAAS,CACnC0L,KAAM,GACNC,QAAS,kBACTC,UAAUC,EAAAA,EAAAA,IAAgB,IAC1BC,QAAQC,EAAAA,EAAAA,QAGNC,GAAoB,CACtBC,WAAmB,OAAP3H,QAAO,IAAPA,OAAO,EAAPA,EAASU,WACrBkH,SAASH,EAAAA,EAAAA,MACTI,YAAa,GACb3C,cAAe,GACf4C,UAAW,GACXC,WAAmB,OAAP/H,QAAO,IAAPA,OAAO,EAAPA,EAASgI,OACrBC,mBAAoB,GACpBC,MAAO,KAGJC,GAAiBC,KAAsB1M,EAAAA,EAAAA,UAASgM,KAChDW,GAAoBC,KAAyB5M,EAAAA,EAAAA,UAAS,KACtD6M,GAAQC,KAAa9M,EAAAA,EAAAA,WAAS,IAGrC6E,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,GAAU,CACNjB,QAAQ,yCAADkB,OAAkD,OAAPT,QAAO,IAAPA,OAAO,EAAPA,EAASU,cAC5DC,MAAKC,IACAA,EAAKC,SACLqF,EAAatF,EAAKA,KACtB,IACDE,OAAMC,GAAKC,QAAQC,MAAMF,MAE5BP,EAAAA,EAAAA,GAAU,CACNjB,QAAQ,uCAADkB,OAAgD,OAAPT,QAAO,IAAPA,OAAO,EAAPA,EAASU,cAC1DC,MAAKC,IACAA,EAAKC,SACLuF,EAAYxF,EAAKA,KACrB,IACDE,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAEhC,CAAQ,OAAPf,QAAO,IAAPA,OAAO,EAAPA,EAASU,cAEbH,EAAAA,EAAAA,YAAU,KACa,OAAf4H,SAAe,IAAfA,IAAAA,GAAiBN,cACjBrH,EAAAA,EAAAA,GAAU,CACNjB,QAAQ,2DAADkB,OAA4E,OAAf0H,SAAe,IAAfA,QAAe,EAAfA,GAAiBN,YAAW,aAAApH,OAA2B,OAAf0H,SAAe,IAAfA,QAAe,EAAfA,GAAiBP,WAC9HjH,MAAKC,IACAA,EAAKC,SACL2F,EAAuB5F,EAAKA,KAChC,IACDE,OAAMC,GAAKC,QAAQC,MAAMF,IAChC,GACD,CAAgB,OAAfoH,SAAe,IAAfA,QAAe,EAAfA,GAAiBP,QAAwB,OAAfO,SAAe,IAAfA,QAAe,EAAfA,GAAiBN,YAAahB,KAE5DtG,EAAAA,EAAAA,YAAU,KACN+F,EAAgB,CAAC,GACN,OAAPY,QAAO,IAAPA,GAAAA,EAASE,OACT5G,EAAAA,EAAAA,GAAU,CACNjB,QAAQ,sCAADkB,OAA+C,OAAPyG,QAAO,IAAPA,OAAO,EAAPA,EAASE,KAAI,cAAA3G,OAAoB,OAAPyG,QAAO,IAAPA,OAAO,EAAPA,EAASI,SAAQ,YAAA7G,OAAkB,OAAPyG,QAAO,IAAPA,OAAO,EAAPA,EAASM,UAC/G7G,MAAKC,IAAS,IAAD6H,EACJ,OAAJ7H,QAAI,IAAJA,GAAAA,EAAMC,UAAe,OAAJD,QAAI,IAAJA,GAAU,QAAN6H,EAAJ7H,EAAMA,YAAI,IAAA6H,OAAN,EAAJA,EAAYjF,QAAS,GACtC8C,EAAgB1F,EAAKA,KAAK,GAC9B,IACDE,OAAMC,GAAKC,QAAQC,MAAMF,IAChC,GACD,CAAQ,OAAPmG,QAAO,IAAPA,OAAO,EAAPA,EAASE,KAAa,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASI,SAAiB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASM,OAAQX,IAEvD,MAAM6B,GAAkBvH,IAAe,IAAd,KAAEP,GAAMO,EAE7B,OACIpF,EAAAA,EAAAA,KAAC2J,EAAAA,EAAI,CAACiD,UAAWC,EAAAA,EAAO3J,QAAQ,WAAWnC,GAAI,CAAE+L,GAAI,GAAI/M,UACrDD,EAAAA,EAAAA,MAAA,OAAKc,UAAU,MAAKb,SAAA,EAChBC,EAAAA,EAAAA,KAAA,OAAKY,UAAU,8CAA6Cb,UACxDC,EAAAA,EAAAA,KAAC+M,EAAAA,EAAkB,CAACnN,IAAS,OAAJiF,QAAI,IAAJA,OAAI,EAAJA,EAAMmI,SAASjN,UACpCC,EAAAA,EAAAA,KAACiN,EAAAA,EAAS,CACNL,UAAU,MACV7L,GAAI,CAAEQ,MAAO,IAAKU,OAAQ,KAC1BiL,MAAW,OAAJrI,QAAI,IAAJA,OAAI,EAAJA,EAAMmI,SACb7L,IAAI,0BAKhBnB,EAAAA,EAAAA,KAAA,OAAKY,UAAU,mEAAkEb,UAC7ED,EAAAA,EAAAA,MAACiK,EAAAA,EAAW,CAAAhK,SAAA,EAERC,EAAAA,EAAAA,KAAA,MACIY,UAAU,4DACVT,QAASA,KAAO,IAADgN,EAAAC,EACkEC,EAAAC,EAArE,OAAJzI,QAAI,IAAJA,GAAuB,QAAnBsI,EAAJtI,EAAM0I,yBAAiB,IAAAJ,GAAvBA,EAAyBK,UAAgB,OAAJ3I,QAAI,IAAJA,GAAuB,QAAnBuI,EAAJvI,EAAM0I,yBAAiB,IAAAH,GAAvBA,EAAyBK,UAC9DC,OAAOjO,KAAK,mDAADiF,OAAwD,OAAJG,QAAI,IAAJA,GAAuB,QAAnBwI,EAAJxI,EAAM0I,yBAAiB,IAAAF,OAAnB,EAAJA,EAAyBG,SAAQ,KAAA9I,OAAQ,OAAJG,QAAI,IAAJA,GAAuB,QAAnByI,EAAJzI,EAAM0I,yBAAiB,IAAAD,OAAnB,EAAJA,EAAyBG,WAAa,UAElI,OAAJ5I,QAAI,IAAJA,GAAAA,EAAM8I,UAAgB,OAAJ9I,QAAI,IAAJA,GAAAA,EAAM+I,WACxBF,OAAOjO,KAAK,mDAADiF,OAAwD,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAM8I,SAAQ,KAAAjJ,OAAQ,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAM+I,WAAa,SAE5G,EACF7N,SAEG,OAAJ8E,QAAI,IAAJA,OAAI,EAAJA,EAAMsE,iBAEXrJ,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EAAGC,EAAAA,EAAAA,KAAC6N,EAAAA,EAAU,CAACjN,UAAU,uBAAuB,IAAM,OAAJiE,QAAI,IAAJA,OAAI,EAAJA,EAAMuE,sBACxDtJ,EAAAA,EAAAA,MAAA,KAAGc,UAAU,SAAQb,SAAA,CAAC,IAAM,OAAJ8E,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,aAC9BhO,EAAAA,EAAAA,MAAA,KAAGc,UAAU,SAAQb,SAAA,CAAC,UAAY,OAAJ8E,QAAI,IAAJA,OAAI,EAAJA,EAAMkJ,mBACpCjO,EAAAA,EAAAA,MAAA,KAAGc,UAAU,gBAAeb,SAAA,EAACC,EAAAA,EAAAA,KAACgO,EAAAA,EAAM,CAACpN,UAAU,uBAAuB,IAAM,OAAJiE,QAAI,IAAJA,OAAI,EAAJA,EAAMoJ,mBAC9EnO,EAAAA,EAAAA,MAAA,KAAGoO,KAAI,OAAAxJ,OAAa,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMsJ,WAAYpO,SAAA,EAACC,EAAAA,EAAAA,KAACoO,EAAAA,EAAI,CAACxN,UAAU,wBAC/CZ,EAAAA,EAAAA,KAAA,QAAMY,UAAU,OAAMb,SAAM,OAAJ8E,QAAI,IAAJA,OAAI,EAAJA,EAAMsJ,gBAGlCrO,EAAAA,EAAAA,MAAA,KAAGc,UAAU,2BAA0Bb,SAAA,CAAC,YACtB,OAAJ8E,QAAI,IAAJA,GAAAA,EAAMwJ,aAAe,IAAIC,KAAS,OAAJzJ,QAAI,IAAJA,OAAI,EAAJA,EAAMwJ,cAAcE,mBAAmB,SAAW,WAAW,cAEhG,OAAJ1J,QAAI,IAAJA,OAAI,EAAJA,EAAM2J,sBAMpB,EAmBTC,GAAmBA,KACrBxD,GAASjJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIgJ,GAAM,IAAEE,cAAc,KACrCqB,GAAsB,IACtBF,IAAkBrK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACb2J,IAAiB,IACpBG,YAAoB,OAAPX,QAAO,IAAPA,OAAO,EAAPA,EAASE,KACtBlC,cAAsB,OAAPgC,QAAO,IAAPA,OAAO,EAAPA,EAASG,WAE5BmB,IAAU,EAAM,EA+BdiC,GAA8BC,IAAe,IAADC,EAE9C,OAAa,QAANA,GADwB,OAAnBpE,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBqE,QAAOxJ,GAAKyJ,OAAQ,OAADzJ,QAAC,IAADA,OAAC,EAADA,EAAGc,WAAa2I,OAAOH,MAChE,UAAE,IAAAC,OAAA,EAANA,EAAQvI,mBAAoB,CAAC,EAGlC0I,GAAuBJ,IAAe,IAADK,EAEvC,OAAa,QAANA,GADwB,OAAnBxE,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBqE,QAAOxJ,GAAKyJ,OAAQ,OAADzJ,QAAC,IAADA,OAAC,EAADA,EAAGc,WAAa2I,OAAOH,MAChE,UAAE,IAAAK,OAAA,EAANA,EAAQtF,UAAW,IAAI4E,IAAM,EAGlCW,GAAcjG,IAAY,IAADkG,EAAAC,EAAA,IAAV,EAAE9J,GAAG2D,EACtB,MAAOvJ,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,GAEjC,OACIG,EAAAA,EAAAA,MAAA,OAAKc,UAAU,SAAQb,SAAA,EACnBD,EAAAA,EAAAA,MAAA,OAAKc,UAAU,qDAAoDb,SAAA,EAE/DC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACwG,KAAK,QAAQzG,UAAU,OAAOT,QAASA,IAAMT,GAASD,GAAMM,SACnEN,GAAOO,EAAAA,EAAAA,KAACoP,EAAAA,EAAU,KAAMpP,EAAAA,EAAAA,KAACqP,EAAAA,EAAU,OAGxCvP,EAAAA,EAAAA,MAAA,QAAMc,UAAU,cAAab,SAAA,CAAC,eAE1BC,EAAAA,EAAAA,KAAA,QAAMY,UAAU,oBAAmBb,SAE1B,OAADsF,QAAC,IAADA,GAAAA,EAAGwG,QACG,IAAIyC,KAAM,OAADjJ,QAAC,IAADA,OAAC,EAADA,EAAGwG,SAAS0C,mBAAmB,QAAS,CAAEe,IAAK,UAAWC,MAAO,UAAWC,KAAM,YAC3F,QAGdxP,EAAAA,EAAAA,KAAA,SAAM,mBAENF,EAAAA,EAAAA,MAAA,QAAMc,UAAU,oBAAmBb,SAAA,CAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAGoK,aAAa,OAAQ,KACzD,OAADpK,QAAC,IAADA,GAAe,QAAd6J,EAAD7J,EAAGqK,oBAAY,IAAAR,OAAd,EAADA,EAAiBzH,OAAO,SAG/BzH,EAAAA,EAAAA,KAAA,QAAMY,UAAU,OAAMb,UAClBC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACwG,KAAK,QAAQlH,QAASA,KAAO,IAADwP,EACpClD,IAAU,GACVJ,IAAkBrK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACboK,IAAe,IAClBR,WAAwB,OAAZtB,QAAY,IAAZA,OAAY,EAAZA,EAAcsB,WAC1BC,QAAS,IAAIyC,KAAM,OAADjJ,QAAC,IAADA,OAAC,EAADA,EAAGwG,SAAS+D,cAAcC,MAAM,KAAK,GACvD/D,YAAyB,OAAZxB,QAAY,IAAZA,OAAY,EAAZA,EAAcwB,YAC3B3C,cAA2B,OAAZmB,QAAY,IAAZA,OAAY,EAAZA,EAAcnB,cAC7B4C,UAAY,OAAD1G,QAAC,IAADA,OAAC,EAADA,EAAG0G,UACdC,WAAmB,OAAP/H,QAAO,IAAPA,OAAO,EAAPA,EAASgI,OACrBE,MAAQ,OAAD9G,QAAC,IAADA,OAAC,EAADA,EAAG8G,SAEdI,GAAsB,IAAK,OAADlH,QAAC,IAADA,GAAe,QAAdsK,EAADtK,EAAGqK,oBAAY,IAAAC,OAAd,EAADA,EAAiBlH,KAAIqH,IAAE,CAC7CC,WAAc,OAAFD,QAAE,IAAFA,OAAE,EAAFA,EAAI3J,QAChB6J,OAAU,OAAFF,QAAE,IAAFA,OAAE,EAAFA,EAAIE,aAEhB/E,GAASjJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIgJ,GAAM,IAAEE,cAAc,IAAO,EAC9CnL,UACEC,EAAAA,EAAAA,KAACiQ,EAAAA,EAAI,CAACrP,UAAU,4BAO5BZ,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CAACC,GAAIxI,EAAM0I,eAAa,EAAApI,UAC7BC,EAAAA,EAAAA,KAAA,OAAKY,UAAU,wBAAuBb,UAClCD,EAAAA,EAAAA,MAAA,SAAOc,UAAU,QAAOb,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAD,UACID,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAC,SAC7BC,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAC,aAC7BC,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAC,mBAGrCC,EAAAA,EAAAA,KAAA,SAAAD,SACM,OAADsF,QAAC,IAADA,GAAe,QAAd8J,EAAD9J,EAAGqK,oBAAY,IAAAP,OAAd,EAADA,EAAiB1G,KAAI,CAACyH,EAAIC,KACvBrQ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAEoQ,EAAK,KACnCnQ,EAAAA,EAAAA,KAAA,MAAIY,UAAU,kCAAiCb,SAAI,OAAFmQ,QAAE,IAAFA,OAAE,EAAFA,EAAIE,eACrDpQ,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAI,OAAFmQ,QAAE,IAAFA,OAAE,EAAFA,EAAIF,WAH7BG,gBAU3B,EAWd,OAPA3L,EAAAA,EAAAA,YAAU,KACN,MAAM6L,EAA0B,OAAnB7F,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBqE,QAAOxJ,GAAKyJ,OAAQ,OAADzJ,QAAC,IAADA,OAAC,EAADA,EAAGgB,kBAAoB,IAC5EsE,EAA+B0F,EAAK,GACrC,CAAC7F,KAKA1K,EAAAA,EAAAA,MAAAsH,EAAAA,SAAA,CAAArH,SAAA,EAEID,EAAAA,EAAAA,MAAA,OAAKc,UAAU,WAAUb,SAAA,EAErBD,EAAAA,EAAAA,MAAA,OAAKc,UAAU,6BAA4Bb,SAAA,EACvCC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,cACPC,EAAAA,EAAAA,KAACsQ,EAAAA,GAAM,CACHlI,MAAO,CAAEA,MAAc,OAAP+C,QAAO,IAAPA,OAAO,EAAPA,EAASE,KAAMkF,MAAc,OAAPpF,QAAO,IAAPA,OAAO,EAAPA,EAASG,SAC/CjD,SAAWrD,IACPoG,GAAUpJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAImJ,GAAO,IAAEE,KAAMrG,EAAEoD,MAAOkD,QAAStG,EAAEuL,SACnDlE,IAAkBrK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIoK,IAAe,IAAEN,YAAa9G,EAAEoD,MAAOe,cAAenE,EAAEuL,QAAQ,EAE5FC,QAAS,CACL,CAAEpI,MAAO,GAAImI,MAAO,mBACjB7K,EAAU+C,KAAIgI,IAAG,CAAOrI,MAAU,OAAHqI,QAAG,IAAHA,OAAG,EAAHA,EAAK3E,YAAayE,MAAU,OAAHE,QAAG,IAAHA,OAAG,EAAHA,EAAKtH,mBAEpEuH,OAAQ9O,EAAAA,GACR+O,cAAc,EACdC,YAAa,sBAIrB9Q,EAAAA,EAAAA,MAAA,OAAKc,UAAU,6BAA4Bb,SAAA,EACvCC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eACPC,EAAAA,EAAAA,KAAA,SACI6Q,KAAK,OACLxI,SAAUrD,GAAKoG,GAAUpJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAImJ,GAAO,IAAEI,SAAUvG,EAAEsD,OAAOF,SAC3DxH,UAAU,WACVwH,MAAO+C,EAAQI,SAAW,IAAI+C,KAAKnD,EAAQI,UAAUqE,cAAcC,MAAM,KAAK,GAAK,SAI3F/P,EAAAA,EAAAA,MAAA,OAAKc,UAAU,6BAA4Bb,SAAA,EACvCC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aACPC,EAAAA,EAAAA,KAAA,SACI6Q,KAAK,OACLxI,SAAUrD,GAAKoG,GAAUpJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAImJ,GAAO,IAAEM,OAAQzG,EAAEsD,OAAOF,SACzDxH,UAAU,WACVwH,MAAO+C,EAAQM,OAAS,IAAI6C,KAAKnD,EAAQM,QAAQmE,cAAcC,MAAM,KAAK,GAAK,WAO1F1E,EAAQE,OAAQrL,EAAAA,EAAAA,KAAC2M,GAAe,CAAC9H,KAAMyF,IAGvCa,EAAQE,OACLrL,EAAAA,EAAAA,KAAAoH,EAAAA,SAAA,CAAArH,UACID,EAAAA,EAAAA,MAAC6J,EAAAA,EAAI,CAACiD,UAAWC,EAAAA,EAAO3J,QAAQ,WAAWnC,GAAI,CAAE+L,GAAI,GAAI/M,SAAA,EAErDD,EAAAA,EAAAA,MAAA,OAAKc,UAAU,8CAA6Cb,SAAA,EACxDC,EAAAA,EAAAA,KAAA,QAAMY,UAAU,4BAA2Bb,SAAC,mBAC5CC,EAAAA,EAAAA,KAAA,QAAAD,UACIC,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAM,CAACC,WAAW/Q,EAAAA,EAAAA,KAACgR,EAAAA,EAAK,IAAK9N,QAAQ,WAAW/C,QAASA,IAAM8K,GAASjJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIgJ,GAAM,IAAEE,cAAc,KAAQnL,SAAE,cAM1G,OAAZuK,QAAY,IAAZA,GAA2B,QAAfL,EAAZK,EAAc2G,qBAAa,IAAAhH,OAAf,EAAZA,EAA6BxC,QAAS,IACnCzH,EAAAA,EAAAA,KAAC+J,EAAAA,EAAW,CAACnJ,UAAU,OAAOG,GAAI,CAAEK,UAAW,OAAQ8P,UAAW,QAASnR,SAC1D,OAAZuK,QAAY,IAAZA,GAA2B,QAAfJ,EAAZI,EAAc2G,qBAAa,IAAA/G,OAAf,EAAZA,EAA6BzB,KAAI,CAACpD,EAAGmE,KAClCxJ,EAAAA,EAAAA,KAACiP,GAAW,CAAC5J,EAAGA,GAAQmE,aAUxC,OAAP2B,QAAO,IAAPA,OAAO,EAAPA,EAASE,QACNvL,EAAAA,EAAAA,MAAC6J,EAAAA,EAAI,CAACiD,UAAWC,EAAAA,EAAO3J,QAAQ,WAAWnC,GAAI,CAAE+L,GAAI,GAAI/M,SAAA,EACrDD,EAAAA,EAAAA,MAAA,OAAKc,UAAU,mDAAkDb,SAAA,EAC7DD,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,iBAEFD,EAAAA,EAAAA,MAAA,QAAMO,MAAO,CAAEmC,WAAY,SAAUb,SAAU,QAAS5B,SAAA,CAAC,eAAwC,OAA3B2K,QAA2B,IAA3BA,OAA2B,EAA3BA,EAA6BjD,OAAO,YAE9G3H,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,WACC2H,EAAAA,EAAAA,IAAagD,EAA4ByG,QAAO,CAACC,EAAKC,IAAYD,EAAOC,EAAQhL,iBAAmBgL,EAAQ/K,WAAY,WAIvG,OAA3BoE,QAA2B,IAA3BA,OAA2B,EAA3BA,EAA6BjD,QAAS,IACnCzH,EAAAA,EAAAA,KAAC+J,EAAAA,EAAW,CAAChJ,GAAI,CAAEK,UAAW,OAAQ8P,UAAW,QAASnR,UACtDC,EAAAA,EAAAA,KAAA,OAAKY,UAAU,mBAAkBb,UAC7BD,EAAAA,EAAAA,MAAA,SAAOc,UAAU,QAAOb,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAAD,SACK,CAAC,MAAO,eAAgB,OAAQ,WAAY,OAAQ,SAAS0I,KAAIpD,IAC9DrF,EAAAA,EAAAA,KAAA,MAAIY,UAAU,2BAA0Bb,SAAUsF,GAAJA,UAK1DrF,EAAAA,EAAAA,KAAA,SAAAD,SACgC,OAA3B2K,QAA2B,IAA3BA,OAA2B,EAA3BA,EAA6BjC,KAAI,CAACpD,EAAGmE,KAClC1J,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAEyJ,EAAI,KAClCxJ,EAAAA,EAAAA,KAAA,MAAIY,UAAU,eAAcb,SAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAGyB,gBACjC9G,EAAAA,EAAAA,KAAA,MAAIY,UAAU,2BAA0Bb,UAAE0J,EAAAA,EAAAA,IAAW,OAADpE,QAAC,IAADA,OAAC,EAADA,EAAGqE,YACvD1J,EAAAA,EAAAA,KAAA,MAAIY,UAAU,wBAAuBb,UAAE2H,EAAAA,EAAAA,IAAc,OAADrC,QAAC,IAADA,OAAC,EAADA,EAAGgB,qBACvDrG,EAAAA,EAAAA,KAAA,MAAIY,UAAU,wBAAuBb,SAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAGiB,aAC1CtG,EAAAA,EAAAA,KAAA,MAAIY,UAAU,wBAAuBb,SAC9B,OAADsF,QAAC,IAADA,GAAAA,EAAGgB,kBAAqB,OAADhB,QAAC,IAADA,GAAAA,EAAGiB,WAAaoB,EAAAA,EAAAA,KAAc,OAADrC,QAAC,IAADA,OAAC,EAADA,EAAGiB,YAAa,OAADjB,QAAC,IAADA,OAAC,EAADA,EAAGgB,mBAAoB,MAP3FmD,kBAmBzC1J,EAAAA,EAAAA,MAACS,EAAAA,EAAM,CACHd,KAAY,OAANuL,QAAM,IAANA,OAAM,EAANA,EAAQE,aACd1K,QAASiO,GACT6C,YAAU,EAAAvR,SAAA,EAEVD,EAAAA,EAAAA,MAACa,EAAAA,EAAW,CAAAZ,SAAA,EACRC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACwG,KAAK,QAAQlH,QAASsO,GAAkB7N,UAAU,OAAMb,UAChEC,EAAAA,EAAAA,KAACuR,EAAAA,EAAS,MAEb/E,GAAS,SAAW,MAAM,sBAC3BxM,EAAAA,EAAAA,KAAA,QAAMY,UAAU,oBAAmBb,SAAiB,OAAfqM,SAAe,IAAfA,QAAe,EAAfA,GAAiBjD,oBAE1DrJ,EAAAA,EAAAA,MAACmB,EAAAA,EAAa,CAACL,UAAU,WAAUb,SAAA,EAE/BD,EAAAA,EAAAA,MAAA,OAAKc,UAAU,yBAAwBb,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,UACPC,EAAAA,EAAAA,KAAA,SACI6Q,KAAK,OACLzI,MAAsB,OAAfgE,SAAe,IAAfA,IAAAA,GAAiBP,QAAU,IAAIyC,KAAoB,OAAflC,SAAe,IAAfA,QAAe,EAAfA,GAAiBP,SAAS+D,cAAcC,MAAM,KAAK,GAAK,GACnGxH,SAAUrD,GAAKqH,IAAkBrK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIoK,IAAe,IAAEP,QAAS7G,EAAEsD,OAAOF,SAC1ExH,UAAU,WAAW4Q,UAAQ,QAIrC1R,EAAAA,EAAAA,MAAC2R,EAAAA,GAAU,CAACrJ,MAAOwC,EAAS7K,SAAA,EAExBC,EAAAA,EAAAA,KAAC0R,EAAAA,EAAG,CAAC3Q,GAAI,CAAE2B,aAAc,EAAGiP,YAAa,WAAY5R,UACjDC,EAAAA,EAAAA,KAAC4R,EAAAA,EAAO,CACJC,eAAe,cACfxJ,SAAUA,CAACrD,EAAG8M,IAAMjH,EAAYiH,GAChC5O,QAAQ,aACR6O,cAAc,OAAMhS,SAEX,OAARqK,QAAQ,IAARA,OAAQ,EAARA,EAAU3B,KAAI,CAACpD,EAAGmE,KACfxJ,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CAEAjR,GAAIkR,OAAOrH,KAAcqH,OAAQ,OAAD5M,QAAC,IAADA,OAAC,EAADA,EAAG6M,cAAgB,CAAE1Q,gBAAiB,WAAc,CAAC,EACrF+O,MAAQ,OAADlL,QAAC,IAADA,OAAC,EAADA,EAAG8M,UACV/J,MAAO6J,OAAQ,OAAD5M,QAAC,IAADA,OAAC,EAADA,EAAG6M,eAHZ1I,SASZ,OAARY,QAAQ,IAARA,OAAQ,EAARA,EAAU3B,KAAI,CAACpD,EAAGmE,KAAC,IAAA4I,EAAA,OAChBpS,EAAAA,EAAAA,KAACqS,EAAAA,EAAQ,CAASjK,MAAO6J,OAAQ,OAAD5M,QAAC,IAADA,OAAC,EAADA,EAAG6M,cAAenR,GAAI,CAAEuR,EAAG,GAAIvS,UAC3DC,EAAAA,EAAAA,KAAA,OAAKY,UAAU,MAAKb,SACd,OAADsF,QAAC,IAADA,GAAsB,QAArB+M,EAAD/M,EAAGkN,2BAAmB,IAAAH,OAArB,EAADA,EAAwB3J,KAAI,CAACyH,EAAIC,KAAE,IAAAqC,EAAA,OAChCxS,EAAAA,EAAAA,KAAA,OAAKY,UAAU,wBAAuBb,UAClCD,EAAAA,EAAAA,MAAC6J,EAAAA,EAAI,CAAC5I,GAAI,CAAE0R,QAAS,QAAS1S,SAAA,EAE1BC,EAAAA,EAAAA,KAACiN,EAAAA,EAAS,CACNL,UAAU,MACV7L,GAAI,CAAEQ,MAAO,KACb2L,MAAS,OAAFgD,QAAE,IAAFA,OAAE,EAAFA,EAAIwC,gBACXvR,IAAI,SAGRrB,EAAAA,EAAAA,MAACiK,EAAAA,EAAW,CAAChJ,GAAI,CAAE4R,SAAU,KAAM5S,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIY,WAAWgS,EAAAA,EAAAA,IAAelE,GAA6B,OAAFwB,QAAE,IAAFA,OAAE,EAAFA,EAAIH,aAAe,EAAG,IAAM,eAAehQ,SAC7F,OAAFmQ,QAAE,IAAFA,OAAE,EAAFA,EAAIpJ,gBAET9G,EAAAA,EAAAA,KAAA,KAAAD,UAAM,OAAFmQ,QAAE,IAAFA,OAAE,EAAFA,EAAI2C,qBAAsB,OAAU,OAAF3C,QAAE,IAAFA,OAAE,EAAFA,EAAI4C,QAE1ChT,EAAAA,EAAAA,MAAA,OAAKc,UAAU,OAAMb,SAAA,EACjBC,EAAAA,EAAAA,KAAA,SAAOY,UAAU,aAAYb,SAAC,mBAC9BC,EAAAA,EAAAA,KAAA,SACIK,MAAO,CAAEK,SAAU,KACnBmQ,KAAK,SACLjQ,UAAU,WACVyH,SAAUrD,GAnVnC+N,EAAC7M,EAAWkC,EAAO4K,EAAMC,KACpD,MAAMC,EAAe5G,GAAmB6G,WAAUC,GAAQA,EAAKrD,aAAe7J,IAE9E,IAAsB,IAAlBgN,EAAqB,CACrB,MAAMG,EAAgB,IAAI/G,IAC1B+G,EAAcH,GAAclD,OAAS5H,EACrCiL,EAAcH,GAAcI,OAASL,EACrCI,EAAcH,GAAcK,WAAaP,EAEzCzG,GAAsB8G,EAC1B,MACI9G,IAAsBiH,GAAc,IAAIA,EAAY,CAAEzD,WAAY7J,EAAW8J,OAAQ5H,EAAOkL,OAAQL,EAAeM,WAAYP,KACnI,EAwUwDD,CACM,OAAF7C,QAAE,IAAFA,OAAE,EAAFA,EAAIH,WACJ/K,EAAEsD,OAAOF,MACT2G,GAAsB,OAAFmB,QAAE,IAAFA,OAAE,EAAFA,EAAIH,YACxBrB,GAA6B,OAAFwB,QAAE,IAAFA,OAAE,EAAFA,EAAIH,aAGvC3H,OAE2D,QADvDoK,EAAAlG,GAAmBmH,MAAKC,GACpB5E,OAAU,OAAH4E,QAAG,IAAHA,OAAG,EAAHA,EAAK3D,cAAgBjB,OAAS,OAAFoB,QAAE,IAAFA,OAAE,EAAFA,EAAIH,qBAAY,IAAAyC,OAAA,EADvDA,EACyDxC,SACtD,MAGXhQ,EAAAA,EAAAA,KAAA,SAAOY,UAAU,oBAAmBb,SAE5B2O,GAA6B,OAAFwB,QAAE,IAAFA,OAAE,EAAFA,EAAIH,aAEvBjQ,EAAAA,EAAAA,MAAAsH,EAAAA,SAAA,CAAArH,SAAA,CAAE,iBAEEC,EAAAA,EAAAA,KAAA,QAAMY,UAAU,OAAMb,UACjB0J,EAAAA,EAAAA,IAAUsF,GAAsB,OAAFmB,QAAE,IAAFA,OAAE,EAAFA,EAAIH,gBAEvCjQ,EAAAA,EAAAA,MAAA,QAAMc,UAAU,gBAAeb,SAAA,CAAC,KACzB2O,GAA6B,OAAFwB,QAAE,IAAFA,OAAE,EAAFA,EAAIH,YAAY,WAIxD,eAlDcI,EAyDtC,OA5DH3G,EA+DJ,QAInB1J,EAAAA,EAAAA,MAAA,OAAKc,UAAU,kCAAiCb,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eACPC,EAAAA,EAAAA,KAAA,YACIY,UAAU,WACVyH,SAAUrD,GAAKqH,IAAkBrK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIoK,IAAe,IAAEL,UAAW/G,EAAEsD,OAAOF,SAC5EA,MAAsB,OAAfgE,SAAe,IAAfA,QAAe,EAAfA,GAAiBL,UACxBtK,KAAM,WAKlB3B,EAAAA,EAAAA,MAAC6T,EAAAA,EAAa,CAAA5T,SAAA,EACVC,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAM,CAAC3Q,QAASsO,GAAiB1O,SAAC,YACnCC,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAM,CAAC5N,QAAQ,YAAYlC,MAAM,UAAUb,QAhXnCyT,MACC,OAAlBtH,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB7E,QAAS,GAAoB,OAAf2E,SAAe,IAAfA,IAAAA,GAAiBN,aACnDrH,EAAAA,EAAAA,GAAU,CACNjB,QAAQ,iCACRqQ,OAAQrH,GAAS,MAAQ,OACzBsH,UAAQ9R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDoK,IAAe,IAClBF,mBAAoBI,OAEzB1H,MAAKC,IACAA,EAAKC,SACLiP,EAAAA,GAAMjP,QAAY,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMmP,SACpBvF,KACA1D,GAAWD,IAEXiJ,EAAAA,GAAM7O,MAAU,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMmP,QACtB,IACDjP,OAAMC,GAAKC,QAAQC,MAAMF,KAE5B+O,EAAAA,GAAM7O,MAAM,kCAChB,EA4VkFnF,SAAC,oBAGhF,EChfX,EAxC4BkU,KACxB,MAAOrJ,EAAUC,IAAelL,EAAAA,EAAAA,UAAS,GAGzC,OACIK,EAAAA,EAAAA,KAAAoH,EAAAA,SAAA,CAAArH,UACID,EAAAA,EAAAA,MAAC2R,EAAAA,GAAU,CAACrJ,MAAOwC,EAAS7K,SAAA,EACxBC,EAAAA,EAAAA,KAAC0R,EAAAA,EAAG,CAAC3Q,GAAI,CAAE2B,aAAc,EAAGiP,YAAa,WAAY5R,UACjDD,EAAAA,EAAAA,MAAC8R,EAAAA,EAAO,CACJC,eAAe,cACfxJ,SAAUA,CAACrD,EAAG8M,IAAMjH,EAAYiH,GAChC5O,QAAQ,aACR6O,cAAc,OAAMhS,SAAA,EAEpBC,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CACAjR,GAAiB,IAAb6J,EAAiB,CAAEpJ,gBAAiB,WAAc,CAAC,EACvD+O,MAAO,iBACPnI,MAAO,KAEXpI,EAAAA,EAAAA,KAACgS,EAAAA,EAAG,CACAjR,GAAiB,IAAb6J,EAAiB,CAAEpJ,gBAAiB,WAAc,CAAC,EACvD+O,MAAO,aACPnI,MAAO,UAKnBpI,EAAAA,EAAAA,KAACqS,EAAAA,EAAQ,CAACjK,MAAO,EAAGrH,GAAI,CAAEuR,EAAG,EAAG4B,GAAI,GAAInU,UACpCC,EAAAA,EAAAA,KAACgK,EAAoB,OAEzBhK,EAAAA,EAAAA,KAACqS,EAAAA,EAAQ,CAACjK,MAAO,EAAGrH,GAAI,CAAEuR,EAAG,EAAG4B,GAAI,GAAInU,UACpCC,EAAAA,EAAAA,KAACgE,EAAoB,UAI9B,C","sources":["Components/imagePreview.jsx","Components/tablecolumn.js","Pages/UserModule/retailer/closingStockAreaBasedReport.jsx","Pages/UserModule/retailer/closingStockRetailerBasedReport.jsx","Pages/UserModule/retailer/closingStockReport.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle, IconButton, Tooltip } from '@mui/material';\r\nimport { Close } from '@mui/icons-material';\r\n\r\nconst ImagePreviewDialog = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const { url } = props;\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <span>\r\n\r\n            <Tooltip title=\"Tap to Open\">\r\n                <span onClick={handleOpen} style={{ cursor: 'pointer' }}>{props.children}</span>\r\n            </Tooltip>\r\n\r\n            <Dialog open={open} onClose={handleClose} fullWidth maxWidth='lg'>\r\n\r\n                <DialogTitle className='bg-dark text-white d-flex justify-content-between'>\r\n                    <span>Image Preview</span>\r\n                    <IconButton onClick={handleClose}><Close sx={{ color: 'white' }} /></IconButton>\r\n                </DialogTitle>\r\n\r\n                <DialogContent className='bg-dark pb-4 d-flex align-items-center justify-content-center'>\r\n                    <img src={url} alt=\"Preview\" style={{ maxWidth: '100%', maxHeight: '100%' }} />\r\n                </DialogContent>\r\n\r\n                {/* <DialogActions className='bg-dark'>\r\n                    <Button startIcon={<Close />} variant='outlined' color=\"primary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions> */}\r\n\r\n            </Dialog>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default ImagePreviewDialog;","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: '45px',\r\n        background: 'rgba(255, 255, 255, 0.322)'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n            ? '#E2ECF9'\r\n            : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, IconButton, Collapse } from \"@mui/material\";\r\nimport { NumberFormat, LocalDate } from \"../../../Components/functions\";\r\nimport { Add, Remove } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\n\r\n\r\n\r\nconst StockReportAreaBased = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [stockValue, setStockValaue] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/closingStock/areaBased?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setStockValaue(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    const AreaList = ({ o, sno }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const [reportType, setReportType] = useState('RETAILER')\r\n\r\n        const dispContent = (val) => {\r\n            switch (val) {\r\n                case 'RETAILER':\r\n                    return (\r\n                        <table className=\"table mb-0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {['', 'SNo', 'Retailer', 'Products', 'Value'].map((ret, ind) => (\r\n                                        <th key={ind} className=\"fa-14 border\">{ret}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {o?.Retailer?.map((ret, ind) => <RetailerList o={ret} key={ind} sno={ind + 1} />)}\r\n                            </tbody>\r\n                        </table>\r\n                    )\r\n                case 'PRODUCT':\r\n                    return (\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {['SNo', 'Product', 'Quantity', 'Value'].map((ret, ind) => (\r\n                                        <th key={ind} className=\"fa-14 border text-center\">{ret}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {uniqueProductsWorth?.map((up, upi) => (\r\n                                    <tr key={upi}>\r\n                                        <td className=\"fa-13 border text-center\">{upi + 1}</td>\r\n                                        <td className=\"fa-13 border\">{up?.Product_Name}</td>\r\n                                        <td className=\"fa-13 border text-end\">{NumberFormat(up?.totalQuantity)}</td>\r\n                                        <td className=\"fa-13 border text-end text-primary\">{NumberFormat(up?.totalWorth)}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    )\r\n                default: <></>\r\n            }\r\n        }\r\n\r\n        const areaValue = () => {\r\n            let totalClosingStockValue = 0;\r\n\r\n            o?.Retailer?.forEach(retailer => {\r\n                retailer?.Closing_Stock?.forEach(stock => {\r\n                    totalClosingStockValue += stock.Previous_Balance * stock.Item_Rate;\r\n                });\r\n            });\r\n\r\n            return totalClosingStockValue;\r\n        };\r\n\r\n        const calculateUniqueProductsWorth = (retailers) => {\r\n            const productMap = new Map();\r\n\r\n            retailers?.forEach(retailer => {\r\n                retailer?.Closing_Stock?.forEach(stock => {\r\n                    const productId = stock?.Item_Id;\r\n                    const productWorth = stock?.Previous_Balance * stock?.Item_Rate;\r\n                    const productQuantity = stock?.Previous_Balance;\r\n\r\n                    if (productMap.has(productId)) {\r\n                        const existingProduct = productMap.get(productId);\r\n                        existingProduct.totalWorth += productWorth;\r\n                        existingProduct.totalQuantity += productQuantity;\r\n                    } else {\r\n                        productMap.set(productId, {\r\n                            Item_Id: productId,\r\n                            Product_Name: stock?.Product_Name,\r\n                            totalWorth: productWorth,\r\n                            totalQuantity: productQuantity\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n\r\n            return Array.from(productMap.values());\r\n        };\r\n\r\n        const uniqueProductsWorth = calculateUniqueProductsWorth(o?.Retailer);\r\n\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td className=\"fa-13 border\">\r\n                        <IconButton size=\"small\" onClick={() => setOpen(!open)}>\r\n                            {open ? <Remove sx={{ fontSize: '16px', color: 'red' }} /> : <Add sx={{ fontSize: '16px' }} />}\r\n                        </IconButton>\r\n                    </td>\r\n                    <td className=\"fa-13 border\">{sno}</td>\r\n                    <td className=\"fa-13 border fw-bold text-muted\">{o?.Area_Name ? o?.Area_Name : 'unknown'}</td>\r\n                    <td className=\"fa-13 border text-end\">{uniqueProductsWorth?.length}</td>\r\n                    <td className=\"fa-13 border text-end text-primary fw-bold\">{NumberFormat(areaValue())}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={5} className=\"p-0 border-0\">\r\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n\r\n                            <div className=\"my-3\">\r\n                                <label className=\"w-100 mb-2 text-muted fw-bold\">Report Type</label>\r\n                                <select\r\n                                    value={reportType}\r\n                                    onChange={e => setReportType(e.target.value)}\r\n                                    className=\"cus-inpt w-auto\"\r\n                                >\r\n                                    <option value=\"RETAILER\">RETAILER BASED</option>\r\n                                    <option value=\"PRODUCT\">PRODUCT BASED</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"table-responsive my-2\">\r\n                                {dispContent(reportType)}\r\n                            </div>\r\n                        </Collapse>\r\n                    </td>\r\n                </tr>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const RetailerList = ({ o, sno }) => {\r\n        const [open, setOpen] = useState(false);\r\n\r\n        const overAllValue = () => {\r\n            let totalClosingStockValue = 0;\r\n\r\n            o?.Closing_Stock?.forEach(stock => {\r\n                totalClosingStockValue += stock?.Previous_Balance * stock?.Item_Rate;\r\n            })\r\n\r\n            return totalClosingStockValue;\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td>\r\n                        <IconButton size=\"small\" onClick={() => setOpen(!open)}>\r\n                            {open ? <Remove sx={{ fontSize: '16px', color: 'red' }} /> : <Add sx={{ fontSize: '16px' }} />}\r\n                        </IconButton>\r\n                    </td>\r\n                    <td className=\"fa-13 border\">{sno}</td>\r\n                    <td className=\"fa-13 border\">\r\n                        <span className=\"fw-bold text-muted\">{o?.Retailer_Name}</span> <br />\r\n                        <span className=\"fa-12 text-muted\">{o?.Reatailer_Address}</span>\r\n                    </td>\r\n                    <td className=\"fa-13 border\">{o?.Closing_Stock?.length}</td>\r\n                    <td className=\"fa-13 border\">\r\n                        {NumberFormat(overAllValue())}\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td colSpan={5} className=\"p-0 border-0\">\r\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                            <div className=\"table-responsive my-2\">\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            {['Sno', 'Product Name', 'Date', 'Quantity', 'Rate', 'Value'].map(o => (\r\n                                                <th className=\"fa-14 border text-center\" key={o}>{o}</th>\r\n\r\n                                            ))}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {o?.Closing_Stock?.map((pro, i) => (\r\n                                            <tr key={i}>\r\n                                                <td className=\"fa-14 border\">{i + 1}</td>\r\n                                                <td className=\"fa-14 border\">{pro?.Product_Name}</td>\r\n                                                <td className=\"fa-14 border text-center\">{LocalDate(pro?.Cl_Date)}</td>\r\n                                                <td className=\"fa-14 border text-end\">{NumberFormat(pro?.Previous_Balance)}</td>\r\n                                                <td className=\"fa-14 border text-end\">{pro?.Item_Rate}</td>\r\n                                                <td className=\"fa-14 border text-end\">\r\n                                                    {(pro?.Previous_Balance && pro?.Item_Rate) ? NumberFormat(pro?.Item_Rate * pro?.Previous_Balance) : 0}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </Collapse>\r\n                    </td>\r\n                </tr>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const overAllValue = (data) => {\r\n        let totalClosingStockValue = 0;\r\n\r\n        data?.forEach(area => {\r\n            area?.Retailer?.forEach(retailer => {\r\n                retailer?.Closing_Stock?.forEach(stock => {\r\n                    totalClosingStockValue += stock?.Previous_Balance * stock?.Item_Rate;\r\n                });\r\n            });\r\n        });\r\n\r\n        return totalClosingStockValue;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 pb-2 d-flex align-items-center justify-content-between border-bottom\">\r\n                    <h6 className=\"fa-18\">Closing Stock Reports</h6>\r\n                    <span className=\"fw-bold \">₹ {NumberFormat(overAllValue(stockValue))}</span>\r\n                </div>\r\n                <CardContent>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {['', 'SNo', 'Area', 'Products', 'Value'].map((o, i) => (\r\n                                        <th key={i} className=\"border text-center fa-14\">{o}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {stockValue?.map((o, i) => <AreaList key={i} sno={i + 1} o={o} />)}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default StockReportAreaBased;","import React, { useState, useEffect } from \"react\";\r\nimport { IconButton, Dialog, DialogActions, DialogContent, DialogTitle, Card, Box, CardContent, CardMedia, Button, Tab, Paper, Collapse } from \"@mui/material\";\r\nimport { Person, Call, LocationOn, ArrowBack, Queue, Edit, ExpandLess, ExpandMore } from \"@mui/icons-material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from 'react-toastify';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport { isGraterNumber, LocalDate, NumberFormat, ISOString, getPreviousDate,  } from '../../../Components/functions';\r\nimport ImagePreviewDialog from \"../../../Components/imagePreview\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\n\r\n\r\nconst RetailerClosingStock = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [retailerInfo, setRetailerInfo] = useState({});\r\n    const [productClosingStock, setProductClosingStock] = useState([]);\r\n    const [filteredProductClosingStock, setFilteredProductClosingStock] = useState([])\r\n    const [tabValue, setTabValue] = useState('1');\r\n    const [reload, setReload] = useState(false);\r\n\r\n    const [dialog, setDialog] = useState({\r\n        closingStock: false\r\n    });\r\n    const [filters, setFilters] = useState({\r\n        cust: '',\r\n        custGet: 'Select Retailer',\r\n        Fromdate: getPreviousDate(10),\r\n        Todate: ISOString(),\r\n    });\r\n\r\n    const initialStockValue = {\r\n        Company_Id: storage?.Company_id,\r\n        ST_Date: ISOString(),\r\n        Retailer_Id: '',\r\n        Retailer_Name: '',\r\n        Narration: '',\r\n        Created_by: storage?.UserId,\r\n        Product_Stock_List: [],\r\n        ST_Id: ''\r\n    }\r\n\r\n    const [stockInputValue, setStockInputValue] = useState(initialStockValue)\r\n    const [closingStockValues, setClosingStockValues] = useState([]);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/products/grouped?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProducts(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    useEffect(() => {\r\n        if (stockInputValue?.Retailer_Id) {\r\n            fetchLink({\r\n                address: `masters/retailers/closingStock/productBased?Retailer_Id=${stockInputValue?.Retailer_Id}&reqDate=${stockInputValue?.ST_Date}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setProductClosingStock(data.data)\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [stockInputValue?.ST_Date, stockInputValue?.Retailer_Id, reload])\r\n\r\n    useEffect(() => {\r\n        setRetailerInfo({})\r\n        if (filters?.cust) {\r\n            fetchLink({\r\n                address: `masters/retailers/info?Retailer_Id=${filters?.cust}&Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}`\r\n            }).then(data => {\r\n                if (data?.success && data?.data?.length > 0) {\r\n                    setRetailerInfo(data.data[0])\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [filters?.cust, filters?.Fromdate, filters?.Todate, reload])\r\n\r\n    const RetailerDetails = ({ data }) => {\r\n\r\n        return (\r\n            <Card component={Paper} variant='outlined' sx={{ mt: 2 }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-2 col-md-3 d-flex align-items-center\">\r\n                        <ImagePreviewDialog url={data?.imageUrl} >\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                sx={{ width: 200, height: 200 }}\r\n                                image={data?.imageUrl}\r\n                                alt=\"retailer_picture\"\r\n                            />\r\n                        </ImagePreviewDialog>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-10 col-md-9 d-flex flex-column justify-content-center p-2\" >\r\n                        <CardContent>\r\n\r\n                            <h6\r\n                                className=\"mb-2 fa-18 fw-bold text-primary text-decoration-underline\"\r\n                                onClick={() => {\r\n                                    if (data?.VERIFIED_LOCATION?.latitude && data?.VERIFIED_LOCATION?.longitude) {\r\n                                        window.open(`https://www.google.com/maps/search/?api=1&query=${data?.VERIFIED_LOCATION?.latitude},${data?.VERIFIED_LOCATION?.longitude}`, '_blank');\r\n                                    } else {\r\n                                        if (data?.Latitude && data?.Longitude) {\r\n                                            window.open(`https://www.google.com/maps/search/?api=1&query=${data?.Latitude},${data?.Longitude}`, '_blank');\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                {data?.Retailer_Name}\r\n                            </h6>\r\n                            <p><LocationOn className=\"fa-14 text-primary\" /> {data?.Reatailer_Address}</p>\r\n                            <p className=\"fa-14 \"> {data?.RouteGet}</p>\r\n                            <p className=\"fa-14 \">Class: {data?.Retailer_Class}</p>\r\n                            <p className=\"text-primary \"><Person className=\"fa-14 text-primary\" /> {data?.Contact_Person}</p>\r\n                            <a href={`tel:${data?.Mobile_No}`}><Call className=\"fa-14 text-primary\" />\r\n                                <span className=\"ps-1\">{data?.Mobile_No}</span>\r\n                            </a>\r\n\r\n                            <p className=\"fw-bold fa-14 text-muted\">\r\n                                Created: {data?.Created_Date ? new Date(data?.Created_Date).toLocaleDateString('en-IN') : '--:--:--'}\r\n                                &nbsp; - &nbsp;\r\n                                {data?.createdBy}\r\n                            </p>\r\n\r\n                        </CardContent>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    const handleStockInputChange = (productId, value, date, previousStock) => {\r\n        const productIndex = closingStockValues.findIndex(item => item.Product_Id === productId);\r\n\r\n        if (productIndex !== -1) {\r\n            const updatedValues = [...closingStockValues];\r\n            updatedValues[productIndex].ST_Qty = value;\r\n            updatedValues[productIndex].PR_Qty = previousStock;\r\n            updatedValues[productIndex].LT_CL_Date = date;\r\n\r\n            setClosingStockValues(updatedValues);\r\n        } else {\r\n            setClosingStockValues(prevValues => [...prevValues, { Product_Id: productId, ST_Qty: value, PR_Qty: previousStock, LT_CL_Date: date }]);\r\n        }\r\n    };\r\n\r\n    const closeStockDialog = () => {\r\n        setDialog({ ...dialog, closingStock: false });\r\n        setClosingStockValues([]);\r\n        setStockInputValue({\r\n            ...initialStockValue,\r\n            Retailer_Id: filters?.cust,\r\n            Retailer_Name: filters?.custGet\r\n        });\r\n        setIsEdit(false)\r\n    }\r\n\r\n    const postClosingStock = () => {\r\n        if (closingStockValues?.length > 0 && stockInputValue?.Retailer_Id) {\r\n            fetchLink({\r\n                address: `masters/retailers/closingStock`,\r\n                method: isEdit ? 'PUT' : 'POST',\r\n                bodyData: {\r\n                    ...stockInputValue,\r\n                    Product_Stock_List: closingStockValues\r\n                }\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    toast.success(data?.message);\r\n                    closeStockDialog();\r\n                    setReload(!reload)\r\n                } else {\r\n                    toast.error(data?.message)\r\n                }\r\n            }).catch(e => console.error(e))\r\n        } else {\r\n            toast.error('Enter any one valid stock value')\r\n        }\r\n    }\r\n\r\n    // const getClosingStockCount = (productID) => {\r\n    //     const obj = productClosingStock?.filter(o => Number(o?.Item_Id) === Number(productID));\r\n    //     return obj[0]?.Previous_Balance ? 'Previous: ( ' + obj[0]?.Previous_Balance + ' )' : ''\r\n    // }\r\n\r\n    const getClosingStockCountNumber = (productID) => {\r\n        const obj = productClosingStock?.filter(o => Number(o?.Item_Id) === Number(productID));\r\n        return obj[0]?.Previous_Balance || 0\r\n    }\r\n\r\n    const getClosingStockDate = (productID) => {\r\n        const obj = productClosingStock?.filter(o => Number(o?.Item_Id) === Number(productID));\r\n        return obj[0]?.Cl_Date || new Date()\r\n    }\r\n\r\n    const GroupByDate = ({ o }) => {\r\n        const [open, setOpen] = useState(false);\r\n\r\n        return (\r\n            <div className=\" pt-3 \">\r\n                <div className=\"fa-14 fw-bold text-muted d-flex align-items-center\">\r\n\r\n                    <IconButton size=\"small\" className=\"me-2\" onClick={() => setOpen(!open)} >\r\n                        {open ? <ExpandLess /> : <ExpandMore />}\r\n                    </IconButton>\r\n\r\n                    <span className=\"flex-grow-1\">\r\n                        Date:&emsp;\r\n                        <span className=\"ps-1 text-primary\">\r\n                            {\r\n                                o?.ST_Date\r\n                                    ? new Date(o?.ST_Date).toLocaleDateString('en-IN', { day: '2-digit', month: '2-digit', year: 'numeric' })\r\n                                    : null\r\n                            }\r\n                        </span>\r\n                        <br />\r\n                        By:&emsp;&emsp;\r\n                        <span className=\"ps-1 text-primary\">{o?.CreatedByGet} </span>\r\n                        ( {o?.ProductCount?.length} )\r\n                    </span>\r\n\r\n                    <span className=\"ps-1\">\r\n                        <IconButton size=\"small\" onClick={() => {\r\n                            setIsEdit(true);\r\n                            setStockInputValue({\r\n                                ...stockInputValue,\r\n                                Company_Id: retailerInfo?.Company_Id,\r\n                                ST_Date: new Date(o?.ST_Date).toISOString().split('T')[0],\r\n                                Retailer_Id: retailerInfo?.Retailer_Id,\r\n                                Retailer_Name: retailerInfo?.Retailer_Name,\r\n                                Narration: o?.Narration,\r\n                                Created_by: storage?.UserId,\r\n                                ST_Id: o?.ST_Id,\r\n                            })\r\n                            setClosingStockValues([...o?.ProductCount?.map(eo => ({\r\n                                Product_Id: eo?.Item_Id,\r\n                                ST_Qty: eo?.ST_Qty\r\n                            }))]);\r\n                            setDialog({ ...dialog, closingStock: true })\r\n                        }}>\r\n                            <Edit className=\"fa-16 text-dark\" />\r\n                        </IconButton>\r\n                    </span>\r\n\r\n                </div>\r\n\r\n\r\n                <Collapse in={open} unmountOnExit>\r\n                    <div className=\"table-responsive mt-2\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"border fa-14\">SNo</th>\r\n                                    <th className=\"border fa-14\">Product</th>\r\n                                    <th className=\"border fa-14\">Quantity</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {o?.ProductCount?.map((oo, ii) => (\r\n                                    <tr key={ii}>\r\n                                        <td className=\"border fa-14\">{ii + 1}</td>\r\n                                        <td className=\"border fa-14 fw-bold text-muted\">{oo?.ProductName}</td>\r\n                                        <td className=\"border fa-14\">{oo?.ST_Qty}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const filt = productClosingStock?.filter(o => Number(o?.Previous_Balance) > 0)\r\n        setFilteredProductClosingStock(filt)\r\n    }, [productClosingStock])\r\n\r\n    // useEffect(() => console.log(closingStockValues), [closingStockValues])\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"row mb-2\">\r\n\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6\">\r\n                    <label>Retailer</label>\r\n                    <Select\r\n                        value={{ value: filters?.cust, label: filters?.custGet }}\r\n                        onChange={(e) => {\r\n                            setFilters({ ...filters, cust: e.value, custGet: e.label });\r\n                            setStockInputValue({ ...stockInputValue, Retailer_Id: e.value, Retailer_Name: e.label })\r\n                        }}\r\n                        options={[\r\n                            { value: '', label: 'All Retailer' },\r\n                            ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                        ]}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        placeholder={\"Retailer Name\"}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6\">\r\n                    <label>From Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                        className=\"cus-inpt\"\r\n                        value={filters.Fromdate ? new Date(filters.Fromdate).toISOString().split('T')[0] : ''}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6\">\r\n                    <label>To Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                        className=\"cus-inpt\"\r\n                        value={filters.Todate ? new Date(filters.Todate).toISOString().split('T')[0] : ''}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* retailer details */}\r\n            {filters.cust && <RetailerDetails data={retailerInfo} />}\r\n\r\n            {/* closing Stock Entry */}\r\n            {filters.cust && (\r\n                <>\r\n                    <Card component={Paper} variant='outlined' sx={{ mt: 2 }}>\r\n\r\n                        <div className=\"p-3 d-flex align-items-center border-bottom\">\r\n                            <span className=\"fa-18 fw-bold flex-grow-1\">Closing Stock</span>\r\n                            <span>\r\n                                <Button startIcon={<Queue />} variant='outlined' onClick={() => setDialog({ ...dialog, closingStock: true })} >\r\n                                    Add\r\n                                </Button>\r\n                            </span>\r\n                        </div>\r\n\r\n                        {retailerInfo?.ClosingStocks?.length > 0 && (\r\n                            <CardContent className=\"pt-0\" sx={{ maxHeight: '50vh', overflowY: 'auto' }}>\r\n                                {retailerInfo?.ClosingStocks?.map((o, i) => (\r\n                                    <GroupByDate o={o} key={i} />\r\n                                ))}\r\n                            </CardContent>\r\n                        )}\r\n\r\n                    </Card>\r\n                </>\r\n            )}\r\n\r\n            {/* stock abstract */}\r\n            {filters?.cust && (\r\n                <Card component={Paper} variant='outlined' sx={{ mt: 2 }}>\r\n                    <div className=\"p-3 d-flex justify-content-between fa-18 fw-bold\">\r\n                        <span>\r\n                            Current Stock\r\n                            <span style={{ fontWeight: 'normal', fontSize: '16px' }}> ( Products {filteredProductClosingStock?.length} )</span>\r\n                        </span>\r\n                        <span>\r\n                            ₹ {NumberFormat(filteredProductClosingStock.reduce((sum, product) => sum + (product.Previous_Balance * product.Item_Rate), 0))}\r\n                        </span>\r\n                    </div>\r\n\r\n                    {filteredProductClosingStock?.length > 0 && (\r\n                        <CardContent sx={{ maxHeight: '50vh', overflowY: 'auto' }}>\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            {['Sno', 'Product Name', 'Date', 'Quantity', 'Rate', 'Value'].map(o => (\r\n                                                <th className=\"fa-14 border text-center\" key={o}>{o}</th>\r\n\r\n                                            ))}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {filteredProductClosingStock?.map((o, i) => (\r\n                                            <tr key={i}>\r\n                                                <td className=\"fa-14 border\">{i + 1}</td>\r\n                                                <td className=\"fa-14 border\">{o?.Product_Name}</td>\r\n                                                <td className=\"fa-14 border text-center\">{LocalDate(o?.Cl_Date)}</td>\r\n                                                <td className=\"fa-14 border text-end\">{NumberFormat(o?.Previous_Balance)}</td>\r\n                                                <td className=\"fa-14 border text-end\">{o?.Item_Rate}</td>\r\n                                                <td className=\"fa-14 border text-end\">\r\n                                                    {(o?.Previous_Balance && o?.Item_Rate) ? NumberFormat(o?.Item_Rate * o?.Previous_Balance) : 0}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </CardContent>\r\n                    )}\r\n                </Card>\r\n            )}\r\n\r\n            <Dialog\r\n                open={dialog?.closingStock}\r\n                onClose={closeStockDialog}\r\n                fullScreen\r\n            >\r\n                <DialogTitle>\r\n                    <IconButton size=\"small\" onClick={closeStockDialog} className=\"me-2\">\r\n                        <ArrowBack />\r\n                    </IconButton>\r\n                    {isEdit ? 'Modify' : 'Add'} Closing Stock For\r\n                    <span className=\"ps-1 text-primary\">{stockInputValue?.Retailer_Name}</span>\r\n                </DialogTitle>\r\n                <DialogContent className=\"bg-light\">\r\n\r\n                    <div className=\"col-xl-3 col-sm-4 mb-4\">\r\n                        <label>Date</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={stockInputValue?.ST_Date ? new Date(stockInputValue?.ST_Date).toISOString().split('T')[0] : ''}\r\n                            onChange={e => setStockInputValue({ ...stockInputValue, ST_Date: e.target.value })}\r\n                            className=\"cus-inpt\" required\r\n                        />\r\n                    </div>\r\n\r\n                    <TabContext value={tabValue}>\r\n\r\n                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                            <TabList\r\n                                indicatorColor='transparant'\r\n                                onChange={(e, n) => setTabValue(n)}\r\n                                variant='scrollable'\r\n                                scrollButtons=\"auto\"\r\n                            >\r\n                                {products?.map((o, i) => (\r\n                                    <Tab\r\n                                        key={i}\r\n                                        sx={String(tabValue) === String(o?.Pro_Group_Id) ? { backgroundColor: '#c6d7eb' } : {}}\r\n                                        label={o?.Pro_Group}\r\n                                        value={String(o?.Pro_Group_Id)}\r\n                                    />\r\n                                ))}\r\n                            </TabList>\r\n                        </Box>\r\n\r\n                        {products?.map((o, i) => (\r\n                            <TabPanel key={i} value={String(o?.Pro_Group_Id)} sx={{ p: 0 }}>\r\n                                <div className=\"row\">\r\n                                    {o?.GroupedProductArray?.map((oo, ii) => (\r\n                                        <div className=\"col-xl-4 col-lg-6 p-2\" key={ii}>\r\n                                            <Card sx={{ display: 'flex' }}>\r\n\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    sx={{ width: 151 }}\r\n                                                    image={oo?.productImageUrl}\r\n                                                    alt=\"Pic\"\r\n                                                />\r\n\r\n                                                <CardContent sx={{ flexGrow: '1' }}>\r\n                                                    <h6 className={isGraterNumber(getClosingStockCountNumber(oo?.Product_Id) || 0, 0) && 'text-primary'}>\r\n                                                        {oo?.Product_Name}\r\n                                                    </h6>\r\n                                                    <p>{oo?.Product_Description + \" - \" + oo?.UOM}</p>\r\n\r\n                                                    <div className=\"py-2\">\r\n                                                        <label className=\"mb-2 w-100\">Closing Stock</label>\r\n                                                        <input\r\n                                                            style={{ maxWidth: 350 }}\r\n                                                            type=\"number\"\r\n                                                            className=\"cus-inpt\"\r\n                                                            onChange={e =>\r\n                                                                handleStockInputChange(\r\n                                                                    oo?.Product_Id,\r\n                                                                    e.target.value,\r\n                                                                    getClosingStockDate(oo?.Product_Id),\r\n                                                                    getClosingStockCountNumber(oo?.Product_Id)\r\n                                                                )\r\n                                                            }\r\n                                                            value={(\r\n                                                                closingStockValues.find(ooo =>\r\n                                                                    Number(ooo?.Product_Id) === Number(oo?.Product_Id))?.ST_Qty\r\n                                                                || ''\r\n                                                            )}\r\n                                                        />\r\n                                                        <label className=\" text-muted fa-13\">\r\n                                                            {\r\n                                                                getClosingStockCountNumber(oo?.Product_Id)\r\n                                                                    ? (\r\n                                                                        <>\r\n                                                                            Previous:&nbsp;\r\n                                                                            <span className=\"me-2\">\r\n                                                                                {LocalDate(getClosingStockDate(oo?.Product_Id))}\r\n                                                                            </span>\r\n                                                                            <span className=\"text-primary \">\r\n                                                                                ( {getClosingStockCountNumber(oo?.Product_Id)} )\r\n                                                                            </span>\r\n                                                                        </>\r\n                                                                    )\r\n                                                                    : ''\r\n                                                            }\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </CardContent>\r\n\r\n                                            </Card>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </TabPanel>\r\n                        ))}\r\n                    </TabContext>\r\n\r\n                    <div className=\"col-lg-6 col-md-6 col-sm-8 mb-4\">\r\n                        <label>Narration</label>\r\n                        <textarea\r\n                            className=\"cus-inpt\"\r\n                            onChange={e => setStockInputValue({ ...stockInputValue, Narration: e.target.value })}\r\n                            value={stockInputValue?.Narration}\r\n                            rows={4}\r\n                        />\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeStockDialog}>cancel</Button>\r\n                    <Button variant='contained' color='success' onClick={postClosingStock}>confirm</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RetailerClosingStock;","import StockReportAreaBased from \"./closingStockAreaBasedReport\";\r\nimport RetailerClosingStock from \"./closingStockRetailerBasedReport\";\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport { Box, Tab } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst ClosingStockReports = () => {\r\n    const [tabValue, setTabValue] = useState(1);\r\n\r\n\r\n    return (\r\n        <>\r\n            <TabContext value={tabValue}>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <TabList\r\n                        indicatorColor='transparant'\r\n                        onChange={(e, n) => setTabValue(n)}\r\n                        variant='scrollable'\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        <Tab\r\n                            sx={tabValue === 1 ? { backgroundColor: '#c6d7eb' } : {}}\r\n                            label={'Retailer Based'}\r\n                            value={1}\r\n                        />\r\n                        <Tab\r\n                            sx={tabValue === 2 ? { backgroundColor: '#c6d7eb' } : {}}\r\n                            label={'Area Based'}\r\n                            value={2}\r\n                        />\r\n                    </TabList>\r\n                </Box>\r\n\r\n                <TabPanel value={1} sx={{ p: 0, pt: 2 }}>\r\n                    <RetailerClosingStock />\r\n                </TabPanel>\r\n                <TabPanel value={2} sx={{ p: 0, pt: 2 }}>\r\n                    <StockReportAreaBased />\r\n                </TabPanel>\r\n            </TabContext>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ClosingStockReports;"],"names":["props","open","setOpen","useState","url","handleClose","_jsxs","children","_jsx","Tooltip","title","onClick","handleOpen","style","cursor","Dialog","onClose","fullWidth","maxWidth","DialogTitle","className","IconButton","Close","sx","color","DialogContent","src","alt","maxHeight","customTableStyles","table","width","backgroundColor","rows","headCells","fontSize","customSelectStyles","control","provided","state","_objectSpread","height","background","menu","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","StockReportAreaBased","storage","JSON","parse","localStorage","getItem","stockValue","setStockValaue","useEffect","fetchLink","concat","Company_id","then","data","success","catch","e","console","error","AreaList","_ref","o","sno","reportType","setReportType","uniqueProductsWorth","retailers","productMap","Map","forEach","retailer","_retailer$Closing_Sto2","Closing_Stock","stock","productId","Item_Id","productWorth","Previous_Balance","Item_Rate","productQuantity","has","existingProduct","get","totalWorth","totalQuantity","set","Product_Name","Array","from","values","calculateUniqueProductsWorth","Retailer","_Fragment","size","Remove","Add","Area_Name","length","NumberFormat","areaValue","_o$Retailer2","totalClosingStockValue","_retailer$Closing_Sto","colSpan","Collapse","in","timeout","unmountOnExit","value","onChange","target","val","_o$Retailer","map","ret","ind","RetailerList","up","upi","dispContent","_ref2","_o$Closing_Stock2","_o$Closing_Stock3","Retailer_Name","Reatailer_Address","overAllValue","_o$Closing_Stock","pro","i","LocalDate","Cl_Date","Card","area","_area$Retailer","_retailer$Closing_Sto3","CardContent","RetailerClosingStock","_retailerInfo$Closing","_retailerInfo$Closing2","setRetailers","products","setProducts","retailerInfo","setRetailerInfo","productClosingStock","setProductClosingStock","filteredProductClosingStock","setFilteredProductClosingStock","tabValue","setTabValue","reload","setReload","dialog","setDialog","closingStock","filters","setFilters","cust","custGet","Fromdate","getPreviousDate","Todate","ISOString","initialStockValue","Company_Id","ST_Date","Retailer_Id","Narration","Created_by","UserId","Product_Stock_List","ST_Id","stockInputValue","setStockInputValue","closingStockValues","setClosingStockValues","isEdit","setIsEdit","_data$data","RetailerDetails","component","Paper","mt","ImagePreviewDialog","imageUrl","CardMedia","image","_data$VERIFIED_LOCATI","_data$VERIFIED_LOCATI2","_data$VERIFIED_LOCATI3","_data$VERIFIED_LOCATI4","VERIFIED_LOCATION","latitude","longitude","window","Latitude","Longitude","LocationOn","RouteGet","Retailer_Class","Person","Contact_Person","href","Mobile_No","Call","Created_Date","Date","toLocaleDateString","createdBy","closeStockDialog","getClosingStockCountNumber","productID","_obj$","filter","Number","getClosingStockDate","_obj$2","GroupByDate","_o$ProductCount","_o$ProductCount3","ExpandLess","ExpandMore","day","month","year","CreatedByGet","ProductCount","_o$ProductCount2","toISOString","split","eo","Product_Id","ST_Qty","Edit","oo","ii","ProductName","filt","Select","label","options","obj","styles","isSearchable","placeholder","type","Button","startIcon","Queue","ClosingStocks","overflowY","reduce","sum","product","fullScreen","ArrowBack","required","TabContext","Box","borderColor","TabList","indicatorColor","n","scrollButtons","Tab","String","Pro_Group_Id","Pro_Group","_o$GroupedProductArra","TabPanel","p","GroupedProductArray","_closingStockValues$f","display","productImageUrl","flexGrow","isGraterNumber","Product_Description","UOM","handleStockInputChange","date","previousStock","productIndex","findIndex","item","updatedValues","PR_Qty","LT_CL_Date","prevValues","find","ooo","DialogActions","postClosingStock","method","bodyData","toast","message","ClosingStockReports","pt"],"sourceRoot":""}
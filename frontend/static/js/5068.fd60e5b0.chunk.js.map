{"version":3,"file":"static/js/5068.fd60e5b0.chunk.js","mappings":"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","sources":["Pages/Sales/SalesReportComponent/SalesDeliveryConvert.jsx","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/Clear.js","../node_modules/@mui/icons-material/esm/ClearAll.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, Button, Dialog, Tooltip, IconButton, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { getPreviousDate, isEqualNumber, ISOString, isValidObject } from \"../../../Components/functions\";\r\nimport DeliveryInvoiceTemplate from \"../SalesReportComponent/newInvoiceTemplate\";\r\nimport { Edit, FilterAlt } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NewDeliveryOrder from \"./NewDeliveryOrder\";\r\n\r\nconst DeliveryDetailsList = ({ loadingOn, loadingOff, reload }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [screen, setScreen] = useState(true);\r\n    const [orderInfo, setOrderInfo] = useState({});\r\n    const [viewOrder, setViewOrder] = useState({});\r\n\r\n    const [deleteConfirm, setDeleteConfirm] = useState(false)\r\n    const [isDeliveryDetailsVisible, setIsDeliveryDetailsVisible] = useState(false)\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: getPreviousDate(7),\r\n        Todate: ISOString(),\r\n        Retailer_Id: '',\r\n        RetailerGet: 'ALL',\r\n        Created_by: '',\r\n        CreatedByGet: 'ALL',\r\n        Delivery_Person_Id: '',\r\n        Delivery_Person_Name: 'ALL',\r\n        Cancel_status: 0\r\n    });\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `delivery/deliveryOrderList?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Delivery_Person_Id=${filters?.Delivery_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSaleOrders(data?.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [\r\n        filters.Fromdate,\r\n        filters?.Todate,\r\n        filters?.Retailer_Id,\r\n        filters?.Delivery_Person_Id,\r\n        filters?.Created_by,\r\n        filters?.Cancel_status,\r\n        reload\r\n    ])\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSalePerson(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/user/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setUsers(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [])\r\n\r\n    const saleOrderColumn = [\r\n        {\r\n            Field_Name: 'Do_Id',\r\n            ColumnHeader: 'Delivery ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'So_No',\r\n            ColumnHeader: 'Sale Order ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'Retailer_Name',\r\n            ColumnHeader: 'Customer',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'SalesDate',\r\n            ColumnHeader: 'Sale Order Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Do_Date',\r\n            ColumnHeader: 'Delivery Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n\r\n        // {\r\n        //     Field_Name: 'Products',\r\n        //     ColumnHeader: 'Products / Quantity',\r\n        //     isVisible: 1,\r\n        //     align: 'center',\r\n        //     isCustomCell: true,\r\n        //     Cell: ({ row }) => (\r\n        //         <>\r\n        //             <span>{row?.Products_List?.length ?? 0}</span> /&nbsp;\r\n        //             <span>{row?.Products_List?.reduce((sum, item) => sum += item?.Bill_Qty ?? 0, 0) ?? 0}</span>\r\n        //         </>\r\n        //     )\r\n        // },\r\n        {\r\n            Field_Name: 'Total_Before_Tax',\r\n            ColumnHeader: 'Before Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Tax',\r\n            ColumnHeader: 'Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Invoice_value',\r\n            ColumnHeader: 'Invoice Value',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'DeliveryStatusName',\r\n            ColumnHeader: 'Delivery Status ',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        // {\r\n        //     Field_Name: 'DeliveryStatusName',\r\n        //     // ColumnHeader: 'DeliveryStatusName',\r\n        //     isVisible: 1,\r\n        //     Field_Data:'String',\r\n        //     align: 'center',\r\n        //     // isCustomCell: true,\r\n\r\n        // },\r\n        // {\r\n        //     Field_Name: 'Sales_Person_Name',\r\n        //     ColumnHeader: 'Sales Person',\r\n        //     Fied_Data: 'string',\r\n        //     isVisible: 1,\r\n        // },\r\n        {\r\n            Field_Name: 'Action',\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return (\r\n                    <>\r\n\r\n                        <Tooltip title='Edit'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    switchScreen();\r\n                                    setOrderInfo({ ...row, isEdit: true });\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <Edit className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        {/* <Tooltip title='Delete'>\r\n                            <IconButton\r\n                               onClick={()=>openDeleteDialog(row)}\r\n                            \r\n                                size=\"small\"\r\n                            >\r\n                                <Delete className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip> */}\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n    ];\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n        return (\r\n            <>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Branch</td>\r\n                            <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Delivery Person</td>\r\n                            <td className=\"border p-2\">{row.Delivery_Person_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Round off</td>\r\n                            <td className=\"border p-2\">{row.Round_off}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.GST_Inclusive, 1) && 'Inclusive'}\r\n                                {isEqualNumber(row.GST_Inclusive, 0) && 'Exclusive'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.IS_IGST, 1) && 'IGST'}\r\n                                {isEqualNumber(row.IS_IGST, 0) && 'GST'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Narration</td>\r\n                            <td className=\"border p-2\" colSpan={5}>{row.Narration}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const switchScreen = () => {\r\n        setScreen(!screen)\r\n        setOrderInfo({});\r\n        setIsDeliveryDetailsVisible(!isDeliveryDetailsVisible);\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setDialog({\r\n            ...dialog,\r\n            filters: false,\r\n            orderDetails: false,\r\n        });\r\n        setOrderInfo({});\r\n\r\n\r\n        setDeleteConfirm(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                    <h6 className=\"fa-18 m-0 p-0\">{\r\n                        screen\r\n                            ? 'Delivery Orders'\r\n                            : isValidObject(orderInfo)\r\n                                ? 'Modify Delivery Order'\r\n                                : ''}\r\n                    </h6>\r\n                    <span>\r\n                        {screen && (\r\n                            <Tooltip title='Filters'>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent className=\"p-0 \">\r\n                    {screen ? (\r\n                        <FilterableTable\r\n                            dataArray={saleOrders}\r\n                            columns={saleOrderColumn}\r\n                            isExpendable={true}\r\n                            tableMaxHeight={550}\r\n                            expandableComp={ExpendableComponent}\r\n                        />\r\n                    ) : (\r\n                        <NewDeliveryOrder\r\n                            editValues={orderInfo}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            reload={() => {\r\n                                setScreen(pre => !pre)\r\n                            }}\r\n                            switchScreen={switchScreen}\r\n                        />\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <DeliveryInvoiceTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={'Sale Order'}\r\n                />\r\n            )}\r\n\r\n            <Dialog\r\n                open={deleteConfirm}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <DialogContent>\r\n                    <div>Are You Want to Move the order Into the Sale Order Again</div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    {/* <Button onClick={confirmData}>Delete</Button> */}\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Retailer_Id, label: filters?.RetailerGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Retailer_Id: e.value, RetailerGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Delivery Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Delivery_Person_Id, label: filters?.Delivery_Person_Name }}\r\n                                            onChange={(e) => setFilters({ ...filters, Delivery_Person_Id: e.value, Delivery_Person_Name: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...salesPerson.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Created_by, label: filters?.CreatedByGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Created_by: e.value, CreatedByGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...users.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Canceled Order</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.Cancel_status}\r\n                                            onChange={e => setFilters({ ...filters, Cancel_status: Number(e.target.value) })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={1}>Show</option>\r\n                                            <option value={0}>Hide</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeliveryDetailsList;\r\n\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAll');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["_ref","loadingOn","loadingOff","reload","storage","JSON","parse","localStorage","getItem","saleOrders","setSaleOrders","useState","retailers","setRetailers","salesPerson","setSalePerson","users","setUsers","screen","setScreen","orderInfo","setOrderInfo","viewOrder","setViewOrder","deleteConfirm","setDeleteConfirm","isDeliveryDetailsVisible","setIsDeliveryDetailsVisible","filters","setFilters","Fromdate","getPreviousDate","Todate","ISOString","Retailer_Id","RetailerGet","Created_by","CreatedByGet","Delivery_Person_Id","Delivery_Person_Name","Cancel_status","dialog","setDialog","orderDetails","useEffect","fetchLink","address","concat","then","data","success","catch","e","console","error","Company_id","saleOrderColumn","Field_Name","ColumnHeader","Fied_Data","isVisible","align","isCustomCell","Cell","_ref2","row","_jsx","_Fragment","children","Tooltip","title","IconButton","onClick","switchScreen","_objectSpread","isEdit","size","Edit","className","closeDialog","_jsxs","Card","isValidObject","FilterAlt","CardContent","FilterableTable","dataArray","columns","isExpendable","tableMaxHeight","expandableComp","_ref3","Branch_Name","Round_off","isEqualNumber","GST_Inclusive","IS_IGST","Sales_Person_Name","colSpan","Narration","NewDeliveryOrder","editValues","pre","Object","keys","length","DeliveryInvoiceTemplate","orderProducts","download","actionOpen","clearDetails","TitleText","Dialog","open","fullWidth","maxWidth","DialogTitle","DialogContent","DialogActions","Button","onClose","style","verticalAlign","Select","value","label","onChange","options","map","obj","Retailer_Name","styles","customSelectStyles","isSearchable","placeholder","UserId","Name","type","target","Number","createSvgIcon","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}
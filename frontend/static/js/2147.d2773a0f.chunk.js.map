{"version":3,"file":"static/js/2147.d2773a0f.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Timeline.js","Pages/Payments/PaymentMaster/listPayments.jsx","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2\"\n}), 'Timeline');","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from '@mui/material';\r\nimport FilterableTable, { ButtonActions, createCol } from '../../../Components/filterableTable2';\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { Addition, isEqualNumber, ISOString, isValidDate, NumberFormat, toNumber } from \"../../../Components/functions\";\r\nimport { Edit, Timeline } from \"@mui/icons-material\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst PaymentsMasterList = ({ loadingOn, loadingOff, AddRights, EditRights, DeleteRights }) => {\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        DebitAccount: { value: '', label: 'ALL' },\r\n        CreditAccount: { value: '', label: 'ALL' },\r\n        refresh: false\r\n    });\r\n    const [reload, setReload] = useState(false)\r\n    const [paymentData, setPaymentData] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const query = useQuery();\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n        };\r\n        setFilters(pre => ({ ...pre, Fromdate: queryFilters.Fromdate, Todate: queryFilters.Todate }));\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n        const Fromdate = (stateDetails?.Fromdate && isValidDate(stateDetails?.Fromdate)) ? ISOString(stateDetails?.Fromdate) : null;\r\n        const Todate = (stateDetails?.Todate && isValidDate(stateDetails?.Todate)) ? ISOString(stateDetails?.Todate) : null;\r\n        if (Fromdate && Todate) {\r\n            updateQueryString({ Fromdate, Todate });\r\n            setFilters(pre => ({ ...pre, Fromdate: ISOString(stateDetails.Fromdate), Todate: stateDetails.Todate }));\r\n            setReload(pre => !pre);\r\n        }\r\n    }, [stateDetails])\r\n\r\n    useEffect(() => {\r\n        const From = filters.Fromdate, To = filters.Todate;\r\n\r\n        fetchLink({\r\n            address: `payment/paymentMaster?Fromdate=${From}&Todate=${To}`,\r\n            loadingOff, loadingOn\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setPaymentData(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [reload]);\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const TotalPayment = useMemo(() => paymentData.reduce(\r\n        (acc, orders) => Addition(acc, orders?.debit_amount), 0\r\n    ), [paymentData]);\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title='Payments'\r\n                headerFontSizePx={12}\r\n                bodyFontSizePx={12}\r\n                ButtonArea={\r\n                    <>\r\n                        {AddRights && (\r\n                            <Button\r\n                                onClick={() => navigate('create')}\r\n                                variant=\"outlined\"\r\n                            >Add</Button>\r\n                        )}\r\n                        {AddRights && (\r\n                            <Button\r\n                                onClick={() => navigate('addReference')}\r\n                                variant=\"outlined\"\r\n                                className=\"me-2\"\r\n                            >Add Reference</Button>\r\n                        )}\r\n                        {toNumber(TotalPayment) > 0 && <h6 className=\"m-0 text-end text-muted px-3\">Total: {NumberFormat(TotalPayment)}</h6>}\r\n                    </>\r\n                }\r\n                dataArray={paymentData}\r\n                columns={[\r\n                    createCol('payment_date', 'date', 'Date'),\r\n                    createCol('payment_invoice_no', 'string', 'Payment ID'),\r\n                    createCol('debit_amount', 'number', 'Amount'),\r\n                    createCol('debit_ledger_name', 'string', 'Debit-Acc'),\r\n                    createCol('credit_ledger_name', 'string', 'Credit-Acc'),\r\n                    createCol('Voucher_Type', 'string', 'Voucher'),\r\n                    createCol('pay_bill_type', 'string', 'Type'),\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Action',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => (\r\n                            <ButtonActions\r\n                                buttonsData={[\r\n                                    {\r\n                                        name: 'Edit',\r\n                                        icon: <Edit />,\r\n                                        onclick: () => navigate('create', { state: row }),\r\n                                        disabled: !EditRights\r\n                                    },\r\n                                    {\r\n                                        name: 'Add Reference',\r\n                                        icon: <Timeline />,\r\n                                        onclick: () => navigate('addReference', { state: row }),\r\n                                        disabled: (\r\n                                            !EditRights \r\n                                            || isEqualNumber(row.pay_bill_type, 2) \r\n                                            || isEqualNumber(row.pay_bill_type, 4) \r\n                                        )\r\n                                    },\r\n                                    // {\r\n\r\n                                    // }\r\n                                ]}\r\n                            />\r\n                        )\r\n                    }\r\n                ]}\r\n                EnableSerialNumber\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentsMasterList;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["createSvgIcon","_jsx","d","defaultFilters","Fromdate","ISOString","Todate","_ref","loadingOn","loadingOff","AddRights","EditRights","DeleteRights","filters","setFilters","useState","DebitAccount","value","label","CreditAccount","refresh","reload","setReload","paymentData","setPaymentData","navigate","useNavigate","location","useLocation","stateDetails","state","query","URLSearchParams","search","useEffect","queryFilters","get","isValidDate","pre","_objectSpread","updateQueryString","From","To","fetchLink","address","concat","then","data","success","catch","e","console","error","newFilters","params","toString","replace","TotalPayment","useMemo","reduce","acc","orders","Addition","debit_amount","_Fragment","children","FilterableTable","title","headerFontSizePx","bodyFontSizePx","ButtonArea","_jsxs","Button","onClick","variant","className","toNumber","NumberFormat","dataArray","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref2","row","ButtonActions","buttonsData","name","icon","Edit","onclick","disabled","Timeline","isEqualNumber","pay_bill_type","EnableSerialNumber"],"sourceRoot":""}
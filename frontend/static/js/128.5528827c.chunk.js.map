{"version":3,"file":"static/js/128.5528827c.chunk.js","mappings":"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","sources":["Pages/Masters/uomMaster.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { Button as MuiButton } from \"@mui/material/\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport FilterableTable, { createCol } from \"../../Components/filterableTable2\";\r\n\r\nconst initialState = {\r\n    Unit_Id: \"\",\r\n    Units: \"\"\r\n};\r\n\r\nfunction UomMaster() {\r\n    const [UserTypeData, setUserTypeData] = useState([]);\r\n    const [reload, setReload] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\r\n    const [inputValue, setInputValue] = useState(initialState);\r\n    const [editUser, setEditUser] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/uom`\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setUserTypeData(data.data);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    }, [reload]);\r\n\r\n    const handleDelete = () => {\r\n        fetchLink({\r\n            address: `masters/uom`,\r\n            method: \"DELETE\",\r\n            bodyData: { Unit_Id: inputValue.Unit_Id },\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setReload(!reload);\r\n                setOpen(false);\r\n                toast.success(\"Units deleted successfully!\");\r\n            } else {\r\n                toast.error(\"Failed to delete area:\", data.message);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    };\r\n\r\n    const handleCreate = () => {\r\n        fetchLink({\r\n            address: `masters/uom`,\r\n            method: \"POST\",\r\n            bodyData: {\r\n                Units: inputValue.Units\r\n            },\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setIsCreateDialogOpen(false);\r\n                setReload(!reload);\r\n                toast.success(data.message);\r\n                setInputValue([])\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    };\r\n\r\n    const editRow = (user) => {\r\n        setEditUser(true);\r\n        setInputValue({\r\n            Unit_Id: user.Unit_Id,\r\n            Units: user.Units,\r\n        });\r\n    };\r\n\r\n    const editFun = (Unit_Id, Units) => {\r\n        fetchLink({\r\n            address: `masters/uom`,\r\n            method: \"PUT\",\r\n            bodyData: { Unit_Id, Units },\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload);\r\n                setEditUser(false);\r\n                setInputValue([])\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                    UOM MASTER\r\n                    <div className=\"text-end\">\r\n                        <Button\r\n                            className=\"rounded-5 px-3 py-1 fa-13 btn-primary shadow\"\r\n                            onClick={() => setIsCreateDialogOpen(true)}\r\n                        >\r\n                            Create UOM\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n           \r\n                <FilterableTable\r\n                    dataArray={UserTypeData}\r\n                    EnableSerialNumber={true}\r\n                    isExpendable={true}\r\n                    maxHeightOption\r\n                    columns={[\r\n                        createCol('Unit_Id', 'string', 'Unit_Id'),\r\n                        createCol('Units', 'string', 'Units'),\r\n                        {\r\n\r\n                            Field_Name: \"Actions\",\r\n                            ColumnHeader: \"Actions\",\r\n                            isVisible: 1,\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n\r\n                                return (\r\n                                    <td className=\"fa-12\" style={{ minWidth: \"80px\" }}>\r\n                                        <IconButton\r\n                                            onClick={() => editRow(row)}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <Edit className=\"fa-in\" />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                setOpen(true);\r\n                                                setInputValue({ Unit_Id: row.Unit_Id });\r\n                                            }}\r\n                                            size=\"small\"\r\n                                            color='error'\r\n                                        >\r\n                                            <Delete className=\"fa-in \" />\r\n                                        </IconButton>\r\n                                    </td>\r\n                                );\r\n                            },\r\n                        },\r\n                    ]}\r\n                />\r\n\r\n            </div>\r\n\r\n            <Dialog\r\n                open={isCreateDialogOpen}\r\n                onClose={() => setIsCreateDialogOpen(false)}\r\n                aria-labelledby=\"create-dialog-title\"\r\n                aria-describedby=\"create-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"create-dialog-title\">UOM </DialogTitle>\r\n                <DialogContent>\r\n                    <div>\r\n                        <div className=\"p-2\">\r\n                            <label>Units</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                onChange={(event) =>\r\n                                    setInputValue({\r\n                                        ...inputValue,\r\n                                        Units: event.target.value,\r\n                                    })\r\n                                }\r\n                                placeholder=\"\"\r\n                                value={inputValue.Units}\r\n                                className=\"cus-inpt\"\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton onClick={() => setIsCreateDialogOpen(false)}>\r\n                        Cancel\r\n                    </MuiButton>\r\n                    <MuiButton onClick={handleCreate} color=\"success\">\r\n                        CREATE\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={editUser}\r\n                onClose={() => setEditUser(false)}\r\n                aria-labelledby=\"create-dialog-title\"\r\n                aria-describedby=\"create-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"create-dialog-title\">UOM</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"p-2\">\r\n                        <label>UOM </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={(event) =>\r\n                                setInputValue({\r\n                                    ...inputValue,\r\n                                    Units: event.target.value,\r\n                                })\r\n                            }\r\n                            placeholder={inputValue.Units}\r\n                            value={inputValue.Units}\r\n                            className=\"cus-inpt\"\r\n                        />\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton onClick={() => setEditUser(false)}>Cancel</MuiButton>\r\n                    <MuiButton onClick={() => editFun(inputValue.Unit_Id, inputValue.Units)} color=\"success\">\r\n                        Update\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    <b>Do you want to delete the UOM?</b>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton onClick={() => setOpen(false)}>Cancel</MuiButton>\r\n                    <MuiButton onClick={() => handleDelete(inputValue.Unit_Id)} autoFocus color=\"error\">\r\n                        Delete\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default UomMaster;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["initialState","Unit_Id","Units","UserTypeData","setUserTypeData","useState","reload","setReload","open","setOpen","isCreateDialogOpen","setIsCreateDialogOpen","inputValue","setInputValue","editUser","setEditUser","useEffect","fetchLink","address","then","data","success","catch","e","console","error","_jsxs","Fragment","children","className","_jsx","Button","onClick","FilterableTable","dataArray","EnableSerialNumber","isExpendable","maxHeightOption","columns","createCol","Field_Name","ColumnHeader","isVisible","isCustomCell","Cell","_ref","row","style","minWidth","IconButton","editRow","user","size","Edit","color","Delete","Dialog","onClose","DialogTitle","id","DialogContent","type","onChange","event","target","value","placeholder","DialogActions","MuiButton","handleCreate","method","bodyData","toast","message","editFun","autoFocus","createSvgIcon","d","_excluded","useButtonProps","_ref2","tagName","disabled","href","rel","role","tabIndex","meta","handleClick","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","React","ref","as","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","displayName","bsPrefix","variant","active","prefix","useBootstrapPrefix","classNames"],"sourceRoot":""}
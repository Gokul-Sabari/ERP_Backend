{"version":3,"file":"static/js/4080.ce01f11a.chunk.js","mappings":"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","sources":["Pages/UserModule/voucherMaster.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { Button as MuiButton } from \"@mui/material/\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport FilterableTable, { createCol } from \"../../Components/filterableTable2\";\r\n\r\nconst initialState = {\r\n    Voucher_Type_Id: \"\",\r\n    Voucher_Type: \"\",\r\n    Voucher_Code:\"\",\r\n    Branch_Id: \"\",\r\n    Branch_Name: \"\",\r\n    Type: \"\"\r\n};\r\n\r\nfunction VoucherMaster() {\r\n    const [UserTypeData, setUserTypeData] = useState([]);\r\n    const [reload, setReload] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\r\n    const [inputValue, setInputValue] = useState(initialState);\r\n    const [editUser, setEditUser] = useState(false);\r\n\r\n    const [voucherType, setVouchertype] = useState(\"\");\r\n    const [districts, setDistricts] = useState([]);\r\n    const [selectedBranch, setSelectedBranch] = useState(\"\");\r\n    const [types, setTypes] = useState(\"\");\r\n    const [voucherCode, setVoucherCode] = useState(\"\");\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/voucher`\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setUserTypeData(data.data);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/branch/dropDown`\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setDistricts(data.data);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    }, [reload]);\r\n\r\n    const handleDelete = () => {\r\n        fetchLink({\r\n            address: `masters/voucher`,\r\n            method: \"DELETE\",\r\n            bodyData: { Vocher_Type_Id: inputValue.Voucher_Type_Id },\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setReload(!reload);\r\n                setOpen(false);\r\n                toast.success(\"Voucher Type deleted successfully!\");\r\n            } else {\r\n                toast.error(\"Failed to delete area:\", data.message);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    };\r\n\r\n    const handleCreate = () => {\r\n        if (!selectedBranch || !voucherType || !types || !voucherCode) {\r\n            toast.error(\"Please fill all fields\");\r\n            return;\r\n        }\r\n        fetchLink({\r\n            address: `masters/voucher`,\r\n            method: \"POST\",\r\n            bodyData: {\r\n                Voucher_Type: voucherType,\r\n                Branch_Id: Number(selectedBranch),\r\n                Type: types,\r\n                Voucher_Code:voucherCode\r\n            },\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setIsCreateDialogOpen(false);\r\n                setReload(!reload);\r\n                toast.success(data.message);\r\n                setVouchertype(\"\");\r\n\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    };\r\n\r\n    const editRow = (user) => {\r\n        setEditUser(true);\r\n        setInputValue({\r\n            Voucher_Type_Id: user.Vocher_Type_Id,\r\n            Voucher_Type: user.Voucher_Type,\r\n            Branch_Id: user.Branch_Id,\r\n            Voucher_Code:user.Voucher_Code,\r\n            Type: user.Type,\r\n        });\r\n        setSelectedBranch(user.Branch_Id);\r\n    };\r\n\r\n    const editFun = (Voucher_Type_Id, Voucher_Type, Branch_Id, Voucher_Code,Type) => {\r\n        fetchLink({\r\n            address: `masters/voucher`,\r\n            method: \"PUT\",\r\n            bodyData: { Voucher_Type_Id, Voucher_Type, Branch_Id, Voucher_Code,Type },\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload);\r\n                setEditUser(false);\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                    Area\r\n                    <div className=\"text-end\">\r\n                        <Button\r\n                            className=\"rounded-5 px-3 py-1 fa-13 btn-primary shadow\"\r\n                            onClick={() => setIsCreateDialogOpen(true)}\r\n                        >\r\n                            Create Voucher\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <FilterableTable\r\n                    dataArray={UserTypeData}\r\n                    EnableSerialNumber={true}\r\n                    isExpendable={true}\r\n                    maxHeightOption\r\n                    columns={[\r\n                        createCol('Voucher_Type', 'string', 'Voucher_Type'),\r\n                        createCol('Type', 'string', 'Type'),\r\n                        createCol('BranchName', 'string', 'BranchName'),\r\n                        createCol('Voucher_Code', 'string', 'Voucher_Code'),\r\n                        {\r\n                            ColumnHeader: \"Actions\",\r\n                            isVisible: 1,\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n\r\n                                return (\r\n                                    <td className=\"fa-12\" style={{ minWidth: \"80px\" }}>\r\n                                        <IconButton\r\n                                            onClick={() => editRow(row)}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <Edit className=\"fa-in\" />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                setOpen(true);\r\n                                                setInputValue({ Voucher_Type_Id: row.Vocher_Type_Id });\r\n                                            }}\r\n                                            size=\"small\"\r\n                                            color='error'\r\n                                        >\r\n                                            <Delete className=\"fa-in \" />\r\n                                        </IconButton>\r\n                                    </td>\r\n                                );\r\n                            },\r\n                        },\r\n                    ]}\r\n                />\r\n\r\n            </div>\r\n\r\n            <Dialog\r\n                open={isCreateDialogOpen}\r\n                onClose={() => setIsCreateDialogOpen(false)}\r\n                aria-labelledby=\"create-dialog-title\"\r\n                aria-describedby=\"create-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"create-dialog-title\">Voucher Creation</DialogTitle>\r\n                <DialogContent>\r\n                    <div>\r\n                        <div className=\"p-2\">\r\n                            <label>Voucher Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                onChange={(event) => setVouchertype(event.target.value)}\r\n                                placeholder=\"\"\r\n                                value={voucherType}\r\n                                className=\"cus-inpt\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"p-2\">\r\n                            <label>Branch</label>\r\n                            <select\r\n                                value={selectedBranch}\r\n                                onChange={(event) => setSelectedBranch(event.target.value)}\r\n                                className=\"cus-inpt\"\r\n                            >\r\n                                <option value=\"\">Select Branch</option>\r\n                                {districts.map((district) => (\r\n                                    <option key={district.BranchId} value={district.BranchId}>\r\n                                        {district.BranchName}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"p-2\">\r\n                            <label>VoucherCode</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                onChange={(event) => setVoucherCode(event.target.value)}\r\n                                placeholder=\"\"\r\n                                value={voucherCode}\r\n                                className=\"cus-inpt\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"p-2\">\r\n                            <label>Type</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                onChange={(event) => setTypes(event.target.value)}\r\n                                placeholder=\"\"\r\n                                value={types}\r\n                                className=\"cus-inpt\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton onClick={() => setIsCreateDialogOpen(false)}>\r\n                        Cancel\r\n                    </MuiButton>\r\n                    <MuiButton onClick={handleCreate} color=\"success\">\r\n                        CREATE\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={editUser}\r\n                onClose={() => setEditUser(false)}\r\n                aria-labelledby=\"create-dialog-title\"\r\n                aria-describedby=\"create-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"create-dialog-title\">voucherType</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"p-2\">\r\n                        <label>voucherType </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={(event) =>\r\n                                setInputValue({\r\n                                    ...inputValue,\r\n                                    Voucher_Type: event.target.value,\r\n                                })\r\n                            }\r\n                            placeholder={inputValue.Voucher_Type}\r\n                            value={inputValue.Voucher_Type}\r\n                            className=\"cus-inpt\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"p-2\">\r\n                        <label>Branch</label>\r\n                        <select\r\n                            value={selectedBranch}\r\n                            onChange={(event) => setSelectedBranch(event.target.value)}\r\n                            className=\"cus-inpt\"\r\n                        >\r\n                            <option value=\"\">Select Branch</option>\r\n                            {districts.map((district) => (\r\n                                <option key={district.BranchId} value={district.BranchId}>\r\n                                    {district.BranchName}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"p-2\">\r\n                        <label>Type </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={(event) =>\r\n                                setInputValue({\r\n                                    ...inputValue,\r\n                                    Voucher_Code: event.target.value,\r\n                                })\r\n                            }\r\n                            placeholder={inputValue.Voucher_Code}\r\n                            value={inputValue.Voucher_Code}\r\n                            className=\"cus-inpt\"\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"p-2\">\r\n                        <label>Type </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={(event) =>\r\n                                setInputValue({\r\n                                    ...inputValue,\r\n                                    Type: event.target.value,\r\n                                })\r\n                            }\r\n                            placeholder={inputValue.Type}\r\n                            value={inputValue.Type}\r\n                            className=\"cus-inpt\"\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton onClick={() => setEditUser(false)}>Cancel</MuiButton>\r\n                    <MuiButton onClick={() => editFun(inputValue.Voucher_Type_Id, inputValue.Voucher_Type, inputValue.Branch_Id,inputValue.Voucher_Code, inputValue.Type)} color=\"success\">\r\n                        Update\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    <b>Do you want to delete the Voucher?</b>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton onClick={() => setOpen(false)}>Cancel</MuiButton>\r\n                    <MuiButton onClick={handleDelete} autoFocus color=\"error\">\r\n                        Delete\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default VoucherMaster;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["initialState","Voucher_Type_Id","Voucher_Type","Voucher_Code","Branch_Id","Branch_Name","Type","UserTypeData","setUserTypeData","useState","reload","setReload","open","setOpen","isCreateDialogOpen","setIsCreateDialogOpen","inputValue","setInputValue","editUser","setEditUser","voucherType","setVouchertype","districts","setDistricts","selectedBranch","setSelectedBranch","types","setTypes","voucherCode","setVoucherCode","useEffect","fetchLink","address","then","data","success","catch","e","console","error","_jsxs","Fragment","children","className","_jsx","Button","onClick","FilterableTable","dataArray","EnableSerialNumber","isExpendable","maxHeightOption","columns","createCol","ColumnHeader","isVisible","isCustomCell","Cell","_ref","row","style","minWidth","IconButton","editRow","user","Vocher_Type_Id","size","Edit","color","Delete","Dialog","onClose","DialogTitle","id","DialogContent","type","onChange","event","target","value","placeholder","map","district","BranchId","BranchName","DialogActions","MuiButton","handleCreate","method","bodyData","Number","toast","message","_objectSpread","editFun","handleDelete","autoFocus","createSvgIcon","d","_excluded","useButtonProps","_ref2","tagName","disabled","href","rel","role","tabIndex","meta","handleClick","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","React","ref","as","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","displayName","bsPrefix","variant","active","_objectWithoutProperties","prefix","useBootstrapPrefix","classNames","concat"],"sourceRoot":""}
{"version":3,"file":"static/js/4272.6d961afd.chunk.js","mappings":"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","sources":["Pages/Masters/Godown.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    IconButton,\r\n    DialogContentText,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport { Button as MuiButton } from \"@mui/material/\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Delete, Edit, Search } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport FilterableTable, { createCol } from \"../../Components/filterableTable2\";\r\n\r\nconst initialState = {\r\n    Godown_Id: \"\",\r\n    Godown_Name: \"\"\r\n};\r\n\r\nfunction Godown() {\r\n    const [reload, setReload] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\r\n    const [inputValue, setInputValue] = useState(initialState);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [godownList, setGodownList] = useState([]);\r\n    const [filteredAccountList, setFilteredAccountList] = useState([]);\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const userId = user?.UserId;\r\n\r\n    useEffect(() => {\r\n        const fetchAccountGroups = async () => {\r\n            try {\r\n                const data = await fetchLink({ address: `masters/godown` });\r\n                if (data.success) {\r\n                    setGodownList(data.data);\r\n                    setFilteredAccountList(data.data);\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                toast.error(\"Failed to load account groups\");\r\n            }\r\n        };\r\n\r\n        fetchAccountGroups();\r\n    }, [reload]);\r\n\r\n    useEffect(() => {\r\n        if (searchTerm.trim() === \"\") {\r\n            setFilteredAccountList(godownList);\r\n        } else {\r\n            const filtered = godownList.filter(\r\n                (account) =>\r\n                (account.Godown_Id?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                    account.Godown_Name?.toLowerCase().includes(searchTerm.toLowerCase()))\r\n            );\r\n            setFilteredAccountList(filtered);\r\n        }\r\n    }, [searchTerm, godownList]);\r\n\r\n\r\n    const handleDelete = async () => {\r\n        setIsSubmitting(true);\r\n        const deletedItemId = inputValue.Godown_Id;\r\n\r\n        try {\r\n            setGodownList(prev => prev.filter(item => item.Godown_Id !== deletedItemId));\r\n            setFilteredAccountList(prev => prev.filter(item => item.Godown_Id !== deletedItemId));\r\n\r\n            const data = await fetchLink({\r\n                address: `masters/godown`,\r\n                method: \"DELETE\",\r\n                bodyData: { Godown_Id: deletedItemId },\r\n            });\r\n\r\n            if (data.success) {\r\n                toast.success(\"Godown deleted successfully!\");\r\n            } else {\r\n                setReload(prev => !prev);\r\n                toast.error(data.message || \"Failed to delete account group\");\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            setReload(prev => !prev);\r\n            toast.error(\"Failed to delete account group\");\r\n        } finally {\r\n            setIsSubmitting(false);\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleCreate = async () => {\r\n        const { Godown_Name } = inputValue;\r\n        if (!Godown_Name) {\r\n            toast.error(\"Please fill all required fields.\");\r\n            return;\r\n        }\r\n\r\n        setIsSubmitting(true);\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `masters/godown`,\r\n                method: \"POST\",\r\n                bodyData: {\r\n                    ...inputValue,\r\n                    Created_By: userId,\r\n                },\r\n            });\r\n\r\n            if (data.success) {\r\n                toast.success(\"Godown Created successfully!\");\r\n                setIsCreateDialogOpen(false);\r\n                setInputValue(initialState);\r\n                setReload(prev => !prev);\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            toast.error(\"Failed to Create Godown\");\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const editRow = (row) => {\r\n        setInputValue({\r\n            Godown_Id: row.Godown_Id,\r\n            Godown_Name: row.Godown_Name\r\n        });\r\n        setEditMode(true);\r\n    };\r\n\r\n    const handleEdit = () => {\r\n        const { Godown_Id, Godown_Name } = inputValue;\r\n        if (!Godown_Id || !Godown_Name) {\r\n            toast.error(\"All required fields must be filled.\");\r\n            return;\r\n        }\r\n\r\n        setIsSubmitting(true);\r\n        fetchLink({\r\n            address: `masters/godown`,\r\n            method: \"PUT\",\r\n            bodyData: {\r\n                ...inputValue,\r\n                Alter_By: userId,\r\n            },\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    toast.success(\"Godown updated successfully!\");\r\n                    setEditMode(false);\r\n                    setInputValue(initialState);\r\n                    setReload(!reload);\r\n                } else {\r\n                    toast.error(data.message);\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                toast.error(\"Failed to update Godown\");\r\n            })\r\n            .finally(() => setIsSubmitting(false));\r\n    };\r\n\r\n    const handleCloseCreateDialog = () => {\r\n        if (!isSubmitting) {\r\n            setIsCreateDialogOpen(false);\r\n            setInputValue(initialState);\r\n        }\r\n    };\r\n\r\n    const handleCloseEditDialog = () => {\r\n        if (!isSubmitting) {\r\n            setEditMode(false);\r\n            setInputValue(initialState);\r\n        }\r\n    };\r\n\r\n    const handleCloseDeleteDialog = () => {\r\n        if (!isSubmitting) {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                    GODOWN MASTER\r\n                    <div className=\"d-flex align-items-center gap-3\">\r\n                        <div style={{ width: \"300px\" }}>\r\n                            <TextField\r\n                                fullWidth\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Search Godown...\"\r\n                                value={searchTerm}\r\n                                onChange={(e) => setSearchTerm(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: <Search fontSize=\"small\" sx={{ mr: 1 }} />,\r\n                                    style: { height: \"40px\" },\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            className=\"rounded-1 btn-primary\"\r\n                            onClick={() => {\r\n                                setIsCreateDialogOpen(true);\r\n                                setInputValue(initialState);\r\n                            }}\r\n                            sx={{\r\n                                textTransform: 'none',\r\n                                fontWeight: 500,\r\n                                px: 2,\r\n                                height: '40px'\r\n                            }}\r\n                        >\r\n                            Create Godown\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <FilterableTable\r\n                    dataArray={filteredAccountList}\r\n                    EnableSerialNumber={true}\r\n                    maxHeightOption\r\n                    columns={[\r\n                        // createCol(\"Godown_Id\", \"string\", \"Id\"),\r\n                        createCol(\"Godown_Name\", \"string\", \"Godown_Name\"),\r\n                        {\r\n                            ColumnHeader: \"Actions\",\r\n                            isVisible: 1,\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => (\r\n                                <td style={{ minWidth: \"80px\" }}>\r\n                                    <IconButton onClick={() => editRow(row)} size=\"small\">\r\n                                        <Edit />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                        onClick={() => {\r\n                                            setOpen(true);\r\n                                            setInputValue({ Godown_Id: row.Godown_Id, Godown_Name: row.Godown_Name });\r\n                                        }}\r\n                                        size=\"small\"\r\n                                        color=\"error\"\r\n                                    >\r\n                                        <Delete />\r\n                                    </IconButton>\r\n                                </td>\r\n                            ),\r\n                        },\r\n                    ]}\r\n                />\r\n            </div>\r\n\r\n            <Dialog\r\n                open={isCreateDialogOpen}\r\n                onClose={handleCloseCreateDialog}\r\n            >\r\n                <DialogTitle>Create Godown</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"p-2\">\r\n                        <label>Godown Name*</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={inputValue.Godown_Name}\r\n                            onChange={(e) =>\r\n                                setInputValue({ ...inputValue, Godown_Name: e.target.value })\r\n                            }\r\n                            className=\"cus-inpt\"\r\n                            placeholder=\"Enter Godown Name\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton\r\n                        onClick={handleCloseCreateDialog}\r\n                        disabled={isSubmitting}\r\n                    >\r\n                        Cancel\r\n                    </MuiButton>\r\n                    <MuiButton\r\n                        onClick={handleCreate}\r\n                        color=\"primary\"\r\n                        disabled={isSubmitting || !inputValue.Godown_Name}\r\n                    >\r\n                        {isSubmitting ? \"Creating...\" : \"Create\"}\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={editMode}\r\n                onClose={handleCloseEditDialog}\r\n            >\r\n                <DialogTitle>Edit Godown</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"p-2\">\r\n                        <label>Godown Name*</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={inputValue.Godown_Name}\r\n                            onChange={(e) =>\r\n                                setInputValue({ ...inputValue, Godown_Name: e.target.value })\r\n                            }\r\n                            className=\"cus-inpt\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton\r\n                        onClick={handleCloseEditDialog}\r\n                        disabled={isSubmitting}\r\n                    >\r\n                        Cancel\r\n                    </MuiButton>\r\n                    <MuiButton\r\n                        onClick={handleEdit}\r\n                        color=\"primary\"\r\n                        disabled={isSubmitting || !inputValue.Godown_Id}\r\n                    >\r\n                        {isSubmitting ? \"Updating...\" : \"Update\"}\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleCloseDeleteDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Confirmation\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <b  >{`Do you want to delete the ${inputValue.Godown_Name}?`}</b>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton onClick={handleCloseDeleteDialog}>Cancel</MuiButton>\r\n                    <MuiButton onClick={handleDelete} autoFocus sx={{ color: 'red' }}>\r\n                        {isSubmitting ? \"Deleting...\" : \"Delete\"}\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Godown;"],"names":["initialState","Godown_Id","Godown_Name","reload","setReload","useState","open","setOpen","isCreateDialogOpen","setIsCreateDialogOpen","inputValue","setInputValue","editMode","setEditMode","godownList","setGodownList","filteredAccountList","setFilteredAccountList","searchTerm","setSearchTerm","isSubmitting","setIsSubmitting","user","JSON","parse","localStorage","getItem","userId","UserId","useEffect","async","data","fetchLink","address","success","e","console","error","toast","fetchAccountGroups","trim","filtered","filter","account","_account$Godown_Id","_account$Godown_Name","toLowerCase","includes","handleCloseCreateDialog","handleCloseEditDialog","handleCloseDeleteDialog","_jsxs","_Fragment","children","className","_jsx","style","width","TextField","fullWidth","size","variant","placeholder","value","onChange","target","InputProps","startAdornment","Search","fontSize","sx","mr","height","Button","onClick","textTransform","fontWeight","px","FilterableTable","dataArray","EnableSerialNumber","maxHeightOption","columns","createCol","ColumnHeader","isVisible","isCustomCell","Cell","_ref","row","minWidth","IconButton","editRow","Edit","color","Delete","Dialog","onClose","DialogTitle","DialogContent","type","_objectSpread","DialogActions","MuiButton","disabled","method","bodyData","Created_By","prev","message","handleEdit","Alter_By","then","catch","finally","id","DialogContentText","concat","deletedItemId","item","autoFocus"],"sourceRoot":""}
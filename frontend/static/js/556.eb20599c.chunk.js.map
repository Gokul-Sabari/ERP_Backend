{"version":3,"file":"static/js/556.eb20599c.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","../node_modules/@mui/icons-material/esm/ReadMore.js","Pages/Inventry/tallyStockJournal.jsx","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/icons-material/esm/Visibility.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name] \r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign] \r\n * @property {string} [ColumnHeader] \r\n * @property {0|1} [isVisible] \r\n * @property {'left'|'right'|'center'} [align] \r\n * @property {boolean} [isCustomCell] \r\n * @property {Function} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name] \r\n * @property {JSX.Element} [icon] \r\n * @property {Function} [onclick] \r\n * @property {boolean} [disabled] \r\n */\r\n\r\n/**\r\n * Filterable Table Component\r\n * @param {Object} props \r\n * @param {Array<Object>} [props.dataArray] \r\n * @param {Array<Column>} [props.columns] \r\n * @param {Function} [props.onClickFun] \r\n * @param {boolean} [props.isExpendable=false] \r\n * @param {React.ReactElement|JSX.Element} [props.expandableComp] \r\n * @param {number} [props.tableMaxHeight] \r\n * @param {number} [props.initialPageCount=10] \r\n * @param {number} [props.bodyFontSizePx=13] \r\n * @param {number} [props.headerFontSizePx=13] \r\n * @param {boolean} [props.EnableSerialNumber=false] \r\n * @param {'small'|'medium'|'large'} [props.CellSize='medium'] \r\n * @param {boolean} [props.disablePagination=false] \r\n * @param {string} [props.title=''] \r\n * @param {boolean} [props.PDFPrintOption=false] \r\n * @param {boolean} [props.ExcelPrintOption=false] \r\n * @param {boolean} [props.maxHeightOption=false]\r\n * @param {React.ReactElement|JSX.Element} [props.ButtonArea] \r\n * @param {Array<Menu>} props.MenuButtons \r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (field = '', type = 'string', ColumnHeader = '', align = 'left', verticalAlign = 'center') => {\r\n    return {\r\n        isVisible: 1,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const formatString = (val, dataType) => {\r\n        switch (dataType) {\r\n            case 'number':\r\n                return val ? NumberFormat(val) : val;\r\n            case 'date':\r\n                return val ? LocalDate(val) : val;\r\n            case 'time':\r\n                return val ? LocalTime(val) : val;\r\n            case 'string':\r\n                return val;\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n\r\n                        const horizondalalignClass = column.align ? columnAlign.find(\r\n                            align => align.type === String(column.align).toLowerCase()\r\n                        )?.class : '';\r\n                        const verticalAlignClass = column.verticalAlign ? columnVerticalAlign.find(\r\n                            align => align.type === String(column.verticalAlign).toLowerCase()\r\n                        )?.class : ' vctr '\r\n\r\n                        if (isColumnVisible && isCommonValue) return Object.entries(row).map(\r\n                            ([key, value]) => column.Field_Name === key && (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ` + horizondalalignClass + verticalAlignClass}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {formatString(value, column?.Fied_Data)}\r\n                                </TableCell>\r\n                            )\r\n                        )\r\n\r\n                        if (isColumnVisible && isCustomCell) return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                className={`border-end ` + horizondalalignClass + verticalAlignClass}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                            >\r\n                                {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                            </TableCell>\r\n                        )\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ` + horizondalalignClass + verticalAlignClass}\r\n                            ></TableCell>\r\n                        )\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name) \r\n                                                    ? ' fw-bold border-end border-top p-2 appFont ' \r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align \r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class \r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 7h9v2h-9zm0 8h9v2h-9zm3-4h6v2h-6zm-3 1L8 7v4H2v2h6v4z\"\n}), 'ReadMore');","import { useEffect, useState } from \"react\";\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport { Addition, checkIsNumber, getSessionUser, ISOString, isValidDate, LocalDate, NumberFormat, trimText } from \"../../Components/functions\";\r\nimport FilterableTable, { createCol, ButtonActions } from '../../Components/filterableTable2'\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tooltip } from \"@mui/material\";\r\nimport { FilterAlt, ReadMore, Search, Today, Visibility } from \"@mui/icons-material\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { initialStockJournalInfoValues, initialSoruceValue, initialDestinationValue, initialStaffInvolvedValue } from \"./stockJournalCreate\";\r\n\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst findObject = (arr = [], key, value) => arr.find(obj => String(obj[key]) === String(value)) ?? {};\r\n\r\nconst TallyStockJournalList = ({ loadingOn, loadingOff }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const user = getSessionUser().user;\r\n    const [products, setProducts] = useState([]);\r\n    const [godown, setGodown] = useState([]);\r\n    const [voucherType, setVoucherType] = useState([]);\r\n    // const [uom, setUOM] = useState([])\r\n    const [sJournalData, setSJournalData] = useState([]);\r\n    const [stockDetails, setStockDetails] = useState({\r\n        soruceDetails: [],\r\n        destinationDetails: [],\r\n        rowDetails: {},\r\n    });\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: defaultFilters.Fromdate,\r\n        Todate: defaultFilters.Todate,\r\n        fetchFrom: defaultFilters.Fromdate,\r\n        fetchTo: defaultFilters.Todate,\r\n        refresh: false,\r\n        filterDialog: false,\r\n        showDetailsDialog: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: `inventory/getTallyStockJournal?Fromdate=${filters?.fetchFrom}&Todate=${filters?.fetchTo}`,\r\n            headers: {\r\n                \"Db\": user?.Company_id\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSJournalData(data.data);\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        });\r\n    }, [filters?.fetchFrom, filters?.fetchTo])\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n        };\r\n        setFilters(pre => ({ ...pre, fetchFrom: queryFilters.Fromdate, fetchTo: queryFilters.Todate }));\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    productsResponse,\r\n                    godownLocationsResponse,\r\n                    voucherTypeResponse,\r\n                    // uomResponse,\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `masters/products` }),\r\n                    fetchLink({ address: `dataEntry/godownLocationMaster` }),\r\n                    fetchLink({ address: `purchase/voucherType` }),\r\n                    // fetchLink({ address: `masters/uom` }),\r\n                ]);\r\n\r\n                const productsData = (productsResponse.success ? productsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Product_Name).localeCompare(b?.Product_Name)\r\n                );\r\n                const godownLocations = (godownLocationsResponse.success ? godownLocationsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Godown_Name).localeCompare(b?.Godown_Name)\r\n                );\r\n                const voucherType = (voucherTypeResponse.success ? voucherTypeResponse.data : []).sort(\r\n                    (a, b) => String(a?.Voucher_Type).localeCompare(b?.Voucher_Type)\r\n                );\r\n                // const uomData = (uomResponse.success ? uomResponse.data : []).sort(\r\n                //     (a, b) => String(a.Units).localeCompare(b.Units)\r\n                // );\r\n\r\n                setProducts(productsData);\r\n                setGodown(godownLocations);\r\n                setVoucherType(voucherType);\r\n                // setUOM(uomData)\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setFilters(pre => ({ ...pre, filterDialog: false, showDetailsDialog: false }));\r\n        setStockDetails({\r\n            soruceDetails: [],\r\n            destinationDetails: [],\r\n            rowDetails: {},\r\n        })\r\n    }\r\n\r\n    // const getDetails = (rowData) => {\r\n    //     if (!checkIsNumber(rowData?.tally_id)) return;\r\n\r\n    //     if (loadingOn) loadingOn();\r\n    //     fetchLink({\r\n    //         address: `inventory/getTallyStockJournal/sourceAndDestination?tally_id=${rowData?.tally_id}`,\r\n    //         headers: {\r\n    //             \"Db\": user?.Company_id\r\n    //         }\r\n    //     }).then(data => {\r\n    //         if (data.success) {\r\n    //             setStockDetails({\r\n    //                 rowDetails: { ...rowData, stock_journal_date: LocalDate(rowData.stock_journal_date) },\r\n    //                 soruceDetails: data.data[0].SourceDetails,\r\n    //                 destinationDetails: data.data[0].DestinationDetails\r\n    //             });\r\n    //             // setFilters(pre => ({ ...pre, showDetailsDialog: true }));\r\n    //         }\r\n    //     }).catch(e => console.error(e)).finally(() => {\r\n    //         if (loadingOff) loadingOff();\r\n    //     })\r\n    // }\r\n\r\n    const navToErpStockJournal = (row) => {\r\n        const GeneralInfo = Object.fromEntries(\r\n            Object.entries(initialStockJournalInfoValues).map(([key, value]) => {\r\n                if (key === 'Stock_Journal_date') return [key, row['stock_journal_date'] ? ISOString(row['stock_journal_date']) : value]\r\n                if (key === 'Invoice_no') return [key, row['invoice_no'] ? row['invoice_no'] : value]\r\n                if (key === 'Stock_Journal_Bill_type') return [key, findObject(voucherType, 'Voucher_Type', row?.voucher_name)?.Type ?? value]\r\n                if (key === 'Stock_Journal_Voucher_type') return [key, row['voucher_name']]\r\n                if (key === 'Narration') return [key, (\r\n                    ' Broker: ' + (row['broker_name'] ?? ' - ') +\r\n                    '\\n Transporter: ' + (row['transporter_name'] ?? ' - ') +\r\n                    '\\n Loadman: ' + (row['loadman_name'] ?? ' - ') +\r\n                    '\\n Others1: ' + (row['othersone_name'] ?? ' - ') +\r\n                    '\\n Others2: ' + (row['otherstwo_name'] ?? ' - ') +\r\n                    '\\n Others3: ' + (row['othersthree_name'] ?? ' - ') +\r\n                    '\\n Others4: ' + (row['othersfour_name'] ?? ' - ') +\r\n                    '\\n Others5: ' + (row['othersfive_name'] ?? ' - ') +\r\n                    '\\n Others6: ' + (row['otherssix_name'] ?? ' - ') +\r\n                    '\\n\\n Narration: ' + (row['narration'] ?? ' - ')\r\n                )];\r\n                \r\n                return [key, value]\r\n            })\r\n        )\r\n\r\n        const DestinationDetails = row?.DestinationDetails?.map(destination => {\r\n            return Object.fromEntries(\r\n                Object.entries(initialDestinationValue).map(([key, value]) => {\r\n                    const productData = findObject(products, 'ERP_Id', destination['destina_consumt_item_id']);\r\n                    const godownData = findObject(godown, 'Godown_Tally_Id', destination['destina_consumt_goodown_id']);\r\n\r\n                    if (key === 'Dest_Item_Id') return [key, productData.Product_Id ?? value]\r\n                    if (key === 'Dest_Item_Name') return ['Product_Name', productData.Product_Name ?? value]\r\n                    if (key === 'Dest_Goodown_Id') return [key, godownData.Godown_Id ?? value]\r\n                    if (key === 'Dest_Batch_Lot_No') return [key, destination['destina_batch_Lot_No'] ?? value]\r\n                    if (key === 'Dest_Qty') return [key, destination['destina_consumt_qty'] ?? value]\r\n                    if (key === 'Dest_Unit_Id') return [key, productData.UOM_Id ?? value]\r\n                    if (key === 'Dest_Unit') return [key, productData.Units ?? value]\r\n                    if (key === 'Dest_Rate') return [key, destination['destina_consumt_rate'] ?? value]\r\n                    if (key === 'Dest_Amt') return [key, destination['destina_consumt_amt'] ?? value]\r\n\r\n                    return [key, value]\r\n                })\r\n            )\r\n        });\r\n\r\n        const SourceDetails = row?.SourceDetails?.map(source => {\r\n            return Object.fromEntries(\r\n                Object.entries(initialSoruceValue).map(([key, value]) => {\r\n                    const productData = findObject(products, 'ERP_Id', source['source_consumt_item_id']);\r\n                    const godownData = findObject(godown, 'Godown_Tally_Id', source['source_consumt_goodown_id']);\r\n\r\n                    if (key === 'Sour_Item_Id') return [key, productData.Product_Id ?? value]\r\n                    if (key === 'Sour_Item_Name') return ['Product_Name', productData.Product_Name ?? value]\r\n                    if (key === 'Sour_Goodown_Id') return [key, godownData.Godown_Id ?? value]\r\n                    if (key === 'Sour_Batch_Lot_No') return [key, source['source_batch_Lot_No'] ?? value]\r\n                    if (key === 'Sour_Qty') return [key, source['source_consumt_qty'] ?? value]\r\n                    if (key === 'Sour_Unit_Id') return [key, productData.UOM_Id ?? value]\r\n                    if (key === 'Sour_Unit') return [key, productData.Units ?? value]\r\n                    if (key === 'Sour_Rate') return [key, source['source_consumt_rate'] ?? value]\r\n                    if (key === 'Sour_Amt') return [key, source['source_consumt_amt'] ?? value]\r\n\r\n                    return [key, value]\r\n                })\r\n            )\r\n        });\r\n\r\n        // console.log({\r\n        //     ...GeneralInfo, SourceDetails, DestinationDetails, StaffsDetails: []\r\n        // })\r\n\r\n        navigate('/erp/inventory/stockJournal/create', {\r\n            state: {\r\n                ...GeneralInfo, SourceDetails, DestinationDetails, StaffsDetails: []\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title={\r\n                    \"Stock Journal (\"\r\n                    + (filters.fetchFrom ? ` From ${LocalDate(filters.fetchFrom)}` : '')\r\n                    + (filters.fetchTo ? ` To ${LocalDate(filters.fetchTo)}` : '') + ' )'\r\n                }\r\n                dataArray={sJournalData}\r\n                columns={[\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Action',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => (\r\n                            <ButtonActions\r\n                                buttonsData={[\r\n                                    {\r\n                                        name: 'Convert',\r\n                                        icon: <ReadMore />,\r\n                                        onclick: () => navToErpStockJournal(row)\r\n                                    },\r\n                                    {\r\n                                        name: 'Open',\r\n                                        icon: <Visibility />,\r\n                                        onclick: () => {\r\n                                            setFilters(pre => ({ ...pre, showDetailsDialog: true }));\r\n                                            setStockDetails({\r\n                                                rowDetails: { ...row, stock_journal_date: row.stock_journal_date ? LocalDate(row.stock_journal_date) : '' },\r\n                                                soruceDetails: row.SourceDetails,\r\n                                                destinationDetails: row.DestinationDetails\r\n                                            });\r\n                                        }\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        )\r\n                    },\r\n                    createCol(\"stock_journal_date\", \"date\", 'Date'),\r\n                    createCol(\"voucher_name\", \"string\", 'Tally Type'),\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'ERP Type',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => findObject(voucherType, 'Voucher_Type', row?.voucher_name)?.Type\r\n                    },\r\n                    createCol(\"journal_no\", \"string\", 'Journal No'),\r\n                    // {\r\n                    //     isVisible: 1,\r\n                    //     ColumnHeader: 'Source',\r\n                    //     isCustomCell: true,\r\n                    //     Cell: ({ row }) => (\r\n                    //         <table className=\"table table-bordered m-0\">\r\n                    //             <tbody>\r\n                    //                 {row?.SourceDetails?.map((source, index) => (\r\n                    //                     <tr className=\"py-1\" key={index}>\r\n                    //                         {/* <td className=\"fa-12\">{index + 1}</td> */}\r\n                    //                         <td className=\"fa-12\">{trimText(source?.stock_item_name)}</td>\r\n                    //                         <td className=\"fa-12 text-primary\">{NumberFormat(source?.source_consumt_qty)}</td>\r\n                    //                     </tr>\r\n                    //                 ))}\r\n                    //             </tbody>\r\n                    //         </table>\r\n                    //     )\r\n                    // },\r\n                    // {\r\n                    //     isVisible: 1,\r\n                    //     ColumnHeader: 'Destination',\r\n                    //     isCustomCell: true,\r\n                    //     Cell: ({ row }) => (\r\n                    //         <table className=\"table table-bordered m-0\">\r\n                    //             <tbody>\r\n                    //                 {row?.DestinationDetails?.map((destinaiton, index) => (\r\n                    //                     <tr className=\"py-1\" key={index}>\r\n                    //                         {/* <td className=\"fa-12\">{index + 1}</td> */}\r\n                    //                         <td className=\"fa-12\">{trimText(destinaiton?.stock_item_name)}</td>\r\n                    //                         <td className=\"fa-12 text-primary\">{NumberFormat(destinaiton?.destina_consumt_qty)}</td>\r\n                    //                     </tr>\r\n                    //                 ))}\r\n                    //             </tbody>\r\n                    //         </table>\r\n                    //     )\r\n                    // },\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Source',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => NumberFormat(row?.SourceDetails?.reduce((acc, source) => (\r\n                            Addition(acc, source?.source_consumt_qty)\r\n                        ), 0))\r\n                    },\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Destination',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => NumberFormat(row?.DestinationDetails?.reduce((acc, destinaiton) => (\r\n                            Addition(acc, destinaiton?.destina_consumt_qty)\r\n                        ), 0))\r\n                    },\r\n                    createCol(\"broker_name\", 'string', \"Broker\"),\r\n                    createCol(\"transporter_name\", 'string', \"Transporter\"),\r\n                    createCol(\"loadman_name\", 'string', \"Loadman\"),\r\n                    createCol(\"othersone_name\", 'string', \"Others 1\"),\r\n                    createCol(\"otherstwo_name\", 'string', \"Others 2\"),\r\n                    createCol(\"othersthree_name\", 'string', \"Others 3\"),\r\n                    // createCol(\"othersfour_name\", 'string', \"Others 4\"),\r\n                    // createCol(\"othersfive_name\", 'string', \"Others 5\"),\r\n                    // createCol(\"otherssix_name\", 'string', \"Others 6\"),\r\n\r\n                ]}\r\n                ButtonArea={\r\n                    <>\r\n                        <Tooltip title='Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                className=\"ms-2\"\r\n                                onClick={() => setFilters(pre => ({ ...pre, filterDialog: true }))}\r\n                            >\r\n                                <FilterAlt />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                }\r\n            />\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            const updatedFilters = {\r\n                                Fromdate: filters?.Fromdate,\r\n                                Todate: filters?.Todate\r\n                            };\r\n                            updateQueryString(updatedFilters);\r\n                            closeDialog();\r\n                        }}\r\n                        startIcon={<Search />}\r\n                        variant=\"outlined\"\r\n                    >Search</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={filters.showDetailsDialog}\r\n                onClose={closeDialog}\r\n                fullScreen\r\n            >\r\n                <DialogTitle>Details</DialogTitle>\r\n                <div className=\"d-flex p-2 flex-wrap\">\r\n                    {[\r\n                        { key: 'stock_journal_date', title: 'Date' },\r\n                        { key: 'broker_name', title: 'Broker' },\r\n                        { key: 'transporter_name', title: 'Transporter' },\r\n                        { key: 'loadman_name', title: 'Loadman' },\r\n                        { key: 'othersone_name', title: 'Others 1' },\r\n                        { key: 'otherstwo_name', title: 'Others 2' },\r\n                        { key: 'othersthree_name', title: 'Others 3' },\r\n                        { key: 'othersfour_name', title: 'Others 4' },\r\n                        { key: 'othersfive_name', title: 'Others 5' },\r\n                        { key: 'otherssix_name', title: 'Others 6' }\r\n                    ].map((o, i) => (\r\n                        <div key={i} className=\"d-flex justify-content-between p-2 border rounded-3 m-1\">\r\n                            <span className=\"px-2\">{o.title}</span>\r\n                            <span className=\"px-2\">{stockDetails.rowDetails[o.key] ?? '-'}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <DialogContent>\r\n                    <FilterableTable\r\n                        dataArray={stockDetails.soruceDetails}\r\n                        columns={[\r\n                            createCol(\"journal_no\", \"string\", \"Journal No\"),\r\n                            createCol(\"stock_item_name\", \"string\", \"Item Name\"),\r\n                            createCol(\"journal_date\", \"date\", \"Date\"),\r\n                            createCol(\"godown_name\", \"string\", \"Godown\"),\r\n                            createCol(\"source_batch_Lot_No\", \"string\", \"Batch/Lot No\"),\r\n                            createCol(\"source_consumt_qty\", \"number\", \"Quantity\"),\r\n                            createCol(\"source_consumt_rate\", \"number\", \"Rate\"),\r\n                            createCol(\"source_consumt_amt\", \"number\", \"Amount\"),\r\n                        ]}\r\n                        title=\"Source Details\"\r\n                        disablePagination\r\n                    />\r\n                    <br />\r\n                    <FilterableTable\r\n                        dataArray={stockDetails.destinationDetails}\r\n                        title=\"Destination Details\"\r\n                        columns={[\r\n                            createCol(\"journal_no\", \"string\", \"Journal No\"),\r\n                            createCol(\"stock_item_name\", \"string\", \"Item Name\"),\r\n                            createCol(\"godown_name\", \"string\", \"Godown\"),\r\n                            createCol(\"journal_date\", \"date\", \"Date\"),\r\n                            createCol(\"destina_batch_Lot_No\", \"string\", \"Batch/Lot No\"),\r\n                            createCol(\"destina_consumt_qty\", \"number\", \"Quantity\"),\r\n                            createCol(\"destina_consumt_rate\", \"number\", \"Rate\"),\r\n                            createCol(\"destina_consumt_amt\", \"number\", \"Amount\"),\r\n                        ]}\r\n                        disablePagination\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog} variant=\"outlined\">close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TallyStockJournalList;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');"],"names":["preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","concat","key","Field_Name","createCol","field","arguments","length","undefined","type","align","verticalAlign","_objectSpread","Fied_Data","ButtonActions","_ref","buttonsData","ToolTipText","anchorEl","setAnchorEl","useState","popOverOpen","Boolean","_jsxs","_Fragment","children","_jsx","Tooltip","title","IconButton","onClick","event","currentTarget","className","size","MoreVert","Popover","open","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","onclick","disabled","ListItemIcon","icon","ListItemText","name","FilterableTable","_ref2","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","RowComp","_ref3","setOpen","fontSize","Fragment","TableRow","TableCell","sx","pre","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isEqualNumber","isCommonValue","horizondalalignClass","find","verticalAlignClass","Object","entries","_ref4","value","console","log","colSpan","Number","Card","component","Paper","ToggleOn","color","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","backgroundColor","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","createSvgIcon","d","defaultFilters","Fromdate","ISOString","Todate","findObject","_arr$find","obj","loadingOn","loadingOff","navigate","useNavigate","location","useLocation","query","URLSearchParams","search","user","getSessionUser","products","setProducts","godown","setGodown","voucherType","setVoucherType","sJournalData","setSJournalData","stockDetails","setStockDetails","soruceDetails","destinationDetails","rowDetails","filters","setFilters","fetchFrom","fetchTo","refresh","filterDialog","showDetailsDialog","useEffect","fetchLink","address","Company_id","then","success","catch","finally","queryFilters","get","isValidDate","async","productsResponse","godownLocationsResponse","voucherTypeResponse","Promise","all","productsData","Product_Name","localeCompare","godownLocations","Godown_Name","Voucher_Type","fetchData","closeDialog","_ref5","ReadMore","_row$DestinationDetai","_row$SourceDetails","GeneralInfo","fromEntries","initialStockJournalInfoValues","_findObject$Type","_findObject","_row$broker_name","_row$transporter_name","_row$loadman_name","_row$othersone_name","_row$otherstwo_name","_row$othersthree_name","_row$othersfour_name","_row$othersfive_name","_row$otherssix_name","_row$narration","voucher_name","Type","DestinationDetails","destination","initialDestinationValue","_productData$Product_","_productData$Product_2","_godownData$Godown_Id","_destination$destina_","_destination$destina_2","_productData$UOM_Id","_productData$Units","_destination$destina_3","_destination$destina_4","productData","godownData","Product_Id","Godown_Id","UOM_Id","Units","SourceDetails","source","initialSoruceValue","_productData$Product_3","_productData$Product_4","_godownData$Godown_Id2","_source$source_batch_","_source$source_consum","_productData$UOM_Id2","_productData$Units2","_source$source_consum2","_source$source_consum3","state","StaffsDetails","navToErpStockJournal","Visibility","stock_journal_date","_ref6","_findObject2","_ref7","_row$SourceDetails2","reduce","acc","Addition","source_consumt_qty","_ref8","_row$DestinationDetai2","destinaiton","destina_consumt_qty","FilterAlt","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","style","onChange","DialogActions","Button","newFilters","params","toString","updateQueryString","startIcon","Search","variant","fullScreen","_stockDetails$rowDeta"],"sourceRoot":""}
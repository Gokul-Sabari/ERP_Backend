{"version":3,"file":"static/js/2860.7fb92df2.chunk.js","mappings":"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","sources":["Pages/Payments/PaymentReport/pendingReference.jsx","../node_modules/@mui/icons-material/esm/ClearAll.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { ISOString, isValidDate, Subraction } from \"../../../Components/functions\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { ClearAll, FilterAlt, Search } from \"@mui/icons-material\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst PaymentReference = ({ loadingOn, loadingOff }) => {\r\n    const [reportData, setReportData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        refresh: false,\r\n        filterDialog: false,\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const query = useQuery();\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n        };\r\n        setFilters(pre => ({ ...pre, Fromdate: queryFilters.Fromdate, Todate: queryFilters.Todate }));\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n        const Fromdate = (stateDetails?.Fromdate && isValidDate(stateDetails?.Fromdate)) ? ISOString(stateDetails?.Fromdate) : null;\r\n        const Todate = (stateDetails?.Todate && isValidDate(stateDetails?.Todate)) ? ISOString(stateDetails?.Todate) : null;\r\n        if (Fromdate && Todate) {\r\n            updateQueryString({ Fromdate, Todate });\r\n            setFilters(pre => ({\r\n                ...pre,\r\n                Fromdate: ISOString(stateDetails.Fromdate),\r\n                Todate: stateDetails.Todate\r\n            }));\r\n        }\r\n    }, [stateDetails])\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `payment/reports/pendingReference?Fromdate=${filters.Fromdate}&Todate=${filters.Todate}`,\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setReportData(data.data);\r\n            }\r\n        }).catch(e => console.log(e))\r\n    }, [filters.refresh])\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setFilters(pre => ({\r\n            ...pre,\r\n            filterDialog: false,\r\n        }));\r\n    }\r\n\r\n    const refreshData = () => {\r\n        setFilters(pre => ({\r\n            ...pre,\r\n            refresh: !pre.refresh,\r\n        }));\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title=\"Pending Reference\"\r\n                headerFontSizePx={13}\r\n                bodyFontSizePx={12}\r\n                dataArray={reportData}\r\n                ButtonArea={\r\n                    <>\r\n                        <IconButton\r\n                            onClick={() => setFilters(pre => ({...pre, filterDialog: true}))}\r\n                        ><FilterAlt /></IconButton>\r\n                    </>\r\n                }\r\n                columns={[\r\n                    createCol('payment_invoice_no', 'string', 'PaymentID'),\r\n                    createCol('payment_date', 'date', 'Date'),\r\n                    createCol('debit_ledger_name', 'string', 'Debit Acc'),\r\n                    createCol('credit_ledger_name', 'string', 'Credit Acc'),\r\n                    createCol('debit_amount', 'number', 'Payed'),\r\n                    createCol('total_referenced', 'number', 'Reference added'),\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Pending Reference',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => Subraction(row.debit_amount, row.total_referenced)\r\n                    }\r\n                ]}\r\n            />\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                {/* from date */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* to date */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions className=\"d-flex align-items-center justify-content-between\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={() => {\r\n                            setFilters(pre => ({\r\n                                ...pre,\r\n                                ...defaultFilters\r\n                            }))\r\n                        }}\r\n                        startIcon={<ClearAll />}\r\n                    >clear</Button>\r\n                    <span>\r\n                        <Button onClick={closeDialog}>close</Button>\r\n                        <Button\r\n                            onClick={() => {\r\n                                closeDialog();\r\n                                const updatedFilters = {\r\n                                    Fromdate: filters?.Fromdate,\r\n                                    Todate: filters?.Todate\r\n                                };\r\n                                updateQueryString(updatedFilters);\r\n                                refreshData();\r\n                            }}\r\n                            startIcon={<Search />}\r\n                            variant=\"contained\"\r\n                        >Search</Button>\r\n                    </span>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentReference;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAll');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["defaultFilters","Fromdate","ISOString","Todate","_ref","loadingOn","loadingOff","reportData","setReportData","useState","filters","setFilters","refresh","filterDialog","navigate","useNavigate","location","useLocation","stateDetails","state","query","URLSearchParams","search","useEffect","queryFilters","get","isValidDate","pre","updateQueryString","fetchLink","address","then","data","success","catch","e","console","log","newFilters","params","toString","replace","closeDialog","_jsxs","_Fragment","children","_jsx","FilterableTable","title","headerFontSizePx","bodyFontSizePx","dataArray","ButtonArea","IconButton","onClick","FilterAlt","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref2","row","Subraction","debit_amount","total_referenced","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","className","style","verticalAlign","type","value","onChange","target","DialogActions","Button","variant","startIcon","ClearAll","updatedFilters","Search","createSvgIcon","d"],"sourceRoot":""}
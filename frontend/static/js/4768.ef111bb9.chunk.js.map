{"version":3,"file":"static/js/4768.ef111bb9.chunk.js","mappings":"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","sources":["../node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js","../node_modules/chart.js/auto/auto.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.colors.ts","../node_modules/chart.js/src/plugins/plugin.decimation.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/chart.js/src/index.ts","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js"],"sourcesContent":["/*!\n * chartjs-plugin-datalabels v2.2.0\n * https://chartjs-plugin-datalabels.netlify.app\n * (c) 2017-2022 chartjs-plugin-datalabels contributors\n * Released under the MIT license\n */\nimport { isNullOrUndef, merge, toFont, resolve, toPadding, valueOrDefault, callback, isObject, each } from 'chart.js/helpers';\nimport { defaults as defaults$1, ArcElement, PointElement, BarElement } from 'chart.js';\n\nvar devicePixelRatio = (function() {\n  if (typeof window !== 'undefined') {\n    if (window.devicePixelRatio) {\n      return window.devicePixelRatio;\n    }\n\n    // devicePixelRatio is undefined on IE10\n    // https://stackoverflow.com/a/20204180/8837887\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\n    var screen = window.screen;\n    if (screen) {\n      return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\n    }\n  }\n\n  return 1;\n}());\n\nvar utils = {\n  // @todo move this in Chart.helpers.toTextLines\n  toTextLines: function(inputs) {\n    var lines = [];\n    var input;\n\n    inputs = [].concat(inputs);\n    while (inputs.length) {\n      input = inputs.pop();\n      if (typeof input === 'string') {\n        lines.unshift.apply(lines, input.split('\\n'));\n      } else if (Array.isArray(input)) {\n        inputs.push.apply(inputs, input);\n      } else if (!isNullOrUndef(inputs)) {\n        lines.unshift('' + input);\n      }\n    }\n\n    return lines;\n  },\n\n  // @todo move this in Chart.helpers.canvas.textSize\n  // @todo cache calls of measureText if font doesn't change?!\n  textSize: function(ctx, lines, font) {\n    var items = [].concat(lines);\n    var ilen = items.length;\n    var prev = ctx.font;\n    var width = 0;\n    var i;\n\n    ctx.font = font.string;\n\n    for (i = 0; i < ilen; ++i) {\n      width = Math.max(ctx.measureText(items[i]).width, width);\n    }\n\n    ctx.font = prev;\n\n    return {\n      height: ilen * font.lineHeight,\n      width: width\n    };\n  },\n\n  /**\n   * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\n   * @todo move this method in Chart.helpers.bound\n   * https://doc.qt.io/qt-5/qtglobal.html#qBound\n   */\n  bound: function(min, value, max) {\n    return Math.max(min, Math.min(value, max));\n  },\n\n  /**\n   * Returns an array of pair [value, state] where state is:\n   * * -1: value is only in a0 (removed)\n   * *  1: value is only in a1 (added)\n   */\n  arrayDiff: function(a0, a1) {\n    var prev = a0.slice();\n    var updates = [];\n    var i, j, ilen, v;\n\n    for (i = 0, ilen = a1.length; i < ilen; ++i) {\n      v = a1[i];\n      j = prev.indexOf(v);\n\n      if (j === -1) {\n        updates.push([v, 1]);\n      } else {\n        prev.splice(j, 1);\n      }\n    }\n\n    for (i = 0, ilen = prev.length; i < ilen; ++i) {\n      updates.push([prev[i], -1]);\n    }\n\n    return updates;\n  },\n\n  /**\n   * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\n   */\n  rasterize: function(v) {\n    return Math.round(v * devicePixelRatio) / devicePixelRatio;\n  }\n};\n\nfunction orient(point, origin) {\n  var x0 = origin.x;\n  var y0 = origin.y;\n\n  if (x0 === null) {\n    return {x: 0, y: -1};\n  }\n  if (y0 === null) {\n    return {x: 1, y: 0};\n  }\n\n  var dx = point.x - x0;\n  var dy = point.y - y0;\n  var ln = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: ln ? dx / ln : 0,\n    y: ln ? dy / ln : -1\n  };\n}\n\nfunction aligned(x, y, vx, vy, align) {\n  switch (align) {\n  case 'center':\n    vx = vy = 0;\n    break;\n  case 'bottom':\n    vx = 0;\n    vy = 1;\n    break;\n  case 'right':\n    vx = 1;\n    vy = 0;\n    break;\n  case 'left':\n    vx = -1;\n    vy = 0;\n    break;\n  case 'top':\n    vx = 0;\n    vy = -1;\n    break;\n  case 'start':\n    vx = -vx;\n    vy = -vy;\n    break;\n  case 'end':\n    // keep natural orientation\n    break;\n  default:\n    // clockwise rotation (in degree)\n    align *= (Math.PI / 180);\n    vx = Math.cos(align);\n    vy = Math.sin(align);\n    break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    vx: vx,\n    vy: vy\n  };\n}\n\n// Line clipping (Cohen–Sutherland algorithm)\n// https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\n\nvar R_INSIDE = 0;\nvar R_LEFT = 1;\nvar R_RIGHT = 2;\nvar R_BOTTOM = 4;\nvar R_TOP = 8;\n\nfunction region(x, y, rect) {\n  var res = R_INSIDE;\n\n  if (x < rect.left) {\n    res |= R_LEFT;\n  } else if (x > rect.right) {\n    res |= R_RIGHT;\n  }\n  if (y < rect.top) {\n    res |= R_TOP;\n  } else if (y > rect.bottom) {\n    res |= R_BOTTOM;\n  }\n\n  return res;\n}\n\nfunction clipped(segment, area) {\n  var x0 = segment.x0;\n  var y0 = segment.y0;\n  var x1 = segment.x1;\n  var y1 = segment.y1;\n  var r0 = region(x0, y0, area);\n  var r1 = region(x1, y1, area);\n  var r, x, y;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (!(r0 | r1) || (r0 & r1)) {\n      // both points inside or on the same side: no clipping\n      break;\n    }\n\n    // at least one point is outside\n    r = r0 || r1;\n\n    if (r & R_TOP) {\n      x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\n      y = area.top;\n    } else if (r & R_BOTTOM) {\n      x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\n      y = area.bottom;\n    } else if (r & R_RIGHT) {\n      y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\n      x = area.right;\n    } else if (r & R_LEFT) {\n      y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\n      x = area.left;\n    }\n\n    if (r === r0) {\n      x0 = x;\n      y0 = y;\n      r0 = region(x0, y0, area);\n    } else {\n      x1 = x;\n      y1 = y;\n      r1 = region(x1, y1, area);\n    }\n  }\n\n  return {\n    x0: x0,\n    x1: x1,\n    y0: y0,\n    y1: y1\n  };\n}\n\nfunction compute$1(range, config) {\n  var anchor = config.anchor;\n  var segment = range;\n  var x, y;\n\n  if (config.clamp) {\n    segment = clipped(segment, config.area);\n  }\n\n  if (anchor === 'start') {\n    x = segment.x0;\n    y = segment.y0;\n  } else if (anchor === 'end') {\n    x = segment.x1;\n    y = segment.y1;\n  } else {\n    x = (segment.x0 + segment.x1) / 2;\n    y = (segment.y0 + segment.y1) / 2;\n  }\n\n  return aligned(x, y, range.vx, range.vy, config.align);\n}\n\nvar positioners = {\n  arc: function(el, config) {\n    var angle = (el.startAngle + el.endAngle) / 2;\n    var vx = Math.cos(angle);\n    var vy = Math.sin(angle);\n    var r0 = el.innerRadius;\n    var r1 = el.outerRadius;\n\n    return compute$1({\n      x0: el.x + vx * r0,\n      y0: el.y + vy * r0,\n      x1: el.x + vx * r1,\n      y1: el.y + vy * r1,\n      vx: vx,\n      vy: vy\n    }, config);\n  },\n\n  point: function(el, config) {\n    var v = orient(el, config.origin);\n    var rx = v.x * el.options.radius;\n    var ry = v.y * el.options.radius;\n\n    return compute$1({\n      x0: el.x - rx,\n      y0: el.y - ry,\n      x1: el.x + rx,\n      y1: el.y + ry,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  bar: function(el, config) {\n    var v = orient(el, config.origin);\n    var x = el.x;\n    var y = el.y;\n    var sx = 0;\n    var sy = 0;\n\n    if (el.horizontal) {\n      x = Math.min(el.x, el.base);\n      sx = Math.abs(el.base - el.x);\n    } else {\n      y = Math.min(el.y, el.base);\n      sy = Math.abs(el.base - el.y);\n    }\n\n    return compute$1({\n      x0: x,\n      y0: y + sy,\n      x1: x + sx,\n      y1: y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  fallback: function(el, config) {\n    var v = orient(el, config.origin);\n\n    return compute$1({\n      x0: el.x,\n      y0: el.y,\n      x1: el.x + (el.width || 0),\n      y1: el.y + (el.height || 0),\n      vx: v.x,\n      vy: v.y\n    }, config);\n  }\n};\n\nvar rasterize = utils.rasterize;\n\nfunction boundingRects(model) {\n  var borderWidth = model.borderWidth || 0;\n  var padding = model.padding;\n  var th = model.size.height;\n  var tw = model.size.width;\n  var tx = -tw / 2;\n  var ty = -th / 2;\n\n  return {\n    frame: {\n      x: tx - padding.left - borderWidth,\n      y: ty - padding.top - borderWidth,\n      w: tw + padding.width + borderWidth * 2,\n      h: th + padding.height + borderWidth * 2\n    },\n    text: {\n      x: tx,\n      y: ty,\n      w: tw,\n      h: th\n    }\n  };\n}\n\nfunction getScaleOrigin(el, context) {\n  var scale = context.chart.getDatasetMeta(context.datasetIndex).vScale;\n\n  if (!scale) {\n    return null;\n  }\n\n  if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\n    return {x: scale.xCenter, y: scale.yCenter};\n  }\n\n  var pixel = scale.getBasePixel();\n  return el.horizontal ?\n    {x: pixel, y: null} :\n    {x: null, y: pixel};\n}\n\nfunction getPositioner(el) {\n  if (el instanceof ArcElement) {\n    return positioners.arc;\n  }\n  if (el instanceof PointElement) {\n    return positioners.point;\n  }\n  if (el instanceof BarElement) {\n    return positioners.bar;\n  }\n  return positioners.fallback;\n}\n\nfunction drawRoundedRect(ctx, x, y, w, h, radius) {\n  var HALF_PI = Math.PI / 2;\n\n  if (radius) {\n    var r = Math.min(radius, h / 2, w / 2);\n    var left = x + r;\n    var top = y + r;\n    var right = x + w - r;\n    var bottom = y + h - r;\n\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, Math.PI);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, Math.PI + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, 0);\n      ctx.arc(left, bottom, r, 0, Math.PI);\n    } else {\n      ctx.arc(left, top, r, -Math.PI, Math.PI);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, w, h);\n  }\n}\n\nfunction drawFrame(ctx, rect, model) {\n  var bgColor = model.backgroundColor;\n  var borderColor = model.borderColor;\n  var borderWidth = model.borderWidth;\n\n  if (!bgColor && (!borderColor || !borderWidth)) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  drawRoundedRect(\n    ctx,\n    rasterize(rect.x) + borderWidth / 2,\n    rasterize(rect.y) + borderWidth / 2,\n    rasterize(rect.w) - borderWidth,\n    rasterize(rect.h) - borderWidth,\n    model.borderRadius);\n\n  ctx.closePath();\n\n  if (bgColor) {\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n  }\n\n  if (borderColor && borderWidth) {\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = 'miter';\n    ctx.stroke();\n  }\n}\n\nfunction textGeometry(rect, align, font) {\n  var h = font.lineHeight;\n  var w = rect.w;\n  var x = rect.x;\n  var y = rect.y + h / 2;\n\n  if (align === 'center') {\n    x += w / 2;\n  } else if (align === 'end' || align === 'right') {\n    x += w;\n  }\n\n  return {\n    h: h,\n    w: w,\n    x: x,\n    y: y\n  };\n}\n\nfunction drawTextLine(ctx, text, cfg) {\n  var shadow = ctx.shadowBlur;\n  var stroked = cfg.stroked;\n  var x = rasterize(cfg.x);\n  var y = rasterize(cfg.y);\n  var w = rasterize(cfg.w);\n\n  if (stroked) {\n    ctx.strokeText(text, x, y, w);\n  }\n\n  if (cfg.filled) {\n    if (shadow && stroked) {\n      // Prevent drawing shadow on both the text stroke and fill, so\n      // if the text is stroked, remove the shadow for the text fill.\n      ctx.shadowBlur = 0;\n    }\n\n    ctx.fillText(text, x, y, w);\n\n    if (shadow && stroked) {\n      ctx.shadowBlur = shadow;\n    }\n  }\n}\n\nfunction drawText(ctx, lines, rect, model) {\n  var align = model.textAlign;\n  var color = model.color;\n  var filled = !!color;\n  var font = model.font;\n  var ilen = lines.length;\n  var strokeColor = model.textStrokeColor;\n  var strokeWidth = model.textStrokeWidth;\n  var stroked = strokeColor && strokeWidth;\n  var i;\n\n  if (!ilen || (!filled && !stroked)) {\n    return;\n  }\n\n  // Adjust coordinates based on text alignment and line height\n  rect = textGeometry(rect, align, font);\n\n  ctx.font = font.string;\n  ctx.textAlign = align;\n  ctx.textBaseline = 'middle';\n  ctx.shadowBlur = model.textShadowBlur;\n  ctx.shadowColor = model.textShadowColor;\n\n  if (filled) {\n    ctx.fillStyle = color;\n  }\n  if (stroked) {\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = strokeColor;\n  }\n\n  for (i = 0, ilen = lines.length; i < ilen; ++i) {\n    drawTextLine(ctx, lines[i], {\n      stroked: stroked,\n      filled: filled,\n      w: rect.w,\n      x: rect.x,\n      y: rect.y + rect.h * i\n    });\n  }\n}\n\nvar Label = function(config, ctx, el, index) {\n  var me = this;\n\n  me._config = config;\n  me._index = index;\n  me._model = null;\n  me._rects = null;\n  me._ctx = ctx;\n  me._el = el;\n};\n\nmerge(Label.prototype, {\n  /**\n   * @private\n   */\n  _modelize: function(display, lines, config, context) {\n    var me = this;\n    var index = me._index;\n    var font = toFont(resolve([config.font, {}], context, index));\n    var color = resolve([config.color, defaults$1.color], context, index);\n\n    return {\n      align: resolve([config.align, 'center'], context, index),\n      anchor: resolve([config.anchor, 'center'], context, index),\n      area: context.chart.chartArea,\n      backgroundColor: resolve([config.backgroundColor, null], context, index),\n      borderColor: resolve([config.borderColor, null], context, index),\n      borderRadius: resolve([config.borderRadius, 0], context, index),\n      borderWidth: resolve([config.borderWidth, 0], context, index),\n      clamp: resolve([config.clamp, false], context, index),\n      clip: resolve([config.clip, false], context, index),\n      color: color,\n      display: display,\n      font: font,\n      lines: lines,\n      offset: resolve([config.offset, 4], context, index),\n      opacity: resolve([config.opacity, 1], context, index),\n      origin: getScaleOrigin(me._el, context),\n      padding: toPadding(resolve([config.padding, 4], context, index)),\n      positioner: getPositioner(me._el),\n      rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\n      size: utils.textSize(me._ctx, lines, font),\n      textAlign: resolve([config.textAlign, 'start'], context, index),\n      textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\n      textShadowColor: resolve([config.textShadowColor, color], context, index),\n      textStrokeColor: resolve([config.textStrokeColor, color], context, index),\n      textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\n    };\n  },\n\n  update: function(context) {\n    var me = this;\n    var model = null;\n    var rects = null;\n    var index = me._index;\n    var config = me._config;\n    var value, label, lines;\n\n    // We first resolve the display option (separately) to avoid computing\n    // other options in case the label is hidden (i.e. display: false).\n    var display = resolve([config.display, true], context, index);\n\n    if (display) {\n      value = context.dataset.data[index];\n      label = valueOrDefault(callback(config.formatter, [value, context]), value);\n      lines = isNullOrUndef(label) ? [] : utils.toTextLines(label);\n\n      if (lines.length) {\n        model = me._modelize(display, lines, config, context);\n        rects = boundingRects(model);\n      }\n    }\n\n    me._model = model;\n    me._rects = rects;\n  },\n\n  geometry: function() {\n    return this._rects ? this._rects.frame : {};\n  },\n\n  rotation: function() {\n    return this._model ? this._model.rotation : 0;\n  },\n\n  visible: function() {\n    return this._model && this._model.opacity;\n  },\n\n  model: function() {\n    return this._model;\n  },\n\n  draw: function(chart, center) {\n    var me = this;\n    var ctx = chart.ctx;\n    var model = me._model;\n    var rects = me._rects;\n    var area;\n\n    if (!this.visible()) {\n      return;\n    }\n\n    ctx.save();\n\n    if (model.clip) {\n      area = model.area;\n      ctx.beginPath();\n      ctx.rect(\n        area.left,\n        area.top,\n        area.right - area.left,\n        area.bottom - area.top);\n      ctx.clip();\n    }\n\n    ctx.globalAlpha = utils.bound(0, model.opacity, 1);\n    ctx.translate(rasterize(center.x), rasterize(center.y));\n    ctx.rotate(model.rotation);\n\n    drawFrame(ctx, rects.frame, model);\n    drawText(ctx, model.lines, rects.text, model);\n\n    ctx.restore();\n  }\n});\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991; // eslint-disable-line es/no-number-minsafeinteger\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;  // eslint-disable-line es/no-number-maxsafeinteger\n\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nfunction projected(points, axis) {\n  var min = MAX_INTEGER;\n  var max = MIN_INTEGER;\n  var origin = axis.origin;\n  var i, pt, vx, vy, dp;\n\n  for (i = 0; i < points.length; ++i) {\n    pt = points[i];\n    vx = pt.x - origin.x;\n    vy = pt.y - origin.y;\n    dp = axis.vx * vx + axis.vy * vy;\n    min = Math.min(min, dp);\n    max = Math.max(max, dp);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction toAxis(p0, p1) {\n  var vx = p1.x - p0.x;\n  var vy = p1.y - p0.y;\n  var ln = Math.sqrt(vx * vx + vy * vy);\n\n  return {\n    vx: (p1.x - p0.x) / ln,\n    vy: (p1.y - p0.y) / ln,\n    origin: p0,\n    ln: ln\n  };\n}\n\nvar HitBox = function() {\n  this._rotation = 0;\n  this._rect = {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  };\n};\n\nmerge(HitBox.prototype, {\n  center: function() {\n    var r = this._rect;\n    return {\n      x: r.x + r.w / 2,\n      y: r.y + r.h / 2\n    };\n  },\n\n  update: function(center, rect, rotation) {\n    this._rotation = rotation;\n    this._rect = {\n      x: rect.x + center.x,\n      y: rect.y + center.y,\n      w: rect.w,\n      h: rect.h\n    };\n  },\n\n  contains: function(point) {\n    var me = this;\n    var margin = 1;\n    var rect = me._rect;\n\n    point = rotated(point, me.center(), -me._rotation);\n\n    return !(point.x < rect.x - margin\n      || point.y < rect.y - margin\n      || point.x > rect.x + rect.w + margin * 2\n      || point.y > rect.y + rect.h + margin * 2);\n  },\n\n  // Separating Axis Theorem\n  // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\n  intersects: function(other) {\n    var r0 = this._points();\n    var r1 = other._points();\n    var axes = [\n      toAxis(r0[0], r0[1]),\n      toAxis(r0[0], r0[3])\n    ];\n    var i, pr0, pr1;\n\n    if (this._rotation !== other._rotation) {\n      // Only separate with r1 axis if the rotation is different,\n      // else it's enough to separate r0 and r1 with r0 axis only!\n      axes.push(\n        toAxis(r1[0], r1[1]),\n        toAxis(r1[0], r1[3])\n      );\n    }\n\n    for (i = 0; i < axes.length; ++i) {\n      pr0 = projected(r0, axes[i]);\n      pr1 = projected(r1, axes[i]);\n\n      if (pr0.max < pr1.min || pr1.max < pr0.min) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * @private\n   */\n  _points: function() {\n    var me = this;\n    var rect = me._rect;\n    var angle = me._rotation;\n    var center = me.center();\n\n    return [\n      rotated({x: rect.x, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y + rect.h}, center, angle),\n      rotated({x: rect.x, y: rect.y + rect.h}, center, angle)\n    ];\n  }\n});\n\nfunction coordinates(el, model, geometry) {\n  var point = model.positioner(el, model);\n  var vx = point.vx;\n  var vy = point.vy;\n\n  if (!vx && !vy) {\n    // if aligned center, we don't want to offset the center point\n    return {x: point.x, y: point.y};\n  }\n\n  var w = geometry.w;\n  var h = geometry.h;\n\n  // take in account the label rotation\n  var rotation = model.rotation;\n  var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\n  var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation));\n\n  // scale the unit vector (vx, vy) to get at least dx or dy equal to\n  // w or h respectively (else we would calculate the distance to the\n  // ellipse inscribed in the bounding rect)\n  var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\n  dx *= vx * vs;\n  dy *= vy * vs;\n\n  // finally, include the explicit offset\n  dx += model.offset * vx;\n  dy += model.offset * vy;\n\n  return {\n    x: point.x + dx,\n    y: point.y + dy\n  };\n}\n\nfunction collide(labels, collider) {\n  var i, j, s0, s1;\n\n  // IMPORTANT Iterate in the reverse order since items at the end of the\n  // list have an higher weight/priority and thus should be less impacted\n  // by the overlapping strategy.\n\n  for (i = labels.length - 1; i >= 0; --i) {\n    s0 = labels[i].$layout;\n\n    for (j = i - 1; j >= 0 && s0._visible; --j) {\n      s1 = labels[j].$layout;\n\n      if (s1._visible && s0._box.intersects(s1._box)) {\n        collider(s0, s1);\n      }\n    }\n  }\n\n  return labels;\n}\n\nfunction compute(labels) {\n  var i, ilen, label, state, geometry, center, proxy;\n\n  // Initialize labels for overlap detection\n  for (i = 0, ilen = labels.length; i < ilen; ++i) {\n    label = labels[i];\n    state = label.$layout;\n\n    if (state._visible) {\n      // Chart.js 3 removed el._model in favor of getProps(), making harder to\n      // abstract reading values in positioners. Also, using string arrays to\n      // read values (i.e. var {a,b,c} = el.getProps([\"a\",\"b\",\"c\"])) would make\n      // positioners inefficient in the normal case (i.e. not the final values)\n      // and the code a bit ugly, so let's use a Proxy instead.\n      proxy = new Proxy(label._el, {get: (el, p) => el.getProps([p], true)[p]});\n\n      geometry = label.geometry();\n      center = coordinates(proxy, label.model(), geometry);\n      state._box.update(center, geometry, label.rotation());\n    }\n  }\n\n  // Auto hide overlapping labels\n  return collide(labels, function(s0, s1) {\n    var h0 = s0._hidable;\n    var h1 = s1._hidable;\n\n    if ((h0 && h1) || h1) {\n      s1._visible = false;\n    } else if (h0) {\n      s0._visible = false;\n    }\n  });\n}\n\nvar layout = {\n  prepare: function(datasets) {\n    var labels = [];\n    var i, j, ilen, jlen, label;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\n        label = datasets[i][j];\n        labels.push(label);\n        label.$layout = {\n          _box: new HitBox(),\n          _hidable: false,\n          _visible: true,\n          _set: i,\n          _idx: label._index\n        };\n      }\n    }\n\n    // TODO New `z` option: labels with a higher z-index are drawn\n    // of top of the ones with a lower index. Lowest z-index labels\n    // are also discarded first when hiding overlapping labels.\n    labels.sort(function(a, b) {\n      var sa = a.$layout;\n      var sb = b.$layout;\n\n      return sa._idx === sb._idx\n        ? sb._set - sa._set\n        : sb._idx - sa._idx;\n    });\n\n    this.update(labels);\n\n    return labels;\n  },\n\n  update: function(labels) {\n    var dirty = false;\n    var i, ilen, label, model, state;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      model = label.model();\n      state = label.$layout;\n      state._hidable = model && model.display === 'auto';\n      state._visible = label.visible();\n      dirty |= state._hidable;\n    }\n\n    if (dirty) {\n      compute(labels);\n    }\n  },\n\n  lookup: function(labels, point) {\n    var i, state;\n\n    // IMPORTANT Iterate in the reverse order since items at the end of\n    // the list have an higher z-index, thus should be picked first.\n\n    for (i = labels.length - 1; i >= 0; --i) {\n      state = labels[i].$layout;\n\n      if (state && state._visible && state._box.contains(point)) {\n        return labels[i];\n      }\n    }\n\n    return null;\n  },\n\n  draw: function(chart, labels) {\n    var i, ilen, label, state, geometry, center;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      state = label.$layout;\n\n      if (state._visible) {\n        geometry = label.geometry();\n        center = coordinates(label._el, label.model(), geometry);\n        state._box.update(center, geometry, label.rotation());\n        label.draw(chart, center);\n      }\n    }\n  }\n};\n\nvar formatter = function(value) {\n  if (isNullOrUndef(value)) {\n    return null;\n  }\n\n  var label = value;\n  var keys, klen, k;\n  if (isObject(value)) {\n    if (!isNullOrUndef(value.label)) {\n      label = value.label;\n    } else if (!isNullOrUndef(value.r)) {\n      label = value.r;\n    } else {\n      label = '';\n      keys = Object.keys(value);\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\n      }\n    }\n  }\n\n  return '' + label;\n};\n\n/**\n * IMPORTANT: make sure to also update tests and TypeScript definition\n * files (`/test/specs/defaults.spec.js` and `/types/options.d.ts`)\n */\n\nvar defaults = {\n  align: 'center',\n  anchor: 'center',\n  backgroundColor: null,\n  borderColor: null,\n  borderRadius: 0,\n  borderWidth: 0,\n  clamp: false,\n  clip: false,\n  color: undefined,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: 1.2,\n    size: undefined,\n    style: undefined,\n    weight: null\n  },\n  formatter: formatter,\n  labels: undefined,\n  listeners: {},\n  offset: 4,\n  opacity: 1,\n  padding: {\n    top: 4,\n    right: 4,\n    bottom: 4,\n    left: 4\n  },\n  rotation: 0,\n  textAlign: 'start',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  textShadowBlur: 0,\n  textShadowColor: undefined\n};\n\n/**\n * @see https://github.com/chartjs/Chart.js/issues/4176\n */\n\nvar EXPANDO_KEY = '$datalabels';\nvar DEFAULT_KEY = '$default';\n\nfunction configure(dataset, options) {\n  var override = dataset.datalabels;\n  var listeners = {};\n  var configs = [];\n  var labels, keys;\n\n  if (override === false) {\n    return null;\n  }\n  if (override === true) {\n    override = {};\n  }\n\n  options = merge({}, [options, override]);\n  labels = options.labels || {};\n  keys = Object.keys(labels);\n  delete options.labels;\n\n  if (keys.length) {\n    keys.forEach(function(key) {\n      if (labels[key]) {\n        configs.push(merge({}, [\n          options,\n          labels[key],\n          {_key: key}\n        ]));\n      }\n    });\n  } else {\n    // Default label if no \"named\" label defined.\n    configs.push(options);\n  }\n\n  // listeners: {<event-type>: {<label-key>: <fn>}}\n  listeners = configs.reduce(function(target, config) {\n    each(config.listeners || {}, function(fn, event) {\n      target[event] = target[event] || {};\n      target[event][config._key || DEFAULT_KEY] = fn;\n    });\n\n    delete config.listeners;\n    return target;\n  }, {});\n\n  return {\n    labels: configs,\n    listeners: listeners\n  };\n}\n\nfunction dispatchEvent(chart, listeners, label, event) {\n  if (!listeners) {\n    return;\n  }\n\n  var context = label.$context;\n  var groups = label.$groups;\n  var callback$1;\n\n  if (!listeners[groups._set]) {\n    return;\n  }\n\n  callback$1 = listeners[groups._set][groups._key];\n  if (!callback$1) {\n    return;\n  }\n\n  if (callback(callback$1, [context, event]) === true) {\n    // Users are allowed to tweak the given context by injecting values that can be\n    // used in scriptable options to display labels differently based on the current\n    // event (e.g. highlight an hovered label). That's why we update the label with\n    // the output context and schedule a new chart render by setting it dirty.\n    chart[EXPANDO_KEY]._dirty = true;\n    label.update(context);\n  }\n}\n\nfunction dispatchMoveEvents(chart, listeners, previous, label, event) {\n  var enter, leave;\n\n  if (!previous && !label) {\n    return;\n  }\n\n  if (!previous) {\n    enter = true;\n  } else if (!label) {\n    leave = true;\n  } else if (previous !== label) {\n    leave = enter = true;\n  }\n\n  if (leave) {\n    dispatchEvent(chart, listeners.leave, previous, event);\n  }\n  if (enter) {\n    dispatchEvent(chart, listeners.enter, label, event);\n  }\n}\n\nfunction handleMoveEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var listeners = expando._listeners;\n  var previous, label;\n\n  if (!listeners.enter && !listeners.leave) {\n    return;\n  }\n\n  if (event.type === 'mousemove') {\n    label = layout.lookup(expando._labels, event);\n  } else if (event.type !== 'mouseout') {\n    return;\n  }\n\n  previous = expando._hovered;\n  expando._hovered = label;\n  dispatchMoveEvents(chart, listeners, previous, label, event);\n}\n\nfunction handleClickEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var handlers = expando._listeners.click;\n  var label = handlers && layout.lookup(expando._labels, event);\n  if (label) {\n    dispatchEvent(chart, handlers, label, event);\n  }\n}\n\nvar plugin = {\n  id: 'datalabels',\n\n  defaults: defaults,\n\n  beforeInit: function(chart) {\n    chart[EXPANDO_KEY] = {\n      _actives: []\n    };\n  },\n\n  beforeUpdate: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    expando._listened = false;\n    expando._listeners = {};     // {<event-type>: {<dataset-index>: {<label-key>: <fn>}}}\n    expando._datasets = [];      // per dataset labels: [Label[]]\n    expando._labels = [];        // layouted labels: Label[]\n  },\n\n  afterDatasetUpdate: function(chart, args, options) {\n    var datasetIndex = args.index;\n    var expando = chart[EXPANDO_KEY];\n    var labels = expando._datasets[datasetIndex] = [];\n    var visible = chart.isDatasetVisible(datasetIndex);\n    var dataset = chart.data.datasets[datasetIndex];\n    var config = configure(dataset, options);\n    var elements = args.meta.data || [];\n    var ctx = chart.ctx;\n    var i, j, ilen, jlen, cfg, key, el, label;\n\n    ctx.save();\n\n    for (i = 0, ilen = elements.length; i < ilen; ++i) {\n      el = elements[i];\n      el[EXPANDO_KEY] = [];\n\n      if (visible && el && chart.getDataVisibility(i) && !el.skip) {\n        for (j = 0, jlen = config.labels.length; j < jlen; ++j) {\n          cfg = config.labels[j];\n          key = cfg._key;\n\n          label = new Label(cfg, ctx, el, i);\n          label.$groups = {\n            _set: datasetIndex,\n            _key: key || DEFAULT_KEY\n          };\n          label.$context = {\n            active: false,\n            chart: chart,\n            dataIndex: i,\n            dataset: dataset,\n            datasetIndex: datasetIndex\n          };\n\n          label.update(label.$context);\n          el[EXPANDO_KEY].push(label);\n          labels.push(label);\n        }\n      }\n    }\n\n    ctx.restore();\n\n    // Store listeners at the chart level and per event type to optimize\n    // cases where no listeners are registered for a specific event.\n    merge(expando._listeners, config.listeners, {\n      merger: function(event, target, source) {\n        target[event] = target[event] || {};\n        target[event][args.index] = source[event];\n        expando._listened = true;\n      }\n    });\n  },\n\n  afterUpdate: function(chart) {\n    chart[EXPANDO_KEY]._labels = layout.prepare(chart[EXPANDO_KEY]._datasets);\n  },\n\n  // Draw labels on top of all dataset elements\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\n  afterDatasetsDraw: function(chart) {\n    layout.draw(chart, chart[EXPANDO_KEY]._labels);\n  },\n\n  beforeEvent: function(chart, args) {\n    // If there is no listener registered for this chart, `listened` will be false,\n    // meaning we can immediately ignore the incoming event and avoid useless extra\n    // computation for users who don't implement label interactions.\n    if (chart[EXPANDO_KEY]._listened) {\n      var event = args.event;\n      switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        handleMoveEvents(chart, event);\n        break;\n      case 'click':\n        handleClickEvents(chart, event);\n        break;\n      }\n    }\n  },\n\n  afterEvent: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    var previous = expando._actives;\n    var actives = expando._actives = chart.getActiveElements();\n    var updates = utils.arrayDiff(previous, actives);\n    var i, ilen, j, jlen, update, label, labels;\n\n    for (i = 0, ilen = updates.length; i < ilen; ++i) {\n      update = updates[i];\n      if (update[1]) {\n        labels = update[0].element[EXPANDO_KEY] || [];\n        for (j = 0, jlen = labels.length; j < jlen; ++j) {\n          label = labels[j];\n          label.$context.active = (update[1] === 1);\n          label.update(label.$context);\n        }\n      }\n    }\n\n    if (expando._dirty || updates.length) {\n      layout.update(expando._labels);\n      chart.render();\n    }\n\n    delete expando._dirty;\n  }\n};\n\nexport { plugin as default };\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n"],"names":["devicePixelRatio","window","screen","deviceXDPI","logicalXDPI","utils","inputs","input","lines","concat","length","pop","unshift","apply","split","Array","isArray","push","isNullOrUndef","ctx","font","i","items","ilen","prev","width","string","Math","max","measureText","height","lineHeight","min","value","orient","point","origin","x0","x","y0","y","dx","dy","ln","sqrt","R_INSIDE","R_LEFT","R_RIGHT","R_BOTTOM","R_TOP","region","rect","res","left","right","top","bottom","compute$1","range","config","anchor","segment","clamp","area","r","x1","y1","r0","r1","clipped","vx","vy","align","PI","cos","sin","aligned","positioners","el","angle","startAngle","endAngle","innerRadius","outerRadius","v","rx","options","radius","ry","sx","sy","horizontal","base","abs","rasterize","round","getScaleOrigin","context","scale","chart","getDatasetMeta","datasetIndex","vScale","undefined","xCenter","yCenter","pixel","getBasePixel","drawFrame","model","bgColor","backgroundColor","borderColor","borderWidth","beginPath","w","h","HALF_PI","moveTo","arc","closePath","drawRoundedRect","borderRadius","fillStyle","fill","strokeStyle","lineWidth","lineJoin","stroke","drawTextLine","text","cfg","shadow","shadowBlur","stroked","strokeText","filled","fillText","Label","index","me","this","_config","_index","_model","_rects","_ctx","_el","merge","prototype","_modelize","display","toFont","resolve","color","defaults$1","chartArea","clip","offset","opacity","padding","toPadding","positioner","ArcElement","PointElement","BarElement","rotation","size","textAlign","textShadowBlur","textShadowColor","textStrokeColor","textStrokeWidth","update","label","rects","dataset","data","valueOrDefault","callback","formatter","th","tw","tx","ty","frame","boundingRects","geometry","visible","draw","center","save","globalAlpha","translate","rotate","strokeColor","strokeWidth","textGeometry","textBaseline","shadowColor","drawText","restore","MIN_INTEGER","Number","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","rotated","cx","cy","projected","points","axis","pt","dp","toAxis","p0","p1","HitBox","_rotation","_rect","contains","margin","intersects","other","pr0","pr1","_points","axes","Chart","register","registerables","Animator","constructor","_request","_charts","Map","_running","_lastDate","_notify","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","start","_refresh","requestAnimFrame","call","_update","arguments","Date","now","remaining","running","item","_active","_total","tick","_getAnims","charts","get","complete","progress","set","listen","event","cb","add","has","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","target","prop","currentValue","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","rej","resolved","method","Animations","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","scaleClip","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","mode","otherValue","isNumberFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","datasets","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","adata","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","t","b","l","disabled","toClip","defaultClip","elements","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","_arrayUnique","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","_ref","ratio","inflateAmount","DoughnutController","animateRotate","animateScale","numbers","cutout","circumference","spacing","_scriptable","name","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","fontColor","getDataVisibility","onClick","e","legendItem","toggleDataVisibility","super","offsetX","offsetY","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","TAU","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","_angleBetween","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","isNaN","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","PolarAreaController","angleLines","beginAtZero","grid","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","obj","bars","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","last","skipNull","val","indexOf","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","iPixel","vPixel","skip","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","_fullLoop","pointPosition","getPointPositionForValue","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","getMargins","marginForPositions","positions","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","titleAlign","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gc","_measureText","gcLen","garbageCollect","valueAt","idx","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","p2","setLineDash","lineDashOffset","lineTo","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","property","propertyParts","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","toLowerCase","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","d","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","_isDomSupported","getElementById","instances","getChart","c","moveNumericKeys","intKey","getSizeForArea","field","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","parseBorderRadius$1","angleDelta","o","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","borderJoinStyle","inner","angleMargin","clipArc","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","inRange$1","hitRadius","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","bounds","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref5","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","average","xSet","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","_ref7","rad","LinearScaleBase","_startValue","_endValue","_valueRange","isFinite","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","tickValue","generateTicks$1","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","_ref8","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","_addedLabels","added","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","lim","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","g","isShort","HUE_RE","hsl2rgbn","s","n","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","unpacked","tkeys","ok","nk","parseInt","unpack","RGB_RE","modHSL","tmp","clone","fromObject","functionParse","rgbParse","Color","hexParse","_rgb","_valid","rgbString","hslString","c2","w2","w1","rgb1","rgb2","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","deg","toString","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","keyResolvers","part","_splitKey","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","rounded","degrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","intlCache","num","JSON","stringify","Intl","NumberFormat","getNumberFormat","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","getScope$1","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","setRenderOpts","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","toFontString","info","cacheable","minmax","keepZero","parentContext","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","getValue","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","controlPoints","inArea","inAreaPrev","inAreaNext","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","borderBox","paddings","borders","touches","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","getPropertyValue","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","sub","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","replacer"],"sourceRoot":""}
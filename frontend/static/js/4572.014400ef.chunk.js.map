{"version":3,"file":"static/js/4572.014400ef.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/tablecolumn.js","Pages/Masters/defaultAccountMaster/listDefaultAccountMaster.jsx","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE ORDER' },\r\n    { name: 'PURCHASE INVOICE' },\r\n    { name: 'SALE ORDER' },\r\n    { name: 'SALE INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import { useEffect, useState } from \"react\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable, { ButtonActions, createCol } from \"../../../Components/filterableTable2\";\r\nimport { Edit } from \"@mui/icons-material\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { checkIsNumber, isEqualNumber, toArray, toNumber } from \"../../../Components/functions\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles, erpModules } from \"../../../Components/tablecolumn\";\r\nimport { toast } from \"react-toastify\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\n\r\nconst initialValue = {\r\n    Id: '',\r\n    Acc_Id: '',\r\n    Account_Name: '',\r\n    AC_Reason: '',\r\n    Type: '',\r\n};\r\n\r\nconst DefaultAccountMaster = ({ loadingOn, loadingOff }) => {\r\n    const [defaultAccount, setDefaultAccount] = useState([]);\r\n    const [defaultAccountInput, setDefaultAccountInput] = useState(initialValue);\r\n    const [accountMaster, setAccountMaster] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        dialog: false,\r\n        refresh: false,\r\n        searchValue: { value: '', label: 'Search Account' }\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/accounts`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setAccountMaster(toArray(data.data))\r\n            }\r\n        }).catch(e => console.error(e));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/defaultAccountMaster`,\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setDefaultAccount(data.data);\r\n            } else {\r\n                setDefaultAccount([]);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    }, [filters.refresh])\r\n\r\n    const closeDialog = () => {\r\n        setFilters(pre => ({ ...pre, dialog: false }));\r\n        setDefaultAccountInput(initialValue);\r\n    }\r\n\r\n    const saveAccount = () => {\r\n        fetchLink({\r\n            address: `masters/defaultAccountMaster`,\r\n            loadingOn, loadingOff,\r\n            method: checkIsNumber(defaultAccountInput.Id) ? 'PUT' : 'POST',\r\n            bodyData: defaultAccountInput\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setFilters(pre => ({ ...pre, dialog: false, refresh: !pre.refresh }));\r\n                toast.success(data.message);\r\n                setDefaultAccountInput(initialValue);\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title=\"Default Accounts\"\r\n                EnableSerialNumber\r\n                ButtonArea={\r\n                    <>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            // size=\"small\"\r\n                            className=\"mx-1\"\r\n                            onClick={() => setFilters(pre => ({ ...pre, dialog: true }))}\r\n                        >Add account</Button>\r\n                        <div style={{ minWidth: '270px' }}>\r\n                            <Select\r\n                                value={filters.searchValue}\r\n                                options={[\r\n                                    { value: '', label: 'ALL' },\r\n                                    ...defaultAccount.map(acc => ({\r\n                                        value: acc.Acc_Id,\r\n                                        label: acc.Account_Name\r\n                                    }))\r\n                                ]}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => setFilters(pre => ({\r\n                                    ...pre, searchValue: e\r\n                                }))}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                }\r\n                dataArray={\r\n                    checkIsNumber(filters.searchValue.value)\r\n                        ? defaultAccount.filter(\r\n                            acc => String(acc?.Account_Name).includes(filters.searchValue.label)\r\n                        )\r\n                        : defaultAccount\r\n                }\r\n                columns={[\r\n                    createCol('Account_Name', 'string'),\r\n                    createCol('Group_Name', 'string'),\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Action',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => (\r\n                            <>\r\n                                <ButtonActions\r\n                                    buttonsData={[\r\n                                        {\r\n                                            name: 'Edit',\r\n                                            icon: <Edit />,\r\n                                            onclick: () => {\r\n                                                setDefaultAccountInput(row);\r\n                                                setFilters(pre => ({ ...pre, dialog: true }));\r\n                                            },\r\n                                            disabled: toNumber(row.Id) < 11\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            </>\r\n                        )\r\n                    }\r\n                ]}\r\n            />\r\n\r\n\r\n            <Dialog\r\n                open={filters.dialog}\r\n                onClose={closeDialog}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n\r\n                <DialogTitle>\r\n                    {checkIsNumber(defaultAccountInput.Id)\r\n                        ? 'Modify Default Account'\r\n                        : 'Add Default Accounts'}\r\n                </DialogTitle>\r\n\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (defaultAccountInput.Acc_Id) {\r\n                        saveAccount();\r\n                    } else {\r\n                        toast.warn('Select Account');\r\n                    }\r\n                }}>\r\n\r\n                    <DialogContent>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table fa-13\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"vctr\">Account<RequiredStar /></td>\r\n                                        <td>\r\n                                            <Select\r\n                                                value={{\r\n                                                    value: defaultAccountInput.Acc_Id,\r\n                                                    label: defaultAccountInput.Account_Name\r\n                                                }}\r\n                                                options={[\r\n                                                    { value: '', label: 'select' },\r\n                                                    ...accountMaster.map(acc => ({\r\n                                                        value: acc.Acc_Id,\r\n                                                        label: acc.Account_name\r\n                                                    }))\r\n                                                ]}\r\n                                                menuPortalTarget={document.body}\r\n                                                onChange={e => setDefaultAccountInput(pre => ({\r\n                                                    ...pre,\r\n                                                    Acc_Id: e.value,\r\n                                                    Account_Name: e.label\r\n                                                }))}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                isDisabled={defaultAccountInput.Type === 'DEFAULT'}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"vctr\">Type<RequiredStar /></td>\r\n                                        <td>\r\n                                            <select\r\n                                                value={defaultAccountInput.Type}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                onChange={e => setDefaultAccountInput(pre => ({\r\n                                                    ...pre, Type: e.target.value\r\n                                                }))}\r\n                                                required\r\n                                                disabled={defaultAccountInput.Type === 'DEFAULT'}\r\n                                            >\r\n                                                <option value={''} disabled>{'select'}</option>\r\n                                                <option value={'DEFAULT'} disabled>{'DEFAULT'}</option>\r\n                                                {erpModules.map((module, ind) => (\r\n                                                    <option value={module.name} key={ind}>{module.name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"vctr\">Reason<RequiredStar /></td>\r\n                                        <td>\r\n                                            <input\r\n                                                value={defaultAccountInput.AC_Reason}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                required\r\n                                                onChange={e => setDefaultAccountInput(pre => ({\r\n                                                    ...pre, AC_Reason: e.target.value\r\n                                                }))}\r\n                                                maxLength={150}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                closeDialog();\r\n                                setDefaultAccountInput(initialValue);\r\n                            }}\r\n                            type=\"button\"\r\n                        >cancel</Button>\r\n                        <Button\r\n                            size=\"small\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                        >Save</Button>\r\n                    </DialogActions>\r\n                </form >\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultAccountMaster;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","customTableStyles","table","width","backgroundColor","rows","headCells","customSelectStyles","menu","provided","state","zIndex","menuPortal","base","groupHeading","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","initialValue","Id","Acc_Id","Account_Name","AC_Reason","Type","_ref","loadingOn","loadingOff","defaultAccount","setDefaultAccount","useState","defaultAccountInput","setDefaultAccountInput","accountMaster","setAccountMaster","filters","setFilters","dialog","refresh","searchValue","value","label","useEffect","fetchLink","then","data","success","toArray","catch","e","console","error","closeDialog","pre","_jsxs","_Fragment","FilterableTable","title","EnableSerialNumber","ButtonArea","Button","className","onClick","minWidth","Select","options","map","acc","menuPortalTarget","document","body","onChange","styles","isSearchable","dataArray","checkIsNumber","filter","String","includes","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref2","row","ButtonActions","buttonsData","icon","Edit","onclick","disabled","toNumber","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","onSubmit","preventDefault","method","bodyData","toast","message","warn","DialogContent","Account_name","isDisabled","target","required","module","ind","maxLength","DialogActions","size","type","createSvgIcon","d"],"sourceRoot":""}
{"version":3,"file":"static/js/2140.ef886ff4.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","Pages/DataEntry/purchaseOrderEntry.jsx","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: '45px',\r\n        background: 'rgba(255, 255, 255, 0.322)'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 })\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","import { useEffect, useState } from \"react\";\r\nimport FilterableTable from \"../../Components/filterableTable2\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { checkIsNumber, isEqualNumber, ISOString, isValidDate } from \"../../Components/functions\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { FilterAlt, Search } from '@mui/icons-material';\r\nimport { purchaseOrderDataSet, displayColumns } from \"./purchaseOrderDataArray\";\r\nimport { toast } from 'react-toastify';\r\nimport PurchaseOrderPreviewTemplate from \"./purchaseOrderPreviewTemplate\";\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\n\r\nconst defaultFilters = {\r\n    Fromdate: new Date().toISOString().split('T')[0],\r\n    Todate: new Date().toISOString().split('T')[0],\r\n    OrderStatus: \"ITEMS\",\r\n    vendorId: '',\r\n    vendor: '',\r\n};\r\n\r\nconst PurchaseOrderDataEntry = ({ loadingOn, loadingOff }) => {\r\n    const [purchaseOrderData, setPurchaseOrderData] = useState([]);\r\n    const [orderPreview, setOrderPreview] = useState({\r\n        OrderDetails: {},\r\n        OrderItemsArray: [],\r\n        DeliveryArray: [],\r\n        TranspoterArray: [],\r\n        StaffArray: [],\r\n        display: false,\r\n    });\r\n    const [vendorList, setVendorList] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const query = useQuery();\r\n\r\n    const [filters, setFilters] = useState({\r\n        ...defaultFilters,\r\n        FilterDialog: false,\r\n        deleteOrderDialog: false,\r\n        deleteOrderId: '',\r\n        refresh: false,\r\n        view: 'PURCHASE ORDERS'\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setVendorList(data.data);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/products`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProducts(data.data);\r\n            } else {\r\n                setProducts([]);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: `dataEntry/purchaseOrderEntry?Fromdate=${filters.Fromdate}&Todate=${filters.Todate}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setPurchaseOrderData(data.data);\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        });\r\n    }, [filters.refresh]);\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n            OrderStatus: query.get(\"OrderStatus\") || defaultFilters.OrderStatus,\r\n            vendorId: query.get(\"vendorId\") || defaultFilters.vendorId,\r\n            vendor: query.get(\"vendor\") || defaultFilters.vendor,\r\n        };\r\n        setFilters(prev => ({ ...prev, ...queryFilters }));\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n        const Fromdate = (stateDetails?.Fromdate && isValidDate(stateDetails?.Fromdate)) ? ISOString(stateDetails?.Fromdate) : null;\r\n        const Todate = (stateDetails?.Todate && isValidDate(stateDetails?.Todate)) ? ISOString(stateDetails?.Todate) : null;\r\n        if (Fromdate && Todate) {\r\n            updateQueryString({ Fromdate, Todate });\r\n        }\r\n    }, [stateDetails]);\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams();\r\n        Object.keys(newFilters).forEach(key => {\r\n            if (newFilters[key]) {\r\n                params.set(key, newFilters[key]);\r\n            }\r\n        });\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const handleFilterChange = (valObj) => {\r\n        const updatedFilters = {\r\n            ...filters,\r\n            ...valObj\r\n        };\r\n        setFilters(updatedFilters);\r\n        updateQueryString(updatedFilters);\r\n    };\r\n\r\n    const deleteOrder = (OrderId) => {\r\n        if (!checkIsNumber(OrderId)) return;\r\n\r\n        fetchLink({\r\n            address: 'dataEntry/purchaseOrderEntry',\r\n            method: 'DELETE',\r\n            bodyData: { OrderId }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setFilters(prev => ({ ...prev, deleteOrderDialog: false, deleteOrderId: '', refresh: !prev.refresh }));\r\n                toast.success(data.message);\r\n            } else {\r\n                setFilters(prev => ({ ...prev, deleteOrderDialog: false, deleteOrderId: '' }));\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e));\r\n    };\r\n\r\n    const onCloseDialog = () => {\r\n        setOrderPreview({\r\n            OrderDetails: {},\r\n            OrderItemsArray: [],\r\n            DeliveryArray: [],\r\n            TranspoterArray: [],\r\n            display: false,\r\n        });\r\n    };\r\n\r\n    const navigateToPageWithState = ({ page = '', stateToTransfer = {} }) => {\r\n        navigate(page, { state: stateToTransfer });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                dataArray={purchaseOrderDataSet({\r\n                    data: checkIsNumber(filters.vendorId)\r\n                        ? purchaseOrderData.filter(obj => isEqualNumber(obj.PartyId, filters.vendorId))\r\n                        : purchaseOrderData,\r\n                    status: filters.OrderStatus\r\n                })}\r\n                columns={displayColumns({\r\n                    OrderStatus: filters.OrderStatus,\r\n                    dialogs: setFilters,\r\n                    setOrderPreview,\r\n                    navigation: navigateToPageWithState,\r\n                    products: products\r\n                })}\r\n                tableMaxHeight={650}\r\n                EnableSerialNumber\r\n                title={'Purchase Order - ' + filters.OrderStatus}\r\n                maxHeightOption\r\n                ButtonArea={\r\n                    <>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            onClick={() => navigate('create')}\r\n                        >Add</Button>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            className=\"me-2\"\r\n                            onClick={() => setFilters(prev => ({ ...prev, FilterDialog: true }))}\r\n                        ><FilterAlt /></IconButton>\r\n                    </>\r\n                }\r\n            />\r\n\r\n            {orderPreview.display && (\r\n                <PurchaseOrderPreviewTemplate\r\n                    OrderDetails={orderPreview.OrderDetails}\r\n                    OrderItemsArray={orderPreview.OrderItemsArray}\r\n                    DeliveryArray={orderPreview.DeliveryArray}\r\n                    TranspoterArray={orderPreview.TranspoterArray}\r\n                    StaffArray={orderPreview.StaffArray}\r\n                    display={orderPreview.display}\r\n                    onCloseDialog={onCloseDialog}\r\n                />\r\n            )}\r\n\r\n            <Dialog\r\n                open={filters.FilterDialog}\r\n                onClose={() => setFilters(prev => ({ ...prev, FilterDialog: false }))}\r\n                maxWidth='sm'\r\n                fullWidth\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <table className=\"table m-0 border-0\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"border-0 vctr\">Vendor</td>\r\n                                <td className=\"border-0 vctr\">\r\n                                    <Select\r\n                                        value={{ value: filters.vendorId, label: filters.vendor }}\r\n                                        onChange={e => handleFilterChange({\r\n                                            vendorId: e.value,\r\n                                            vendor: e.label\r\n                                        })}\r\n                                        options={[\r\n                                            { value: '', label: 'Search', isDisabled: true },\r\n                                            ...vendorList.map(obj => ({\r\n                                                value: obj?.Retailer_Id,\r\n                                                label: obj?.Retailer_Name\r\n                                            }))\r\n                                        ]}\r\n                                        styles={customSelectStyles}\r\n                                        isSearchable={true}\r\n                                        placeholder={\"Select Vendor\"}\r\n                                        maxMenuHeight={300}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0 vctr\">Fromdate</td>\r\n                                <td className=\"border-0 vctr\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        onChange={e => handleFilterChange({ Fromdate: e.target.value })}\r\n                                        value={filters.Fromdate}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0 vctr\">Todate</td>\r\n                                <td className=\"border-0 vctr\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        onChange={e => handleFilterChange({ Todate: e.target.value })}\r\n                                        value={filters.Todate}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-0 vctr\">Order Status</td>\r\n                                <td className=\"border-0 vctr\">\r\n                                    <select\r\n                                        className=\"cus-inpt p-2\"\r\n                                        value={filters.OrderStatus}\r\n                                        onChange={e => handleFilterChange({ OrderStatus: e.target.value })}\r\n                                    >\r\n                                        <optgroup label=\"ITEM BASED\">\r\n                                            <option value={'ITEMS'}>ITEMS</option>\r\n                                            <option value={'ITEMS PENDING'}>ITEMS - PENDING</option>\r\n                                            <option value={'ITEMS ARRIVED'}>ITEMS - ARRIVED</option>\r\n                                        </optgroup>\r\n                                        <optgroup label=\"ORDER BASED\">\r\n                                            <option value={'ORDERS'}>ORDERS</option>\r\n                                            <option value={'COMPLETED ORDERS'}>COMPLETED ORDERS</option>\r\n                                            <option value={'IN-COMPLETED ORDERS'}>IN-COMPLETED ORDERS</option>\r\n                                        </optgroup>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setFilters(prev => ({ ...prev, FilterDialog: false }))}\r\n                        variant=\"outlined\"\r\n                    >Close</Button>\r\n                    <Button\r\n                        onClick={() => setFilters(prev => ({ ...prev, refresh: !prev.refresh }))}\r\n                        variant=\"outlined\"\r\n                        startIcon={<Search />}\r\n                    >Search</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={filters.deleteOrderDialog}\r\n                onClose={() => setFilters(prev => ({ ...prev, deleteOrderDialog: false, deleteOrderId: '' }))}\r\n                maxWidth='sm'\r\n            >\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    <h6>Do you want to delete the order permanently?</h6>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setFilters(prev => ({ ...prev, deleteOrderDialog: false, deleteOrderId: '' }))}\r\n                    >Cancel</Button>\r\n                    <Button color='error' variant='outlined' onClick={() => deleteOrder(filters.deleteOrderId)}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PurchaseOrderDataEntry;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","control","provided","state","_objectSpread","height","background","menu","zIndex","menuPortal","base","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","defaultFilters","Fromdate","Date","toISOString","split","Todate","OrderStatus","vendorId","vendor","_ref","loadingOn","loadingOff","purchaseOrderData","setPurchaseOrderData","useState","orderPreview","setOrderPreview","OrderDetails","OrderItemsArray","DeliveryArray","TranspoterArray","StaffArray","display","vendorList","setVendorList","products","setProducts","navigate","useNavigate","location","useLocation","stateDetails","query","URLSearchParams","search","filters","setFilters","FilterDialog","deleteOrderDialog","deleteOrderId","refresh","view","useEffect","fetchLink","then","data","success","catch","e","console","error","concat","finally","queryFilters","get","isValidDate","prev","ISOString","updateQueryString","newFilters","params","Object","keys","forEach","key","set","toString","replace","handleFilterChange","valObj","updatedFilters","_jsxs","_Fragment","children","_jsx","FilterableTable","dataArray","purchaseOrderDataSet","checkIsNumber","filter","obj","isEqualNumber","PartyId","status","columns","displayColumns","dialogs","navigation","_ref2","page","stateToTransfer","tableMaxHeight","EnableSerialNumber","title","maxHeightOption","ButtonArea","Button","onClick","IconButton","size","className","FilterAlt","PurchaseOrderPreviewTemplate","onCloseDialog","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","Select","value","label","onChange","options","isDisabled","map","Retailer_Id","Retailer_Name","styles","isSearchable","placeholder","maxMenuHeight","type","target","DialogActions","startIcon","Search","deleteOrder","OrderId","method","bodyData","toast","message","createSvgIcon","d"],"sourceRoot":""}
{"version":3,"file":"static/js/4072.8d9a9455.chunk.js","mappings":"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","sources":["Components/filterableTable2.jsx","Components/tablecolumn.js","Pages/Inventry/stockJournal.jsx","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/icons-material/esm/Sync.js","../node_modules/@mui/icons-material/esm/Visibility.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name] \r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign] \r\n * @property {string} [ColumnHeader] \r\n * @property {string} [tdClass] \r\n * @property {0|1} [isVisible] \r\n * @property {'left'|'right'|'center'} [align] \r\n * @property {boolean} [isCustomCell] \r\n * @property {Function} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name] \r\n * @property {JSX.Element} [icon] \r\n * @property {Function} [onclick] \r\n * @property {boolean} [disabled] \r\n */\r\n\r\n/**\r\n * Filterable Table Component\r\n * @param {Object} props \r\n * @param {Array<Object>} [props.dataArray] \r\n * @param {Array<Column>} [props.columns] \r\n * @param {Function} [props.onClickFun] \r\n * @param {boolean} [props.isExpendable=false] \r\n * @param {React.ReactElement|JSX.Element} [props.expandableComp] \r\n * @param {number} [props.tableMaxHeight] \r\n * @param {number} [props.initialPageCount=10] \r\n * @param {number} [props.bodyFontSizePx=13] \r\n * @param {number} [props.headerFontSizePx=13] \r\n * @param {boolean} [props.EnableSerialNumber=false] \r\n * @param {'small'|'medium'|'large'} [props.CellSize='medium'] \r\n * @param {boolean} [props.disablePagination=false] \r\n * @param {string} [props.title=''] \r\n * @param {boolean} [props.PDFPrintOption=false] \r\n * @param {boolean} [props.ExcelPrintOption=false] \r\n * @param {boolean} [props.maxHeightOption=false]\r\n * @param {React.ReactElement|JSX.Element} [props.ButtonArea] \r\n * @param {Array<Menu>} props.MenuButtons \r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (field = '', type = 'string', ColumnHeader = '', align = 'left', verticalAlign = 'center', tdClass = '') => {\r\n    return {\r\n        isVisible: 1,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        tdClass,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return val ? NumberFormat(val) : val;\r\n        case 'date':\r\n            return val ? LocalDate(val) : val;\r\n        case 'time':\r\n            return val ? LocalTime(val) : val;\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n                        const tdClass = (row, Field_Name, tdIndex) => (\r\n                            column?.tdClass\r\n                                ? String(' ' + column?.tdClass({ row, Field_Name, index: tdIndex }) + ' ')\r\n                                : ''\r\n                        );\r\n                        const horizondalalignClass = column.align ? columnAlign.find(\r\n                            align => align.type === String(column.align).toLowerCase()\r\n                        )?.class : '';\r\n                        const verticalAlignClass = column.verticalAlign ? columnVerticalAlign.find(\r\n                            align => align.type === String(column.verticalAlign).toLowerCase()\r\n                        )?.class : ' vctr ';\r\n\r\n                        if (isColumnVisible && isCommonValue) return Object.entries(row).map(\r\n                            ([key, value]) => column.Field_Name === key && (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`\r\n                                        border-end` \r\n                                        + horizondalalignClass \r\n                                        + verticalAlignClass \r\n                                        + tdClass(row, column.Field_Name, index)\r\n                                    }\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {formatString(value, column?.Fied_Data)}\r\n                                </TableCell>\r\n                            )\r\n                        )\r\n\r\n                        if (isColumnVisible && isCustomCell) return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                className={`\r\n                                    border-end` \r\n                                    + horizondalalignClass \r\n                                    + verticalAlignClass \r\n                                    + tdClass(row, column.Field_Name, index)\r\n                                }\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                            >\r\n                                {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                            </TableCell>\r\n                        )\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ` + horizondalalignClass + verticalAlignClass}\r\n                            ></TableCell>\r\n                        )\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name)\r\n                                                    ? ' fw-bold border-end border-top p-2 appFont '\r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align\r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func,\r\n        tdClass: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n    formatString\r\n}","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: '45px',\r\n        background: 'rgba(255, 255, 255, 0.322)'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 })\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","import { useEffect, useMemo, useState } from \"react\";\r\nimport { Addition, ISOString, isValidDate, trimText } from '../../Components/functions';\r\nimport FilterableTable, { createCol, ButtonActions } from '../../Components/filterableTable2';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tooltip } from \"@mui/material\";\r\nimport { Edit, FilterAlt, Search, Sync, Visibility } from \"@mui/icons-material\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { toast } from 'react-toastify'\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport Select from 'react-select';\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst StockJournal = ({ loadingOn, loadingOff }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const query = useQuery();\r\n    const [stockJournalData, setStockJournalData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: defaultFilters.Fromdate,\r\n        Todate: defaultFilters.Todate,\r\n        fetchFrom: defaultFilters.Fromdate,\r\n        fetchTo: defaultFilters.Todate,\r\n        filterDialog: false,\r\n        refresh: false,\r\n        BillType: '',\r\n        BranchName: '',\r\n        VoucherType: '',\r\n        FromGodown: [],\r\n        ToGodown: [],\r\n        Staffs: [],\r\n        SourceItems: [],\r\n        DestinationItems: [],\r\n    });\r\n\r\n    const [activeFilter, setActiveFilter] = useState({\r\n        BillType: false,\r\n        VoucherType: false,\r\n        BranchName: false,\r\n        FromGodown: false,\r\n        ToGodown: false,\r\n        Staffs: false,\r\n        SourceItems: false,\r\n        DestinationItems: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        setActiveFilter({\r\n            BillType: filters.BillType ? true : false,\r\n            VoucherType: filters.VoucherType ? true : false,\r\n            BranchName: filters.BranchName ? true : false,\r\n            FromGodown: filters.FromGodown.length > 0 ? true : false,\r\n            ToGodown: filters.ToGodown.length > 0 ? true : false,\r\n            Staffs: filters.Staffs.length > 0 ? true : false,\r\n            SourceItems: filters.SourceItems.length > 0 ? true : false,\r\n            DestinationItems: filters.DestinationItems.length > 0 ? true : false\r\n        })\r\n    }, [filters])\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n\r\n        fetchLink({\r\n            address: `inventory/stockJournal?Fromdate=${filters?.fetchFrom}&Todate=${filters?.fetchTo}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setStockJournalData(data.data);\r\n            }\r\n        }).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        }).catch(e => console.error(e))\r\n    }, [filters?.fetchFrom, filters?.fetchTo])\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n        };\r\n        setFilters(pre => ({ ...pre, fetchFrom: queryFilters.Fromdate, fetchTo: queryFilters.Todate }));\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n        const Fromdate = (stateDetails?.Fromdate && isValidDate(stateDetails?.Fromdate)) ? ISOString(stateDetails?.Fromdate) : null;\r\n        const Todate = (stateDetails?.Todate && isValidDate(stateDetails?.Todate)) ? ISOString(stateDetails?.Todate) : null;\r\n        const VoucherType = stateDetails?.Voucher_Type;\r\n        if (VoucherType) setFilters(pre => ({ ...pre, VoucherType: VoucherType }));\r\n        if (Fromdate && Todate) {\r\n            setFilters(pre => ({ ...pre, Fromdate: Fromdate, Todate: Todate }))\r\n            updateQueryString({ Fromdate, Todate });\r\n        }\r\n\r\n    }, [stateDetails])\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setFilters({\r\n            ...filters,\r\n            filterDialog: false,\r\n        });\r\n    }\r\n\r\n    const syncTallyStockJournalData = () => {\r\n        fetchLink({\r\n            address: `inventory/stockJournal/tallySync`,\r\n        }).then(data => {\r\n            if (data.success) toast.success(data.message)\r\n            else toast.error(data.message)\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    const uniqueBillType = useMemo(() => {\r\n        return [...new Set(stockJournalData.map(sj => sj.Stock_Journal_Bill_type))].map(bType => ({ value: bType, label: bType }));\r\n    }, [stockJournalData]);\r\n\r\n    const uniqueVoucherType = useMemo(() => {\r\n        return [...new Set(stockJournalData.map(sj => sj.Stock_Journal_Voucher_type))].map(vType => ({ value: vType, label: vType }));\r\n    }, [stockJournalData])\r\n\r\n    const uniqueBranch = useMemo(() => {\r\n        return [...new Set(stockJournalData.map(sj => sj.BranchName))].map(branch => ({ value: branch, label: branch }));\r\n    }, [stockJournalData]);\r\n\r\n    const uniqueFromLocations = useMemo(() => {\r\n        const allLocations = stockJournalData.flatMap(sj =>\r\n            sj.SourceDetails.map(product => product.Godown_Name)\r\n        );\r\n        return [...new Set(allLocations)].map((location) => ({\r\n            value: location,\r\n            label: location,\r\n        }));\r\n    }, [stockJournalData]);\r\n\r\n    const uniqueToLocations = useMemo(() => {\r\n        const allLocations = stockJournalData.flatMap(sj =>\r\n            sj.DestinationDetails.map(product => product.Godown_Name)\r\n        );\r\n        return [...new Set(allLocations)].map((location) => ({\r\n            value: location,\r\n            label: location,\r\n        }));\r\n    }, [stockJournalData]);\r\n\r\n    const uniqueSourceItems = useMemo(() => {\r\n        const allItems = stockJournalData.flatMap(sj =>\r\n            sj.SourceDetails.map((product) => product.Product_Name)\r\n        );\r\n        return [...new Set(allItems)].map(items => ({\r\n            value: items,\r\n            label: items,\r\n        }));\r\n    }, [stockJournalData]);\r\n\r\n    const uniqueDestinationItems = useMemo(() => {\r\n        const allItems = stockJournalData.flatMap(sj =>\r\n            sj.DestinationDetails.map((product) => product.Product_Name)\r\n        );\r\n        return [...new Set(allItems)].map(items => ({\r\n            value: items,\r\n            label: items,\r\n        }));\r\n    }, [stockJournalData]);\r\n\r\n    const uniqueStaffs = useMemo(() => {\r\n        const allStaffs = stockJournalData.flatMap((trip) =>\r\n            trip.StaffsDetails.map((staff) => staff.Cost_Center_Name)\r\n        );\r\n        return [...new Set(allStaffs)].map((name) => ({\r\n            value: name,\r\n            label: name,\r\n        }));\r\n    }, [stockJournalData]);\r\n\r\n    const filteredData = useMemo(() => {\r\n        return stockJournalData.filter((stj) => {\r\n            const hasFromGodownMatch = activeFilter.FromGodown\r\n                ? stj.SourceDetails.some((product) =>\r\n                    filters.FromGodown.some((selected) => selected.value === product.Godown_Name)\r\n                )\r\n                : true;\r\n\r\n            const hasToGodownMatch = activeFilter.ToGodown\r\n                ? stj.DestinationDetails.some((product) =>\r\n                    filters.ToGodown.some((selected) => selected.value === product.Godown_Name)\r\n                )\r\n                : true;\r\n\r\n            const hasSourceItemMatch = activeFilter.SourceItems\r\n                ? stj.SourceDetails.some((product) =>\r\n                    filters.SourceItems.some((selected) => selected.value === product.Product_Name)\r\n                )\r\n                : true;\r\n\r\n            const hasDestinationItemMatch = activeFilter.DestinationItems\r\n                ? stj.DestinationDetails.some((product) =>\r\n                    filters.DestinationItems.some((selected) => selected.value === product.Product_Name)\r\n                )\r\n                : true;\r\n\r\n            const hasEmployeeMatch = activeFilter.Staffs\r\n                ? stj.Employees_Involved.some((staff) =>\r\n                    filters.Staffs.some((selected) => selected.value === staff.Emp_Name)\r\n                )\r\n                : true;\r\n\r\n            const hasBranchMatch = activeFilter.BranchName\r\n                ? stj.BranchName === filters.BranchName\r\n                : true;\r\n\r\n            const hasBillTypeMatch = activeFilter.BillType\r\n                ? stj.Stock_Journal_Bill_type === filters.BillType\r\n                : true;\r\n\r\n            const hasVoucherTypeMatch = activeFilter.VoucherType\r\n                ? stj.Stock_Journal_Voucher_type === filters.VoucherType\r\n                : true;\r\n\r\n            return (\r\n                hasFromGodownMatch &&\r\n                hasToGodownMatch &&\r\n                hasSourceItemMatch &&\r\n                hasDestinationItemMatch &&\r\n                hasEmployeeMatch &&\r\n                hasBranchMatch &&\r\n                hasBillTypeMatch &&\r\n                hasVoucherTypeMatch\r\n            );\r\n        });\r\n    }, [\r\n        stockJournalData,\r\n        activeFilter,\r\n        // filters.BillType,\r\n        // filters.BranchName,\r\n        // filters.VoucherType,\r\n        // filters.FromGodown,\r\n        // filters.ToGodown,\r\n        // filters.Staffs,\r\n        // filters.SourceItems,\r\n        // filters.DestinationItems,\r\n    ]);\r\n\r\n    const calculateDifference = (sourceQty, destQty) => {\r\n        if (sourceQty === 0) return 0;\r\n    \r\n        return ((sourceQty - destQty) / sourceQty) * 100;\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                headerFontSizePx={11}\r\n                bodyFontSizePx={11}\r\n                dataArray={(\r\n                    filters.BillType || filters.BranchName || filters.VoucherType ||\r\n                    filters.SourceItems.length > 0 || filters.DestinationItems.length > 0 ||\r\n                    filters.FromGodown.length > 0 || filters.ToGodown.length > 0\r\n                ) ? filteredData : stockJournalData}\r\n                title=\"Stock Journal\"\r\n                maxHeightOption\r\n                ButtonArea={\r\n                    <>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            onClick={() => navigate('/erp/inventory/stockJournal/create')}\r\n                        >Add</Button>\r\n                        <Tooltip title='Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({ ...filters, filterDialog: true })}\r\n                            ><FilterAlt /></IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title='Sync Tally Stock Journal'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={syncTallyStockJournalData}\r\n                            ><Sync /></IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                }\r\n                EnableSerialNumber\r\n                initialPageCount={10}\r\n                columns={[\r\n                    createCol('Stock_Journal_date', 'date', 'Date'),\r\n                    createCol('Journal_no', 'string', 'Journal number'),\r\n                    createCol('Stock_Journal_Bill_type', 'string', 'Type'),\r\n                    createCol('Stock_Journal_Voucher_type', 'string', 'Voucher'),\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Staffs',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => row?.StaffsDetails?.length\r\n                    },\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Source',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => (\r\n                            <table className=\"table table-borderless fa-12 m-0\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Products</td>\r\n                                        <td>{row?.SourceDetails?.length}</td>\r\n                                        <td>QTY</td>\r\n                                        <td>{row?.SourceDetails?.reduce((acc, source) => Addition(acc, source.Sour_Qty), 0)}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        )\r\n                    },\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Destination',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => (\r\n                            <table className=\"table table-borderless fa-12 m-0\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Products</td>\r\n                                        <td>{row?.DestinationDetails?.length}</td>\r\n                                        <td>QTY</td>\r\n                                        <td>{row?.DestinationDetails?.reduce((acc, destination) => Addition(acc, destination.Dest_Qty), 0)}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        )\r\n                    },\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Difference (%)',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => {\r\n                            const sourceQtySum = row?.SourceDetails?.reduce((acc, source) => Addition(acc, source.Sour_Qty), 0);\r\n                            const destinationQtySum = row?.DestinationDetails?.reduce((acc, destination) => Addition(acc, destination.Dest_Qty), 0);\r\n                            return calculateDifference(sourceQtySum, destinationQtySum);\r\n                        }\r\n                    },\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Action',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => (\r\n                            <ButtonActions\r\n                                buttonsData={[\r\n                                    {\r\n                                        name: 'Edit',\r\n                                        icon: <Edit className=\"fa-14\" />,\r\n                                        onclick: () => navigate('/erp/inventory/stockJournal/create', {\r\n                                            state: {\r\n                                                ...row,\r\n                                                isEditable: false,\r\n                                            },\r\n                                        }),\r\n                                    },\r\n                                    {\r\n                                        name: 'Open',\r\n                                        icon: <Visibility className=\"fa-14\" />,\r\n                                        onclick: () => navigate('/erp/inventory/stockJournal/create', {\r\n                                            state: {\r\n                                                ...row,\r\n                                                isEditable: true,\r\n                                            },\r\n                                        }),\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        )\r\n                    }\r\n                ]}\r\n                isExpendable={true}\r\n                expandableComp={({ row }) => (\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 p-1\">\r\n                            <FilterableTable\r\n                                title=\"Source\"\r\n                                headerFontSizePx={11}\r\n                                bodyFontSizePx={11}\r\n                                EnableSerialNumber\r\n                                dataArray={row?.SourceDetails}\r\n                                columns={[\r\n                                    createCol('Product_Name', 'string', 'Item'),\r\n                                    createCol('Godown_Name', 'string', 'Godown'),\r\n                                    createCol('Sour_Qty', 'number', 'QTY'),\r\n                                    // createCol('Sour_Unit', 'string', 'Unit'),\r\n                                    // createCol('Sour_Rate', 'number', 'Rate'),\r\n                                    // createCol('Sour_Amt', 'number', 'Amount'),\r\n                                ]}\r\n                                disablePagination\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6 p-1\">\r\n                            <FilterableTable\r\n                                title=\"Destination\"\r\n                                headerFontSizePx={11}\r\n                                bodyFontSizePx={11}\r\n                                EnableSerialNumber\r\n                                dataArray={row?.DestinationDetails}\r\n                                columns={[\r\n                                    createCol('Product_Name', 'string', 'Item'),\r\n                                    createCol('Godown_Name', 'string', 'Godown'),\r\n                                    createCol('Dest_Qty', 'number', 'QTY'),\r\n                                    // createCol('Dest_Unit', 'string', 'Unit'),\r\n                                    // createCol('Dest_Rate', 'number', 'Rate'),\r\n                                    // createCol('Dest_Amt', 'number', 'Amount'),\r\n                                ]}\r\n                                disablePagination\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            />\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Journal Type</td>\r\n                                    <td>\r\n                                        <select\r\n                                            value={filters.BillType}\r\n                                            className=\"cus-inpt p-2 \"\r\n                                            onChange={e => setFilters(pre => ({ ...pre, BillType: e.target.value }))}\r\n                                        >\r\n                                            <option value=\"\">All Type</option>\r\n                                            {uniqueBillType.map((type, index) => (\r\n                                                <option value={type.value} key={index}>{type.label}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Branch</td>\r\n                                    <td>\r\n                                        <select\r\n                                            value={filters.BranchName}\r\n                                            className=\"cus-inpt p-2 \"\r\n                                            onChange={e => setFilters(pre => ({ ...pre, BranchName: e.target.value }))}\r\n                                        >\r\n                                            <option value=\"\">All Branch</option>\r\n                                            {uniqueBranch.map((branch, index) => (\r\n                                                <option value={branch.value} key={index}>{branch.label}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Voucher Type</td>\r\n                                    <td colSpan={3}>\r\n                                        <select\r\n                                            value={filters.VoucherType}\r\n                                            className=\"cus-inpt p-2 \"\r\n                                            onChange={e => setFilters(pre => ({ ...pre, VoucherType: e.target.value }))}\r\n                                        >\r\n                                            <option value=\"\">All Voucher Type</option>\r\n                                            {uniqueVoucherType.map((voucher, index) => (\r\n                                                <option value={voucher.value} key={index}>{voucher.label}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From Godown</td>\r\n                                    <td colSpan={3}>\r\n                                        <Select\r\n                                            value={filters.FromGodown}\r\n                                            onChange={selectedOptions =>\r\n                                                setFilters(prev => ({ ...prev, FromGodown: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueFromLocations}\r\n                                            isMulti\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select From Godown\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To Godown</td>\r\n                                    <td colSpan={3}>\r\n                                        <Select\r\n                                            value={filters.ToGodown}\r\n                                            onChange={selectedOptions =>\r\n                                                setFilters(prev => ({ ...prev, ToGodown: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueToLocations}\r\n                                            isMulti\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select To Godown\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Staffs</td>\r\n                                    <td colSpan={3}>\r\n                                        <Select\r\n                                            value={filters.Staffs}\r\n                                            onChange={selectedOptions =>\r\n                                                setFilters((prev) => ({ ...prev, Staffs: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueStaffs}\r\n                                            isMulti\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select Staff\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Source Items</td>\r\n                                    <td colSpan={3}>\r\n                                        <Select\r\n                                            value={filters.SourceItems}\r\n                                            onChange={selectedOptions =>\r\n                                                setFilters(prev => ({ ...prev, SourceItems: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueSourceItems}\r\n                                            isMulti\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select Source Items\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Destination Items</td>\r\n                                    <td colSpan={3}>\r\n                                        <Select\r\n                                            value={filters.DestinationItems}\r\n                                            onChange={selectedOptions =>\r\n                                                setFilters(prev => ({ ...prev, DestinationItems: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueDestinationItems}\r\n                                            isMulti\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select Destination Items\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            const updatedFilters = {\r\n                                Fromdate: filters?.Fromdate,\r\n                                Todate: filters?.Todate\r\n                            };\r\n                            updateQueryString(updatedFilters);\r\n                            closeDialog();\r\n                        }}\r\n                        startIcon={<Search />}\r\n                        variant=\"outlined\"\r\n                    >Search</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StockJournal;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8m0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4z\"\n}), 'Sync');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');"],"names":["preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","concat","key","Field_Name","createCol","field","arguments","length","undefined","type","align","verticalAlign","tdClass","_objectSpread","Fied_Data","ButtonActions","_ref","buttonsData","ToolTipText","anchorEl","setAnchorEl","useState","popOverOpen","Boolean","_jsxs","_Fragment","children","_jsx","Tooltip","title","IconButton","onClick","event","currentTarget","className","size","MoreVert","Popover","open","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","onclick","disabled","ListItemIcon","icon","ListItemText","name","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","FilterableTable","_ref2","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","RowComp","_ref3","setOpen","fontSize","Fragment","TableRow","TableCell","sx","pre","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isEqualNumber","isCommonValue","tdIndex","horizondalalignClass","find","verticalAlignClass","Object","entries","_ref4","value","console","log","colSpan","Number","Card","component","Paper","ToggleOn","color","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","backgroundColor","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","customTableStyles","table","style","width","headCells","customSelectStyles","control","provided","state","height","background","menu","zIndex","menuPortal","base","MainMenu","id","headname","variant","companyDetails","dataBase","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","defaultFilters","Fromdate","ISOString","Todate","loadingOn","loadingOff","navigate","useNavigate","location","useLocation","stateDetails","query","URLSearchParams","search","stockJournalData","setStockJournalData","filters","setFilters","fetchFrom","fetchTo","filterDialog","refresh","BillType","BranchName","VoucherType","FromGodown","ToGodown","Staffs","SourceItems","DestinationItems","activeFilter","setActiveFilter","useEffect","fetchLink","then","success","finally","catch","queryFilters","get","isValidDate","Voucher_Type","updateQueryString","newFilters","params","toString","closeDialog","uniqueBillType","useMemo","sj","Stock_Journal_Bill_type","bType","label","uniqueVoucherType","Stock_Journal_Voucher_type","vType","uniqueBranch","branch","uniqueFromLocations","allLocations","flatMap","SourceDetails","product","Godown_Name","uniqueToLocations","DestinationDetails","uniqueSourceItems","allItems","Product_Name","items","uniqueDestinationItems","uniqueStaffs","allStaffs","trip","StaffsDetails","staff","Cost_Center_Name","filteredData","stj","hasFromGodownMatch","some","selected","hasToGodownMatch","hasSourceItemMatch","hasDestinationItemMatch","hasEmployeeMatch","Employees_Involved","Emp_Name","hasBranchMatch","hasBillTypeMatch","hasVoucherTypeMatch","Button","FilterAlt","syncTallyStockJournalData","toast","message","Sync","_row$StaffsDetails","_row$SourceDetails","_row$SourceDetails2","reduce","acc","source","Addition","Sour_Qty","_row$DestinationDetai","_row$DestinationDetai2","destination","Dest_Qty","_ref5","_row$SourceDetails3","_row$DestinationDetai3","sourceQtySum","destinationQtySum","destQty","sourceQty","calculateDifference","_ref6","Edit","isEditable","Visibility","_ref7","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","onChange","voucher","Select","selectedOptions","prev","menuPortalTarget","document","options","isMulti","styles","isSearchable","placeholder","maxMenuHeight","DialogActions","updatedFilters","startIcon","Search","createSvgIcon","d"],"sourceRoot":""}
{"version":3,"file":"static/js/2344.49582939.chunk.js","mappings":"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","sources":["Pages/Analytics/reportTemplateCreation.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Card, CardContent, Tab, Switch, Button, Tooltip, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\nimport { ArrowBackIosNewOutlined, KeyboardArrowLeft, RemoveRedEyeOutlined, Save } from '@mui/icons-material'\r\nimport { TabPanel, TabList, TabContext } from '@mui/lab';\r\nimport { Box } from '@mui/system';\r\nimport { isEqualNumber, isValidObject, Subraction } from '../../Components/functions';\r\nimport { toast } from 'react-toastify'\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { MyContext } from '../../Components/context/contextProvider';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\n\r\n\r\nconst ReportTemplateCreation = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const nav = useNavigate();\r\n    const { contextObj } = useContext(MyContext);\r\n    const locationState = useLocation().state;\r\n    const initialValue = {\r\n        Report_Type_Id: '',\r\n        reportName: '',\r\n        tables: [],\r\n        tableJoins: [],\r\n        currentTab: 'tbl_Q_Pay_Summarry',\r\n        previewDialog: false,\r\n        createdBy: storage.UserId\r\n    };\r\n    const [inputValues, setInputValues] = useState(initialValue);\r\n    const [reportTables, setReportTables] = useState([]);\r\n    const tablesSelected = inputValues?.tables?.reduce((sum, obj) => sum += Boolean(Number(obj?.isChecked)) ? 1 : 0, 0)\r\n    const columnsSelected = inputValues?.tables?.reduce((sum, item) => (\r\n        sum += Boolean(Number(item?.isChecked)) ? item?.columns?.reduce((colSum, colItem) => (\r\n            colSum += isEqualNumber(colItem?.isVisible, 1) ? 1 : 0\r\n        ), 0) : 0\r\n    ), 0)\r\n\r\n    const displaySelectedState = (\r\n        <span className=\"p-2 mt-3 border rounded-3 d-inline-block w-auto\">\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=' border-end'>Tables Selected</td>\r\n                        <td className='px-2 blue-text'>{tablesSelected}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=' border-end'>Columns Selected&emsp;&emsp;</td>\r\n                        <td className='px-2 blue-text'>{columnsSelected}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </span>\r\n    )\r\n\r\n    useEffect(() => {\r\n        const stateValue = locationState?.ReportState;\r\n        if (isValidObject(stateValue)) {\r\n            setInputValues(pre => ({\r\n                ...pre,\r\n                Report_Type_Id: stateValue?.Report_Type_Id ?? '',\r\n                reportName: stateValue?.reportName ?? '',\r\n                tables: [...stateValue?.tables] ?? [],\r\n                createdBy: stateValue?.createdBy ?? storage?.UserId\r\n            }))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/tablesAndColumns`\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                setReportTables(data?.data);\r\n            }\r\n        }).catch(e => console.log(e))   \r\n    }, []);\r\n\r\n    const handleTableCheck = (tableName, checked, aliasName) => {\r\n        setInputValues(prev => {\r\n            const updatedTables = [...prev.tables];\r\n            const tableIndex = updatedTables.findIndex(table => table.Table_Name === tableName);\r\n\r\n            const arraywithDefaultColumn = [];\r\n            const repTableIndex = reportTables?.findIndex(table => table.Table_Name === tableName);\r\n            const defaultColumnIndex = reportTables[repTableIndex]?.Columns?.findIndex(column => isEqualNumber(column?.IS_Default, 1));\r\n            const defaultColumn = defaultColumnIndex !== -1 ? reportTables[repTableIndex]?.Columns[defaultColumnIndex] : {};\r\n\r\n            if (defaultColumnIndex !== -1) {\r\n                defaultColumn.Order_By = '';\r\n                defaultColumn.isVisible = true;\r\n            }\r\n\r\n            arraywithDefaultColumn.push(defaultColumn)\r\n\r\n\r\n            if (tableIndex !== -1) {\r\n                updatedTables[tableIndex].isChecked = checked;\r\n                if (!checked) {\r\n                    updatedTables[tableIndex].columns = [];\r\n                } else {\r\n                    updatedTables[tableIndex].columns = arraywithDefaultColumn;\r\n                }\r\n            } else {\r\n                updatedTables.push({\r\n                    Table_Id: reportTables?.find(table => table?.Table_Name === tableName)?.Table_Id || '',\r\n                    Table_Name: tableName,\r\n                    AliasName: aliasName,\r\n                    isChecked: checked,\r\n                    columns: arraywithDefaultColumn,\r\n                });\r\n            }\r\n            return { ...prev, tables: updatedTables.filter(table => Boolean(Number(table?.isChecked))) };\r\n\r\n        });\r\n    };\r\n\r\n    const handleColumnCheck = (tableName, columnDetails, checked) => {\r\n        setInputValues(prev => {\r\n            const updatedTables = [...prev.tables];\r\n            const tableIndex = updatedTables.findIndex(table => table.Table_Name === tableName);\r\n\r\n            if (tableIndex !== -1) {\r\n                const columns = updatedTables[tableIndex].columns || [];\r\n                const columnNameIndex = columns?.findIndex(obj => obj?.Column_Name === columnDetails?.Column_Name);\r\n\r\n                if (columnNameIndex !== -1) {\r\n                    columns[columnNameIndex].isVisible = checked ? 1 : 0;\r\n                } else {\r\n                    columns.push({\r\n                        ...columnDetails,\r\n                        Order_By: '',\r\n                        isVisible: checked ? 1 : 0\r\n                    });\r\n                }\r\n                updatedTables[tableIndex].columns = columns?.filter(fil => isEqualNumber(fil?.isVisible, 1));\r\n            }\r\n\r\n            return { ...prev, tables: updatedTables };\r\n        });\r\n    };\r\n\r\n    const handleOrderByChange = (tableName, columnDetails, value) => {\r\n        setInputValues(prev => {\r\n            const updatedTables = [...prev.tables];\r\n            const tableIndex = updatedTables.findIndex(table => table.Table_Name === tableName);\r\n\r\n            if (tableIndex !== -1) {\r\n                const columns = updatedTables[tableIndex].columns || [];\r\n                const columnNameIndex = columns?.findIndex(col => col?.Column_Name === columnDetails?.Column_Name);\r\n\r\n                if (columnNameIndex !== -1) {\r\n                    columns[columnNameIndex].Order_By = value;\r\n                } else {\r\n                    columns.push({\r\n                        ...columnDetails,\r\n                        Order_By: value,\r\n                        isVisible: true\r\n                    });\r\n                }\r\n                updatedTables[tableIndex].columns = columns;\r\n            }\r\n\r\n            return { ...prev, tables: updatedTables };\r\n        });\r\n    };\r\n\r\n    const openPreviewDialog = () => {\r\n        const selectedTables = inputValues.tables?.reduce((tot, table) => (\r\n            tot += Boolean(table?.isChecked) ? 1 : 0\r\n        ), 0)\r\n        setInputValues(pre => ({\r\n            ...pre,\r\n            previewDialog: true,\r\n            tableJoins: (selectedTables > 1) ? (\r\n                Array.from({ length: Subraction(selectedTables, 1) }).map((_, i) => ({\r\n                    Join_First_Table_Id: '',\r\n                    Join_First_Table_Column: '',\r\n                    Join_Second_Table_Id: '',\r\n                    Join_Second_Table_Column: '',\r\n                }))\r\n            ) : []\r\n        }))\r\n    }\r\n\r\n    const onChangeJoining = (value, index, key) => {\r\n        setInputValues(pre => {\r\n            const updatedJoins = [...pre.tableJoins];\r\n            const obj = { ...updatedJoins[index] };\r\n            obj[key] = value;\r\n\r\n            if (key === 'Join_First_Table_Id') {\r\n                obj.Join_First_Table_Column = '';\r\n            }\r\n            if (key === 'Join_Second_Table_Id') {\r\n                obj.Join_Second_Table_Column = '';\r\n            }\r\n\r\n            // const repTableIndex = reportTables?.findIndex(table => isEqualNumber(table?.Table_Id, value));\r\n            // const defaultColumnIndex = reportTables[repTableIndex]?.Columns?.findIndex(column => isEqualNumber(column?.IS_Default, 1));\r\n            // const defaultColumn = defaultColumnIndex !== -1 ? reportTables[repTableIndex]?.Columns[defaultColumnIndex] : {};\r\n\r\n            // obj[colKey] = defaultColumn?.Column_Name || '';\r\n            if (obj?.Join_First_Table_Id === obj?.Join_Second_Table_Id) {\r\n                obj.Join_Second_Table_Id = ''\r\n            }\r\n            updatedJoins[index] = obj;\r\n\r\n            return {\r\n                ...pre,\r\n                tableJoins: [...updatedJoins]\r\n            }\r\n        })\r\n    }\r\n\r\n    const saveTemplate = () => {\r\n        const validateSet = new Set();\r\n        inputValues.tableJoins?.forEach(item => {\r\n            validateSet.add(item.Join_First_Table_Id);\r\n            validateSet.add(item.Join_Second_Table_Id);\r\n        })\r\n        if (validateSet.size !== (inputValues.tableJoins.length + 1) && inputValues.tables.length > 1) {\r\n            return toast.error('Invalid table joins')\r\n        }\r\n\r\n        setInputValues(pre => ({ ...pre, previewDialog: false }))\r\n        fetchLink({\r\n            address: `reports/template`,\r\n            method: inputValues?.Report_Type_Id ? 'PUT' : 'POST',\r\n            bodyData: inputValues\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                setInputValues(initialValue);\r\n                nav(-1)\r\n                toast.success(data.message)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.log(e))\r\n    }\r\n\r\n\r\n    return isEqualNumber(contextObj?.Add_Rights, 1) && (\r\n        <>\r\n            <Card>\r\n\r\n                <div className=\"p-2 border-bottom fa-16 fw-bold d-flex justify-content-between align-items-center\">\r\n                    <span className=\"text-primary text-uppercase ps-3\">{inputValues?.Report_Type_Id ? 'Modify Report Template' : 'Report Templates Creation'}</span>\r\n                    <Button variant='outlined' onClick={() => nav(-1)} startIcon={<KeyboardArrowLeft />}>Back</Button>\r\n                </div>\r\n\r\n                <CardContent>\r\n\r\n                    <div>\r\n                        <label className='w-100'>Report Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className='cus-inpt w-auto'\r\n                            value={inputValues.reportName}\r\n                            onChange={e => setInputValues({ ...inputValues, reportName: e.target.value })}\r\n                        />\r\n                    </div>\r\n\r\n                    {displaySelectedState}\r\n\r\n                    <Box className='d-flex flex-wrap mt-3' >\r\n\r\n                        <TabContext value={inputValues.currentTab}>\r\n                            <TabList\r\n                                indicatorColor='transparent'\r\n                                onChange={(e, newTab) => setInputValues({ ...inputValues, currentTab: newTab })}\r\n                                variant=\"scrollable\"\r\n                                scrollButtons=\"auto\"\r\n                                orientation=\"vertical\"\r\n                                allowScrollButtonsMobile\r\n                                sx={{ maxHeight: '400px' }}\r\n                            >\r\n                                {reportTables.map((table, index) => (\r\n                                    <Tab\r\n                                        key={index}\r\n                                        sx={inputValues.currentTab === table?.Table_Name ? { backgroundColor: '#c6d7eb' } : {}}\r\n                                        className={Boolean(inputValues.tables.find(t => t.Table_Name === table?.Table_Name)?.isChecked) ? 'text-success fw-bold' : 'text-primary'}\r\n                                        label={table?.AliasName}\r\n                                        value={table?.Table_Name}\r\n                                    />\r\n                                ))}\r\n                            </TabList>\r\n\r\n                            {reportTables.map((table, index) => (\r\n                                <TabPanel value={table?.Table_Name} className='flex-grow-1 p-3 border rounded-2' key={index}>\r\n\r\n                                    <div className='d-flex align-items-center mb-4 border-bottom'>\r\n                                        <Switch\r\n                                            checked={Boolean(inputValues.tables.find(t => t.Table_Name === table?.Table_Name)?.isChecked)}\r\n                                            onChange={e => handleTableCheck(table?.Table_Name, e.target.checked, table?.AliasName)}\r\n                                        />\r\n                                        <h6 className='fa-13 mb-0 fw-bold '>{table?.AliasName} TABLE</h6>\r\n                                    </div>\r\n\r\n                                    <div className='cus-grid'>\r\n                                        {table?.Columns?.map((colObj, colIndex) => (\r\n                                            <div key={colIndex}>\r\n                                                <Card className={`p-2 d-flex justify-content-between align-items-center flex-wrap ${colIndex % 2 === 0 ? 'bg-light' : ''}`}>\r\n\r\n                                                    <div className='d-flex justify-content-between align-items-center flex-wrap'>\r\n                                                        <Switch\r\n                                                            checked={\r\n                                                                Boolean(colObj?.IS_Default) ||\r\n                                                                Boolean(\r\n                                                                    (inputValues.tables.find(t =>\r\n                                                                        t.Table_Name === table?.Table_Name\r\n                                                                    ))?.columns?.find(c => c.Column_Name === colObj?.Column_Name)?.isVisible\r\n                                                                )\r\n                                                            }\r\n                                                            disabled={Boolean(colObj?.IS_Default)}\r\n                                                            onChange={e => handleColumnCheck(table?.Table_Name, colObj, e.target.checked)}\r\n                                                        />\r\n                                                        <h6 className='fa-12 m-0 fw-bold'>{colObj?.Column_Name}</h6>\r\n                                                    </div>\r\n\r\n                                                    <input\r\n                                                        type='number'\r\n                                                        className={`p-1 border cus-inpt ${colIndex % 2 !== 0 ? 'bg-light' : ''}`}\r\n                                                        style={{ width: '80px' }}\r\n                                                        placeholder='Order'\r\n                                                        value={inputValues.tables.find(t =>\r\n                                                            t.Table_Name === table?.Table_Name\r\n                                                        )?.columns?.find(c => c.Column_Name === colObj?.Column_Name)?.Order_By || ''}\r\n                                                        onChange={e => handleOrderByChange(table?.Table_Name, colObj, e.target.value)}\r\n                                                    />\r\n                                                </Card>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n\r\n                                </TabPanel>\r\n                            ))}\r\n                        </TabContext>\r\n                    </Box>\r\n                </CardContent>\r\n                <hr className='mt-2 mb-0' />\r\n                <div className=\"p-3 d-flex justify-content-end\">\r\n                    <Tooltip title={columnsSelected <= 4 && 'Select Minimum 5 Columns'}>\r\n                        <span>\r\n                            <Button\r\n                                variant='outlined'\r\n                                startIcon={<RemoveRedEyeOutlined />}\r\n                                disabled={!inputValues?.reportName || tablesSelected === 0 || columnsSelected <= 4}\r\n                                onClick={\r\n                                    columnsSelected > 50\r\n                                        ? () => toast.warn('Maximum 50 Column limit exceeded')\r\n                                        : () => openPreviewDialog()\r\n                                }\r\n                            >\r\n                                Preview\r\n                            </Button>\r\n                        </span>\r\n                    </Tooltip>\r\n                </div>\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={inputValues?.previewDialog}\r\n                onClose={() => setInputValues(pre => ({ ...pre, previewDialog: false }))}\r\n                fullScreen\r\n            >\r\n                <DialogTitle>Define Table Joins</DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    saveTemplate();\r\n                }}>\r\n                    <DialogContent>\r\n                        {displaySelectedState}\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        {inputValues?.tables?.map((table, tabIndex) => (\r\n                                            <React.Fragment key={tabIndex}>\r\n                                                <th className=\"border fa-14 text-center\">{table?.AliasName} ( {table?.columns?.length} )</th>\r\n                                            </React.Fragment>\r\n                                        ))}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        {inputValues?.tables?.map((table, tabIndex) => (\r\n                                            <React.Fragment key={tabIndex}>\r\n                                                <td className=\"border fa-13 text-center\">\r\n                                                    {table?.columns?.map((col, colInd) => (\r\n                                                        <p key={colInd}>{col?.Column_Name}</p>\r\n                                                    ))}\r\n                                                </td>\r\n                                            </React.Fragment>\r\n                                        ))}\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        {inputValues?.tables?.length > 1 && (\r\n                            <div className=\"p-2 cus-grid\">\r\n\r\n                                {inputValues?.tableJoins?.map((inputs, inputIndex) => {\r\n                                    return (\r\n                                        <div className=' p-2' key={inputIndex}>\r\n                                            <h5 className='border-bottom pb-2 text-center'>JOIN - {inputIndex + 1}</h5>\r\n                                            <div className=\"p-2 mt-3 border rounded-3 \">\r\n                                                <table className='w-100' >\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td className='fa-13 blue-text'>Table - 1</td>\r\n                                                            <td className='fa-13 '>\r\n                                                                <select\r\n                                                                    value={inputs?.Join_First_Table_Id}\r\n                                                                    className='cus-inpt '\r\n                                                                    onChange={e => onChangeJoining(e.target.value, inputIndex, 'Join_First_Table_Id')}\r\n                                                                    required\r\n                                                                >\r\n                                                                    <option value=\"\">Select</option>\r\n                                                                    {inputValues?.tables?.map((table, tableInd) => (\r\n                                                                        <option\r\n                                                                            key={tableInd}\r\n                                                                            value={table?.Table_Id}\r\n                                                                            disabled={\r\n                                                                                inputValues?.tableJoins?.find(fil =>\r\n                                                                                    isEqualNumber(fil.Join_First_Table_Id, table?.Table_Id)\r\n                                                                                )\r\n                                                                            }\r\n                                                                        >\r\n                                                                            {table?.AliasName}\r\n                                                                        </option>\r\n                                                                    ))}\r\n                                                                </select>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td className='fa-13 blue-text'>Table - 2</td>\r\n                                                            <td className='fa-13 '>\r\n                                                                <select\r\n                                                                    value={inputs?.Join_Second_Table_Id}\r\n                                                                    className='cus-inpt '\r\n                                                                    onChange={e => onChangeJoining(e.target.value, inputIndex, 'Join_Second_Table_Id')}\r\n                                                                    required\r\n                                                                >\r\n                                                                    <option value=\"\">Select</option>\r\n                                                                    {inputValues?.tables?.map((table, tableInd) => (\r\n                                                                        <option\r\n                                                                            key={tableInd}\r\n                                                                            value={table?.Table_Id}\r\n                                                                            disabled={\r\n                                                                                isEqualNumber(inputs?.Join_First_Table_Id, table?.Table_Id)\r\n                                                                            }\r\n                                                                        >\r\n                                                                            {table?.AliasName}\r\n                                                                        </option>\r\n                                                                    ))}\r\n                                                                </select>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td className='fa-13 blue-text'>Table - 1 Key</td>\r\n                                                            <td className='fa-13 '>\r\n                                                                <select\r\n                                                                    value={inputs?.Join_First_Table_Column}\r\n                                                                    className='cus-inpt '\r\n                                                                    onChange={e => onChangeJoining(e.target.value, inputIndex, 'Join_First_Table_Column')}\r\n                                                                    required\r\n                                                                >\r\n                                                                    <option value=\"\">Select</option>\r\n                                                                    {inputs?.Join_First_Table_Id && (\r\n                                                                        [...inputValues?.tables]?.find(table => (\r\n                                                                            isEqualNumber(table?.Table_Id, inputs?.Join_First_Table_Id)\r\n                                                                        ))?.columns?.map((joinKeys, joinInd) => isEqualNumber(joinKeys?.IS_Join_Key, 1) && (\r\n                                                                            <option key={joinInd} value={joinKeys?.Column_Name}>{joinKeys?.Column_Name}</option>\r\n                                                                        ))\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td className='fa-13 blue-text'>Table - 2 Key</td>\r\n                                                            <td className='fa-13 '>\r\n                                                                <select\r\n                                                                    value={inputs?.Join_Second_Table_Column}\r\n                                                                    className='cus-inpt '\r\n                                                                    onChange={e => onChangeJoining(e.target.value, inputIndex, 'Join_Second_Table_Column')}\r\n                                                                    required\r\n                                                                >\r\n                                                                    <option value=\"\">Select</option>\r\n                                                                    {inputs?.Join_Second_Table_Id && (\r\n                                                                        [...inputValues?.tables]?.find(table => (\r\n                                                                            isEqualNumber(table?.Table_Id, inputs?.Join_Second_Table_Id)\r\n                                                                        ))?.columns?.map((joinKeys, joinInd) => isEqualNumber(joinKeys?.IS_Join_Key, 1) && (\r\n                                                                            <option key={joinInd} value={joinKeys?.Column_Name}>{joinKeys?.Column_Name}</option>\r\n                                                                        ))\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        )}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button\r\n                            onClick={() => setInputValues(pre => ({ ...pre, previewDialog: false }))}\r\n                            type='button'\r\n                            startIcon={<ArrowBackIosNewOutlined />}\r\n                        >\r\n                            Back\r\n                        </Button>\r\n                        <Button\r\n                            type='submit'\r\n                            startIcon={<Save />}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ReportTemplateCreation;\r\n"],"names":["ReportTemplateCreation","_inputValues$tables","_inputValues$tables2","_inputValues$tables4","_inputValues$tables5","_inputValues$tables6","_inputValues$tableJoi2","storage","JSON","parse","localStorage","getItem","nav","useNavigate","contextObj","useContext","MyContext","locationState","useLocation","state","initialValue","Report_Type_Id","reportName","tables","tableJoins","currentTab","previewDialog","createdBy","UserId","inputValues","setInputValues","useState","reportTables","setReportTables","tablesSelected","reduce","sum","obj","Boolean","Number","isChecked","columnsSelected","item","_item$columns","columns","colSum","colItem","isEqualNumber","isVisible","displaySelectedState","_jsx","className","children","_jsxs","useEffect","stateValue","ReportState","isValidObject","pre","_stateValue$Report_Ty","_stateValue$reportNam","_ref","_stateValue$createdBy","fetchLink","address","then","data","success","catch","e","console","log","onChangeJoining","value","index","key","updatedJoins","Join_First_Table_Column","Join_Second_Table_Column","Join_First_Table_Id","Join_Second_Table_Id","Add_Rights","_Fragment","Card","Button","variant","onClick","startIcon","KeyboardArrowLeft","CardContent","type","onChange","target","Box","TabContext","TabList","indicatorColor","newTab","scrollButtons","orientation","allowScrollButtonsMobile","sx","maxHeight","map","table","_inputValues$tables$f","Tab","Table_Name","backgroundColor","find","t","label","AliasName","_inputValues$tables$f2","_table$Columns","TabPanel","Switch","checked","handleTableCheck","tableName","aliasName","prev","_reportTables$repTabl","_reportTables$repTabl2","_reportTables$repTabl3","updatedTables","tableIndex","findIndex","arraywithDefaultColumn","repTableIndex","defaultColumnIndex","Columns","column","IS_Default","defaultColumn","_reportTables$find","Order_By","push","Table_Id","filter","colObj","colIndex","_inputValues$tables$f3","_inputValues$tables$f4","_inputValues$tables$f5","_inputValues$tables$f6","_inputValues$tables$f7","_inputValues$tables$f8","c","Column_Name","disabled","handleColumnCheck","columnDetails","columnNameIndex","fil","style","width","placeholder","handleOrderByChange","col","Tooltip","title","RemoveRedEyeOutlined","toast","warn","openPreviewDialog","_inputValues$tables3","selectedTables","tot","Array","from","length","Subraction","_","i","Dialog","open","onClose","fullScreen","DialogTitle","onSubmit","preventDefault","saveTemplate","_inputValues$tableJoi","validateSet","Set","forEach","add","size","error","method","bodyData","message","DialogContent","tabIndex","_table$columns","React","_table$columns2","colInd","inputs","inputIndex","_inputValues$tables7","_inputValues$tables8","_ref2","_ref2$find","_ref2$find$columns","_ref3","_ref3$find","_ref3$find$columns","required","tableInd","_inputValues$tableJoi3","joinKeys","joinInd","IS_Join_Key","DialogActions","ArrowBackIosNewOutlined","Save"],"sourceRoot":""}
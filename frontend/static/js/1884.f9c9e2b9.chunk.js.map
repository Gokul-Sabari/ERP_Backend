{"version":3,"file":"static/js/1884.f9c9e2b9.chunk.js","mappings":"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","sources":["Pages/Masters/ProductGroup.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/material/TextField/textFieldClasses.js","../node_modules/@mui/material/TextField/TextField.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    IconButton,\r\n    TextField,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport { Button as MuiButton } from \"@mui/material/\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Delete, Edit, Search } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport FilterableTable, { createCol } from \"../../Components/filterableTable2\";\r\n\r\nfunction ProductGroup() {\r\n    const [proGroupData, setProGroupData] = useState([]);\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [formData, setFormData] = useState({ Group_Name: \"\" });\r\n    const [editingItem, setEditingItem] = useState(null);\r\n    const [confirmDeleteDialog, setConfirmDeleteDialog] = useState(false);\r\n    const [deleteId, setDeleteId] = useState(null);\r\n    const [reload, setReload] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const userId = user?.UserId;\r\n    const Company_Id = user?.Company_id;\r\n    useEffect(() => {\r\n        fetchVoucherGroup();\r\n    }, [reload]);\r\n\r\n    const fetchVoucherGroup = async () => {\r\n        try {\r\n            const data = await fetchLink({ address: `masters/proGroup` });\r\n            if (data.success) {\r\n                setProGroupData(data.data);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            toast.error(\"Failed to fetch Product groups\");\r\n        }\r\n    };\r\n\r\n    const openDialog = (item = null) => {\r\n        setEditingItem(item);\r\n        setFormData(item ? { ...item } : { Pro_Group: \"\" });\r\n        setShowDialog(true);\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setShowDialog(false);\r\n        setEditingItem(null);\r\n        setFormData({ Pro_Group: \"\" });\r\n    };\r\n\r\n    const confirmDelete = (id) => {\r\n        setDeleteId(id);\r\n        setConfirmDeleteDialog(true);\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        setIsDeleting(true);\r\n        console.log(\"deleted\", deleteId)\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `masters/proGroup`,\r\n                method: \"DELETE\",\r\n                bodyData: { Pro_Group_Id: deleteId },\r\n            });\r\n\r\n            if (data.success) {\r\n                toast.success(\"Product Group deleted successfully\");\r\n                setReload(!reload);\r\n            } else {\r\n                toast.error(data.message || \"Failed to delete Product group\");\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            toast.error(\"Error deleting Product group\");\r\n        } finally {\r\n            setIsDeleting(false);\r\n            setConfirmDeleteDialog(false);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!formData.Pro_Group?.trim()) {\r\n            toast.error(\"Group Name is required\");\r\n            return;\r\n        }\r\n\r\n        setIsSubmitting(true);\r\n        try {\r\n            const method = editingItem ? \"PUT\" : \"POST\";\r\n\r\n            const data = await fetchLink({\r\n                address: `masters/proGroup`,\r\n                method,\r\n                bodyData: editingItem\r\n                    ? {\r\n                        ...formData,\r\n                        Pro_Group_Id: editingItem.Pro_Group_Id,\r\n                        Company_Id: Company_Id,\r\n                        Alter_By: userId,\r\n                    }\r\n                    : {\r\n                        Pro_Group: formData.Pro_Group,\r\n                        Company_Id: Company_Id,\r\n                        Created_By: userId,\r\n                    },\r\n            });\r\n\r\n\r\n            if (data.success) {\r\n                toast.success(\r\n                    `Product Group ${editingItem ? \"updated\" : \"created\"} successfully`\r\n                );\r\n                closeDialog();\r\n                setReload(!reload);\r\n            } else {\r\n                toast.error(\r\n                    data.message ||\r\n                    `Failed to ${editingItem ? \"update\" : \"create\"} Product group`\r\n                );\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n            toast.error(\"An error occurred while saving\");\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const filteredData = proGroupData.filter((item) =>\r\n        item.Pro_Group.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    const columns = [\r\n        createCol(\"Pro_Group\", \"string\", \"Product Group\"),\r\n        {\r\n            ColumnHeader: \"Actions\",\r\n            align: \"center\",\r\n            isVisible: true,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => (\r\n                <Fragment>\r\n                    <IconButton size=\"small\" onClick={() => openDialog(row)}>\r\n                        <Edit fontSize=\"small\" />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        color=\"error\"\r\n                        onClick={() => confirmDelete(row.Pro_Group_Id)}\r\n                    >\r\n                        <Delete fontSize=\"small\" />\r\n                    </IconButton>\r\n                </Fragment>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                    Product Group\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <div className=\"p-2\" style={{ width: \"300px\" }}>\r\n                                <div className=\"d-flex align-items-center gap-2\">\r\n                                    <Search />\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                        placeholder=\"Search Product group...\"\r\n                                        value={searchTerm}\r\n                                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                                        size=\"small\"\r\n                                        InputProps={{\r\n                                            style: { height: \"40px\" },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Button\r\n                            className=\"rounded-1 btn-primary ms-2\"\r\n                            onClick={() => openDialog()}\r\n                        >\r\n                            Create Product Group\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <FilterableTable\r\n                    dataArray={filteredData}\r\n                    columns={columns}\r\n                    EnableSerialNumber={true}\r\n                    isExpendable={true}\r\n                    maxHeightOption\r\n                />\r\n            </div>\r\n\r\n            <Dialog open={showDialog} onClose={closeDialog} maxWidth=\"sm\" fullWidth>\r\n                <DialogTitle>\r\n                    {editingItem ? \"Edit Product Group\" : \"Create Product Group\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label=\"Group Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={formData.Pro_Group || \"\"}\r\n                        onChange={(e) =>\r\n                            setFormData({ ...formData, Pro_Group: e.target.value })\r\n                        }\r\n                        InputProps={{\r\n                            style: {\r\n                                height: \"56px\",\r\n                            },\r\n                        }}\r\n                        InputLabelProps={{\r\n                            style: {\r\n                                backgroundColor: \"white\",\r\n                                padding: \"0 4px\",\r\n                            },\r\n                        }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton onClick={closeDialog} disabled={isSubmitting}>\r\n                        Cancel\r\n                    </MuiButton>\r\n                    <MuiButton\r\n                        onClick={handleSubmit}\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        disabled={isSubmitting}\r\n                    >\r\n                        {isSubmitting ? \"Processing...\" : editingItem ? \"Update\" : \"Save\"}\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={confirmDeleteDialog}\r\n                onClose={() => !isDeleting && setConfirmDeleteDialog(false)}\r\n            >\r\n                <DialogTitle>Confirm Deletion</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography>\r\n                        Are you sure you want to delete this Product group?\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <MuiButton\r\n                        onClick={() => setConfirmDeleteDialog(false)}\r\n                        disabled={isDeleting}\r\n                    >\r\n                        Cancel\r\n                    </MuiButton>\r\n                    <MuiButton\r\n                        onClick={handleDelete}\r\n                        color=\"error\"\r\n                        variant=\"contained\"\r\n                        disabled={isDeleting}\r\n                    >\r\n                        {isDeleting ? \"Deleting...\" : \"Delete\"}\r\n                    </MuiButton>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductGroup;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useId from '@mui/utils/useId';\nimport refType from '@mui/utils/refType';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/material-ui/api/form-control/)\n * - [InputLabel](/material-ui/api/input-label/)\n * - [FilledInput](/material-ui/api/filled-input/)\n * - [OutlinedInput](/material-ui/api/outlined-input/)\n * - [Input](/material-ui/api/input/)\n * - [FormHelperText](/material-ui/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n  const {\n      autoComplete,\n      autoFocus = false,\n      children,\n      className,\n      color = 'primary',\n      defaultValue,\n      disabled = false,\n      error = false,\n      FormHelperTextProps,\n      fullWidth = false,\n      helperText,\n      id: idOverride,\n      InputLabelProps,\n      inputProps,\n      InputProps,\n      inputRef,\n      label,\n      maxRows,\n      minRows,\n      multiline = false,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      required = false,\n      rows,\n      select = false,\n      SelectProps,\n      type,\n      value,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n  const InputMore = {};\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n    InputMore.label = label;\n  }\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n    InputMore['aria-describedby'] = undefined;\n  }\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n  /**\n   * Props applied to the [`Select`](/material-ui/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["proGroupData","setProGroupData","useState","showDialog","setShowDialog","formData","setFormData","Group_Name","editingItem","setEditingItem","confirmDeleteDialog","setConfirmDeleteDialog","deleteId","setDeleteId","reload","setReload","searchTerm","setSearchTerm","isSubmitting","setIsSubmitting","isDeleting","setIsDeleting","user","JSON","parse","localStorage","getItem","userId","UserId","Company_Id","Company_id","useEffect","fetchVoucherGroup","async","data","fetchLink","address","success","e","console","error","toast","openDialog","item","arguments","length","undefined","Pro_Group","closeDialog","filteredData","filter","toLowerCase","includes","columns","createCol","ColumnHeader","align","isVisible","isCustomCell","Cell","_ref","row","_jsxs","Fragment","children","_jsx","IconButton","size","onClick","Edit","fontSize","color","confirmDelete","id","Pro_Group_Id","Delete","_Fragment","className","style","width","Search","TextField","fullWidth","variant","placeholder","value","onChange","target","InputProps","height","Button","FilterableTable","dataArray","EnableSerialNumber","isExpendable","maxHeightOption","Dialog","open","onClose","maxWidth","DialogTitle","DialogContent","autoFocus","margin","label","InputLabelProps","backgroundColor","padding","DialogActions","MuiButton","disabled","_formData$Pro_Group","trim","method","bodyData","Alter_By","Created_By","message","err","Typography","log","createSvgIcon","d","getTextFieldUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","TextFieldRoot","styled","FormControl","name","overridesResolver","props","styles","root","React","inProps","ref","useDefaultProps","autoComplete","defaultValue","FormHelperTextProps","helperText","idOverride","inputProps","inputRef","maxRows","minRows","multiline","onBlur","onFocus","required","rows","select","SelectProps","type","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","InputMore","shrink","notched","native","useId","helperTextId","inputLabelId","InputComponent","InputElement","clsx","InputLabel","htmlFor","Select","labelId","input","FormHelperText","useButtonProps","_ref2","tagName","href","rel","role","tabIndex","meta","handleClick","event","isTrivialHref","preventDefault","stopPropagation","onKeyDown","key","as","asProp","source","excluded","i","sourceKeys","Object","keys","indexOf","buttonProps","Component","assign","displayName","bsPrefix","active","prefix","useBootstrapPrefix","classNames"],"sourceRoot":""}
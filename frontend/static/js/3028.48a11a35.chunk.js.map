{"version":3,"file":"static/js/3028.48a11a35.chunk.js","mappings":"mVAYA,MAmZA,EAnZoBA,IAA+D,IAA9D,UAAEC,EAAS,WAAEC,EAAU,UAAEC,EAAS,WAAEC,EAAU,OAAEC,GAAQL,EACzE,MAAOM,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IACzCC,EAAeC,eAAeC,QAAQ,gBAEtCC,EAAiB,CACnBC,UAAUC,EAAAA,EAAAA,MACVC,QAAQD,EAAAA,EAAAA,MACRE,mBAAoB,CAAEC,MAAO,MAAOC,MAAO,IAC3CC,sBAAuB,CAAEF,MAAO,MAAOC,MAAO,IAC9CE,uBAAwB,CAAEH,MAAO,MAAOC,MAAO,IAC/CG,kBAAmB,CAAEJ,MAAO,MAAOC,MAAO,IAC1CI,eAAgB,GAChBC,aAAc,KAGXC,EAASC,IAAcjB,EAAAA,EAAAA,UAAS,IAChCI,EACHc,cAAc,KAGXC,EAAgBC,IAAqBpB,EAAAA,EAAAA,UAAS,CACjDqB,YAAa,GACbC,eAAgB,GAChBC,gBAAiB,GACjBC,WAAY,KAGVC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,GAAU,CACNC,QAAU,wCACXC,MAAKC,IACAA,EAAKC,SACLZ,GAAkBa,IAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAK,IACnBJ,EACHZ,aAAaiB,EAAAA,EAAAA,IAAY,OAAJP,QAAI,IAAJA,GAAY,QAARG,EAAJH,EAAMQ,cAAM,IAAAL,OAAR,EAAJA,EAAcb,aACnCC,gBAAgBgB,EAAAA,EAAAA,IAAY,OAAJP,QAAI,IAAJA,GAAY,QAARI,EAAJJ,EAAMQ,cAAM,IAAAJ,OAAR,EAAJA,EAAcb,gBACtCC,iBAAiBe,EAAAA,EAAAA,IAAY,OAAJP,QAAI,IAAJA,GAAY,QAARK,EAAJL,EAAMQ,cAAM,IAAAH,OAAR,EAAJA,EAAcb,iBACvCC,YAAYc,EAAAA,EAAAA,IAAY,OAAJP,QAAI,IAAJA,GAAY,QAARM,EAAJN,EAAMQ,cAAM,IAAAF,OAAR,EAAJA,EAAcb,YACrC,GACL,GACF,GACH,KAEHG,EAAAA,EAAAA,YAAU,KACN,MAAMa,GAAsBC,EAAAA,EAAAA,IAA0B5C,IAChD,SACFQ,EAAQ,OAAEE,EAAM,mBAChBC,EAAqBJ,EAAeI,mBAAkB,sBACtDG,EAAwBP,EAAeO,sBAAqB,uBAC5DC,EAAyBR,EAAeQ,uBAAsB,kBAC9DC,EAAoBT,EAAeS,kBAAiB,eACpDC,EAAiBV,EAAeU,eAAc,aAC9CC,EAAeX,EAAeW,cAC9ByB,EAEJvB,GAAWgB,IAAG,IACPA,EACH5B,SAAUA,EACVE,OAAQA,EACRC,qBACAG,wBACAC,yBACAC,oBACAC,iBACAC,kBACD,GAEJ,CAACd,EAAcJ,KAElB8B,EAAAA,EAAAA,YAAU,KACN,MAAMa,GAAsBC,EAAAA,EAAAA,IAA0B5C,IAChD,SACFQ,EAAQ,OAAEE,EAAM,mBAChBC,EAAqBJ,EAAeI,mBAAkB,sBACtDG,EAAwBP,EAAeO,sBAAqB,uBAC5DC,EAAyBR,EAAeQ,uBAAsB,kBAC9DC,EAAoBT,EAAeS,kBAAiB,eACpDC,EAAiBV,EAAeU,eAAc,aAC9CC,EAAeX,EAAeW,cAC9ByB,GAEJZ,EAAAA,EAAAA,GAAU,CACNC,QAAU,gDACCxB,0BACFE,4BACmB,OAAlBC,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBE,QAAS,2BACV,OAArBC,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBD,QAAS,4BACT,OAAtBE,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBF,QAAS,+BACb,OAAjBG,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBH,QAAS,2BAC/BI,gCACMC,IACfrB,aAAYD,cACbqC,MAAKC,IACAA,EAAKC,SACLjC,EAAegC,EAAKA,KACxB,IACDW,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAChC,CAAC1C,EAAcJ,IAElB,MAAMiD,GAAeC,EAAAA,EAAAA,UAAQ,IAAMjD,EAAYkD,QAC3C,CAACC,EAAKC,KAAWC,EAAAA,EAAAA,IAASF,EAAW,OAANC,QAAM,IAANA,OAAM,EAANA,EAAQE,gBAAgB,IACxD,CAACtD,IAEEuD,EAAcA,IAAMpC,GAAWgB,IAAG,IAAUA,EAAKf,cAAc,MAErE,OACIoC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAe,CACZC,MAAM,WACNC,iBAAkB,GAClBC,eAAgB,GAChBC,YACIR,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAMIC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CACPC,QAASA,IAAM/C,GAAWgB,IAAG,IAAUA,EAAKf,cAAc,MAC1D+C,KAAK,QAAQC,UAAU,OAAMV,UAChCC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CAACD,UAAU,YAErBvE,IACG8D,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CACHJ,QAASA,IAAMvC,EAAS,SAAU,CAC9B4C,MAAO,CACHhE,SAAUW,EAAQX,SAClBE,OAAQS,EAAQT,UAGxB+D,QAAQ,WAAUd,SACrB,QAGJ7D,IACG8D,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CACHJ,QAASA,IAAMvC,EAAS,eAAgB,CACpC4C,MAAO,CACHhE,SAAUW,EAAQX,SAClBE,OAAQS,EAAQT,UAGxB+D,QAAQ,WACRJ,UAAU,OAAMV,SACnB,mBAGLC,EAAAA,EAAAA,KAAA,QAAMS,UAAU,+DAA8DV,UACzEe,EAAAA,EAAAA,IAASzB,GAAgB,IAAKQ,EAAAA,EAAAA,MAAA,MAAIY,UAAU,+BAA8BV,SAAA,CAAC,WAAQgB,EAAAA,EAAAA,IAAa1B,WAI7G2B,UAAW3E,EACX4E,QAAS,EACLC,EAAAA,EAAAA,IAAU,eAAgB,OAAQ,SAClCA,EAAAA,EAAAA,IAAU,qBAAsB,SAAU,eAC1CA,EAAAA,EAAAA,IAAU,gBAAiB,SAAU,WACrCA,EAAAA,EAAAA,IAAU,wBAAyB,SAAU,cAC7CA,EAAAA,EAAAA,IAAU,oBAAqB,SAAU,cACzCA,EAAAA,EAAAA,IAAU,qBAAsB,SAAU,eAC1CA,EAAAA,EAAAA,IAAU,eAAgB,SAAU,WACpC,CACIC,UAAW,EACXC,aAAc,YACdC,cAAc,EACdC,KAAMC,IAAA,IAAAC,EAAA,IAAC,IAAEC,GAAKF,EAAA,OAAgF,QAAhFC,EAAKE,EAAAA,GAAaC,MAAKC,IAAQC,EAAAA,EAAAA,IAAcD,EAAK3E,MAAOwE,EAAIK,4BAAmB,IAAAN,OAAA,EAA3EA,EAA6ExE,KAAK,GAEzG,CACImE,UAAW,EACXC,aAAc,SACdC,cAAc,EACdC,KAAMS,IAAA,IAAC,IAAEN,GAAKM,EAAA,OACV/B,EAAAA,EAAAA,KAACgC,EAAAA,GAAa,CACVC,YAAa,CACT,CACIC,KAAM,OACNC,MAAMnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAI,IACXC,QAASA,IAAMrE,EAAS,SAAU,CAC9B4C,MAAO,IACAa,EACH7E,SAAUW,EAAQX,SAClBE,OAAQS,EAAQT,UAGxBwF,UAAWnG,GAEf,CACI+F,KAAM,gBACNC,MAAMnC,EAAAA,EAAAA,KAACuC,EAAAA,EAAQ,IACfF,QAASA,IAAMrE,EAAS,eAAgB,CACpC4C,MAAO,IACAa,EACH7E,SAAUW,EAAQX,SAClBE,OAAQS,EAAQT,UAGxBwF,UACKnG,IACE0F,EAAAA,EAAAA,IAAcJ,EAAIe,UAAW,MAI9C,IAIdC,oBAAkB,KAGtB5C,EAAAA,EAAAA,MAAC6C,EAAAA,EAAM,CACHC,KAAMpF,EAAQE,aACdmF,QAAShD,EACTiD,WAAS,EAACC,SAAS,KAAI/C,SAAA,EAEvBC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAW,CAAAhD,SAAC,aACbC,EAAAA,EAAAA,KAACgD,EAAAA,EAAa,CAAAjD,UAEVC,EAAAA,EAAAA,KAAA,OAAKS,UAAU,wBAAuBV,UAClCC,EAAAA,EAAAA,KAAA,SAAOS,UAAU,QAAOV,UACpBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EAGIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIiD,MAAO,CAAEC,cAAe,UAAWnD,SAAC,UACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,SACI4B,KAAK,OACL3E,MAAOM,EAAQX,SACfuG,SAAUjE,GAAK1B,EAAW,IAAKD,EAASX,SAAUsC,EAAEkE,OAAOnG,QAC3DwD,UAAU,mBAMtBZ,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIiD,MAAO,CAAEC,cAAe,UAAWnD,SAAC,QACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,SACI4B,KAAK,OACL3E,MAAOM,EAAQT,OACfqG,SAAUjE,GAAK1B,EAAW,IAAKD,EAAST,OAAQoC,EAAEkE,OAAOnG,QACzDwD,UAAU,mBAMtBZ,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIiD,MAAO,CAAEC,cAAe,UAAWnD,SAAC,mBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACqD,EAAAA,GAAM,CACHpG,MAAc,OAAPM,QAAO,IAAPA,OAAO,EAAPA,EAASL,sBAChBiG,SAAWjE,GAAM1B,EAAW,IAAKD,EAASL,sBAAuBgC,IACjEoE,QAAS,CACL,CAAErG,MAAO,GAAID,MAAO,UACjBU,EAAeG,gBAEtB0F,OAAQC,EAAAA,GACRC,cAAc,EACdC,YAAa,gBACbC,iBAAkBC,SAASC,aAMvChE,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIiD,MAAO,CAAEC,cAAe,UAAWnD,SAAC,qBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACqD,EAAAA,GAAM,CACHpG,MAAc,OAAPM,QAAO,IAAPA,OAAO,EAAPA,EAASJ,uBAChBgG,SAAWjE,GAAM1B,EAAW,IAAKD,EAASJ,uBAAwB+B,IAClEoE,QAAS,CACL,CAAErG,MAAO,GAAID,MAAO,UACjBU,EAAeI,iBAEtByF,OAAQC,EAAAA,GACRC,cAAc,EACdC,YAAa,iBACbC,iBAAkBC,SAASC,aAMvChE,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIiD,MAAO,CAAEC,cAAe,UAAWnD,SAAC,mBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIF,EAAAA,EAAAA,MAAA,UACIY,UAAU,eACVxD,MAAOM,EAAQD,aACf6F,SAAUjE,GAAK1B,GAAWgB,IAAG,IAAUA,EAAKlB,aAAc4B,EAAEkE,OAAOnG,UAAU8C,SAAA,EAE7EC,EAAAA,EAAAA,KAAA,UAAQ/C,MAAO,GAAG8C,SAAC,QAClB2B,EAAAA,GAAaoC,KAAI,CAAClC,EAAMmC,KACrB/D,EAAAA,EAAAA,KAAA,UAAQ/C,MAAO2E,EAAK3E,MAAM8C,SAAY6B,EAAK5E,OAAX+G,cAOhDlE,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIiD,MAAO,CAAEC,cAAe,UAAWnD,SAAC,mBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACqD,EAAAA,GAAM,CACHpG,MAAc,OAAPM,QAAO,IAAPA,OAAO,EAAPA,EAASR,mBAChBoG,SAAWjE,GAAM1B,EAAW,IAAKD,EAASR,mBAAoBmC,IAC9DoE,QAAS,CACL,CAAErG,MAAO,GAAID,MAAO,UACjBU,EAAeE,aAEtB2F,OAAQC,EAAAA,GACRC,cAAc,EACdC,YAAa,eACbC,iBAAkBC,SAASC,aAMvChE,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIiD,MAAO,CAAEC,cAAe,UAAWnD,SAAC,oBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIF,EAAAA,EAAAA,MAAA,UACI+B,KAAK,OACL3E,MAAOM,EAAQF,eACf8F,SAAUjE,GAAK1B,EAAW,IAAKD,EAASF,eAAgB6B,EAAEkE,OAAOnG,QACjEwD,UAAU,WAAUV,SAAA,EAEpBC,EAAAA,EAAAA,KAAA,UAAQ/C,MAAO,GAAG8C,SAAC,QAClBiE,EAAAA,GAAcF,KAAI,CAACG,EAAKF,KACrB/D,EAAAA,EAAAA,KAAA,UAAQ/C,MAAOgH,EAAIhH,MAAM8C,SAAYkE,EAAIjH,OAAV+G,cAO/ClE,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIiD,MAAO,CAAEC,cAAe,UAAWnD,SAAC,gBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACqD,EAAAA,GAAM,CACHpG,MAAc,OAAPM,QAAO,IAAPA,OAAO,EAAPA,EAASH,kBAChB+F,SAAWjE,GAAM1B,GAAWgB,IAAG,IAAUA,EAAKpB,kBAAmB8B,MACjEoE,QAAS,CACL,CAAErG,MAAO,GAAID,MAAO,UACjBU,EAAeK,YAEtBwF,OAAQC,EAAAA,GACRC,cAAc,EACdC,YAAa,oBACbC,iBAAkBC,SAASC,sBASvDhE,EAAAA,EAAAA,MAACqE,EAAAA,EAAa,CAACzD,UAAU,oDAAmDV,SAAA,EACxEC,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CACHE,QAAQ,WACRN,QAASA,KACL/C,GAAWgB,IAAG,IACPA,KACA7B,KACJ,EAEPwH,WAAWnE,EAAAA,EAAAA,KAACoE,EAAAA,EAAQ,IAAIrE,SAC3B,WACDF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAACJ,QAASX,EAAYG,SAAC,WAC9BC,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CACHJ,QAASA,KACLX,KACAyE,EAAAA,EAAAA,IAAkB,CACdzH,SAAiB,OAAPW,QAAO,IAAPA,OAAO,EAAPA,EAASX,SACnBE,OAAQS,EAAQT,OAChBV,SACAW,mBAAoBQ,EAAQR,mBAC5BG,sBAAuBK,EAAQL,sBAC/BC,uBAAwBI,EAAQJ,uBAChCC,kBAAmBG,EAAQH,kBAC3BC,eAAgBE,EAAQF,eACxBC,aAAcC,EAAQD,cACxB,EAEN6G,WAAWnE,EAAAA,EAAAA,KAACsE,EAAAA,EAAM,IAClBzD,QAAQ,YAAWd,SACtB,sBAId,C,yGC1ZX,MAAMwE,GAAcC,EAAAA,EAAAA,MAAiBC,KAExBC,EAAiC,CAC1CC,WAAY,GACZC,QAAS,GACTC,wBAAyB,GACzBC,YAAa,GACbC,mBAAoB,GAEpBC,cAAcnI,EAAAA,EAAAA,MACdiF,kBAAmB,EACnBmD,cAAe,GACfC,mBAAoB,SACpBvF,cAAe,EACfwF,aAAc,GACdC,kBAAmB,SACnBC,aAAc,EACdC,QAAS,GACTC,OAAQ,EACRC,WAAY,EACZC,gBAAiB,EACjBC,iBAAkB,GAElBC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,UAAW,GAEX/H,YAAYgI,EAAAA,EAAAA,IAAyB,OAAXxB,QAAW,IAAXA,OAAW,EAAXA,EAAayB,QAAqB,OAAXzB,QAAW,IAAXA,OAAW,EAAXA,EAAayB,OAAS,GACvEC,YAAYF,EAAAA,EAAAA,IAAyB,OAAXxB,QAAW,IAAXA,OAAW,EAAXA,EAAayB,QAAqB,OAAXzB,QAAW,IAAXA,OAAW,EAAXA,EAAayB,OAAS,GACvEE,WAAY,GACZC,UAAW,IAGFC,EAA8B,CACvCC,QAAS,GAETH,WAAY,GACZvB,WAAY,GACZ2B,WAAY,GACZtB,aAAc,GACdlD,kBAAmB,GACnByE,aAAc,GAGdC,QAAS,GACTC,gBAAiB,GACjBC,UAAW,GACXC,YAAa,EACbC,UAAW,EACXC,WAAY,EAGZC,iBAAkB,GAClBC,iBAAkB,GAClBC,gBAAiB,EACjBC,cAAe,GAGNC,EAAiC,CAE1Cb,QAAS,GACT1B,WAAY,GACZ2B,WAAY,GACZtB,aAAc,GACdlD,kBAAmB,GACnBqF,gBAAiB,GACjBjB,WAAY,GAGZM,QAAS,GACTC,gBAAiB,GACjBW,OAAQ,GACRC,QAAS,GACTC,UAAW,GACXC,cAAe,EAGfC,aAAc,EACdC,WAAY,GAGH/F,EAAe,CACxB,CACIzE,MAAO,EACPD,MAAO,4BAEX,CACIC,MAAO,EACPD,MAAO,qBAEX,CACIC,MAAO,EACPD,MAAO,eAIF0K,EAAoB,CAC7B,CACI1K,MAAO,kBACPC,MAAO,GAEX,CACID,MAAO,kBACPC,MAAO,GAEX,CACID,MAAO,aACPC,MAAO,IAIF+G,EAAgB,CACzB,CACIhH,MAAO,MACPC,MAAO,GAEX,CACID,MAAO,UACPC,MAAO,GAEX,CACID,MAAO,YACPC,MAAO,GAEX,CACID,MAAO,WACPC,MAAO,IAIF0K,EAAmB,CAC5B,CACI3K,MAAO,OACPC,MAAO,QAEX,CACID,MAAO,MACPC,MAAO,OAEX,CACID,MAAO,OACPC,MAAO,QAEX,CACID,MAAO,cACPC,MAAO,eAEX,CACID,MAAO,kBACPC,MAAO,mBAEX,CACID,MAAO,SACPC,MAAO,U","sources":["Pages/Receipts/ReceiptMaster/listReceipts.jsx","Pages/Receipts/ReceiptMaster/variable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from '@mui/material';\r\nimport FilterableTable, { ButtonActions, createCol } from '../../../Components/filterableTable2';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { Addition, getSessionFiltersByPageId, isEqualNumber, ISOString, NumberFormat, setSessionFilters, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { ClearAll, Edit, FilterAlt, FilterList, Search, Timeline } from \"@mui/icons-material\";\r\nimport { useMemo } from \"react\";\r\nimport { receiptStatus, receiptTypes } from \"./variable\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\n\r\nconst ReceiptList = ({ loadingOn, loadingOff, AddRights, EditRights, pageID }) => {\r\n    const [receiptData, setReceiptData] = useState([]);\r\n    const sessionValue = sessionStorage.getItem('filterValues');\r\n\r\n    const defaultFilters = {\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        voucherType_Filter: { label: 'ALL', value: '' },\r\n        debit_accounts_Filter: { label: 'ALL', value: '' },\r\n        credit_accounts_Filter: { label: 'ALL', value: '' },\r\n        created_by_Filter: { label: 'ALL', value: '' },\r\n        receipt_status: '',\r\n        receipt_type: ''\r\n    };\r\n\r\n    const [filters, setFilters] = useState({\r\n        ...defaultFilters,\r\n        filterDialog: false,\r\n    });\r\n\r\n    const [filterDropDown, setFilterDropDown] = useState({\r\n        voucherType: [],\r\n        debit_accounts: [],\r\n        credit_accounts: [],\r\n        created_by: [],\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/filtersValues`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setFilterDropDown(pre => ({\r\n                    ...pre,\r\n                    voucherType: toArray(data?.others?.voucherType),\r\n                    debit_accounts: toArray(data?.others?.debit_accounts),\r\n                    credit_accounts: toArray(data?.others?.credit_accounts),\r\n                    created_by: toArray(data?.others?.created_by)\r\n                }))\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const sessionFilterValues = getSessionFiltersByPageId(pageID);\r\n        const {\r\n            Fromdate, Todate,\r\n            voucherType_Filter = defaultFilters.voucherType_Filter,\r\n            debit_accounts_Filter = defaultFilters.debit_accounts_Filter,\r\n            credit_accounts_Filter = defaultFilters.credit_accounts_Filter,\r\n            created_by_Filter = defaultFilters.created_by_Filter,\r\n            receipt_status = defaultFilters.receipt_status,\r\n            receipt_type = defaultFilters.receipt_type\r\n        } = sessionFilterValues;\r\n\r\n        setFilters(pre => ({\r\n            ...pre,\r\n            Fromdate: Fromdate,\r\n            Todate: Todate,\r\n            voucherType_Filter,\r\n            debit_accounts_Filter,\r\n            credit_accounts_Filter,\r\n            created_by_Filter,\r\n            receipt_status,\r\n            receipt_type,\r\n        }));\r\n\r\n    }, [sessionValue, pageID]);\r\n\r\n    useEffect(() => {\r\n        const sessionFilterValues = getSessionFiltersByPageId(pageID);\r\n        const {\r\n            Fromdate, Todate,\r\n            voucherType_Filter = defaultFilters.voucherType_Filter,\r\n            debit_accounts_Filter = defaultFilters.debit_accounts_Filter,\r\n            credit_accounts_Filter = defaultFilters.credit_accounts_Filter,\r\n            created_by_Filter = defaultFilters.created_by_Filter,\r\n            receipt_status = defaultFilters.receipt_status,\r\n            receipt_type = defaultFilters.receipt_type\r\n        } = sessionFilterValues;\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster?\r\n            Fromdate=${Fromdate}&\r\n            Todate=${Todate}&\r\n            voucher=${voucherType_Filter?.value || ''}&\r\n            debit=${debit_accounts_Filter?.value || ''}&\r\n            credit=${credit_accounts_Filter?.value || ''}&\r\n            createdBy=${created_by_Filter?.value || ''}&\r\n            status=${receipt_status}&\r\n            receipt_type=${receipt_type}`,\r\n            loadingOff, loadingOn\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setReceiptData(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [sessionValue, pageID]);\r\n\r\n    const TotalReceipt = useMemo(() => receiptData.reduce(\r\n        (acc, orders) => Addition(acc, orders?.credit_amount), 0\r\n    ), [receiptData]);\r\n\r\n    const closeDialog = () => setFilters(pre => ({ ...pre, filterDialog: false }));\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title='Receipts'\r\n                headerFontSizePx={12}\r\n                bodyFontSizePx={12}\r\n                ButtonArea={\r\n                    <>\r\n                        {/* <IconButton\r\n                            onClick={() => setRefresh(pre => !pre)}\r\n                            size=\"small\" className=\"mx-1\"\r\n                        ><FilterList /></IconButton> */}\r\n\r\n                        <IconButton\r\n                            onClick={() => setFilters(pre => ({ ...pre, filterDialog: true }))}\r\n                            size=\"small\" className=\"mx-1\"\r\n                        ><FilterAlt className=\"fa-20\" /></IconButton>\r\n\r\n                        {AddRights && (\r\n                            <Button\r\n                                onClick={() => navigate('create', {\r\n                                    state: {\r\n                                        Fromdate: filters.Fromdate,\r\n                                        Todate: filters.Todate\r\n                                    }\r\n                                })}\r\n                                variant=\"outlined\"\r\n                            >Add</Button>\r\n                        )}\r\n\r\n                        {AddRights && (\r\n                            <Button\r\n                                onClick={() => navigate('addReference', {\r\n                                    state: {\r\n                                        Fromdate: filters.Fromdate,\r\n                                        Todate: filters.Todate\r\n                                    }\r\n                                })}\r\n                                variant=\"outlined\"\r\n                                className=\"me-2\"\r\n                            >Add Reference</Button>\r\n                        )}\r\n\r\n                        <span className=\"bg-light text-light fa-11 px-1 shadow-sm py-1 rounded-3 mx-1\">\r\n                            {toNumber(TotalReceipt) > 0 && <h6 className=\"m-0 text-end text-muted px-3\">Total: {NumberFormat(TotalReceipt)}</h6>}\r\n                        </span>\r\n                    </>\r\n                }\r\n                dataArray={receiptData}\r\n                columns={[\r\n                    createCol('receipt_date', 'date', 'Date'),\r\n                    createCol('receipt_invoice_no', 'string', 'Receipt ID'),\r\n                    createCol('credit_amount', 'number', 'Amount'),\r\n                    createCol('TotalReferencedAmount', 'number', 'Added Ref'),\r\n                    createCol('debit_ledger_name', 'string', 'Debit-Acc'),\r\n                    createCol('credit_ledger_name', 'string', 'Credit-Acc'),\r\n                    createCol('Voucher_Type', 'string', 'Voucher'),\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Bill Type',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => receiptTypes.find(type => isEqualNumber(type.value, row.receipt_bill_type))?.label\r\n                    },\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Action',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => (\r\n                            <ButtonActions\r\n                                buttonsData={[\r\n                                    {\r\n                                        name: 'Edit',\r\n                                        icon: <Edit />,\r\n                                        onclick: () => navigate('create', {\r\n                                            state: {\r\n                                                ...row,\r\n                                                Fromdate: filters.Fromdate,\r\n                                                Todate: filters.Todate\r\n                                            },\r\n                                        }),\r\n                                        disabled: !EditRights\r\n                                    },\r\n                                    {\r\n                                        name: 'Add Reference',\r\n                                        icon: <Timeline />,\r\n                                        onclick: () => navigate('addReference', {\r\n                                            state: {\r\n                                                ...row,\r\n                                                Fromdate: filters.Fromdate,\r\n                                                Todate: filters.Todate\r\n                                            },\r\n                                        }),\r\n                                        disabled: (\r\n                                            !EditRights\r\n                                            || isEqualNumber(row.bill_type, 3)\r\n                                        )\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        )\r\n                    }\r\n                ]}\r\n                EnableSerialNumber\r\n            />\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                {/* from date */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* to date */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* debit account */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Debit Account</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.debit_accounts_Filter}\r\n                                            onChange={(e) => setFilters({ ...filters, debit_accounts_Filter: e })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filterDropDown.debit_accounts\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Debit Account\"}\r\n                                            menuPortalTarget={document.body}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* credit account */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Credit Account </td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.credit_accounts_Filter}\r\n                                            onChange={(e) => setFilters({ ...filters, credit_accounts_Filter: e })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filterDropDown.credit_accounts\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Credit Account\"}\r\n                                            menuPortalTarget={document.body}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* Receipt type */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Receipt Type </td>\r\n                                    <td>\r\n                                        <select\r\n                                            className=\"cus-inpt p-2\"\r\n                                            value={filters.receipt_type}\r\n                                            onChange={e => setFilters(pre => ({ ...pre, receipt_type: e.target.value }))}\r\n                                        >\r\n                                            <option value={''}>ALL</option>\r\n                                            {receiptTypes.map((type, ind) => (\r\n                                                <option value={type.value} key={ind}>{type.label}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* Voucher Type */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Voucher Type </td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.voucherType_Filter}\r\n                                            onChange={(e) => setFilters({ ...filters, voucherType_Filter: e })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filterDropDown.voucherType\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Voucher Type\"}\r\n                                            menuPortalTarget={document.body}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* receipt status */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Receipt Status</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.receipt_status}\r\n                                            onChange={e => setFilters({ ...filters, receipt_status: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={''}>All</option>\r\n                                            {receiptStatus.map((sts, ind) => (\r\n                                                <option value={sts.value} key={ind}>{sts.label}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* created by */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.created_by_Filter}\r\n                                            onChange={(e) => setFilters(pre => ({ ...pre, created_by_Filter: e }))}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filterDropDown.created_by\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                            menuPortalTarget={document.body}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions className=\"d-flex align-items-center justify-content-between\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={() => {\r\n                            setFilters(pre => ({\r\n                                ...pre,\r\n                                ...defaultFilters\r\n                            }))\r\n                        }}\r\n                        startIcon={<ClearAll />}\r\n                    >clear</Button>\r\n                    <span>\r\n                        <Button onClick={closeDialog}>close</Button>\r\n                        <Button\r\n                            onClick={() => {\r\n                                closeDialog();\r\n                                setSessionFilters({\r\n                                    Fromdate: filters?.Fromdate,\r\n                                    Todate: filters.Todate,\r\n                                    pageID,\r\n                                    voucherType_Filter: filters.voucherType_Filter,\r\n                                    debit_accounts_Filter: filters.debit_accounts_Filter,\r\n                                    credit_accounts_Filter: filters.credit_accounts_Filter,\r\n                                    created_by_Filter: filters.created_by_Filter,\r\n                                    receipt_status: filters.receipt_status,\r\n                                    receipt_type: filters.receipt_type,\r\n                                });\r\n                            }}\r\n                            startIcon={<Search />}\r\n                            variant=\"contained\"\r\n                        >Search</Button>\r\n                    </span>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReceiptList;","import { checkIsNumber, ISOString, getSessionUser } from \"../../../Components/functions\";\r\nconst userDetails = getSessionUser().user;\r\n\r\nexport const receiptGeneralInfoInitialValue = {\r\n    receipt_id: '',\r\n    year_id: '',\r\n    receipt_voucher_type_id: '',\r\n    receipt_sno: '',\r\n    receipt_invoice_no: '',\r\n\r\n    receipt_date: ISOString(),\r\n    receipt_bill_type: 1,\r\n    credit_ledger: '',\r\n    credit_ledger_name: 'Select',\r\n    credit_amount: 0,\r\n    debit_ledger: '',\r\n    debit_ledger_name: 'Select',\r\n    debit_amount: 0,\r\n    remarks: '',\r\n    status: 1,\r\n    is_new_ref: 0,\r\n    is_journal_type: 0,\r\n    transaction_type: '',\r\n\r\n    check_no: '',\r\n    check_date: '',\r\n    bank_name: '',\r\n    bank_date: '',\r\n\r\n    created_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    altered_by: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    created_on: '',\r\n    alterd_on: '',\r\n}\r\n\r\nexport const receiptBillInfoInitialValue = {\r\n    auto_id: '',\r\n    // general info\r\n    created_on: '',\r\n    receipt_id: '',\r\n    receipt_no: '',\r\n    receipt_date: '',\r\n    receipt_bill_type: '',\r\n    DR_CR_Acc_Id: '',\r\n\r\n    // form values\r\n    bill_id: '',\r\n    JournalBillType: '',\r\n    bill_name: '',\r\n    bill_amount: 0,\r\n    Debit_Amo: 0,\r\n    Credit_Amo: 0,\r\n\r\n    // frontEndColumns\r\n    SalesInvoiceDate: '',\r\n    StockJournalDate: '',\r\n    TotalPaidAmount: 0,\r\n    PendingAmount: 0,\r\n}\r\n\r\nexport const receiptCostingInfoInitialValue = {\r\n    // backend\r\n    auto_id: '',\r\n    receipt_id: '',\r\n    receipt_no: '',\r\n    receipt_date: '',\r\n    receipt_bill_type: '',\r\n    Debit_Ledger_Id: '',\r\n    created_on: '',\r\n\r\n    // frontend \r\n    bill_id: '',\r\n    JournalBillType: '',\r\n    arr_id: '',\r\n    item_id: '',\r\n    item_name: '',\r\n    expence_value: 0,\r\n\r\n    // to show previous payment (frontend only).\r\n    itemQuantity: 0,\r\n    PaidAmount: 0,\r\n}\r\n\r\nexport const receiptTypes = [\r\n    {\r\n        value: 1,\r\n        label: 'CUSTOMER - SALES INVOICE'\r\n    },\r\n    {\r\n        value: 2,\r\n        label: 'EXPENCES - RETURN'\r\n    },\r\n    {\r\n        value: 3,\r\n        label: 'ON ACCOUNT'\r\n    },\r\n];\r\n\r\nexport const stockJournalTypes = [\r\n    {\r\n        label: 'MATERIAL INWARD',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'GODOWN TRANSFER',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'PROCESSING',\r\n        value: 3\r\n    },\r\n]\r\n\r\nexport const receiptStatus = [\r\n    {\r\n        label: 'New',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'Process',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'Completed',\r\n        value: 3\r\n    },\r\n    {\r\n        label: 'Canceled',\r\n        value: 0\r\n    },\r\n];\r\n\r\nexport const transactionTypes = [\r\n    {\r\n        label: 'Cash',\r\n        value: 'Cash'\r\n    },\r\n    {\r\n        label: 'UPI',\r\n        value: 'UPI'\r\n    },\r\n    {\r\n        label: 'Card',\r\n        value: 'Card'\r\n    },\r\n    {\r\n        label: 'Cheque / DD',\r\n        value: 'Cheque / DD'\r\n    },\r\n    {\r\n        label: 'E-Fund transfer',\r\n        value: 'E-Fund transfer'\r\n    },\r\n    {\r\n        label: 'Others',\r\n        value: 'Others'\r\n    },\r\n]"],"names":["_ref","loadingOn","loadingOff","AddRights","EditRights","pageID","receiptData","setReceiptData","useState","sessionValue","sessionStorage","getItem","defaultFilters","Fromdate","ISOString","Todate","voucherType_Filter","label","value","debit_accounts_Filter","credit_accounts_Filter","created_by_Filter","receipt_status","receipt_type","filters","setFilters","filterDialog","filterDropDown","setFilterDropDown","voucherType","debit_accounts","credit_accounts","created_by","navigate","useNavigate","useEffect","fetchLink","address","then","data","success","pre","_data$others","_data$others2","_data$others3","_data$others4","toArray","others","sessionFilterValues","getSessionFiltersByPageId","catch","e","console","error","TotalReceipt","useMemo","reduce","acc","orders","Addition","credit_amount","closeDialog","_jsxs","_Fragment","children","_jsx","FilterableTable","title","headerFontSizePx","bodyFontSizePx","ButtonArea","IconButton","onClick","size","className","FilterAlt","Button","state","variant","toNumber","NumberFormat","dataArray","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref2","_receiptTypes$find","row","receiptTypes","find","type","isEqualNumber","receipt_bill_type","_ref3","ButtonActions","buttonsData","name","icon","Edit","onclick","disabled","Timeline","bill_type","EnableSerialNumber","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","style","verticalAlign","onChange","target","Select","options","styles","customSelectStyles","isSearchable","placeholder","menuPortalTarget","document","body","map","ind","receiptStatus","sts","DialogActions","startIcon","ClearAll","setSessionFilters","Search","userDetails","getSessionUser","user","receiptGeneralInfoInitialValue","receipt_id","year_id","receipt_voucher_type_id","receipt_sno","receipt_invoice_no","receipt_date","credit_ledger","credit_ledger_name","debit_ledger","debit_ledger_name","debit_amount","remarks","status","is_new_ref","is_journal_type","transaction_type","check_no","check_date","bank_name","bank_date","checkIsNumber","UserId","altered_by","created_on","alterd_on","receiptBillInfoInitialValue","auto_id","receipt_no","DR_CR_Acc_Id","bill_id","JournalBillType","bill_name","bill_amount","Debit_Amo","Credit_Amo","SalesInvoiceDate","StockJournalDate","TotalPaidAmount","PendingAmount","receiptCostingInfoInitialValue","Debit_Ledger_Id","arr_id","item_id","item_name","expence_value","itemQuantity","PaidAmount","stockJournalTypes","transactionTypes"],"sourceRoot":""}
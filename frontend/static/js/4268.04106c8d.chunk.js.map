{"version":3,"file":"static/js/4268.04106c8d.chunk.js","mappings":"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","sources":["Pages/Inventry/stockProcess.jsx","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\r\nimport { checkIsNumber, isEqualNumber, ISOString, isValidDate, Subraction } from '../../Components/functions';\r\nimport FilterableTable, { formatString } from '../../Components/filterableTable2';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tooltip } from \"@mui/material\";\r\nimport { FilterAlt, Search } from \"@mui/icons-material\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst transformStockJournalData = (data) => {\r\n    let transformedData = [];\r\n\r\n    data.forEach((entry, entryIndex) => {\r\n        const maxRows = Math.max(entry?.SourceDetails?.length, entry?.DestinationDetails?.length, entry?.StaffsDetails?.length);\r\n\r\n        const totalSourceQty = entry.SourceDetails.reduce((sum, item) => sum + (item.Sour_Qty || 0), 0);\r\n        const totalDestinationQty = entry.DestinationDetails.reduce((sum, item) => sum + (item.Dest_Qty || 0), 0);\r\n\r\n        const diffPercentage = totalSourceQty !== 0\r\n            ? ((totalDestinationQty - totalSourceQty) / totalSourceQty) * 100\r\n            : 0;\r\n\r\n        transformedData.push({\r\n            SNo: entryIndex + 1,\r\n            Date: entry.Stock_Journal_date.split(\"T\")[0],\r\n            VoucherType: entry.Stock_Journal_Voucher_type,\r\n            VoucherNo: entry.Journal_no,\r\n            SourceItem: \"\",\r\n            SourceGodown: \"\",\r\n            SourceQty: totalSourceQty,\r\n            DestinationItem: \"\",\r\n            DestinationGodown: \"\",\r\n            DestinationQty: totalDestinationQty,\r\n            DifferentQTY: Subraction(totalDestinationQty, totalSourceQty),\r\n            DifferentPercentage: diffPercentage,\r\n            Staffs: \"\"\r\n        });\r\n\r\n        for (let i = 0; i < maxRows; i++) {\r\n            transformedData.push({\r\n                SNo: '',\r\n                Date: '',\r\n                VoucherType: '',\r\n                VoucherNo: '',\r\n                SourceItem: entry.SourceDetails[i]?.Product_Name || \"\",\r\n                SourceGodown: entry.SourceDetails[i]?.Godown_Name || \"\",\r\n                SourceQty: entry.SourceDetails[i]?.Sour_Qty || \"\",\r\n                DestinationItem: entry.DestinationDetails[i]?.Product_Name || \"\",\r\n                DestinationGodown: entry.DestinationDetails[i]?.Godown_Name || \"\",\r\n                DestinationQty: entry.DestinationDetails[i]?.Dest_Qty || \"\",\r\n                DifferentQTY: \"\",\r\n                DifferentPercentage: \"\",\r\n                Staffs: entry.StaffsDetails[i]?.Cost_Center_Name || \"\",\r\n            });\r\n        }\r\n    });\r\n\r\n    return transformedData;\r\n};\r\n\r\nconst StockProcess = ({ loadingOn, loadingOff }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const [responseData, setResponseData] = useState([]);\r\n    const [godowns, setGodowns] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: defaultFilters.Fromdate,\r\n        Todate: defaultFilters.Todate,\r\n        fetchFrom: defaultFilters.Fromdate,\r\n        fetchTo: defaultFilters.Todate,\r\n        sourceGodown: \"\",\r\n        destinationGodown: \"\",\r\n        filterDialog: false,\r\n        refresh: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `dataEntry/godownLocationMaster`\r\n        }).then(data => {\r\n            const godownLocations = (data.success ? data.data : []).sort(\r\n                (a, b) => String(a?.Godown_Name).localeCompare(b?.Godown_Name)\r\n            );\r\n            setGodowns(godownLocations);\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n\r\n        fetchLink({\r\n            address: `inventory/stockJournal?Fromdate=${filters?.fetchFrom}&Todate=${filters?.fetchTo}&billType=PROCESSING`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                // const filterForEmptyArrays = Array.isArray(data.data)\r\n                //     ? data.data.filter(stj => !(\r\n                //         stj?.SourceDetails?.length === 0\r\n                //         && stj?.DestinationDetails?.length === 0\r\n                //         && stj?.StaffsDetails?.length === 0\r\n                //     ))\r\n                //     : []\r\n                setResponseData(data.data)\r\n            }\r\n        }).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        }).catch(e => console.error(e))\r\n    }, [filters?.fetchFrom, filters?.fetchTo])\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n        };\r\n        setFilters(pre => ({ ...pre, fetchFrom: queryFilters.Fromdate, fetchTo: queryFilters.Todate }));\r\n    }, [location.search]);\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setFilters({\r\n            ...filters,\r\n            filterDialog: false,\r\n        });\r\n    }\r\n\r\n    const filteredData = useMemo(() => {\r\n        return responseData.filter((stj) => {\r\n            const hasFromGodownMatch = filters.sourceGodown\r\n                ? stj.SourceDetails.some((product) =>\r\n                    isEqualNumber(filters.sourceGodown, product.Sour_Goodown_Id)\r\n                )\r\n                : true;\r\n\r\n            const hasToGodownMatch = filters.destinationGodown\r\n                ? stj.DestinationDetails.some((product) =>\r\n                    isEqualNumber(filters.destinationGodown, product.Dest_Goodown_Id)\r\n                )\r\n                : true;\r\n\r\n            return (\r\n                hasFromGodownMatch &&\r\n                hasToGodownMatch\r\n            );\r\n        });\r\n    }, [\r\n        filters.sourceGodown,\r\n        filters.destinationGodown,\r\n        responseData\r\n    ]);\r\n\r\n    const displayData = useMemo(() => {\r\n        return (filters.sourceGodown || filters.destinationGodown)\r\n            ? transformStockJournalData(filteredData)\r\n            : transformStockJournalData(responseData)\r\n    }, [filters.sourceGodown, filters.destinationGodown, filteredData, responseData])\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                headerFontSizePx={11}\r\n                bodyFontSizePx={11}\r\n                dataArray={displayData}\r\n                title=\"PRODUCTIONS\"\r\n                maxHeightOption\r\n                ButtonArea={\r\n                    <>\r\n                        <Tooltip title='Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({ ...filters, filterDialog: true })}\r\n                            ><FilterAlt /></IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                }\r\n                ExcelPrintOption\r\n                PDFPrintOption\r\n                columns={[\r\n                    { col: 'SNo', type: 'string', title: 'Sno' },\r\n                    { col: 'Date', type: 'date', title: 'Date' },\r\n                    { col: 'VoucherNo', type: 'string', title: 'Vch.No' },\r\n                    { col: 'VoucherType', type: 'string', title: 'Voucher' },\r\n                    { col: 'SourceItem', type: 'string', title: 'Consumption' },\r\n                    { col: 'SourceGodown', type: 'string', title: 'From' },\r\n                    { col: 'SourceQty', type: 'number', title: 'C.Tonnage' },\r\n                    { col: 'DestinationItem', type: 'string', title: 'Productions' },\r\n                    { col: 'DestinationGodown', type: 'string', title: 'To' },\r\n                    { col: 'DestinationQty', type: 'number', title: 'P.Tonnage' },\r\n                    { col: 'DifferentQTY', type: 'number', title: 'Diff' },\r\n                    { col: 'DifferentPercentage', type: 'number', title: 'Diff (%)' },\r\n                    { col: 'Staffs', type: 'string', title: 'Staffs' }\r\n                ].map(cel => ({\r\n                    isVisible: 1,\r\n                    ColumnHeader: cel.title,\r\n                    isCustomCell: true,\r\n                    Cell: ({ row }) => formatString(row[cel.col], cel.type),\r\n                    tdClass: ({ row }) => checkIsNumber(row?.SNo) ? 'fw-bold bg-light' : ''\r\n                }))}\r\n            />\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tr>\r\n                                <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                <td className=\"py-1\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        value={filters.Fromdate}\r\n                                        onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                <td className=\"py-1\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        value={filters.Todate}\r\n                                        onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ verticalAlign: 'middle' }}>Source Godown</td>\r\n                                <td className=\"py-1\">\r\n                                    <select\r\n                                        value={filters.sourceGodown}\r\n                                        onChange={e => setFilters(pre => ({ ...pre, sourceGodown: e.target.value }))}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    >\r\n                                        <option value=\"\">All Godown</option>\r\n                                        {godowns.map((g, gi) => (\r\n                                            <option value={g.Godown_Id} key={gi}>{g.Godown_Name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style={{ verticalAlign: 'middle' }}>Destination Godown</td>\r\n                                <td className=\"py-1\">\r\n                                    <select\r\n                                        value={filters.destinationGodown}\r\n                                        onChange={e => setFilters(pre => ({ ...pre, destinationGodown: e.target.value }))}\r\n                                        className=\"cus-inpt p-2\"\r\n                                    >\r\n                                        <option value=\"\">All Godown</option>\r\n                                        {godowns.map((g, gi) => (\r\n                                            <option value={g.Godown_Id} key={gi}>{g.Godown_Name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            const updatedFilters = {\r\n                                Fromdate: filters?.Fromdate,\r\n                                Todate: filters?.Todate\r\n                            };\r\n                            updateQueryString(updatedFilters);\r\n                            closeDialog();\r\n                        }}\r\n                        startIcon={<Search />}\r\n                        variant=\"outlined\"\r\n                    >Search</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StockProcess;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["defaultFilters","Fromdate","ISOString","Todate","transformStockJournalData","data","transformedData","forEach","entry","entryIndex","_entry$SourceDetails","_entry$DestinationDet","_entry$StaffsDetails","maxRows","Math","max","SourceDetails","length","DestinationDetails","StaffsDetails","totalSourceQty","reduce","sum","item","Sour_Qty","totalDestinationQty","Dest_Qty","diffPercentage","push","SNo","Date","Stock_Journal_date","split","VoucherType","Stock_Journal_Voucher_type","VoucherNo","Journal_no","SourceItem","SourceGodown","SourceQty","DestinationItem","DestinationGodown","DestinationQty","DifferentQTY","Subraction","DifferentPercentage","Staffs","i","_entry$SourceDetails$","_entry$SourceDetails$2","_entry$SourceDetails$3","_entry$DestinationDet2","_entry$DestinationDet3","_entry$DestinationDet4","_entry$StaffsDetails$","Product_Name","Godown_Name","Cost_Center_Name","_ref","loadingOn","loadingOff","navigate","useNavigate","location","useLocation","query","URLSearchParams","search","responseData","setResponseData","useState","godowns","setGodowns","filters","setFilters","fetchFrom","fetchTo","sourceGodown","destinationGodown","filterDialog","refresh","useEffect","fetchLink","address","then","godownLocations","success","sort","a","b","String","localeCompare","concat","finally","catch","e","console","error","queryFilters","get","isValidDate","pre","_objectSpread","closeDialog","filteredData","useMemo","filter","stj","hasFromGodownMatch","some","product","isEqualNumber","Sour_Goodown_Id","hasToGodownMatch","Dest_Goodown_Id","displayData","_jsxs","_Fragment","children","_jsx","FilterableTable","headerFontSizePx","bodyFontSizePx","dataArray","title","maxHeightOption","ButtonArea","Tooltip","IconButton","size","onClick","FilterAlt","ExcelPrintOption","PDFPrintOption","columns","col","type","map","cel","isVisible","ColumnHeader","isCustomCell","Cell","_ref2","row","formatString","tdClass","_ref3","checkIsNumber","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","className","style","verticalAlign","value","onChange","target","g","gi","Godown_Id","DialogActions","Button","newFilters","params","toString","replace","updateQueryString","startIcon","Search","variant","createSvgIcon","d"],"sourceRoot":""}
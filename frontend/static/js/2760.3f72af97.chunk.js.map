{"version":3,"file":"static/js/2760.3f72af97.chunk.js","mappings":"ucAkEA,MAAMA,EAA0BA,CAACC,EAAMC,IAC5BD,EAAKE,KAAKC,IACb,MAAMC,EAAe,CAAC,EA2BtB,OAzBAH,EAAQI,SAAQ,CAACC,EAAQC,KACrB,GAAID,EAAOE,WAAaF,EAAOG,eAC3B,GAAIH,EAAOI,cAAgBJ,EAAOK,KAAM,CACpC,MAAMC,EAAcN,EAAOK,KAAK,CAAER,QAE5BU,EAAmBP,EAAOQ,aAC1BC,OAAOT,EAAOQ,cAAcE,QAAQ,OAAQ,KAAKC,cAChD,SAAQV,EAAQ,IAEI,kBAAhBK,GAAmD,kBAAhBA,GAAmD,kBAAhBA,IAC7ER,EAAaS,GAAoBD,EAOzC,KAAO,CAEH,IAAIM,EAAMZ,EAAOa,WACjBf,EAAac,GAAOf,EAAIe,IAAQ,EACpC,CACJ,IAGGd,CAAY,IA0CrBgB,EAAY,WAOZ,IAJFN,EAAYO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAKf,MAAO,CACHb,UAHKa,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAIRF,WATCE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAUJG,UATAH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,SAUHI,MARCJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OASJK,cARSL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,YASRP,GAAgB,CAAEA,gBAE9B,EAEMa,EAAgBC,IAAoD,IAAnD,YAAEC,EAAc,GAAE,YAAEC,EAAc,WAAWF,EAChE,MAAOG,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,MAEnCC,EAAcC,QAAQJ,GAU5B,OACIK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,MAAOX,EAAYQ,UACxBC,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAAC,mBAAkBR,EAAaS,QAXlCC,IACjBZ,EAAYY,EAAMC,cAAc,EAUyCC,UAAU,OAAOC,KAAK,QAAOT,UAC1FC,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,SAIjBT,EAAAA,EAAAA,KAACU,EAAAA,GAAO,CACJC,KAAMhB,EACNH,SAAUA,EACVoB,QAfQC,KAChBpB,EAAY,KAAK,EAeTqB,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QACdjB,UAEFC,EAAAA,EAAAA,KAACkB,EAAAA,EAAQ,CAAAnB,SACJT,EAAY3B,KAAI,CAACwD,EAAKC,KACnBvB,EAAAA,EAAAA,MAACwB,EAAAA,EAAQ,CAELjB,QAASA,KAAS,OAAHe,QAAG,IAAHA,OAAG,EAAHA,EAAKG,WAAc,OAAHH,QAAG,IAAHA,OAAG,EAAHA,EAAKG,WACpCC,SAAa,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKI,SAASxB,SAAA,EAExBC,EAAAA,EAAAA,KAACwB,EAAAA,EAAY,CAAAzB,SAAK,OAAHoB,QAAG,IAAHA,OAAG,EAAHA,EAAKM,QACpBzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAY,CAAA3B,SAAK,OAAHoB,QAAG,IAAHA,OAAG,EAAHA,EAAKQ,SALfP,WAUtB,EAILQ,EAAeA,CAACC,EAAKC,KACvB,OAAQA,GACJ,IAAK,SACD,OAAOD,GAAME,EAAAA,EAAAA,IAAaF,GAAOA,EACrC,IAAK,OACD,OAAOA,GAAMG,EAAAA,EAAAA,IAAUH,GAAOA,EAClC,IAAK,OACD,OAAOA,GAAMI,EAAAA,EAAAA,IAAUJ,GAAOA,EAClC,IAAK,SACD,OAAOA,EACX,QACI,MAAO,GACf,EAGEK,EAAkBC,IAmBjB,IAnBkB,UACrBC,EAAY,GAAE,QACd1E,EAAU,GAAE,WACZ2E,EAAa,KAAI,aACjBC,GAAe,EAAK,eACpBC,EAAiB,KAAI,eACrBC,EAAiB,IAAG,iBACpBC,EAAmB,GAAE,mBACrBC,GAAqB,EAAK,SAC1BC,EAAW,QAAmB,kBAC9BC,GAAoB,EAAK,MACzB1C,EAAQ,GAAE,eACV2C,GAAiB,EAAK,iBACtBC,GAAmB,EAAK,gBACxBC,GAAkB,EAAK,WACvBC,EAAa,KAAI,YACjBC,EAAc,GAAE,eAChBC,EAAiB,GAAE,iBACnBC,EAAmB,IACtBhB,EAEG,MAAOiB,EAAMC,IAAW3D,EAAAA,EAAAA,UAAS,IAC1B4D,EAAaC,IAAkB7D,EAAAA,EAAAA,UAAS+C,IACxCe,EAAcC,IAAmB/D,EAAAA,EAAAA,UAAS,KAC1CgE,EAAgBC,IAAqBjE,EAAAA,EAAAA,WAAS,GAC/CkE,EAAeF,GAAkBX,EAAmB,gBAAkBP,EAEtEqB,EAAc,CAChB,CACIC,KAAM,OACNC,MAAO,cACR,CACCD,KAAM,QACNC,MAAO,YACR,CACCD,KAAM,SACNC,MAAO,gBAITC,EAAsB,CACxB,CACIF,KAAM,MACNC,MAAO,UACR,CACCD,KAAM,SACNC,MAAO,aACR,CACCD,KAAM,SACNC,MAAO,WAkDTE,GAvBYxG,KACd,IAAK+F,EAAazE,OAAQ,OAAOtB,EAmBjC,MAjBmB,IAAIA,GAAMyG,MAAK,CAACC,EAAGC,KAClC,IAAK,MAAMC,KAAYb,EAAc,CACjC,MAAM,SAAEc,EAAQ,UAAEC,GAAcF,EAC1BG,EAASL,EAAEG,GACXG,EAASL,EAAEE,GAEjB,GAAIE,IAAWC,EACX,MAAkB,QAAdF,EACOC,EAASC,EAAS,GAAK,EAEvBD,EAASC,EAAS,GAAK,CAG1C,CACA,OAAO,CAAC,GAGK,EAGFC,CAAStC,GACtBuC,GAAavB,EAAOE,EACpBsB,GAAWD,GAAarB,EACxBuB,GAAgBZ,GAAWa,MAAMH,GAAYC,IAE7CG,GAAUC,IAAqB,IAApB,IAAEpH,EAAG,MAAEI,GAAOgH,EAC3B,MAAOrE,EAAMsE,IAAWvF,EAAAA,EAAAA,WAAS,GAC3BwF,EAAW,OAEjB,OACIrF,EAAAA,EAAAA,MAACsF,EAAAA,SAAQ,CAAApF,SAAA,EACLF,EAAAA,EAAAA,MAACuF,EAAAA,EAAQ,CAAArF,SAAA,EAEc,IAAjBuC,GAAyBC,IACvBvC,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CAAC9E,UAAU,8BAA8B+E,GAAI,CAAEJ,SAAW,GAAEhC,OAAqBnD,UACvFC,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACK,KAAK,QAAQJ,QAASA,IAAM6E,GAAQM,IAAQA,IAAKxF,SACxDY,GAAOX,EAAAA,EAAAA,KAACwF,EAAAA,EAAe,CAACF,GAAI,CAAEJ,eAAiBlF,EAAAA,EAAAA,KAACyF,EAAAA,EAAiB,CAACH,GAAI,CAAEJ,mBAK7D,IAAvBxC,IACG1C,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CAAC9E,UAAU,8BAA8B+E,GAAI,CAAEJ,SAAW,GAAEhC,OAAqBnD,SACrFuD,EAAcF,EAAQpF,EAAQ,IAIhC,OAAPN,QAAO,IAAPA,OAAO,EAAPA,EAASC,KAAI,CAACI,EAAQ2H,KAAe,IAADC,EAAAC,EACjC,MAAMC,GAAkBC,EAAAA,EAAAA,IAAoB,OAAN/H,QAAM,IAANA,OAAM,EAANA,EAAQG,eAAgB,KAAM4H,EAAAA,EAAAA,IAAoB,OAAN/H,QAAM,IAANA,OAAM,EAANA,EAAQE,UAAW,GAC/FE,EAAeyB,QAAc,OAAN7B,QAAM,IAANA,OAAM,EAANA,EAAQI,eAAiBJ,EAAOK,KACvD2H,GAAiB5H,EAEjB6H,EAAUA,CAACpI,EAAKgB,EAAYqH,IACxB,OAANlI,QAAM,IAANA,GAAAA,EAAQiI,QAAW,IAAS,OAANjI,QAAM,IAANA,OAAM,EAANA,EAAQiI,QAAQ,CAAEpI,MAAKgB,aAAYZ,MAAOiI,OAAgB,GAG9EC,EAAuBnI,EAAOmB,MAC8C,QADzCyG,EACnC9B,EAAYsC,MAAKjH,GAASA,EAAM4E,OAAStF,OAAOT,EAAOmB,OAAOR,uBAAc,IAAAiH,OAAA,EAA5EA,EAA8E5B,MAC9E,GAEAqC,EAAqBrI,EAAOoB,cACgE,QADnDyG,EACzC5B,EAAoBmC,MAAKjH,GAASA,EAAM4E,OAAStF,OAAOT,EAAOoB,eAAeT,uBAAc,IAAAkH,OAAA,EAA5FA,EAA8F7B,MAC9F,SAEN,GAAI8B,GAAmBE,EAAe,CAClC,MAAMM,EAAaC,OAAOC,QAAQ3I,GAAKuI,MAAKK,IAAA,IAAE7H,GAAI6H,EAAA,OAAK7H,IAAQZ,EAAOa,UAAU,IAEhF,OACIoB,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CAEN9E,UAAY,cAAa2F,KAAwBE,KAAsBJ,EAAQpI,EAAKG,EAAOa,WAAYZ,KACvGsH,GAAI,CAAEJ,SAAW,GAAEhC,OACnB9C,QAASA,IAAMiC,EAAaA,EAAWzE,GAAO6I,QAAQC,IAAI,yBAAyB3G,SAElFsG,EAAazE,EAAayE,EAAW,GAAU,OAANtI,QAAM,IAANA,OAAM,EAANA,EAAQkB,WAAa,KAL1DyG,EAQjB,CAEA,OAAIG,GAAmB1H,GAEf6B,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CAEN9E,UAAY,cAAa2F,KAAwBE,KAAsBJ,EAAQpI,EAAKG,EAAOa,WAAYZ,KACvGsH,GAAI,CAAEJ,SAAW,GAAEhC,OAAqBnD,SAEvChC,EAAOK,KAAK,CAAER,MAAKgB,WAAYb,EAAOa,WAAYZ,WAJ9C0H,IAUb1F,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CAENC,GAAI,CAAEJ,SAAW,GAAEhC,OACnB3C,UAAY,cAAa2F,KAAwBE,IAAqBrG,SACzE,KAHQ2F,EAKG,QAML,IAAjBpD,GAAyBC,GAAkB5B,IACzCX,EAAAA,EAAAA,KAACoF,EAAAA,EAAQ,CAAArF,UACLC,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CAACsB,QAASC,OAAc,OAAPlJ,QAAO,IAAPA,OAAO,EAAPA,EAASqB,UAAkC,IAAvB2D,EAA8B,EAAI,GAAG3C,SAAEwC,EAAe,CAAE3E,MAAKI,gBAG7G,EAInB,OACI6B,EAAAA,EAAAA,MAACgH,EAAAA,EAAI,CAACtG,UAAU,qCAAqCuG,UAAWC,EAAAA,EAAMhH,SAAA,EAClEF,EAAAA,EAAAA,MAAA,OACIU,UAAU,kEAAiER,SAAA,EAEzE8C,GAAkBC,GAAoBG,EAAYlE,OAAS,GAAKgE,KAC9D/C,EAAAA,EAAAA,KAACZ,EAAa,CACVG,YAAY,gBACZD,YAAa,IACLyD,EACE,CAAC,CACCpB,KAAM,aACNF,KAAMiC,GACA1D,EAAAA,EAAAA,KAACgH,EAAAA,EAAQ,CAAC9B,SAAS,QAAQ+B,MAAM,aACjCjH,EAAAA,EAAAA,KAACkH,EAAAA,EAAS,CAAChC,SAAS,UAC1B5D,QAASA,IAAMqC,GAAkB4B,IAAQA,IACzChE,UAAUuE,EAAAA,EAAAA,IAAuB,OAAT1D,QAAS,IAATA,OAAS,EAATA,EAAWrD,OAAQ,KAE7C,MACF8D,EACE,CAAC,CACClB,KAAM,YACNF,MAAMzB,EAAAA,EAAAA,KAACmH,EAAAA,EAAQ,CAACjC,SAAS,QAAQ+B,MAAM,YACvC3F,QAASA,IAjVzB8F,EAAChF,EAAW1E,KAC5B,IACI,MAAM2J,EAAM,IAAIC,EAAAA,QACVC,EAAgB/J,EAAwB4E,EAAW1E,GAEnD8J,EAAU9J,EACX+J,QAAQ1J,GAAWA,EAAOE,WAAaF,EAAOG,iBAC9CP,KAAKI,GAAWA,EAAOa,YAAcJ,OAAOT,EAAOQ,cAAcE,QAAQ,OAAQ,KAAKC,gBAErFgJ,EAAOH,EAAc5J,KAAKC,GAC5B4J,EAAQ7J,KAAKgK,GAAW/J,EAAI+J,OAC9BhK,KAAI,CAACiK,EAAGC,KAAC,IAAWD,EAAGE,IAAKD,EAAI,MAElCR,EAAIU,UAAU,CACVC,KAAM,CAACR,GACPS,KAAMP,IAGVL,EAAIa,KAAK,YACb,CAAE,MAAOC,GACL1B,QAAQ2B,MAAMD,EAClB,GA4T+Cf,CAAYhF,EAAW1E,GACtC6D,UAAUuE,EAAAA,EAAAA,IAAuB,OAAT1D,QAAS,IAATA,OAAS,EAATA,EAAWrD,OAAQ,KAE7C,MACF+D,EACE,CAAC,CACCnB,KAAM,cACNF,MAAMzB,EAAAA,EAAAA,KAACmH,EAAAA,EAAQ,CAACjC,SAAS,QAAQ+B,MAAM,YACvC3F,QAASA,IAjUvB+G,EAACjG,EAAW1E,KAC9B,IACI,MAAM6J,EAAgB/J,EAAwB4E,EAAW1E,GAEnD4K,EAAYC,EAAAA,GAAWC,cAAcjB,GACrCkB,EAAWF,EAAAA,GAAWG,WAE5BH,EAAAA,GAAWI,kBAAkBF,EAAUH,EAAW,QAClDC,EAAAA,GAAeE,EAAU,aAC7B,CAAE,MAAON,GACL1B,QAAQ2B,MAAMD,EAClB,GAsT+CE,CAAcjG,EAAW1E,GACxC6D,UAAUuE,EAAAA,EAAAA,IAAuB,OAAT1D,QAAS,IAATA,OAAS,EAATA,EAAWrD,OAAQ,KAE7C,MACHkE,KAIdD,GAAcA,EACd9C,IAASF,EAAAA,EAAAA,KAAA,MAAIO,UAAU,qCAAoCR,SAAEG,QAGlEF,EAAAA,EAAAA,KAAC4I,EAAAA,EAAc,CAACtD,GAAI,CAAEuD,UAAWjF,GAAc7D,UAE3CF,EAAAA,EAAAA,MAACiJ,EAAAA,EAAK,CAACC,cAAY,EAACvI,KAAMmC,EAAS5C,SAAA,EAE/BC,EAAAA,EAAAA,KAACgJ,EAAAA,EAAS,CAAAjJ,UACNF,EAAAA,EAAAA,MAACuF,EAAAA,EAAQ,CAAArF,SAAA,CAEJuC,GAAgBC,IACbvC,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CACN9E,UAAU,4CACV+E,GAAI,CAAEJ,SAAW,GAAE/B,MAAsB8F,gBAAiB,WAAYlJ,SACzE,MAMJ2C,IACG1C,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CACN9E,UAAU,4CACV+E,GAAI,CAAEJ,SAAW,GAAE/B,MAAsB8F,gBAAiB,WAAYlJ,SACzE,QAMJrC,EAAQC,KAAI,CAACI,EAAQmL,KAClB,MAAMrD,GAAkBC,EAAAA,EAAAA,IAAoB,OAAN/H,QAAM,IAANA,OAAM,EAANA,EAAQG,eAAgB,KAAM4H,EAAAA,EAAAA,IAAoB,OAAN/H,QAAM,IAANA,OAAM,EAANA,EAAQE,UAAW,GAC/FkL,GAA+C,IAAlCvJ,QAAc,OAAN7B,QAAM,IAANA,OAAM,EAANA,EAAQI,gBAA4BJ,EAAOK,KAChEgL,EAAoB5F,EAAa2C,MAAK9B,GAAYA,EAASC,WAAavG,EAAOa,aAC/EyK,EAAgBD,EAAoBA,EAAkB7E,UAAY,MAElD,IAAD+E,EAAAC,EAAAC,EAAAC,EAArB,OAAI5D,EACOsD,GACHnJ,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CAEN9E,UAAY,kCACPxC,EAAOmB,MAAoF,QAA/EoK,EAAGzF,EAAYsC,MAAKjH,GAASA,EAAM4E,OAAStF,OAAOT,EAAOmB,OAAOR,uBAAc,IAAA4K,OAAA,EAA5EA,EAA8EvF,MAAQ,IAC1GuB,GAAI,CAAEJ,SAAW,GAAE/B,MAAsB8F,gBAAiB,WAC1DI,gBAAeD,GAAoBC,EAAsBtJ,UAEzDC,EAAAA,EAAAA,KAAC0J,EAAAA,EAAc,CACXC,SAAUP,EACV7E,UAAW8E,EACXjJ,QAASA,IA1N1BkE,KACvB,MAAMsF,EAAmBpG,EAAa2C,MAAK9B,GAAYA,EAASC,WAAaA,IAC7E,GAAIsF,EAAkB,CAClB,MAAMC,EAAuC,QAA/BD,EAAiBrF,UAC/Bd,EAAgBD,EAAa7F,KAAI0G,GAC7BA,EAASC,WAAaA,EAChB,IAAKD,EAAUE,UAAWsF,EAAQ,OAAS,OAC3CxF,IAEd,MACIZ,EAAgB,IAAID,EAAc,CAAEc,WAAUC,UAAW,QAC7D,EA+MuDuF,CAAkB/L,EAAOa,YAAYmB,SAEnDhC,EAAOQ,eAAsB,OAANR,QAAM,IAANA,GAAkB,QAAZwL,EAANxL,EAAQa,kBAAU,IAAA2K,OAAZ,EAANA,EAAoB9K,QAAQ,KAAM,SAXzDyK,IAeTlJ,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CAEN9E,WACQxC,EAAOQ,cAAsB,OAANR,QAAM,IAANA,GAAAA,EAAQa,WAC7B,8CACA,SAFL,KAIAb,EAAOmB,MAC0E,QADrEsK,EACP3F,EAAYsC,MAAKjH,GAASA,EAAM4E,OAAStF,OAAOT,EAAOmB,OAAOR,uBAAc,IAAA8K,OAAA,EAA5EA,EAA8EzF,MAC9E,IAEVuB,GAAI,CAAEJ,SAAW,GAAE/B,MAAsB8F,gBAAiB,WAAYlJ,SAErEhC,EAAOQ,eAAsB,OAANR,QAAM,IAANA,GAAkB,QAAZ0L,EAAN1L,EAAQa,kBAAU,IAAA6K,OAAZ,EAANA,EAAoBhL,QAAQ,KAAM,OAZrDyK,GAgBV,IAAI,UAKvBrJ,EAAAA,EAAAA,MAACkK,EAAAA,EAAS,CAAAhK,SAAA,EACJ6C,EAAoBqB,GAAaY,IAAelH,KAAI,CAACC,EAAKI,KACxDgC,EAAAA,EAAAA,KAAC+E,GAAO,CAAanH,IAAKA,EAAKI,MAAOA,GAAxBA,KAEI,IAArBoE,EAAUrD,SACPiB,EAAAA,EAAAA,KAACoF,EAAAA,EAAQ,CAAArF,UACLC,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,CACNsB,QACIjJ,EAAQqB,SACW,IAAjBuD,GAAyBC,EAAkB,EAAI,KACzB,IAAvBG,EAA8B,EAAI,GAEvC4C,GAAI,CAAE0E,UAAW,UAAWjK,SAC/B,uBAUnB6C,GAA8C,IAAzBiC,GAAc9F,SACjCiB,EAAAA,EAAAA,KAAA,OACIO,UAAU,WAAUR,UAEpBC,EAAAA,EAAAA,KAACiK,EAAAA,EAAe,CACZnD,UAAU,MACVoD,MAAO9H,EAAUrD,OACjBqE,KAAMA,EACN+G,aA9RKC,CAAC/J,EAAOgK,KAC7BhH,EAAQgH,EAAQ,EA8RA/G,YAAaA,EACbgH,oBA5RajK,IAC7BkD,EAAegH,SAASlK,EAAMmK,OAAOC,MAAO,KAC5CpH,EAAQ,EAAE,EA2RMqH,mBAAoBC,MAAMC,KAAK,IAAIC,IAAI,CAACpI,EAAkB,EAAG,GAAI,GAAI,IAAK,IAAK,OAAOyB,MAAK,CAACC,EAAGC,IAAMD,EAAIC,IACzG0G,iBAAiB,gBACjBC,iBAAe,EACfC,gBAAc,QAKvB,EAiCf9I,EAAgB+I,aAAe,CAC3B7I,UAAW,GACX1E,QAAS,GACT2E,WAAY,KACZC,cAAc,EACdC,eAAgB,KAChBC,eAAgB,IAChBC,iBAAkB,GAClBC,oBAAoB,EACpBC,SAAU,QACVC,mBAAmB,EACnB1C,WAAOlB,EACP6D,gBAAgB,EAChBC,kBAAkB,EAClBC,iBAAiB,EACjBC,WAAY,KACZC,YAAa,GACbE,iBAAkB,GAClBD,eAAgB,IAGpB,S,gIC9mBagI,EAAoB,CAC7BC,MAAO,CACHC,MAAO,CACHC,MAAO,OACPpC,gBAAiB,gBAIzBvB,KAAM,CACF0D,MAAO,CACHnC,gBAAiB,gBAGzBqC,UAAW,CACPF,MAAO,CACHnC,gBAAiB,YACjBhC,MAAO,QACP/B,SAAU,UAMTqG,EAAqB,CAM9BC,KAAMA,CAACC,EAAUC,KAAK,IACfD,EACHE,OAAQ,OAEZC,WAAYC,IAAI,IAAUA,EAAMF,OAAQ,OACxCG,aAAeD,IAAI,IACZA,EACH5C,gBAAiB,UACjBhC,MAAO,OACP8E,WAAY,OACZ7G,SAAU,OACV8G,QAAS,WACTC,aAAc,iBACdC,cAAe,cAEnBC,OAAQA,CAACN,EAAMH,KAAK,IACbG,EACH5C,gBAAiByC,EAAMU,WACjB,UACAV,EAAMW,UACF,UACA,QACVpF,MAAOyE,EAAMU,WAAa,QAAU,OACpCJ,QAAS,eAmBJM,EAAW,CACpB,CACIC,GAAI,EACJC,SAAU,UACVC,QAAS,OACTvN,MAAO,OACPmM,MAAO,KAEX,CACIkB,GAAI,EACJC,SAAU,YAEd,CACID,GAAI,EACJC,SAAU,eAEd,CACID,GAAI,EACJC,SAAU,cAEd,CACID,GAAI,EACJC,SAAU,eAEd,CACID,GAAI,EACJC,SAAU,iBAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,WAILE,EAAiB,CAC1B,CACIC,SAAU,EACVhL,KAAM,kBACNiL,SAAU,8BACVC,QAAS,iGACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,6BACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,eAEV,CACIT,SAAU,EACVhL,KAAM,oBACNiL,SAAU,GACVC,QAAS,4JACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,eACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,eAEV,CACIT,SAAU,EACVhL,KAAM,kBACNiL,SAAU,GACVC,QAAS,4HACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,6BACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,gBAIDC,EAAa,CACtB,CAAE1L,KAAM,kBACR,CAAEA,KAAM,oBACR,CAAEA,KAAM,cACR,CAAEA,KAAM,gBACR,CAAEA,KAAM,WACR,CAAEA,KAAM,iBACR,CAAEA,KAAM,WACR,CAAEA,KAAM,WACR,CAAEA,KAAM,U,gQCpJZ,MA8YA,EA9YoBtC,IAA+D,IAA9D,UAAEiO,EAAS,WAAEC,EAAU,OAAEC,EAAM,UAAEC,EAAS,WAAEC,GAAYrO,EACzE,MAAMsO,GAAMC,EAAAA,EAAAA,OAELC,EAAaC,IAAkBpO,EAAAA,EAAAA,UAAS,KACxCqO,EAAaC,IAAkBtO,EAAAA,EAAAA,UAAS,KACxCuO,EAAeC,IAAoBxO,EAAAA,EAAAA,UAAS,IAE7CyO,EAAeC,eAAeC,QAAQ,gBAEtCC,EAAiB,CACnBC,UAAUC,EAAAA,EAAAA,MACVC,QAAQD,EAAAA,EAAAA,MACRE,mBAAoB,CAAEC,MAAO,MAAOlE,MAAO,IAC3CmE,sBAAuB,CAAED,MAAO,MAAOlE,MAAO,IAC9CoE,uBAAwB,CAAEF,MAAO,MAAOlE,MAAO,IAC/CqE,kBAAmB,CAAEH,MAAO,MAAOlE,MAAO,IAC1CsE,cAAe,KAGZC,EAASC,IAAcvP,EAAAA,EAAAA,UAAS,IAChC4O,EACHY,cAAc,KAGXC,EAAgBC,IAAqB1P,EAAAA,EAAAA,UAAS,CACjD2P,YAAa,GACbC,eAAgB,GAChBC,gBAAiB,GACjBC,WAAY,MAGhBC,EAAAA,EAAAA,YAAU,KACN,MAAMC,GAAsBC,EAAAA,EAAAA,IAA0BnC,IAChD,SACFe,EAAQ,OAAEE,EAAM,mBAChBC,EAAqBJ,EAAeI,mBAAkB,sBACtDE,EAAwBN,EAAeM,sBAAqB,uBAC5DC,EAAyBP,EAAeO,uBAAsB,kBAC9DC,EAAoBR,EAAeQ,kBAAiB,cACpDC,EAAgBT,EAAeS,eAC/BW,EAEJT,GAAW1J,IAAG,IACPA,EACHgJ,SAAUA,EACVE,OAAQA,EACRC,qBACAE,wBACAC,yBACAC,oBACAC,mBACD,GAEJ,CAACZ,EAAcX,KAElBiC,EAAAA,EAAAA,YAAU,KACN,MAAMC,GAAsBC,EAAAA,EAAAA,IAA0BnC,IAChD,SACFe,EAAQ,OAAEE,EAAM,mBAChBC,EAAqBJ,EAAeI,mBAAkB,sBACtDE,EAAwBN,EAAeM,sBAAqB,uBAC5DC,EAAyBP,EAAeO,uBAAsB,kBAC9DC,EAAoBR,EAAeQ,kBAAiB,cACpDC,EAAgBT,EAAeS,eAC/BW,GAEJE,EAAAA,EAAAA,GAAU,CACN/C,QAAU,oDACK0B,8BACFE,gCACmB,OAAlBC,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBjE,QAAS,+BACV,OAArBmE,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBnE,QAAS,gCACT,OAAtBoE,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBpE,QAAS,mCACb,OAAjBqE,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBrE,QAAS,+BAC/BsE,IACbxB,aAAYD,cACbuC,MAAKpS,IACe,IAADqS,EAAAC,EAAdtS,EAAKuS,UAELlC,GAAemC,EAAAA,EAAAA,IAAmB,QAAZH,EAACrS,EAAKyS,cAAM,IAAAJ,OAAA,EAAXA,EAAajC,cACpCG,GAAeiC,EAAAA,EAAAA,IAAmB,QAAZF,EAACtS,EAAKyS,cAAM,IAAAH,OAAA,EAAXA,EAAahC,cACxC,IACDoC,OAAMhI,GAAK1B,QAAQ2B,MAAMD,IAAG,GAChC,CAACgG,EAAcX,KAElBiC,EAAAA,EAAAA,YAAU,MACNG,EAAAA,EAAAA,GAAU,CACN/C,QAAU,0BACXgD,MAAKpS,IACAA,EAAKuS,SACLZ,GAAkB7J,IAAG,IAAA6K,EAAAC,EAAAC,EAAAC,EAAA,MAAK,IACnBhL,EACH8J,aAAaY,EAAAA,EAAAA,IAAY,OAAJxS,QAAI,IAAJA,GAAY,QAAR2S,EAAJ3S,EAAMyS,cAAM,IAAAE,OAAR,EAAJA,EAAcf,aACnCC,gBAAgBW,EAAAA,EAAAA,IAAY,OAAJxS,QAAI,IAAJA,GAAY,QAAR4S,EAAJ5S,EAAMyS,cAAM,IAAAG,OAAR,EAAJA,EAAcf,gBACtCC,iBAAiBU,EAAAA,EAAAA,IAAY,OAAJxS,QAAI,IAAJA,GAAY,QAAR6S,EAAJ7S,EAAMyS,cAAM,IAAAI,OAAR,EAAJA,EAAcf,iBACvCC,YAAYS,EAAAA,EAAAA,IAAY,OAAJxS,QAAI,IAAJA,GAAY,QAAR8S,EAAJ9S,EAAMyS,cAAM,IAAAK,OAAR,EAAJA,EAAcf,YACrC,GACL,GACF,GACH,IAEH,MAAMgB,GAAaC,EAAAA,EAAAA,UAAQ,KACvB,IAAIC,EAAkB,GA0CtB,OAxCA7C,EAAY/P,SAAQ,CAAC6S,EAASC,KAAa,IAADC,EACtC,MAAMC,EAAY/C,EAAYtG,QAAOsJ,GAAQA,EAAKC,gBAAkBL,EAAQK,eAA+B,OAAdD,EAAKE,OAC5FC,EAAanD,EAAYtG,QAAOsJ,GAAQA,EAAKC,gBAAkBL,EAAQK,eAA+B,OAAdD,EAAKE,OAE7FE,EAAUC,KAAKC,IAAIP,EAAU/R,OAAQmS,EAAWnS,QAChDuS,IAAQV,EACRW,GAAsF,QAA1EV,EAAA9B,EAAAA,GAAc5I,MAAKqL,IAAO1L,EAAAA,EAAAA,IAAc0L,EAAI/G,MAAOkG,EAAQc,wBAAe,IAAAZ,OAAA,EAA1EA,EAA4ElC,QAAS,GAEvG+B,EAAgBgB,KAAK,CACjBC,IAAKL,EACLM,MAAMpD,EAAAA,EAAAA,IAAUmC,EAAQkB,aACxBC,UAAWnB,EAAQoB,iBACnBC,SAAU,GACVC,UAAW,GACXC,YAAapB,EAAUqB,QAAO,CAACC,EAAKC,KAAWC,EAAAA,EAAAA,IAASF,EAAW,OAANC,QAAM,IAANA,OAAM,EAANA,EAAQE,SAAS,GAC9EC,aAActB,EAAWiB,QAAO,CAACC,EAAKC,KAAWC,EAAAA,EAAAA,IAASF,EAAW,OAANC,QAAM,IAANA,OAAM,EAANA,EAAQE,SAAS,GAChFlD,YAAasB,EAAQ8B,eACrBC,OAAQnB,EACRoB,OAAQhC,EAAQiC,UAChBC,UAAWlC,EAAQmC,aACnBC,cAAe,IAAKpC,EAASqC,QAAS,IAAIlC,KAAcI,MAG5D,IAAK,IAAIrJ,EAAI,EAAGA,EAAIsJ,EAAStJ,IAAK,CAAC,IAADoL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC9B5C,EAAgBgB,KAAK,CACjBC,IAAKL,EAAM,KAAOzJ,EAAI,GACtB+J,KAAM,GACNE,UAAW,GACXE,UAAsB,QAAZiB,EAAAnC,EAAUjJ,UAAE,IAAAoL,OAAA,EAAZA,EAAcM,iBAAkB,GAC1CtB,WAAwB,QAAbiB,EAAAhC,EAAWrJ,UAAE,IAAAqL,OAAA,EAAbA,EAAeK,iBAAkB,GAC5CrB,aAAasB,EAAAA,EAAAA,IAA0B,QAAbL,EAACrC,EAAUjJ,UAAE,IAAAsL,OAAA,EAAZA,EAAcZ,SAAUxQ,EAAAA,EAAAA,IAAyB,QAAbqR,EAACtC,EAAUjJ,UAAE,IAAAuL,OAAA,EAAZA,EAAcb,QAAU,GACxFC,cAAcgB,EAAAA,EAAAA,IAA2B,QAAdH,EAACnC,EAAWrJ,UAAE,IAAAwL,OAAA,EAAbA,EAAed,SAAUxQ,EAAAA,EAAAA,IAA0B,QAAduR,EAACpC,EAAWrJ,UAAE,IAAAyL,OAAA,EAAbA,EAAef,QAAU,GAC3FlD,YAAa,GACbqD,OAAQ,GACRC,OAAQ,GACRE,UAAW,IAEnB,KAGGnC,CAAe,GACvB,CAAC7C,EAAaE,IAEX0F,GAAehD,EAAAA,EAAAA,UAAQ,IAAM1C,EAAYtG,QAC3CsJ,GAAsB,OAAdA,EAAKE,OACfkB,QACE,CAACC,EAAKC,KAAWC,EAAAA,EAAAA,IAASF,EAAW,OAANC,QAAM,IAANA,OAAM,EAANA,EAAQE,SAAS,IACjD,CAACxE,IAEE2F,EAAcA,IAAMzE,GAAW1J,IAAG,IAAUA,EAAK2J,cAAc,MAErE,OACIrP,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEIC,EAAAA,EAAAA,KAACkC,EAAAA,GAAe,CACZhC,MAAM,eACNiD,iBAAkB,GAClBD,eAAgB,GAChBF,YACInD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAEK0N,IACGzN,EAAAA,EAAAA,KAAC2T,EAAAA,EAAM,CACHvT,QAASA,IAAMuN,EAAI,UACnBlB,QAAQ,WAAU1M,SACrB,YAGLC,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CACPC,QAASA,IAAM6O,GAAW1J,IAAG,IAAUA,EAAK2J,cAAc,MAC1D1O,KAAK,QAAQD,UAAU,OAAMR,UAChCC,EAAAA,EAAAA,KAAC4T,EAAAA,EAAS,CAACrT,UAAU,aAEtBP,EAAAA,EAAAA,KAAA,QAAMO,UAAU,+DAA8DR,UACzE8T,EAAAA,EAAAA,IAASJ,GAAgB,IAAK5T,EAAAA,EAAAA,MAAA,MAAIU,UAAU,+BAA8BR,SAAA,CAAC,WAAQgC,EAAAA,EAAAA,IAAa0R,WAI7GrR,UAAWoO,EACX9S,QAAS,IAAI,CACT,CAAEoW,IAAK,MAAOhQ,KAAM,SAAU5D,MAAO,OACrC,CAAE4T,IAAK,OAAQhQ,KAAM,OAAQ5D,MAAO,QACpC,CAAE4T,IAAK,YAAahQ,KAAM,SAAU5D,MAAO,YAC3C,CAAE4T,IAAK,WAAYhQ,KAAM,SAAU5D,MAAO,SAC1C,CAAE4T,IAAK,cAAehQ,KAAM,SAAU5D,MAAO,UAC7C,CAAE4T,IAAK,YAAahQ,KAAM,SAAU5D,MAAO,UAC3C,CAAE4T,IAAK,eAAgBhQ,KAAM,SAAU5D,MAAO,UAC9C,CAAE4T,IAAK,cAAehQ,KAAM,SAAU5D,MAAO,WAC7C,CAAE4T,IAAK,SAAUhQ,KAAM,SAAU5D,MAAO,WAC1CvC,KAAIoW,IAAG,CACL9V,UAAW,EACXM,aAAcwV,EAAI7T,MAClB/B,cAAc,EACdC,KAAM+D,IAAA,IAAC,IAAEvE,GAAKuE,EAAA,OAAKP,EAAAA,EAAAA,IAAahE,EAAImW,EAAID,KAAMC,EAAIjQ,KAAK,EACvDkC,QAAShB,IAAA,IAAC,IAAEpH,GAAKoH,EAAA,OAAQ,OAAHpH,QAAG,IAAHA,GAAAA,EAAKkU,UAAY,mBAAqB,EAAE,MAElE,CACI7T,UAAW,EACXM,aAAc,SACdJ,cAAc,EACdC,KAAMoI,IAAc,IAAb,IAAE5I,GAAK4I,EACV,OAAW,OAAH5I,QAAG,IAAHA,OAAG,EAAHA,EAAKmV,gBAAiBrF,IAC1B1N,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACK,KAAK,QAAQJ,QAASA,KAE9BuN,EAAI,SAAU,CACVjC,MAAO,IACA9N,EAAImV,gBAEb,EACJhT,UACEC,EAAAA,EAAAA,KAACgU,EAAAA,EAAI,CAACzT,UAAU,aAG3B,OAMbV,EAAAA,EAAAA,MAACoU,EAAAA,EAAM,CACHtT,KAAMqO,EAAQE,aACdtO,QAAS8S,EACTQ,WAAS,EAACC,SAAS,KAAIpU,SAAA,EAEvBC,EAAAA,EAAAA,KAACoU,EAAAA,EAAW,CAAArU,SAAC,aACbC,EAAAA,EAAAA,KAACqU,EAAAA,EAAa,CAAAtU,UAEVC,EAAAA,EAAAA,KAAA,OAAKO,UAAU,wBAAuBR,UAClCC,EAAAA,EAAAA,KAAA,SAAOO,UAAU,QAAOR,UACpBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EAGIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIoL,MAAO,CAAEjM,cAAe,UAAWY,SAAC,UACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,SACI8D,KAAK,OACL2G,MAAOuE,EAAQT,SACf+F,SAAUnM,GAAK8G,EAAW,IAAKD,EAAST,SAAUpG,EAAEqC,OAAOC,QAC3DlK,UAAU,mBAMtBV,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIoL,MAAO,CAAEjM,cAAe,UAAWY,SAAC,QACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,SACI8D,KAAK,OACL2G,MAAOuE,EAAQP,OACf6F,SAAUnM,GAAK8G,EAAW,IAAKD,EAASP,OAAQtG,EAAEqC,OAAOC,QACzDlK,UAAU,mBAMtBV,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIoL,MAAO,CAAEjM,cAAe,UAAWY,SAAC,mBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACuU,EAAAA,GAAM,CACH9J,MAAc,OAAPuE,QAAO,IAAPA,OAAO,EAAPA,EAASJ,sBAChB0F,SAAWnM,GAAM8G,EAAW,IAAKD,EAASJ,sBAAuBzG,IACjEqM,QAAS,CACL,CAAE/J,MAAO,GAAIkE,MAAO,UACjBQ,EAAeG,gBAEtBmF,OAAQlJ,EAAAA,GACRmJ,cAAc,EACdC,YAAa,gBACbC,iBAAkBC,SAAS5M,aAMvCpI,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIoL,MAAO,CAAEjM,cAAe,UAAWY,SAAC,qBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACuU,EAAAA,GAAM,CACH9J,MAAc,OAAPuE,QAAO,IAAPA,OAAO,EAAPA,EAASH,uBAChByF,SAAWnM,GAAM8G,EAAW,IAAKD,EAASH,uBAAwB1G,IAClEqM,QAAS,CACL,CAAE/J,MAAO,GAAIkE,MAAO,UACjBQ,EAAeI,iBAEtBkF,OAAQlJ,EAAAA,GACRmJ,cAAc,EACdC,YAAa,iBACbC,iBAAkBC,SAAS5M,aAMvCpI,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIoL,MAAO,CAAEjM,cAAe,UAAWY,SAAC,mBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACuU,EAAAA,GAAM,CACH9J,MAAc,OAAPuE,QAAO,IAAPA,OAAO,EAAPA,EAASN,mBAChB4F,SAAWnM,GAAM8G,EAAW,IAAKD,EAASN,mBAAoBvG,IAC9DqM,QAAS,CACL,CAAE/J,MAAO,GAAIkE,MAAO,UACjBQ,EAAeE,aAEtBoF,OAAQlJ,EAAAA,GACRmJ,cAAc,EACdC,YAAa,eACbC,iBAAkBC,SAAS5M,aAMvCpI,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIoL,MAAO,CAAEjM,cAAe,UAAWY,SAAC,oBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIF,EAAAA,EAAAA,MAAA,UACIiE,KAAK,OACL2G,MAAOuE,EAAQD,cACfuF,SAAUnM,GAAK8G,EAAW,IAAKD,EAASD,cAAe5G,EAAEqC,OAAOC,QAChElK,UAAU,WAAUR,SAAA,EAEpBC,EAAAA,EAAAA,KAAA,UAAQyK,MAAO,GAAG1K,SAAC,QAClBgP,EAAAA,GAAcpR,KAAI,CAAC6T,EAAKsD,KACrB9U,EAAAA,EAAAA,KAAA,UAAQyK,MAAO+G,EAAI/G,MAAM1K,SAAYyR,EAAI7C,OAAVmG,cAO/CjV,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIoL,MAAO,CAAEjM,cAAe,UAAWY,SAAC,gBACxCC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACuU,EAAAA,GAAM,CACH9J,MAAc,OAAPuE,QAAO,IAAPA,OAAO,EAAPA,EAASF,kBAChBwF,SAAWnM,GAAM8G,GAAW1J,IAAG,IAAUA,EAAKuJ,kBAAmB3G,MACjEqM,QAAS,CACL,CAAE/J,MAAO,GAAIkE,MAAO,UACjBQ,EAAeK,YAEtBiF,OAAQlJ,EAAAA,GACRmJ,cAAc,EACdE,iBAAkBC,SAAS5M,sBASvDpI,EAAAA,EAAAA,MAACkV,EAAAA,EAAa,CAACxU,UAAU,oDAAmDR,SAAA,EACxEC,EAAAA,EAAAA,KAAC2T,EAAAA,EAAM,CACHlH,QAAQ,WACRrM,QAASA,KACL6O,GAAW1J,IAAG,IACPA,KACA+I,KACJ,EAEP0G,WAAWhV,EAAAA,EAAAA,KAACiV,EAAAA,EAAQ,IAAIlV,SAC3B,WACDF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAC2T,EAAAA,EAAM,CAACvT,QAASsT,EAAY3T,SAAC,WAC9BC,EAAAA,EAAAA,KAAC2T,EAAAA,EAAM,CACHvT,QAASA,KACLsT,KACAwB,EAAAA,EAAAA,IAAkB,CACd3G,SAAiB,OAAPS,QAAO,IAAPA,OAAO,EAAPA,EAAST,SACnBE,OAAQO,EAAQP,OAChBjB,SACAkB,mBAAoBM,EAAQN,mBAC5BE,sBAAuBI,EAAQJ,sBAC/BC,uBAAwBG,EAAQH,uBAChCC,kBAAmBE,EAAQF,kBAC3BC,cAAeC,EAAQD,cACvBA,cAAeC,EAAQD,eACzB,EAENiG,WAAWhV,EAAAA,EAAAA,KAACmV,EAAAA,EAAM,IAClB1I,QAAQ,YAAW1M,SACtB,sBAId,C,8ECpZX,MAAMqV,GAAcC,EAAAA,EAAAA,MAAiBC,KAExBC,EAAuB,CAChCvE,cAAe,GACfwE,UAAW,GACXC,QAAS,GACTC,YAAa,GACbjD,eAAgB,GAChBkD,UAAW,GACX5D,iBAAkB,GAClBF,aAAarD,EAAAA,EAAAA,MACboH,SAAU,GACVC,UAAW,GACXpE,cAAe,EACfqE,WAAWtC,EAAAA,EAAAA,IAAyB,OAAX4B,QAAW,IAAXA,OAAW,EAAXA,EAAaW,QAAqB,OAAXX,QAAW,IAAXA,OAAW,EAAXA,EAAaW,OAAS,GACtEC,UAAW,GACXC,UAAW,GACXC,QAAS,IAGAC,EAAuB,CAChCC,OAAQ,GACRC,QAAS,GACTrF,cAAe,GACfwE,UAAW,GACXzD,iBAAkB,GAClBF,YAAa,GACbyE,OAAQ,KACRC,WAAY,GACZtF,KAAM,GACNsB,OAAQ,EACRiE,QAAS,GACTxD,QAAS,IAGAyD,EAAyB,CAClCC,UAAW,GACXN,OAAQ,GACRC,QAAS,GACTrF,cAAe,GACfwE,UAAW,GACXzD,iBAAkB,GAClBF,YAAa,GACbyE,OAAQ,GACRrF,KAAM,GACN0F,MAAO,GACPC,MAAO,GACPC,QAAS,GACTtE,OAAQ,IAGCxD,EAAgB,CACzB,CACIJ,MAAO,MACPlE,MAAO,GAEX,CACIkE,MAAO,UACPlE,MAAO,GAEX,CACIkE,MAAO,YACPlE,MAAO,GAEX,CACIkE,MAAO,WACPlE,MAAO,G,6DC/Df,SAAeqM,EAAAA,EAAAA,IAA4B9W,EAAAA,EAAAA,KAAK,OAAQ,CACtD+W,EAAG,6CACD,W,4DCFJ,SAAeD,EAAAA,EAAAA,IAA4B9W,EAAAA,EAAAA,KAAK,OAAQ,CACtD+W,EAAG,uIACD,O,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4B9W,EAAAA,EAAAA,KAAK,OAAQ,CACtD+W,EAAG,kJACD,Y,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4B9W,EAAAA,EAAAA,KAAK,OAAQ,CACtD+W,EAAG,sOACD,S","sources":["Components/filterableTable2.jsx","Components/tablecolumn.js","Pages/Journal/JournalMaster/journalList.jsx","Pages/Journal/JournalMaster/variable.js","../node_modules/@mui/icons-material/esm/ClearAll.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport {\r\n    Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell,\r\n    TableSortLabel, IconButton, Popover, MenuList, MenuItem, ListItemIcon, ListItemText,\r\n    Tooltip, Card\r\n} from '@mui/material';\r\nimport { isEqualNumber, LocalDate, LocalTime, NumberFormat } from './functions';\r\nimport { Download, KeyboardArrowDown, KeyboardArrowUp, MoreVert, ToggleOff, ToggleOn } from '@mui/icons-material';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @typedef {Object} Column\r\n * @property {string} [Field_Name]\r\n * @property {'string'|'number'|'date'|'time'} [Fied_Data]\r\n * @property {'top'|'middle'|'bottom'} [verticalAlign]\r\n * @property {string} [ColumnHeader]\r\n * @property {string} [tdClass]\r\n * @property {0|1} [isVisible]\r\n * @property {'left'|'right'|'center'} [align]\r\n * @property {boolean} [isCustomCell]\r\n * @property {(row: object) => JSX.Element} [Cell]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Menu\r\n * @property {string} [name]\r\n * @property {JSX.Element} [icon]\r\n * @property {() => void} [onclick]\r\n * @property {boolean} [disabled]\r\n */\r\n\r\n/**\r\n * @typedef {Object} FilterableTableProps\r\n * @property {Array<Object>} [dataArray]\r\n * @property {Array<Column>} [columns]\r\n * @property {Function} [onClickFun]\r\n * @property {boolean} [isExpendable]\r\n * @property {JSX.Element} [expandableComp]\r\n * @property {number} [tableMaxHeight]\r\n * @property {number} [initialPageCount]\r\n * @property {boolean} [EnableSerialNumber]\r\n * @property {'small'|'medium'|'large'} [CellSize]\r\n * @property {boolean} [disablePagination]\r\n * @property {string} [title]\r\n * @property {boolean} [PDFPrintOption]\r\n * @property {boolean} [ExcelPrintOption]\r\n * @property {boolean} [maxHeightOption]\r\n * @property {JSX.Element} [ButtonArea]\r\n * @property {Array<Menu>} [MenuButtons]\r\n * @property {number} [bodyFontSizePx]\r\n * @property {number} [headerFontSizePx]\r\n */\r\n\r\n/**\r\n * @param {FilterableTableProps} props\r\n */\r\n\r\n/**\r\n * Button Actions\r\n * @param {Array<Menu>} [buttonsData] \r\n * @param {string} [ToolTipText] \r\n */\r\n\r\nconst preprocessDataForExport = (data, columns) => {\r\n    return data.map((row) => {\r\n        const flattenedRow = {};\r\n\r\n        columns.forEach((column, index) => {\r\n            if (column.isVisible || column.Defult_Display) {\r\n                if (column.isCustomCell && column.Cell) {\r\n                    const cellContent = column.Cell({ row });\r\n\r\n                    const safeColumnHeader = column.ColumnHeader\r\n                        ? String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase()\r\n                        : `field_${index + 1}`;\r\n\r\n                    if (typeof cellContent === 'string' || typeof cellContent === 'number' || typeof cellContent === 'bigint') {\r\n                        flattenedRow[safeColumnHeader] = cellContent;\r\n                    }\r\n                    // else if (React.isValidElement(cellContent)) {\r\n                    //     flattenedRow[safeColumnHeader] = 'null';\r\n                    // } else {\r\n                    //     flattenedRow[safeColumnHeader] = 'invalid';\r\n                    // }\r\n                } else {\r\n                    // Handle regular fields\r\n                    let key = column.Field_Name;\r\n                    flattenedRow[key] = row[key] || '';\r\n                }\r\n            }\r\n        });\r\n\r\n        return flattenedRow;\r\n    });\r\n};\r\n\r\nconst generatePDF = (dataArray, columns) => {\r\n    try {\r\n        const doc = new jsPDF();\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const headers = columns\r\n            .filter((column) => column.isVisible || column.Defult_Display)\r\n            .map((column) => column.Field_Name || String(column.ColumnHeader).replace(/\\s+/g, '_').toLowerCase());\r\n\r\n        const rows = processedData.map((row) =>\r\n            headers.map((header) => row[header])\r\n        ).map((o, i) => ({ ...o, Sno: i + 1 }))\r\n\r\n        doc.autoTable({\r\n            head: [headers],\r\n            body: rows,\r\n        });\r\n\r\n        doc.save('table.pdf');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst exportToExcel = (dataArray, columns) => {\r\n    try {\r\n        const processedData = preprocessDataForExport(dataArray, columns);\r\n\r\n        const worksheet = XLSX.utils.json_to_sheet(processedData);\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n        XLSX.writeFile(workbook, 'table.xlsx');\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst createCol = (\r\n    field = '', \r\n    type = 'string', \r\n    ColumnHeader = '', \r\n    align = 'left', \r\n    verticalAlign = 'center', \r\n    isVisible = 1\r\n) => {\r\n    return {\r\n        isVisible: isVisible,\r\n        Field_Name: field,\r\n        Fied_Data: type,\r\n        align,\r\n        verticalAlign,\r\n        ...(ColumnHeader && { ColumnHeader })\r\n    }\r\n}\r\n\r\nconst ButtonActions = ({ buttonsData = [], ToolTipText = 'Options' }) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popOverOpen = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={ToolTipText}>\r\n                <IconButton aria-describedby={popOverOpen} onClick={handleClick} className='ms-2' size='small'>\r\n                    <MoreVert />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <Popover\r\n                open={popOverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <MenuList>\r\n                    {buttonsData.map((btn, btnKey) => (\r\n                        <MenuItem\r\n                            key={btnKey}\r\n                            onClick={() => btn?.onclick && btn?.onclick()}\r\n                            disabled={btn?.disabled}\r\n                        >\r\n                            <ListItemIcon>{btn?.icon}</ListItemIcon>\r\n                            <ListItemText>{btn?.name}</ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return val ? NumberFormat(val) : val;\r\n        case 'date':\r\n            return val ? LocalDate(val) : val;\r\n        case 'time':\r\n            return val ? LocalTime(val) : val;\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst FilterableTable = ({\r\n    dataArray = [],\r\n    columns = [],\r\n    onClickFun = null,\r\n    isExpendable = false,\r\n    expandableComp = null,\r\n    tableMaxHeight = 550,\r\n    initialPageCount = 20,\r\n    EnableSerialNumber = false,\r\n    CellSize = 'small' || 'medium',\r\n    disablePagination = false,\r\n    title = '',\r\n    PDFPrintOption = false,\r\n    ExcelPrintOption = false,\r\n    maxHeightOption = false,\r\n    ButtonArea = null,\r\n    MenuButtons = [],\r\n    bodyFontSizePx = 13,\r\n    headerFontSizePx = 13\r\n}) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(initialPageCount);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n    const [showFullHeight, setShowFullHeight] = useState(true);\r\n    const tableHeight = (showFullHeight && maxHeightOption) ? ' max-content ' : tableMaxHeight;\r\n\r\n    const columnAlign = [\r\n        {\r\n            type: 'left',\r\n            class: 'text-start'\r\n        }, {\r\n            type: 'right',\r\n            class: 'text-end'\r\n        }, {\r\n            type: 'center',\r\n            class: 'text-center'\r\n        }\r\n    ];\r\n\r\n    const columnVerticalAlign = [\r\n        {\r\n            type: 'top',\r\n            class: ' vtop '\r\n        }, {\r\n            type: 'bottom',\r\n            class: ' vbottom '\r\n        }, {\r\n            type: 'center',\r\n            class: ' vctr '\r\n        }\r\n    ]\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const RowComp = ({ row, index }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const fontSize = '20px';\r\n\r\n        return (\r\n            <Fragment>\r\n                <TableRow>\r\n\r\n                    {(isExpendable === true && expandableComp) && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            <IconButton size='small' onClick={() => setOpen(pre => !pre)}>\r\n                                {open ? <KeyboardArrowUp sx={{ fontSize }} /> : <KeyboardArrowDown sx={{ fontSize }} />}\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {EnableSerialNumber === true && (\r\n                        <TableCell className='border-end text-center vtop' sx={{ fontSize: `${bodyFontSizePx}px` }}>\r\n                            {(rowsPerPage * page) + index + 1}\r\n                        </TableCell>\r\n                    )}\r\n\r\n                    {columns?.map((column, columnInd) => {\r\n                        const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                        const isCustomCell = Boolean(column?.isCustomCell) && column.Cell;\r\n                        const isCommonValue = !isCustomCell;\r\n\r\n                        const tdClass = (row, Field_Name, tdIndex) => (\r\n                            column?.tdClass ? ` ${column?.tdClass({ row, Field_Name, index: tdIndex })} ` : ''\r\n                        );\r\n\r\n                        const horizondalalignClass = column.align\r\n                            ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                            : '';\r\n\r\n                        const verticalAlignClass = column.verticalAlign\r\n                            ? columnVerticalAlign.find(align => align.type === String(column.verticalAlign).toLowerCase())?.class\r\n                            : ' vctr ';\r\n\r\n                        if (isColumnVisible && isCommonValue) {\r\n                            const foundEntry = Object.entries(row).find(([key]) => key === column.Field_Name);\r\n\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                    onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                >\r\n                                    {foundEntry ? formatString(foundEntry[1], column?.Fied_Data) : '-'}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        if (isColumnVisible && isCustomCell) {\r\n                            return (\r\n                                <TableCell\r\n                                    key={columnInd}\r\n                                    className={`border-end ${horizondalalignClass} ${verticalAlignClass} ${tdClass(row, column.Field_Name, index)}`}\r\n                                    sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                >\r\n                                    {column.Cell({ row, Field_Name: column.Field_Name, index })}\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <TableCell\r\n                                key={columnInd}\r\n                                sx={{ fontSize: `${bodyFontSizePx}px` }}\r\n                                className={`border-end ${horizondalalignClass} ${verticalAlignClass}`}\r\n                            >\r\n                                -\r\n                            </TableCell>\r\n                        );\r\n                    })}\r\n\r\n                </TableRow>\r\n\r\n                {(isExpendable === true && expandableComp && open) && (\r\n                    <TableRow>\r\n                        <TableCell colSpan={Number(columns?.length) + (EnableSerialNumber === true ? 2 : 1)}>{expandableComp({ row, index })}</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className='rounded-3 bg-white overflow-hidden' component={Paper}>\r\n            <div\r\n                className=\"d-flex align-items-center flex-wrap px-3 py-2 flex-row-reverse \"\r\n            >\r\n                {(PDFPrintOption || ExcelPrintOption || MenuButtons.length > 0 || maxHeightOption) && (\r\n                    <ButtonActions\r\n                        ToolTipText='Table Options'\r\n                        buttonsData={[\r\n                            ...(maxHeightOption\r\n                                ? [{\r\n                                    name: 'Max Height',\r\n                                    icon: showFullHeight\r\n                                        ? <ToggleOn fontSize=\"small\" color='primary' />\r\n                                        : <ToggleOff fontSize=\"small\" />,\r\n                                    onclick: () => setShowFullHeight(pre => !pre),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(PDFPrintOption\r\n                                ? [{\r\n                                    name: 'PDF Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => generatePDF(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...(ExcelPrintOption\r\n                                ? [{\r\n                                    name: 'Excel Print',\r\n                                    icon: <Download fontSize=\"small\" color='primary' />,\r\n                                    onclick: () => exportToExcel(dataArray, columns),\r\n                                    disabled: isEqualNumber(dataArray?.length, 0)\r\n                                }]\r\n                                : []),\r\n                            ...MenuButtons,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {ButtonArea && ButtonArea}\r\n                {title && <h6 className='fw-bold text-muted flex-grow-1 m-0'>{title}</h6>}\r\n            </div>\r\n\r\n            <TableContainer sx={{ maxHeight: tableHeight }}>\r\n\r\n                <Table stickyHeader size={CellSize}>\r\n\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* Expendable column */}\r\n                            {isExpendable && expandableComp && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    #\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Serial number column */}\r\n                            {EnableSerialNumber && (\r\n                                <TableCell\r\n                                    className='fw-bold border-end border-top text-center'\r\n                                    sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                >\r\n                                    SNo\r\n                                </TableCell>\r\n                            )}\r\n\r\n                            {/* Columns */}\r\n                            {columns.map((column, ke) => {\r\n                                const isColumnVisible = isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1);\r\n                                const isSortable = Boolean(column?.isCustomCell) === false || !column.Cell;\r\n                                const sortCriteriaMatch = sortCriteria.find(criteria => criteria.columnId === column.Field_Name);\r\n                                const sortDirection = sortCriteriaMatch ? sortCriteriaMatch.direction : 'asc';\r\n\r\n                                if (isColumnVisible) {\r\n                                    return isSortable ? (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={`fw-bold border-end border-top ` +\r\n                                                (column.align ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class : '')}\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                            sortDirection={sortCriteriaMatch ? sortDirection : false}\r\n                                        >\r\n                                            <TableSortLabel\r\n                                                active={!!sortCriteriaMatch}\r\n                                                direction={sortDirection}\r\n                                                onClick={() => handleSortRequest(column.Field_Name)}\r\n                                            >\r\n                                                {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                            </TableSortLabel>\r\n                                        </TableCell>\r\n                                    ) : (\r\n                                        <TableCell\r\n                                            key={ke}\r\n                                            className={\r\n                                                `${(column.ColumnHeader || column?.Field_Name)\r\n                                                    ? ' fw-bold border-end border-top p-2 appFont '\r\n                                                    : ' p-0 '\r\n                                                } ` +\r\n                                                (column.align\r\n                                                    ? columnAlign.find(align => align.type === String(column.align).toLowerCase())?.class\r\n                                                    : '')\r\n                                            }\r\n                                            sx={{ fontSize: `${headerFontSizePx}px`, backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {column.ColumnHeader || column?.Field_Name?.replace(/_/g, ' ')}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {(disablePagination ? sortedData : paginatedData).map((row, index) => (\r\n                            <RowComp key={index} row={row} index={index} />\r\n                        ))}\r\n                        {dataArray.length === 0 && (\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    colSpan={\r\n                                        columns.length +\r\n                                        ((isExpendable === true && expandableComp) ? 1 : 0) +\r\n                                        (EnableSerialNumber === true ? 1 : 0)\r\n                                    }\r\n                                    sx={{ textAlign: 'center' }}\r\n                                >\r\n                                    No Data\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {!disablePagination && paginatedData.length !== 0 && (\r\n                <div\r\n                    className=\"p-2 pb-0\"\r\n                >\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={dataArray.length}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        rowsPerPage={rowsPerPage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        rowsPerPageOptions={Array.from(new Set([initialPageCount, 5, 20, 50, 100, 200, 500])).sort((a, b) => a - b)}\r\n                        labelRowsPerPage=\"Rows per page\"\r\n                        showFirstButton\r\n                        showLastButton\r\n                    />\r\n                </div>\r\n            )}\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\nFilterableTable.propTypes = {\r\n    dataArray: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    columns: PropTypes.arrayOf(PropTypes.shape({\r\n        Field_Name: PropTypes.string,\r\n        Fied_Data: PropTypes.oneOf(['string', 'number', 'date', 'time']),\r\n        ColumnHeader: PropTypes.string,\r\n        isVisible: PropTypes.oneOf([0, 1]),\r\n        align: PropTypes.oneOf(['left', 'right', 'center']),\r\n        verticalAlign: PropTypes.oneOf(['top', 'center', 'bottom']),\r\n        isCustomCell: PropTypes.bool,\r\n        Cell: PropTypes.func,\r\n        tdClass: PropTypes.func\r\n    })).isRequired,\r\n    onClickFun: PropTypes.func,\r\n    isExpendable: PropTypes.bool,\r\n    expandableComp: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\r\n    tableMaxHeight: PropTypes.number,\r\n    initialPageCount: PropTypes.number,\r\n    EnableSerialNumber: PropTypes.bool,\r\n    CellSize: PropTypes.string,\r\n    disablePagination: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    PDFPrintOption: PropTypes.bool,\r\n    ExcelPrintOption: PropTypes.bool,\r\n    maxHeightOption: PropTypes.bool,\r\n    ButtonArea: PropTypes.element,\r\n    MenuButtons: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nFilterableTable.defaultProps = {\r\n    dataArray: [],\r\n    columns: [],\r\n    onClickFun: null,\r\n    isExpendable: false,\r\n    expandableComp: null,\r\n    tableMaxHeight: 550,\r\n    initialPageCount: 20,\r\n    EnableSerialNumber: false,\r\n    CellSize: 'small',\r\n    disablePagination: false,\r\n    title: undefined,\r\n    PDFPrintOption: false,\r\n    ExcelPrintOption: false,\r\n    maxHeightOption: false,\r\n    ButtonArea: null,\r\n    MenuButtons: [],\r\n    headerFontSizePx: 13,\r\n    bodyFontSizePx: 13,\r\n};\r\n\r\nexport default FilterableTable;\r\n\r\nexport {\r\n    createCol,\r\n    ButtonActions,\r\n    formatString\r\n}","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\"\r\nimport FilterableTable, { createCol, formatString } from \"../../../Components/filterableTable2\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { Addition, checkIsNumber, getSessionFiltersByPageId, isEqualNumber, ISOString, NumberFormat, setSessionFilters, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { ClearAll, Edit, FilterAlt, Search } from \"@mui/icons-material\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport Select from \"react-select\";\r\nimport { journalStatus } from \"./variable\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst JournalList = ({ loadingOn, loadingOff, pageID, AddRights, EditRights }) => {\r\n    const nav = useNavigate();\r\n    // const [dataArray, setDataArray] = useState([]);\r\n    const [generalInfo, setGeneralInfo] = useState([]);\r\n    const [entriesInfo, setEntriesInfo] = useState([]);\r\n    const [billReference, setBillReference] = useState([]);\r\n\r\n    const sessionValue = sessionStorage.getItem('filterValues');\r\n\r\n    const defaultFilters = {\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        voucherType_Filter: { label: 'ALL', value: '' },\r\n        debit_accounts_Filter: { label: 'ALL', value: '' },\r\n        credit_accounts_Filter: { label: 'ALL', value: '' },\r\n        created_by_Filter: { label: 'ALL', value: '' },\r\n        journalStatus: '',\r\n    };\r\n\r\n    const [filters, setFilters] = useState({\r\n        ...defaultFilters,\r\n        filterDialog: false,\r\n    });\r\n\r\n    const [filterDropDown, setFilterDropDown] = useState({\r\n        voucherType: [],\r\n        debit_accounts: [],\r\n        credit_accounts: [],\r\n        created_by: [],\r\n    })\r\n\r\n    useEffect(() => {\r\n        const sessionFilterValues = getSessionFiltersByPageId(pageID);\r\n        const {\r\n            Fromdate, Todate,\r\n            voucherType_Filter = defaultFilters.voucherType_Filter,\r\n            debit_accounts_Filter = defaultFilters.debit_accounts_Filter,\r\n            credit_accounts_Filter = defaultFilters.credit_accounts_Filter,\r\n            created_by_Filter = defaultFilters.created_by_Filter,\r\n            journalStatus = defaultFilters.journalStatus,\r\n        } = sessionFilterValues;\r\n\r\n        setFilters(pre => ({\r\n            ...pre,\r\n            Fromdate: Fromdate,\r\n            Todate: Todate,\r\n            voucherType_Filter,\r\n            debit_accounts_Filter,\r\n            credit_accounts_Filter,\r\n            created_by_Filter,\r\n            journalStatus,\r\n        }));\r\n\r\n    }, [sessionValue, pageID]);\r\n\r\n    useEffect(() => {\r\n        const sessionFilterValues = getSessionFiltersByPageId(pageID);\r\n        const {\r\n            Fromdate, Todate,\r\n            voucherType_Filter = defaultFilters.voucherType_Filter,\r\n            debit_accounts_Filter = defaultFilters.debit_accounts_Filter,\r\n            credit_accounts_Filter = defaultFilters.credit_accounts_Filter,\r\n            created_by_Filter = defaultFilters.created_by_Filter,\r\n            journalStatus = defaultFilters.journalStatus\r\n        } = sessionFilterValues;\r\n\r\n        fetchLink({\r\n            address: `journal/journalMaster?\r\n                Fromdate=${Fromdate}&\r\n                Todate=${Todate}&\r\n                voucher=${voucherType_Filter?.value || ''}&\r\n                debit=${debit_accounts_Filter?.value || ''}&\r\n                credit=${credit_accounts_Filter?.value || ''}&\r\n                createdBy=${created_by_Filter?.value || ''}&\r\n                status=${journalStatus}`,\r\n            loadingOff, loadingOn\r\n        }).then(data => {\r\n            if (data.success) {\r\n                // setDataArray(toArray(data.data));\r\n                setGeneralInfo(toArray(data.others?.generalInfo));\r\n                setEntriesInfo(toArray(data.others?.entriesInfo));\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [sessionValue, pageID]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `journal/filtersValues`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setFilterDropDown(pre => ({\r\n                    ...pre,\r\n                    voucherType: toArray(data?.others?.voucherType),\r\n                    debit_accounts: toArray(data?.others?.debit_accounts),\r\n                    credit_accounts: toArray(data?.others?.credit_accounts),\r\n                    created_by: toArray(data?.others?.created_by)\r\n                }))\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const reportData = useMemo(() => {\r\n        let transformedData = [];\r\n\r\n        generalInfo.forEach((journal, jourInd) => {\r\n            const debitSide = entriesInfo.filter(item => item.JournalAutoId === journal.JournalAutoId && item.DrCr === 'Dr');\r\n            const creditSide = entriesInfo.filter(item => item.JournalAutoId === journal.JournalAutoId && item.DrCr === 'Cr');\r\n\r\n            const maxRows = Math.max(debitSide.length, creditSide.length);\r\n            const sNo = ++jourInd;\r\n            const statusGet = journalStatus.find(sts => isEqualNumber(sts.value, journal.JournalStatus))?.label || '';\r\n\r\n            transformedData.push({\r\n                sno: sNo,\r\n                date: ISOString(journal.JournalDate),\r\n                voucherNo: journal.JournalVoucherNo,\r\n                debitAcc: '',\r\n                creditAcc: '',\r\n                debitAmount: debitSide.reduce((acc, orders) => Addition(acc, orders?.Amount), 0),\r\n                creditAmount: creditSide.reduce((acc, orders) => Addition(acc, orders?.Amount), 0),\r\n                voucherType: journal.VoucherTypeGet,\r\n                status: statusGet,\r\n                branch: journal.BranchGet,\r\n                createdBy: journal.CreatedByGet,\r\n                journalObject: { ...journal, Entries: [...debitSide, ...creditSide] }\r\n            });\r\n\r\n            for (let i = 0; i < maxRows; i++) {\r\n                transformedData.push({\r\n                    sno: sNo + '.' + (i + 1),\r\n                    date: '',\r\n                    voucherNo: '',\r\n                    debitAcc: debitSide[i]?.AccountNameGet || '',\r\n                    creditAcc: creditSide[i]?.AccountNameGet || '',\r\n                    debitAmount: checkIsNumber(debitSide[i]?.Amount) ? NumberFormat(debitSide[i]?.Amount) : '',\r\n                    creditAmount: checkIsNumber(creditSide[i]?.Amount) ? NumberFormat(creditSide[i]?.Amount) : '',\r\n                    voucherType: '',\r\n                    status: '',\r\n                    branch: '',\r\n                    createdBy: '',\r\n                });\r\n            }\r\n        });\r\n\r\n        return transformedData;\r\n    }, [generalInfo, entriesInfo])\r\n\r\n    const JournalTotal = useMemo(() => entriesInfo.filter(\r\n        item => item.DrCr === 'Dr'\r\n    ).reduce(\r\n        (acc, orders) => Addition(acc, orders?.Amount), 0\r\n    ), [entriesInfo]);\r\n\r\n    const closeDialog = () => setFilters(pre => ({ ...pre, filterDialog: false }));\r\n\r\n    return (\r\n        <>\r\n\r\n            <FilterableTable\r\n                title='Journal List'\r\n                headerFontSizePx={12}\r\n                bodyFontSizePx={12}\r\n                ButtonArea={\r\n                    <>\r\n\r\n                        {AddRights && (\r\n                            <Button\r\n                                onClick={() => nav(\"create\")}\r\n                                variant=\"outlined\"\r\n                            >create</Button>\r\n                        )}\r\n\r\n                        <IconButton\r\n                            onClick={() => setFilters(pre => ({ ...pre, filterDialog: true }))}\r\n                            size=\"small\" className=\"mx-1\"\r\n                        ><FilterAlt className=\"fa-20\" /></IconButton>\r\n\r\n                        <span className=\"bg-light text-light fa-11 px-1 shadow-sm py-1 rounded-3 mx-1\">\r\n                            {toNumber(JournalTotal) > 0 && <h6 className=\"m-0 text-end text-muted px-3\">Total: {NumberFormat(JournalTotal)}</h6>}\r\n                        </span>\r\n                    </>\r\n                }\r\n                dataArray={reportData}\r\n                columns={[...[\r\n                    { col: 'sno', type: 'string', title: 'Sno' },\r\n                    { col: 'date', type: 'date', title: 'Date' },\r\n                    { col: 'voucherNo', type: 'string', title: 'VoucheNo' },\r\n                    { col: 'debitAcc', type: 'string', title: 'Debit' },\r\n                    { col: 'debitAmount', type: 'string', title: 'Amount' },\r\n                    { col: 'creditAcc', type: 'string', title: 'Credit' },\r\n                    { col: 'creditAmount', type: 'string', title: 'Amount' },\r\n                    { col: 'voucherType', type: 'string', title: 'Voucher' },\r\n                    { col: 'status', type: 'string', title: 'Status' },\r\n                ].map(cel => ({\r\n                    isVisible: 1,\r\n                    ColumnHeader: cel.title,\r\n                    isCustomCell: true,\r\n                    Cell: ({ row }) => formatString(row[cel.col], cel.type),\r\n                    tdClass: ({ row }) => row?.voucherNo ? 'fw-bold bg-light' : ''\r\n                })),\r\n                {\r\n                    isVisible: 1,\r\n                    ColumnHeader: 'Action',\r\n                    isCustomCell: true,\r\n                    Cell: ({ row }) => {\r\n                        return (row?.journalObject && EditRights) && (\r\n                            <>\r\n                                <IconButton size=\"small\" onClick={() => {\r\n                                    // console.log(row)\r\n                                    nav('create', {\r\n                                        state: {\r\n                                            ...row.journalObject,\r\n                                        }\r\n                                    })\r\n                                }}>\r\n                                    <Edit className=\"fa-20\" />\r\n                                </IconButton>\r\n                            </>\r\n                        )\r\n                    }\r\n                }\r\n                ]}\r\n            />\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                {/* from date */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* to date */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* debit account */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Debit Account</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.debit_accounts_Filter}\r\n                                            onChange={(e) => setFilters({ ...filters, debit_accounts_Filter: e })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filterDropDown.debit_accounts\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Debit Account\"}\r\n                                            menuPortalTarget={document.body}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* credit account */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Credit Account </td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.credit_accounts_Filter}\r\n                                            onChange={(e) => setFilters({ ...filters, credit_accounts_Filter: e })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filterDropDown.credit_accounts\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Credit Account\"}\r\n                                            menuPortalTarget={document.body}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* Voucher Type */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Voucher Type </td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.voucherType_Filter}\r\n                                            onChange={(e) => setFilters({ ...filters, voucherType_Filter: e })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filterDropDown.voucherType\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Voucher Type\"}\r\n                                            menuPortalTarget={document.body}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* receipt status */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Receipt Status</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.journalStatus}\r\n                                            onChange={e => setFilters({ ...filters, journalStatus: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={''}>All</option>\r\n                                            {journalStatus.map((sts, ind) => (\r\n                                                <option value={sts.value} key={ind}>{sts.label}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* created by */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.created_by_Filter}\r\n                                            onChange={(e) => setFilters(pre => ({ ...pre, created_by_Filter: e }))}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filterDropDown.created_by\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            menuPortalTarget={document.body}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions className=\"d-flex align-items-center justify-content-between\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={() => {\r\n                            setFilters(pre => ({\r\n                                ...pre,\r\n                                ...defaultFilters\r\n                            }))\r\n                        }}\r\n                        startIcon={<ClearAll />}\r\n                    >clear</Button>\r\n                    <span>\r\n                        <Button onClick={closeDialog}>close</Button>\r\n                        <Button\r\n                            onClick={() => {\r\n                                closeDialog();\r\n                                setSessionFilters({\r\n                                    Fromdate: filters?.Fromdate,\r\n                                    Todate: filters.Todate,\r\n                                    pageID,\r\n                                    voucherType_Filter: filters.voucherType_Filter,\r\n                                    debit_accounts_Filter: filters.debit_accounts_Filter,\r\n                                    credit_accounts_Filter: filters.credit_accounts_Filter,\r\n                                    created_by_Filter: filters.created_by_Filter,\r\n                                    journalStatus: filters.journalStatus,\r\n                                    journalStatus: filters.journalStatus,\r\n                                });\r\n                            }}\r\n                            startIcon={<Search />}\r\n                            variant=\"contained\"\r\n                        >Search</Button>\r\n                    </span>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default JournalList;","import { checkIsNumber, ISOString, getSessionUser } from \"../../../Components/functions\";\r\nconst userDetails = getSessionUser().user;\r\n\r\nexport const journalGeneralInfoIV = {\r\n    JournalAutoId: '',\r\n    JournalId: '',\r\n    Year_Id: '',\r\n    VoucherType: '',\r\n    VoucherTypeGet: '',\r\n    JournalNo: '',\r\n    JournalVoucherNo: '',\r\n    JournalDate: ISOString(),\r\n    BranchId: '',\r\n    Narration: '',\r\n    JournalStatus: 1,\r\n    CreatedBy: checkIsNumber(userDetails?.UserId) ? userDetails?.UserId : '',\r\n    CreatedAt: '',\r\n    UpdatedAt: '',\r\n    AlterId: '',\r\n}\r\n\r\nexport const journalEntriesInfoIV = {\r\n    LineId: '',\r\n    LineNum: '',\r\n    JournalAutoId: '',\r\n    JournalId: '',\r\n    JournalVoucherNo: '',\r\n    JournalDate: '',\r\n    Acc_Id: null,\r\n    AccountGet: '',\r\n    DrCr: '',\r\n    Amount: 0,\r\n    Remarks: '',\r\n    Entries: [],\r\n}\r\n\r\nexport const journalBillReferenceIV = {\r\n    autoGenId: '',\r\n    LineId: '',\r\n    LineNum: '',\r\n    JournalAutoId: '',\r\n    JournalId: '',\r\n    JournalVoucherNo: '',\r\n    JournalDate: '',\r\n    Acc_Id: '',\r\n    DrCr: '',\r\n    RefId: '',\r\n    RefNo: '',\r\n    RefType: '',\r\n    Amount: '',\r\n}\r\n\r\nexport const journalStatus = [\r\n    {\r\n        label: 'New',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'Process',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'Completed',\r\n        value: 3\r\n    },\r\n    {\r\n        label: 'Canceled',\r\n        value: 0\r\n    },\r\n];","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAll');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["preprocessDataForExport","data","columns","map","row","flattenedRow","forEach","column","index","isVisible","Defult_Display","isCustomCell","Cell","cellContent","safeColumnHeader","ColumnHeader","String","replace","toLowerCase","key","Field_Name","createCol","arguments","length","undefined","Fied_Data","align","verticalAlign","ButtonActions","_ref","buttonsData","ToolTipText","anchorEl","setAnchorEl","useState","popOverOpen","Boolean","_jsxs","_Fragment","children","_jsx","Tooltip","title","IconButton","onClick","event","currentTarget","className","size","MoreVert","Popover","open","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","btn","btnKey","MenuItem","onclick","disabled","ListItemIcon","icon","ListItemText","name","formatString","val","dataType","NumberFormat","LocalDate","LocalTime","FilterableTable","_ref2","dataArray","onClickFun","isExpendable","expandableComp","tableMaxHeight","initialPageCount","EnableSerialNumber","CellSize","disablePagination","PDFPrintOption","ExcelPrintOption","maxHeightOption","ButtonArea","MenuButtons","bodyFontSizePx","headerFontSizePx","page","setPage","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","showFullHeight","setShowFullHeight","tableHeight","columnAlign","type","class","columnVerticalAlign","sortedData","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","startIndex","endIndex","paginatedData","slice","RowComp","_ref3","setOpen","fontSize","Fragment","TableRow","TableCell","sx","pre","KeyboardArrowUp","KeyboardArrowDown","columnInd","_columnAlign$find","_columnVerticalAlign$","isColumnVisible","isEqualNumber","isCommonValue","tdClass","tdIndex","horizondalalignClass","find","verticalAlignClass","foundEntry","Object","entries","_ref4","console","log","colSpan","Number","Card","component","Paper","ToggleOn","color","ToggleOff","Download","generatePDF","doc","jsPDF","processedData","headers","filter","rows","header","o","i","Sno","autoTable","head","body","save","e","error","exportToExcel","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","TableContainer","maxHeight","Table","stickyHeader","TableHead","backgroundColor","ke","isSortable","sortCriteriaMatch","sortDirection","_columnAlign$find2","_column$Field_Name","_columnAlign$find3","_column$Field_Name2","TableSortLabel","active","existingCriteria","isAsc","handleSortRequest","TableBody","textAlign","TablePagination","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","target","value","rowsPerPageOptions","Array","from","Set","labelRowsPerPage","showFirstButton","showLastButton","defaultProps","customTableStyles","table","style","width","headCells","customSelectStyles","menu","provided","state","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","companyDetails","dataBase","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","loadingOn","loadingOff","pageID","AddRights","EditRights","nav","useNavigate","generalInfo","setGeneralInfo","entriesInfo","setEntriesInfo","billReference","setBillReference","sessionValue","sessionStorage","getItem","defaultFilters","Fromdate","ISOString","Todate","voucherType_Filter","label","debit_accounts_Filter","credit_accounts_Filter","created_by_Filter","journalStatus","filters","setFilters","filterDialog","filterDropDown","setFilterDropDown","voucherType","debit_accounts","credit_accounts","created_by","useEffect","sessionFilterValues","getSessionFiltersByPageId","fetchLink","then","_data$others","_data$others2","success","toArray","others","catch","_data$others3","_data$others4","_data$others5","_data$others6","reportData","useMemo","transformedData","journal","jourInd","_journalStatus$find","debitSide","item","JournalAutoId","DrCr","creditSide","maxRows","Math","max","sNo","statusGet","sts","JournalStatus","push","sno","date","JournalDate","voucherNo","JournalVoucherNo","debitAcc","creditAcc","debitAmount","reduce","acc","orders","Addition","Amount","creditAmount","VoucherTypeGet","status","branch","BranchGet","createdBy","CreatedByGet","journalObject","Entries","_debitSide$i","_creditSide$i","_debitSide$i2","_debitSide$i3","_creditSide$i2","_creditSide$i3","AccountNameGet","checkIsNumber","JournalTotal","closeDialog","Button","FilterAlt","toNumber","col","cel","Edit","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","onChange","Select","options","styles","isSearchable","placeholder","menuPortalTarget","document","ind","DialogActions","startIcon","ClearAll","setSessionFilters","Search","userDetails","getSessionUser","user","journalGeneralInfoIV","JournalId","Year_Id","VoucherType","JournalNo","BranchId","Narration","CreatedBy","UserId","CreatedAt","UpdatedAt","AlterId","journalEntriesInfoIV","LineId","LineNum","Acc_Id","AccountGet","Remarks","journalBillReferenceIV","autoGenId","RefId","RefNo","RefType","createSvgIcon","d"],"sourceRoot":""}
{"version":3,"file":"static/js/4208.65a0bb51.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","Pages/CurrentProjects/taskActivity.jsx","../node_modules/@mui/icons-material/esm/CalendarMonth.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/KeyboardArrowLeft.js","../node_modules/@mui/icons-material/esm/QueryBuilder.js"],"sourcesContent":["\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: '45px',\r\n        background: 'rgba(255, 255, 255, 0.322)'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 })\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, IconButton } from '@mui/material';\r\nimport { KeyboardArrowLeft, CalendarMonth, QueryBuilder, Edit } from \"@mui/icons-material\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport { fetchLink } from '../../Components/fetchComponent'\r\nimport { ISOString, isValidObject, LocalDate } from \"../../Components/functions\";\r\n\r\n// import CalenderComp from \"./calender\";\r\n\r\n\r\nconst TaskActivity = () => {\r\n    const location = useLocation();\r\n    const taskInfo = location.state?.taskDetails;\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const nav = useNavigate()\r\n\r\n    const assignEmpInitialValue = {\r\n        AN_No: '',\r\n        Project_Id: taskInfo?.Project_Id,\r\n        Sch_Id: taskInfo?.Sch_Id,\r\n        Task_Levl_Id: taskInfo?.Task_Levl_Id,\r\n        Task_Id: taskInfo?.Task_Id,\r\n        Assigned_Emp_Id: parseData?.UserId,\r\n        Emp_Id: '',\r\n        Task_Assign_dt: ISOString(),\r\n        Sch_Period: taskInfo?.Task_Sch_Duaration,\r\n        Sch_Time: taskInfo?.Task_Start_Time,\r\n        EN_Time: taskInfo?.Task_End_Time,\r\n        Est_Start_Dt: taskInfo?.Task_Est_Start_Date ? ISOString(taskInfo?.Task_Est_Start_Date) : ISOString(),\r\n        Est_End_Dt: taskInfo?.Task_Est_End_Date ? ISOString(taskInfo?.Task_Est_End_Date) : ISOString(),\r\n        Ord_By: 1,\r\n        Timer_Based: true,\r\n        Invovled_Stat: true,\r\n        EmpGet: '- Select Employee -'\r\n    }\r\n\r\n    const [dialog, setDialog] = useState({\r\n        assignEmp: false,\r\n    });\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [userDropDown, setUsersDropdown] = useState([])\r\n    const [assignEmpInpt, setAssignEmpInpt] = useState(assignEmpInitialValue);\r\n    const [assignedEmployees, setAssignedEmployees] = useState([]);\r\n    const [reload, setReload] = useState(false);\r\n    const [workDetails, setWorkDetails] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!isValidObject(taskInfo)) {\r\n            nav('/taskManagement/projectActivity');\r\n        }\r\n    }, [taskInfo])\r\n\r\n    useEffect(() => {\r\n        if (taskInfo?.Task_Levl_Id) {\r\n            fetchLink({\r\n                address: `masters/users/employee/dropDown?Company_id=${parseData?.Company_id}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setUsersDropdown(data.data)\r\n                }\r\n            }).catch(e => console.error(e))\r\n\r\n            fetchLink({\r\n                address: `taskManagement/task/workedDetails?Task_Levl_Id=${taskInfo?.Task_Levl_Id}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setWorkDetails(data.data)\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [taskInfo])\r\n\r\n    useEffect(() => {\r\n        if (taskInfo?.Task_Levl_Id) {\r\n            fetchLink({\r\n                address: `taskManagement/task/assignEmployee?Task_Levl_Id=${taskInfo?.Task_Levl_Id}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setAssignedEmployees(data.data)\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [reload, taskInfo])\r\n\r\n    useEffect(() => {\r\n        if (assignEmpInpt?.Sch_Time && assignEmpInpt?.EN_Time) {\r\n            const [hours1, minutes1] = assignEmpInpt?.Sch_Time?.split(':')?.map(Number);\r\n            const [hours2, minutes2] = assignEmpInpt?.EN_Time?.split(':')?.map(Number);\r\n\r\n            const date1 = new Date(0, 0, 0, hours1, minutes1);\r\n            const date2 = new Date(0, 0, 0, hours2, minutes2);\r\n\r\n            if (date2 > date1) {\r\n                let difference = Math.abs(date2 - date1);\r\n\r\n                const hours = Math.floor(difference / (1000 * 60 * 60));\r\n                difference %= (1000 * 60 * 60);\r\n                const minutes = Math.floor(difference / (1000 * 60));\r\n\r\n                const formattedHours = String(hours).padStart(2, '0');\r\n                const formattedMinutes = String(minutes).padStart(2, '0');\r\n\r\n                setAssignEmpInpt(opt => ({ ...opt, Sch_Period: `${formattedHours}:${formattedMinutes}` }));\r\n            }\r\n        }\r\n    }, [assignEmpInpt?.Sch_Time, assignEmpInpt?.EN_Time])\r\n\r\n    const switchEmpAssign = (val) => {\r\n        if (val) {\r\n            setAssignEmpInpt(val)\r\n            setIsEdit(true)\r\n        } else {\r\n            setAssignEmpInpt(assignEmpInitialValue)\r\n            setIsEdit(false)\r\n        }\r\n        setDialog({ ...dialog, assignEmp: !dialog.assignEmp })\r\n    }\r\n\r\n    const postAndPutAssignEmpFun = () => {\r\n        if (assignEmpInpt?.Emp_Id) {\r\n            fetchLink({\r\n                address: `taskManagement/task/assignEmployee`,\r\n                method: isEdit ? 'PUT' : 'POST',\r\n                bodyData: assignEmpInpt,\r\n\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    toast.success(data.message);\r\n                    switchEmpAssign();\r\n                    setReload(!reload)\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }).catch(e => console.error(e))\r\n\r\n        } else {\r\n            toast.warn('Select Employee')\r\n        }\r\n    }\r\n\r\n    const formatTime24 = (time24) => {\r\n        const [hours, minutes] = time24.split(':').map(Number);\r\n\r\n        let hours12 = hours % 12;\r\n        hours12 = hours12 || 12;\r\n        const period = hours < 12 ? 'AM' : 'PM';\r\n        const formattedHours = hours12 < 10 ? '0' + hours12 : hours12;\r\n        const formattedMinutes = minutes < 10 ? '0' + minutes : minutes;\r\n        const time12 = `${formattedHours}:${formattedMinutes} ${period}`;\r\n\r\n        return time12;\r\n    }\r\n\r\n    const statusColor = (id) => {\r\n        const numId = Number(id);\r\n        const color = ['bg-dark', 'bg-info', 'bg-warning', 'bg-success', 'bg-danger'];\r\n        return color[numId]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer />\r\n            <div className=\"cus-card p-2\">\r\n                <h5 className=\"mb-0 d-flex px-3 py-2 align-items-center\">\r\n                    <span className=\"flex-grow-1 fa-16\">\r\n                        Task: {taskInfo?.TaskNameGet}\r\n                    </span>\r\n                    <span className=\" d-flex \">\r\n\r\n                        <span className=\"fa-12\">\r\n                            {taskInfo?.TaskTypeGet}\r\n                            <br />\r\n                            <span className=\"fa-12\">(\r\n                                {LocalDate(taskInfo?.Task_Est_Start_Date)}\r\n                                {' - '}\r\n                                {LocalDate(taskInfo?.Task_Est_End_Date)}\r\n                                )\r\n                            </span>\r\n                        </span>\r\n\r\n                    </span>\r\n                </h5>\r\n            </div>\r\n\r\n            <div className=\"cus-card py-2 ps-3\">\r\n                <h5 className=\"d-flex align-items-center m-0\">\r\n                    <span className=\"fa-17 flex-grow-1\">Involved Employees</span>\r\n                    <span className=\"d-flex pe-2\">\r\n                        <button\r\n                            className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center me-2\"\r\n                            onClick={() => switchEmpAssign()}>\r\n                            Assign Employee\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-secondary rounded-5 px-3 fa-13 shadow d-flex align-items-center\"\r\n                            onClick={() => nav('/taskManagement/projectActivity/projectDetails', { state: location.state?.retObj })}>\r\n                            <KeyboardArrowLeft className=\"fa-in me-2\" /> Back\r\n                        </button>\r\n                    </span>\r\n                </h5>\r\n\r\n                {assignedEmployees.length ? (\r\n                    <div className=\"table-responsive mt-3\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"fa-14 text-center\">Employee</th>\r\n                                    <th className=\"fa-14 text-center\">Assigned By</th>\r\n                                    <th className=\"fa-14 text-center\">Start-End Date</th>\r\n                                    <th className=\"fa-14 text-center\">Start-End Time</th>\r\n                                    <th className=\"fa-14 text-center\">Total Hours</th>\r\n                                    <th className=\"fa-14 text-center\">Timer Based</th>\r\n                                    <th className=\"fa-14 text-center\">Involved Status</th>\r\n                                    <th className=\"fa-14 text-center\">Order By</th>\r\n                                    <th className=\"fa-14 text-center\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {assignedEmployees.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className=\"fa-13 text-center\">{o?.EmployeeName}</td>\r\n                                        <td className=\"fa-13 text-center\">{o?.AssignedUser}</td>\r\n                                        <td className=\"fa-14 text-center\">\r\n                                            <span className=\"badge rounded-4 px-3 bg-light text-primary\">\r\n                                                <CalendarMonth className=\"fa-18 me-2\" />\r\n                                                {LocalDate(o?.Est_Start_Dt)}\r\n                                                {' - '}\r\n                                                {LocalDate(o?.Est_End_Dt)}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=\"fa-14 text-center\">\r\n                                            <span className=\"badge rounded-4 px-3 bg-light text-primary\">\r\n                                                <QueryBuilder className=\"fa-18 me-2\" />\r\n                                                {o?.Sch_Time}\r\n                                                {' - '}\r\n                                                {o?.EN_Time}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=\"fa-13 text-center\">{o?.Sch_Period}</td>\r\n                                        <td className=\"fa-14\">\r\n                                            <span className={`badge rounded-4 px-3 fw-bold text-white ${Number(o?.Timer_Based) ? 'bg-success' : 'bg-warning'}`}>\r\n                                                {Number(o?.Timer_Based) ? \"Yes\" : \"No\"}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=\"fa-14 text-center\">\r\n                                            <span className={`badge rounded-4 px-3 fw-bold text-white ${Number(o?.Invovled_Stat) ? 'bg-success' : 'bg-danger'}`}>\r\n                                                {Number(o?.Invovled_Stat) ? \"IN\" : \"OUT\"}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=\"fa-13 text-center\">{o?.Ord_By}</td>\r\n                                        <td className=\"fa-13 text-center\">\r\n                                            <IconButton size=\"small\" onClick={() => {\r\n                                                switchEmpAssign({ ...o, EmpGet: o?.EmployeeName })\r\n                                            }}>\r\n                                                <Edit className=\"fa-18\" />\r\n                                            </IconButton>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                ) : (\r\n                    <h6 className=\"mt-3\">No Data</h6>\r\n                )}\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"cus-card py-2 ps-3\">\r\n                <h5 className=\"m-0 mt-2 fa-17\">Task Activity</h5>\r\n\r\n                {workDetails.length > 0 ? (\r\n                    <div className=\"table-responsive mt-3\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"fa-14 text-center\">Sno</th>\r\n                                    <th className=\"fa-14 text-center\">Employee</th>\r\n                                    <th className=\"fa-14 text-center\">Date</th>\r\n                                    <th className=\"fa-14 text-center\">Time</th>\r\n                                    <th className=\"fa-14 text-center\">Duration (Mins)</th>\r\n                                    <th className=\"fa-14 text-center\">Status</th>\r\n                                    <th className=\"fa-14\">Work Description</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {workDetails.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className=\"fa-13 text-center\">{i + 1}</td>\r\n                                        <td className=\"fa-13 text-center\">{o?.EmployeeName}</td>\r\n                                        <td className=\"fa-13 text-center\">\r\n                                            {LocalDate(o?.Work_Dt)}\r\n                                        </td>\r\n                                        <td className=\"fa-14 text-center\">\r\n                                            <span className=\"badge rounded-4 px-3 bg-light text-primary\">\r\n                                                <QueryBuilder className=\"fa-18 me-2\" />\r\n                                                {formatTime24(o?.Start_Time)}\r\n                                                {' - '}\r\n                                                {formatTime24(o?.End_Time)}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=\"fa-13 text-center\">{o?.Tot_Minutes}</td>\r\n                                        <td className=\"fa-13 text-center\">\r\n                                            <span className={`badge rounded-4 px-3 fw-bold text-white ${statusColor(o?.Work_Status)}`}>\r\n                                                {o?.WorkStatus}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=\"fa-13\">{o?.Work_Done}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                ) : (\r\n                    <h6 className=\"mt-3\">No Data</h6>\r\n                )}\r\n            </div>\r\n\r\n\r\n            <Dialog\r\n                open={dialog?.assignEmp}\r\n                onClose={() => switchEmpAssign()}>\r\n                <DialogTitle>{isEdit ? 'Modify Assigned Task' : 'Assign Task'}</DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    postAndPutAssignEmpFun()\r\n                }}>\r\n                    <DialogContent className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Employee</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <Select\r\n                                            value={{ value: assignEmpInpt?.Emp_Id, label: assignEmpInpt?.EmpGet }}\r\n                                            onChange={(e) => setAssignEmpInpt({ ...assignEmpInpt, Emp_Id: e.value, EmpGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: '- Select Employee -' },\r\n                                                ...userDropDown.map(obj => ({ value: obj.UserId, label: obj.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles} required\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select User\"} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Time</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='time'\r\n                                            className=\"cus-inpt\"\r\n                                            value={assignEmpInpt?.Sch_Time} required\r\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Sch_Time: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>End Time</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='time'\r\n                                            className=\"cus-inpt\"\r\n                                            value={assignEmpInpt?.EN_Time} required\r\n                                            min={assignEmpInpt?.Sch_Time}\r\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, EN_Time: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Date </td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='date'\r\n                                            className=\"cus-inpt\" required\r\n                                            value={ISOString(assignEmpInpt?.Est_Start_Dt)}\r\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Est_Start_Dt: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>End Date </td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='date'\r\n                                            className=\"cus-inpt\" required\r\n                                            min={assignEmpInpt?.Est_Start_Dt}\r\n                                            value={assignEmpInpt?.Est_End_Dt && ISOString(assignEmpInpt?.Est_End_Dt)}\r\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Est_End_Dt: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Order BY </td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='number' required placeholder=\"1, 2, 3...\"\r\n                                            className=\"cus-inpt\"\r\n                                            value={assignEmpInpt?.Ord_By}\r\n                                            onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Ord_By: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>\r\n                                        {isEdit && (\r\n                                            <div>\r\n                                                <input\r\n                                                    className=\"form-check-input shadow-none\"\r\n                                                    style={{ padding: '0.7em' }}\r\n                                                    type=\"checkbox\"\r\n                                                    id=\"involve\"\r\n                                                    checked={Boolean(Number(assignEmpInpt?.Invovled_Stat))}\r\n                                                    onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Invovled_Stat: e.target.checked })} />\r\n                                                <label className=\"form-check-label p-1 ps-2\" htmlFor=\"involve\">is Involved?</label>\r\n                                            </div>\r\n                                        )}\r\n                                    </td>\r\n                                    <td className=\"border-bottom-0 fa-15 text-end\">\r\n                                        <div>\r\n                                            <input\r\n                                                className=\"form-check-input shadow-none\"\r\n                                                style={{ padding: '0.7em' }}\r\n                                                type=\"checkbox\"\r\n                                                id=\"timerbased\"\r\n                                                checked={Boolean(Number(assignEmpInpt?.Timer_Based))}\r\n                                                onChange={e => setAssignEmpInpt({ ...assignEmpInpt, Timer_Based: e.target.checked })} />\r\n                                            <label className=\"form-check-label p-1 ps-2\" htmlFor=\"timerbased\">Timer Based Task?</label>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type=\"button\" onClick={() => switchEmpAssign()}>close</Button>\r\n                        <Button type=\"submit\" >submit</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskActivity;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 4h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 16H5V10h14zM9 14H7v-2h2zm4 0h-2v-2h2zm4 0h-2v-2h2zm-8 4H7v-2h2zm4 0h-2v-2h2zm4 0h-2v-2h2z\"\n}), 'CalendarMonth');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'QueryBuilder');"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","control","provided","state","_objectSpread","height","background","menu","zIndex","menuPortal","base","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","TaskActivity","_location$state","location","useLocation","taskInfo","taskDetails","localData","localStorage","getItem","parseData","JSON","parse","nav","useNavigate","assignEmpInitialValue","AN_No","Project_Id","Sch_Id","Task_Levl_Id","Task_Id","Assigned_Emp_Id","UserId","Emp_Id","Task_Assign_dt","ISOString","Sch_Period","Task_Sch_Duaration","Sch_Time","Task_Start_Time","EN_Time","Task_End_Time","Est_Start_Dt","Task_Est_Start_Date","Est_End_Dt","Task_Est_End_Date","Ord_By","Timer_Based","Invovled_Stat","EmpGet","dialog","setDialog","useState","assignEmp","isEdit","setIsEdit","userDropDown","setUsersDropdown","assignEmpInpt","setAssignEmpInpt","assignedEmployees","setAssignedEmployees","reload","setReload","workDetails","setWorkDetails","useEffect","isValidObject","fetchLink","concat","Company_id","then","data","success","catch","e","console","error","_assignEmpInpt$Sch_Ti","_assignEmpInpt$Sch_Ti2","_assignEmpInpt$EN_Tim","_assignEmpInpt$EN_Tim2","hours1","minutes1","split","map","Number","hours2","minutes2","date1","Date","date2","difference","Math","abs","hours","floor","minutes","formattedHours","String","padStart","formattedMinutes","opt","switchEmpAssign","val","formatTime24","time24","hours12","period","_jsxs","_Fragment","children","_jsx","ToastContainer","className","TaskNameGet","TaskTypeGet","LocalDate","onClick","_location$state2","retObj","KeyboardArrowLeft","length","o","i","EmployeeName","AssignedUser","CalendarMonth","QueryBuilder","IconButton","size","Edit","Work_Dt","Start_Time","End_Time","Tot_Minutes","Work_Status","WorkStatus","Work_Done","Dialog","open","onClose","DialogTitle","onSubmit","preventDefault","method","bodyData","toast","message","warn","DialogContent","verticalAlign","Select","value","label","onChange","options","obj","Name","styles","required","isSearchable","placeholder","type","target","min","padding","checked","Boolean","htmlFor","DialogActions","Button","createSvgIcon","d"],"sourceRoot":""}
{"version":3,"file":"static/js/4924.1a4598b6.chunk.js","mappings":"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","sources":["Pages/Masters/TallyMasters/tallyLolSyncDashboard.jsx","../node_modules/@mui/icons-material/esm/Sync.js","../node_modules/@mui/icons-material/esm/Visibility.js"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { filterableText, getSessionUser, isEqualNumber, LocalDate } from \"../../../Components/functions\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\nimport { Card, IconButton } from \"@mui/material\";\r\nimport { toast } from 'react-toastify';\r\nimport { Sync, Visibility } from \"@mui/icons-material\";\r\n\r\n\r\nconst createDateObject = (dateValue) => {\r\n    try {\r\n        const [datePart] = dateValue.split(' ');\r\n        const [day, month, year] = datePart ? datePart?.split('-') : [];\r\n        const dateObject = new Date(year, month - 1, day);\r\n        return dateObject ? LocalDate(dateObject) : '';\r\n    } catch (e) {\r\n        console.error('Failed when parse date: ', e);\r\n        return ''\r\n    }\r\n}\r\n\r\nconst TallyLolSyncDashboard = ({ loadingOn, loadingOff }) => {\r\n    const [ERPLOL, setERPLOL] = useState([]);\r\n    const [tallyLOL, setTallyLOL] = useState([]);\r\n    const user = getSessionUser().user;\r\n    const [filters, setFilters] = useState({\r\n        refresh: false,\r\n        viewNotSynced: false,\r\n        searchERPLol: '',\r\n        searchTallyLol: '',\r\n        searchNotSynced: '',\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: `masters/tallyMaster/ledger`,\r\n            headers: {\r\n                \"Db\": user?.Company_id\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const tallyLOL = Array.isArray(data?.others?.tallyResult) ? data?.others?.tallyResult : [];\r\n                setERPLOL(data.data);\r\n                setTallyLOL(tallyLOL);\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) loadingOff()\r\n        })\r\n    }, [filters.refresh])\r\n\r\n    const syncLOL = () => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: `masters/retailers/lolSync`,\r\n            method: 'POST'\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setFilters(pre => ({ ...pre, refresh: !pre.refresh }))\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        })\r\n    }\r\n\r\n    const notSyncedList = useMemo(() => {\r\n        return tallyLOL.filter(talFil =>\r\n            !ERPLOL.some(erpFil =>\r\n                isEqualNumber(talFil.Ledger_Tally_Id, erpFil.Ledger_Tally_Id)\r\n            )\r\n        );\r\n    }, [ERPLOL.length, tallyLOL.length])\r\n\r\n    const ERPLOLList = useMemo(() => {\r\n        return filters.searchERPLol ? ERPLOL.filter(obj =>\r\n            filterableText(Object.values(obj).join(\" \")).includes(filterableText(filters.searchERPLol))\r\n        ) : ERPLOL\r\n    }, [filters.searchERPLol, ERPLOL.length]);\r\n\r\n    const TallyLOLList = useMemo(() => {\r\n        return filters.searchTallyLol ? tallyLOL.filter(obj =>\r\n            filterableText(Object.values(obj).join(\" \")).includes(filterableText(filters.searchTallyLol))\r\n        ) : tallyLOL;\r\n    }, [filters.searchTallyLol, tallyLOL.length])\r\n\r\n    const filteredNotSyncedList = useMemo(() => {\r\n        return filters.searchNotSynced ? notSyncedList.filter(obj =>\r\n            filterableText(Object.values(obj).join(\" \")).includes(filterableText(filters.searchNotSynced))\r\n        ) : notSyncedList;\r\n    }, [notSyncedList.length, filters.searchNotSynced])\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div\r\n                    className=\"px-3 py-2 fa-14\"\r\n                >\r\n                    <div className=\"d-flex flex-wrap align-items-center\">\r\n                        <h5 className=\"flex-grow-1\">LOL SYNC (Differents: {notSyncedList.length})</h5>\r\n                        <IconButton size='small' onClick={syncLOL}><Sync /></IconButton>\r\n                        <IconButton size='small'\r\n                            onClick={() => setFilters(pre => ({ ...pre, viewNotSynced: !pre.viewNotSynced }))}\r\n                        ><Visibility /></IconButton>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap align-items-center\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {filters.viewNotSynced ? (\r\n                    <FilterableTable\r\n                        title={\"Not synced list \"}\r\n                        bodyFontSizePx={11}\r\n                        headerFontSizePx={11}\r\n                        dataArray={filteredNotSyncedList}\r\n                        columns={[\r\n                            createCol('Ledger_Tally_Id', 'string', 'Tally ID'),\r\n                            createCol('Ledger_Name', 'string'),\r\n                            createCol('Party_Mobile_1', 'string', 'MobileNo'),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Created Date',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => row?.Date_Added ? createDateObject(row?.Date_Added) : ''\r\n                            },\r\n                            createCol('Party_District', 'string'),\r\n                            createCol('Party_Group', 'string'),\r\n                        ]}\r\n                        ButtonArea={\r\n                            <>\r\n                                <input\r\n                                    type='search'\r\n                                    className=\"cus-inpt p-1 w-auto\"\r\n                                    value={filters.searchNotSynced}\r\n                                    onChange={e => setFilters(pre => ({ ...pre, searchNotSynced: e.target.value }))}\r\n                                    placeholder=\"Search..\"\r\n                                />\r\n                            </>\r\n                        }\r\n                    />\r\n                ) : (\r\n                    <>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 p-1\">\r\n                                <FilterableTable\r\n                                    title={\"ERP - \" + ERPLOL.length}\r\n                                    bodyFontSizePx={11}\r\n                                    headerFontSizePx={11}\r\n                                    dataArray={ERPLOLList}\r\n                                    columns={[\r\n                                        createCol('Ledger_Tally_Id', 'string', 'Tally ID'),\r\n                                        createCol('Ledger_Name', 'string'),\r\n                                        createCol('Party_Mobile_1', 'string', 'MobileNo'),\r\n                                        {\r\n                                            isVisible: 1,\r\n                                            ColumnHeader: 'Created Date',\r\n                                            isCustomCell: true,\r\n                                            Cell: ({ row }) => row?.Date_Added ? createDateObject(row?.Date_Added) : ''\r\n                                        },\r\n                                        createCol('Party_District', 'string'),\r\n                                        createCol('Party_Group', 'string'),\r\n                                    ]}\r\n                                    ButtonArea={\r\n                                        <>\r\n                                            <input\r\n                                                type='search'\r\n                                                className=\"cus-inpt p-1 w-auto\"\r\n                                                value={filters.searchERPLol}\r\n                                                onChange={e => setFilters(pre => ({ ...pre, searchERPLol: e.target.value }))}\r\n                                                placeholder=\"Search..\"\r\n                                            />\r\n                                        </>\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-6 p-1\">\r\n                                <FilterableTable\r\n                                    title={\"Tally - \" + tallyLOL.length}\r\n                                    bodyFontSizePx={11}\r\n                                    headerFontSizePx={11}\r\n                                    dataArray={TallyLOLList}\r\n                                    columns={[\r\n                                        createCol('Ledger_Tally_Id', 'string', 'Tally ID'),\r\n                                        createCol('Ledger_Name', 'string'),\r\n                                        createCol('Party_Mobile_1', 'string', 'MobileNo'),\r\n                                        {\r\n                                            isVisible: 1,\r\n                                            ColumnHeader: 'Created Date',\r\n                                            isCustomCell: true,\r\n                                            Cell: ({ row }) => row?.Date_Added ? createDateObject(row?.Date_Added) : ''\r\n                                        },\r\n                                        createCol('Party_District', 'string'),\r\n                                        createCol('Party_Group', 'string'),\r\n                                    ]}\r\n                                    ButtonArea={\r\n                                        <>\r\n                                            <input\r\n                                                type='search'\r\n                                                className=\"cus-inpt p-1 w-auto\"\r\n                                                value={filters.searchTallyLol}\r\n                                                onChange={e => setFilters(pre => ({ ...pre, searchTallyLol: e.target.value }))}\r\n                                                placeholder=\"Search..\"\r\n                                            />\r\n                                        </>\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Card>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TallyLolSyncDashboard;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8m0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4z\"\n}), 'Sync');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');"],"names":["createDateObject","dateValue","datePart","split","day","month","year","dateObject","Date","LocalDate","e","console","error","_ref","loadingOn","loadingOff","ERPLOL","setERPLOL","useState","tallyLOL","setTallyLOL","user","getSessionUser","filters","setFilters","refresh","viewNotSynced","searchERPLol","searchTallyLol","searchNotSynced","useEffect","fetchLink","address","headers","Company_id","then","data","success","_data$others","_data$others2","Array","isArray","others","tallyResult","catch","finally","notSyncedList","useMemo","filter","talFil","some","erpFil","isEqualNumber","Ledger_Tally_Id","length","ERPLOLList","obj","filterableText","Object","values","join","includes","TallyLOLList","filteredNotSyncedList","_jsx","_Fragment","children","_jsxs","Card","className","IconButton","size","onClick","syncLOL","method","toast","message","pre","_objectSpread","Sync","Visibility","FilterableTable","title","bodyFontSizePx","headerFontSizePx","dataArray","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref2","row","Date_Added","ButtonArea","type","value","onChange","target","placeholder","_ref3","_ref4","createSvgIcon","d"],"sourceRoot":""}
{"version":3,"file":"static/js/4500.435f882a.chunk.js","mappings":"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","sources":["Components/tasktype/addEditTaskType.jsx","Pages/Masters/TaskType.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/material/internal/svg-icons/ArrowDownward.js","../node_modules/@mui/material/TableSortLabel/tableSortLabelClasses.js","../node_modules/@mui/material/TableSortLabel/TableSortLabel.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\";\r\n\r\nconst AddEditTaskType = ({ open, onClose, existingTaskType, onCreate, onUpdate }) => {\r\n    const [inputValue, setInputValue] = React.useState({\r\n        Task_Type: \"\",\r\n        Task_Type_Id: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (existingTaskType) {\r\n            setInputValue(existingTaskType);\r\n        } else {\r\n            setInputValue({ Task_Type: \"\", Task_Type_Id: \"\" });\r\n        }\r\n    }, [existingTaskType]);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault(); \r\n        if (existingTaskType) {\r\n            onUpdate(inputValue); \r\n        } else {\r\n            onCreate(inputValue.Task_Type);\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose}>\r\n            <DialogTitle className=\"bg-primary text-white mb-2 px-3 py-2\">\r\n                {existingTaskType ? \"Edit Task Type\" : \"Create Task Type\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"p-2\">\r\n                        <label>Task Type</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={(event) => setInputValue({ ...inputValue, Task_Type: event.target.value })}\r\n                            value={inputValue.Task_Type}\r\n                            className=\"cus-inpt\"\r\n                        />\r\n                    </div>\r\n                    <DialogActions>\r\n                        <button\r\n                            className=\"btn btn-light rounded-5 px-3\"\r\n                            type=\"button\"\r\n                            onClick={onClose}>\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-primary rounded-5 px-3\"\r\n                            type=\"submit\">\r\n                            {existingTaskType ? \"Update\" : \"Create\"}\r\n                        </button>\r\n                    </DialogActions>\r\n                </form>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AddEditTaskType;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TableSortLabel,\r\n    Paper,\r\n} from \"@mui/material\";\r\nimport { Delete, Edit } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport AddEditTaskType from \"../../Components/tasktype/addEditTaskType\";\r\n\r\nconst TaskType = () => {\r\n    const [taskTypeData, setTaskTypeData] = useState([]);\r\n    const [reload, setReload] = useState(false);\r\n    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n    const [selectedTaskType, setSelectedTaskType] = useState(null);\r\n    const [openNewDialog, setOpenNewDialog] = useState(false);\r\n    const [order, setOrder] = useState(\"asc\");\r\n    const [orderBy, setOrderBy] = useState(\"Task_Type_Id\");\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await fetchLink({ address: `masters/taskType` });\r\n                if (data.success) {\r\n                    setTaskTypeData(data.data);\r\n                } else {\r\n                    toast.error(\"Failed to fetch task types: \" + data.message);\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                toast.error(\"Error fetching task types.\");\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [reload]);\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `masters/taskType`,\r\n                method: \"DELETE\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                bodyData: { Task_Type_Id: selectedTaskType.Task_Type_Id },\r\n            });\r\n            if (data.success) {\r\n                setReload(!reload);\r\n                setOpenDeleteDialog(false);\r\n                toast.success(\"Task type deleted successfully!\");\r\n            } else {\r\n                toast.error(\"Failed to delete task type: \" + data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error(\"Error deleting task type.\");\r\n        }\r\n    };\r\n\r\n    const handleDeleteClick = (taskType) => {\r\n        setSelectedTaskType(taskType);\r\n        setOpenDeleteDialog(true);\r\n    };\r\n\r\n    const handleCloseDeleteDialog = () => {\r\n        setOpenDeleteDialog(false);\r\n    };\r\n\r\n    const handleOpenEditDialog = (taskType) => {\r\n        setSelectedTaskType(taskType);\r\n        setOpenNewDialog(true);\r\n    };\r\n\r\n    const handleOpenCreateDialog = () => {\r\n        setSelectedTaskType(null);\r\n        setOpenNewDialog(true);\r\n    };\r\n\r\n    const handleCreate = async (taskType) => {\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `masters/taskType`,\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                bodyData: { Task_Type: taskType },\r\n            });\r\n            if (data.success) {\r\n                setReload(!reload);\r\n                toast.success(\"Task type created successfully!\");\r\n                setOpenNewDialog(false);\r\n            } else {\r\n                toast.error(\"Failed to create task type: \" + data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error(\"Error creating task type.\");\r\n        }\r\n    };\r\n\r\n    const handleUpdate = async (updatedTaskType) => {\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `masters/taskType`,\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                bodyData: { ...updatedTaskType },\r\n            });\r\n            if (data.success) {\r\n                setReload(!reload);\r\n                toast.success(\"Task type updated successfully!\");\r\n                setOpenNewDialog(false);\r\n            } else {\r\n                toast.error(\"Failed to update task type: \" + data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error(\"Error updating task type.\");\r\n        }\r\n    };\r\n\r\n    const handleRequestSort = (property) => {\r\n        const isAsc = orderBy === property && order === \"asc\";\r\n        setOrder(isAsc ? \"desc\" : \"asc\");\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const taskTypeColumns = [\r\n        { id: \"index\", label: \"Id No\", sort: false },\r\n        { id: \"Task_Type\", label: \"Task Type\", sort: true },\r\n        { id: \"actions\", label: \"Actions\", sort: false },\r\n    ];\r\n\r\n    const sortedData = [...taskTypeData].sort((a, b) => {\r\n        const aValue = a[orderBy];\r\n        const bValue = b[orderBy];\r\n        return order === \"asc\" ? (aValue < bValue ? -1 : 1) : (aValue > bValue ? -1 : 1);\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                    Task Types\r\n                    <Button\r\n                        className=\"rounded-5 px-3 py-1 fa-13 shadow\"\r\n                        onClick={handleOpenCreateDialog}\r\n                    >\r\n                        Create Task Type\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"card-body overflow-scroll\" style={{ maxHeight: \"78vh\" }}>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {taskTypeColumns.map((column) => (\r\n                                        <TableCell key={column.id} sx={{ padding: '4px 8px' }}>\r\n                                            {column.sort ? (\r\n                                                <TableSortLabel\r\n                                                    active={orderBy === column.id}\r\n                                                    direction={orderBy === column.id ? order : \"asc\"}\r\n                                                    onClick={() => handleRequestSort(column.id)}\r\n                                                >\r\n                                                    {column.label}\r\n                                                </TableSortLabel>\r\n                                            ) : (\r\n                                                column.label\r\n                                            )}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {sortedData.map((obj, index) => (\r\n                                    <TableRow key={obj.Task_Type_Id}>\r\n                                        <TableCell sx={{ padding: '4px 8px' }}>{index + 1}</TableCell>\r\n                                        <TableCell sx={{ padding: '4px 8px' }}>{obj.Task_Type}</TableCell>\r\n                                        <TableCell sx={{ padding: '4px 8px' }}>\r\n                                            <IconButton onClick={() => handleOpenEditDialog(obj)} size=\"small\">\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={() => handleDeleteClick(obj)} sx={{ color: '#FF6865' }}>\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <AddEditTaskType\r\n                open={openNewDialog}\r\n                onClose={() => setOpenNewDialog(false)}\r\n                existingTaskType={selectedTaskType}\r\n                onCreate={handleCreate}\r\n                onUpdate={handleUpdate}\r\n            />\r\n\r\n            <Dialog\r\n                open={openDeleteDialog}\r\n                onClose={handleCloseDeleteDialog}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle className=\"bg-primary text-white mb-4 px-3 py-2\">{\"Confirmation\"}</DialogTitle>\r\n                <DialogContent className=\"p-4\">\r\n                    Do you want to delete the Task Type\r\n                    <span className=\"text-primary\">{\" \" + selectedTaskType?.Task_Type + \" \"}</span>?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button className=\"btn btn-light rounded-5 px-3 me-1\" onClick={handleCloseDeleteDialog}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button className=\"btn btn-primary rounded-5 px-3\" onClick={handleDelete}>\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default TaskType;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableSortLabelUtilityClass(slot) {\n  return generateUtilityClass('MuiTableSortLabel', slot);\n}\nconst tableSortLabelClasses = generateUtilityClasses('MuiTableSortLabel', ['root', 'active', 'icon', 'iconDirectionDesc', 'iconDirectionAsc']);\nexport default tableSortLabelClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"active\", \"children\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"];\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport ButtonBase from '../ButtonBase';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport capitalize from '../utils/capitalize';\nimport tableSortLabelClasses, { getTableSortLabelUtilityClass } from './tableSortLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction,\n    active\n  } = ownerState;\n  const slots = {\n    root: ['root', active && 'active'],\n    icon: ['icon', `iconDirection${capitalize(direction)}`]\n  };\n  return composeClasses(slots, getTableSortLabelUtilityClass, classes);\n};\nconst TableSortLabelRoot = styled(ButtonBase, {\n  name: 'MuiTableSortLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.active && styles.active];\n  }\n})(({\n  theme\n}) => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'inherit',\n  alignItems: 'center',\n  '&:focus': {\n    color: (theme.vars || theme).palette.text.secondary\n  },\n  '&:hover': {\n    color: (theme.vars || theme).palette.text.secondary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 0.5\n    }\n  },\n  [`&.${tableSortLabelClasses.active}`]: {\n    color: (theme.vars || theme).palette.text.primary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 1,\n      color: (theme.vars || theme).palette.text.secondary\n    }\n  }\n}));\nconst TableSortLabelIcon = styled('span', {\n  name: 'MuiTableSortLabel',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, styles[`iconDirection${capitalize(ownerState.direction)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  fontSize: 18,\n  marginRight: 4,\n  marginLeft: 4,\n  opacity: 0,\n  transition: theme.transitions.create(['opacity', 'transform'], {\n    duration: theme.transitions.duration.shorter\n  }),\n  userSelect: 'none'\n}, ownerState.direction === 'desc' && {\n  transform: 'rotate(0deg)'\n}, ownerState.direction === 'asc' && {\n  transform: 'rotate(180deg)'\n}));\n\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\nconst TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableSortLabel'\n  });\n  const {\n      active = false,\n      children,\n      className,\n      direction = 'asc',\n      hideSortIcon = false,\n      IconComponent = ArrowDownwardIcon\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    active,\n    direction,\n    hideSortIcon,\n    IconComponent\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(TableSortLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    component: \"span\",\n    disableRipple: true,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [children, hideSortIcon && !active ? null : /*#__PURE__*/_jsx(TableSortLabelIcon, {\n      as: IconComponent,\n      className: clsx(classes.icon),\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   * @default false\n   */\n  active: PropTypes.bool,\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The current sort direction.\n   * @default 'asc'\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Hide sort icon when active is false.\n   * @default false\n   */\n  hideSortIcon: PropTypes.bool,\n  /**\n   * Sort icon to use.\n   * @default ArrowDownwardIcon\n   */\n  IconComponent: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableSortLabel;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["_ref","open","onClose","existingTaskType","onCreate","onUpdate","inputValue","setInputValue","React","Task_Type","Task_Type_Id","useEffect","_jsxs","Dialog","children","_jsx","DialogTitle","className","DialogContent","onSubmit","event","preventDefault","type","onChange","target","value","DialogActions","onClick","TaskType","taskTypeData","setTaskTypeData","useState","reload","setReload","openDeleteDialog","setOpenDeleteDialog","selectedTaskType","setSelectedTaskType","openNewDialog","setOpenNewDialog","order","setOrder","orderBy","setOrderBy","async","data","fetchLink","address","success","toast","error","message","console","fetchData","handleCloseDeleteDialog","sortedData","sort","a","b","aValue","bValue","Fragment","Button","handleOpenCreateDialog","style","maxHeight","TableContainer","Table","TableHead","TableRow","id","label","map","column","TableCell","sx","padding","TableSortLabel","active","direction","handleRequestSort","property","TableBody","obj","index","IconButton","size","Edit","color","Delete","AddEditTaskType","method","headers","bodyData","taskType","updatedTaskType","createSvgIcon","d","getTableSortLabelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableSortLabelRoot","styled","ButtonBase","name","overridesResolver","props","styles","ownerState","root","theme","cursor","display","justifyContent","flexDirection","alignItems","vars","palette","text","secondary","tableSortLabelClasses","icon","opacity","primary","TableSortLabelIcon","capitalize","_ref2","_extends","fontSize","marginRight","marginLeft","transition","transitions","create","duration","shorter","userSelect","transform","inProps","ref","useDefaultProps","hideSortIcon","IconComponent","ArrowDownwardIcon","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","component","disableRipple","as","useButtonProps","tagName","disabled","href","rel","role","tabIndex","meta","handleClick","trim","isTrivialHref","stopPropagation","undefined","onKeyDown","key","asProp","source","excluded","i","sourceKeys","Object","keys","length","indexOf","buttonProps","Component","assign","displayName","bsPrefix","variant","prefix","useBootstrapPrefix","classNames"],"sourceRoot":""}
{"version":3,"file":"static/js/1896.9ee5b9d6.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/tablecolumn.js","Pages/Payments/PaymentMaster/purchasePayment.jsx","Pages/Payments/PaymentMaster/choosePayment.jsx","Pages/Payments/PaymentMaster/displayStockJournal.jsx","Pages/Payments/PaymentMaster/listCostingDetail.jsx","Pages/Payments/PaymentMaster/expencesPayment.jsx","Pages/Payments/PaymentMaster/addReference.jsx","Pages/Payments/PaymentMaster/variable.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Done.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n            ? '#E2ECF9'\r\n            : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { Addition, checkIsNumber, isEqualNumber, LocalDate, NumberFormat, onlynum, RoundNumber, Subraction, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { Close, Delete } from \"@mui/icons-material\";\r\nimport FilterableTable, { ButtonActions, createCol } from \"../../../Components/filterableTable2\";\r\nimport { paymentBillInfoInitialValue } from \"./variable\";\r\n\r\n\r\n\r\nconst PurchaseInvoicePayment = ({\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    paymentGeneralInfo = {},\r\n    paymentBillInfo = [],\r\n    setPaymentBillInfo,\r\n    filters,\r\n    baseData,\r\n    setPaymentGeneralInfo,\r\n    updateFilterData,\r\n    updateBaseData,\r\n    closeDialog,\r\n}) => {\r\n    const onClickPurchaseInvoice = (invoiceDetails, deleteOption) => {\r\n        setPaymentBillInfo(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !isEqualNumber(o?.pay_bill_id, invoiceDetails.PIN_Id));\r\n\r\n            let updateBillInfo;\r\n            if (deleteOption) {\r\n                updateBillInfo = excludeCurrentValue;\r\n            } else {\r\n                const reStruc = Object.fromEntries(\r\n                    Object.entries(paymentBillInfoInitialValue).map(([key, value]) => {\r\n                        switch (key) {\r\n                            case 'pay_bill_id': return [key, invoiceDetails?.PIN_Id];\r\n                            case 'bill_name': return [key, invoiceDetails?.Po_Inv_No];\r\n                            case 'bill_amount': return [key, toNumber(invoiceDetails?.Total_Invoice_value)];\r\n                            case 'Debit_Amo': return [key, 0];\r\n                            case 'Credit_Amo': return [key, 0];\r\n                            case 'JournalBillType': return [key, 'PURCHASE INVOICE'];\r\n\r\n                            case 'PurchaseInvoiceDate': return [key, invoiceDetails.Po_Inv_Date];\r\n                            case 'TotalPaidAmount': return [key, invoiceDetails.Paid_Amount];\r\n                            case 'PendingAmount': return [key, Subraction(\r\n                                invoiceDetails?.Total_Invoice_value,\r\n                                invoiceDetails.Paid_Amount\r\n                            )];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                )\r\n                updateBillInfo = [...excludeCurrentValue, reStruc];\r\n            }\r\n            return updateBillInfo;\r\n        })\r\n    }\r\n\r\n    const onChangeAmount = (invoice, amount) => {\r\n        setPaymentBillInfo(pre => {\r\n            const selectedInvoices = [...pre];\r\n\r\n            const indexOfInvoice = selectedInvoices.findIndex(\r\n                inv => isEqualNumber(invoice.pay_bill_id, inv.pay_bill_id)\r\n            );\r\n\r\n            if (indexOfInvoice !== -1) {\r\n                selectedInvoices[indexOfInvoice].Debit_Amo = toNumber(amount);\r\n            }\r\n            return selectedInvoices;\r\n        })\r\n    }\r\n\r\n    const onInputValidate = (input, max) => {\r\n        const inputValue = checkIsNumber(input) ? RoundNumber(input) : 0;\r\n        return inputValue < max ? inputValue : max;\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered fa-13\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Against Reference</th>\r\n                            <th colSpan={6} className=\"text-end\">\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"outlined\"\r\n                                    disabled={toArray(baseData.purchaseInvoiceSearchResult).length === 0}\r\n                                    onClick={() => updateFilterData('selectPurchaseInvoice', true)}\r\n                                >Add reference</Button>\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            {['Sno', 'Purchase InvoiceNo', 'Date', 'Invoice Value',\r\n                                'Paid Amount',\r\n                                // 'Pending Amount',\r\n                                'Payment Amount', 'Action'].map(\r\n                                    (col, colInd) => <th key={colInd} className=\"bg-light text-muted\">{col}</th>\r\n                                )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {paymentBillInfo.map(\r\n                            (invoice, invoiceInd) => (\r\n                                <tr key={invoiceInd}>\r\n                                    <td>{invoiceInd + 1}</td>\r\n                                    <td>{invoice?.bill_name}</td>\r\n                                    <td>{LocalDate(invoice?.PurchaseInvoiceDate)}</td>\r\n                                    <td>{NumberFormat(invoice?.bill_amount)}</td>\r\n                                    <td>{invoice?.TotalPaidAmount}</td>\r\n                                    {/* <td>{Subraction(invoice?.bill_amount, invoice?.TotalPaidAmount)}</td> */}\r\n                                    <td className=\"p-0\">\r\n                                        <input\r\n                                            value={invoice.Debit_Amo || ''}\r\n                                            className=\"cus-inpt p-2 border-0 text-primary\"\r\n                                            placeholder=\"Enter Amount\"\r\n                                            type=\"number\"\r\n                                            onChange={e => {\r\n                                                const maxAmount = Subraction(invoice?.bill_amount, invoice?.TotalPaidAmount);\r\n                                                const validated = onInputValidate(e.target.value, maxAmount);\r\n                                                onChangeAmount(invoice, validated);\r\n                                            }}\r\n                                        />\r\n\r\n                                    </td>\r\n                                    <td className=\"p-0 vctr cntr\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => onClickPurchaseInvoice({\r\n                                                ...invoice,\r\n                                                PIN_Id: invoice.pay_bill_id\r\n                                            }, true)}\r\n                                        ><Delete className=\"fa-20\" color=\"error\" /></IconButton>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        )}\r\n                        <tr>\r\n                            <td colSpan={3} className=\"text-end fw-bold\">Total</td>\r\n                            <td className=\"fw-bold text-muted\">\r\n                                {paymentBillInfo.reduce(\r\n                                    (acc, invoice) => Addition(acc, invoice.bill_amount), 0\r\n                                )}\r\n                            </td>\r\n                            <td></td>\r\n                            <td className=\"fw-bold text-muted\">\r\n                                {paymentBillInfo.reduce(\r\n                                    (acc, invoice) => Addition(acc, invoice.Debit_Amo), 0\r\n                                )}\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n            <Dialog\r\n                open={filters.selectPurchaseInvoice}\r\n                onClose={closeDialog} fullScreen\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Add Ref - Purchase Invoice</span>\r\n                    <IconButton onClick={closeDialog}><Close color=\"error\" /></IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <table className=\"table table-bordered fa-13\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Pending Invoices</th>\r\n                                <th colSpan={6} className=\"text-end\">\r\n\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                {['Sno', 'Payment InvoiceNo', 'Date', 'Invoice Value', 'Paid Amount', 'Pending Amount', '#'].map(\r\n                                    (col, colInd) => <td key={colInd}>{col}</td>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {baseData.purchaseInvoiceSearchResult.map(\r\n                                (invoice, invoiceInd) => (\r\n                                    <tr key={invoiceInd}>\r\n                                        <td>{invoiceInd + 1}</td>\r\n                                        <td>{invoice?.Po_Inv_No}</td>\r\n                                        <td>{LocalDate(invoice?.Po_Inv_Date)}</td>\r\n                                        <td>{invoice?.Total_Invoice_value}</td>\r\n                                        <td>{invoice?.Paid_Amount}</td>\r\n                                        <td>{Subraction(invoice?.Total_Invoice_value, invoice?.Paid_Amount)}</td>\r\n                                        <td>\r\n                                            {(() => {\r\n                                                const isChecked = paymentBillInfo.findIndex(o =>\r\n                                                    isEqualNumber(o?.pay_bill_id, invoice.PIN_Id)\r\n                                                ) !== -1;\r\n\r\n                                                return (\r\n                                                    <div>\r\n                                                        <input\r\n                                                            className=\"form-check-input shadow-none pointer\"\r\n                                                            style={{ padding: '0.7em' }}\r\n                                                            type=\"checkbox\"\r\n                                                            checked={isChecked}\r\n                                                            onChange={() => {\r\n                                                                if (isChecked) onClickPurchaseInvoice(invoice, true)\r\n                                                                else onClickPurchaseInvoice(invoice)\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                )\r\n                                            })()}\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            )}\r\n                            <tr>\r\n                                <td colSpan={4} rowSpan={3}></td>\r\n                                <td>Total Amount: </td>\r\n                                <td colSpan={2} className=\"fw-bold fa-15\">\r\n                                    {baseData.purchaseInvoiceSearchResult.reduce(\r\n                                        (acc, invoice) => Addition(acc, invoice?.Total_Invoice_value), 0\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Selected Bill Amount: </td>\r\n                                <td colSpan={2} className=\"text-primary fw-bold\">\r\n                                    {baseData.purchaseInvoiceSearchResult.reduce(\r\n                                        (acc, invoice) => {\r\n                                            const isChecked = paymentBillInfo.findIndex(o =>\r\n                                                isEqualNumber(o?.pay_bill_id, invoice.PIN_Id)\r\n                                            ) !== -1;\r\n\r\n                                            if (isChecked) return Addition(acc, invoice?.Total_Invoice_value);\r\n\r\n                                            return acc\r\n                                        }, 0\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Pending Bill Amount: </td>\r\n                                <td colSpan={2} className=\"text-danger\">\r\n                                    {baseData.purchaseInvoiceSearchResult.reduce(\r\n                                        (acc, invoice) => {\r\n                                            const isNotChecked = paymentBillInfo.findIndex(o =>\r\n                                                isEqualNumber(o?.pay_bill_id, invoice.PIN_Id)\r\n                                            ) === -1;\r\n\r\n                                            if (isNotChecked) return Addition(acc, invoice?.Total_Invoice_value);\r\n\r\n                                            return acc\r\n                                        }, 0\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PurchaseInvoicePayment;","import { Button, Dialog, DialogContent, DialogTitle, DialogActions, IconButton } from \"@mui/material\";\r\nimport { Addition, checkIsNumber, isEqualNumber, NumberFormat, Subraction, toArray } from \"../../../Components/functions\";\r\nimport { paymentTypes } from \"./variable\";\r\nimport { Close, Search, Done } from \"@mui/icons-material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { toast } from 'react-toastify';\r\nimport { useMemo } from \"react\";\r\n\r\nconst ChoosePaymentComponent = ({\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    paymentGeneralInfo = {},\r\n    paymentBillInfo = [],\r\n    filters,\r\n    baseData,\r\n    setPaymentGeneralInfo,\r\n    updateFilterData,\r\n    updateBaseData,\r\n    closeDialog,\r\n    loadingOn,\r\n    loadingOff\r\n}) => {\r\n\r\n    const searchPayments = (debitAccount, creditAccount, paymentType) => {\r\n\r\n        if (!checkIsNumber(paymentType)) return toast.warn('Select Bill Type')\r\n\r\n        fetchLink({\r\n            address: `payment/paymentMaster/search?debit_ledger=${debitAccount}&credit_ledger=${creditAccount}&pay_bill_type=${paymentType}`,\r\n            loadingOn,\r\n            loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                updateBaseData('paymentInvoiceSearchResult', toArray(data.data))\r\n            }\r\n        })\r\n    }\r\n\r\n    const onSelectPayment = (invoiceDetails) => {\r\n        setPaymentGeneralInfo(pre => {\r\n            return Object.fromEntries(\r\n                Object.entries(pre).map(([key, value]) => [key, invoiceDetails[key] || value])\r\n            )\r\n        })\r\n    }\r\n\r\n    const TotalAgainstRef = useMemo(() => {\r\n        return paymentBillInfo.reduce(\r\n            (acc, invoice) => Addition(acc, invoice.Debit_Amo), 0\r\n        )\r\n    }, [paymentBillInfo]);\r\n\r\n    const PendingAgainstRef = useMemo(() => {\r\n        return Subraction(paymentGeneralInfo.debit_amount, TotalAgainstRef)\r\n    }, [TotalAgainstRef, paymentGeneralInfo.debit_amount])\r\n\r\n    return (\r\n        <>\r\n            {/* choose Payment */}\r\n            <table className=\"table table-bordered fa-13\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Payment Details</th>\r\n                        <th colSpan={5} className=\"text-end\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                type=\"button\"\r\n                                onClick={() => updateFilterData('selectPaymentDialog', true)}\r\n                            >Choose Payment</Button>\r\n                        </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th className=\"text-muted\">Payment Type</th>\r\n                        <td style={cellStyle}>\r\n                            {paymentTypes.find(\r\n                                type => isEqualNumber(type.value, paymentGeneralInfo.pay_bill_type)\r\n                            ).label}\r\n                        </td>\r\n\r\n                        <th className=\"text-muted\">Debit Account</th>\r\n                        <td style={cellStyle}>{paymentGeneralInfo.debit_ledger_name}</td>\r\n\r\n                        <th className=\"text-muted\">Payment Value</th>\r\n                        <td style={cellStyle} className=\"text-primary fw-bold\">{NumberFormat(paymentGeneralInfo.debit_amount)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th className=\"text-muted\">Payment Invoice</th>\r\n                        <td style={cellStyle}>{paymentGeneralInfo.payment_invoice_no}</td>\r\n\r\n                        <th className=\"text-muted\">Credit Account</th>\r\n                        <td style={cellStyle}>{paymentGeneralInfo.credit_ledger_name}</td>\r\n\r\n                        <th className=\"text-muted\">Pending Against Amount</th>\r\n                        <td style={cellStyle} className=\"text-danger fw-bold\">{NumberFormat(PendingAgainstRef)}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <Dialog\r\n                open={filters.selectPaymentDialog}\r\n                onClose={closeDialog} fullScreen\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Choose Payment Invoice</span>\r\n                    <IconButton onClick={closeDialog}><Close color=\"error\" /></IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"row\">\r\n\r\n                        {/* payment type */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                            <label>Payment Type<RequiredStar /></label>\r\n                            <Select\r\n                                value={filters.paymentType}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => updateFilterData('paymentType', e)}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...paymentTypes\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                required\r\n                                placeholder={\"Select payment type\"}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* debit account */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                            <label>Debit Account</label>\r\n                            <Select\r\n                                value={filters.debitAccount}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => updateFilterData('debitAccount', e)}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...toArray(baseData.accounts).map(\r\n                                        acc => ({\r\n                                            value: acc.Acc_Id,\r\n                                            label: acc.Account_name\r\n                                        })\r\n                                    )\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                required\r\n                                placeholder={\"Select Debit Account\"}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* credit account */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                            <label>Credit Account</label>\r\n                            <Select\r\n                                value={filters.creditAccount}\r\n                                menuPortalTarget={document.body}\r\n                                onChange={e => updateFilterData('creditAccount', e)}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...toArray(baseData.accounts).map(\r\n                                        acc => ({\r\n                                            value: acc.Acc_Id,\r\n                                            label: acc.Account_name\r\n                                        })\r\n                                    )\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                required\r\n                                placeholder={\"Select Credit Account\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2 d-flex flex-column\">\r\n                            <div className=\"mt-auto\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    startIcon={<Search />}\r\n                                    onClick={() => searchPayments(\r\n                                        filters.debitAccount.value,\r\n                                        filters.creditAccount.value,\r\n                                        filters.paymentType.value,\r\n                                    )}\r\n                                >\r\n                                    Search\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <FilterableTable\r\n                        title=\"Payments List\"\r\n                        EnableSerialNumber\r\n                        headerFontSizePx={13}\r\n                        bodyFontSizePx={12}\r\n                        tableMaxHeight={450}\r\n                        dataArray={baseData.paymentInvoiceSearchResult}\r\n                        columns={[\r\n                            createCol('payment_invoice_no', 'string', 'InvoiceNo'),\r\n                            createCol('payment_date', 'date', 'Date'),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Bill Type',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => (\r\n                                    paymentTypes.find(type => isEqualNumber(type.value, row?.pay_bill_type)).label\r\n                                )\r\n                            },\r\n                            createCol('debit_ledger_name', 'string', 'Debit Acc'),\r\n                            createCol('credit_ledger_name', 'string', 'Credit Acc'),\r\n                            createCol('debit_amount', 'number', 'Amount'),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Pending Ref Amount',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => Subraction(row?.debit_amount, row?.TotalReferenceAdded)\r\n                            },\r\n                            createCol('debit_amount', 'number', ''),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Action',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => (\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            onSelectPayment(row);\r\n                                            closeDialog();\r\n                                            updateFilterData('paymentType', initialSelectValue);\r\n                                            updateFilterData('debitAccount', initialSelectValue);\r\n                                            updateFilterData('creditAccount', initialSelectValue);\r\n                                        }}\r\n                                    ><Done className=\"fa-20\" /></IconButton>\r\n                                )\r\n                            }\r\n                        ]}\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChoosePaymentComponent;","import { useState } from \"react\"\r\nimport { isEqualNumber, LocalDate } from \"../../../Components/functions\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Done, KeyboardArrowDown, KeyboardArrowUp } from \"@mui/icons-material\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\n\r\n\r\n\r\nconst DisplayStockJournal = ({\r\n    arrayData = [],\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    paymentBillInfo = [],\r\n    onSelect\r\n}) => {\r\n\r\n    const TableRows = ({ row = {}, sno }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const isProcessing = row?.BillType === 'PROCESSING';\r\n\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td>{sno}</td>\r\n                    <td>{row?.journalVoucherNo || '-'}</td>\r\n                    <td>{row?.journalDate ? LocalDate(row?.journalDate) : '-'}</td>\r\n                    <td>{row?.BillType || '-'}</td>\r\n                    <td>{row?.voucherTypeGet || '-'}</td>\r\n                    <td>{row?.narration || '-'}</td>\r\n                    <td>{row?.paidAmount}</td>\r\n                    <td>\r\n                        <div className=\"d-flex align-items-center\">\r\n                            {(() => {\r\n                                const isChecked = paymentBillInfo.findIndex(o =>\r\n                                    isEqualNumber(o?.pay_bill_id, row.journalId)\r\n                                ) !== -1;\r\n\r\n                                return (\r\n                                    <div>\r\n                                        <input\r\n                                            className=\"form-check-input shadow-none pointer\"\r\n                                            style={{ padding: '0.7em' }}\r\n                                            type=\"checkbox\"\r\n                                            checked={isChecked}\r\n                                            onChange={() => {\r\n                                                if (isChecked) onSelect(row, true)\r\n                                                else onSelect(row)\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })()}\r\n\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                className=\"mx-1\"\r\n                                onClick={() => setOpen(pre => !pre)}\r\n                            >\r\n                                {open ? <KeyboardArrowUp className=\"fa-20\" /> : <KeyboardArrowDown className=\"fa-20\" />}\r\n                            </IconButton>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n\r\n                {open && (\r\n                    <tr>\r\n                        <td colSpan={8} className=\"p-4\">\r\n\r\n                            <div className=\"row \">\r\n\r\n                                {isProcessing && (\r\n                                    <div className={\"col-md-6 p-1\"}>\r\n                                        <FilterableTable\r\n                                            title=\"Source\"\r\n                                            headerFontSizePx={11}\r\n                                            bodyFontSizePx={11}\r\n                                            EnableSerialNumber\r\n                                            dataArray={row?.SourceDetails}\r\n                                            columns={[\r\n                                                createCol('Product_Name', 'string', 'Item'),\r\n                                                createCol('Godown_Name', 'string', 'From'),\r\n                                                createCol('Sour_Qty', 'number', 'QTY'),\r\n                                            ]}\r\n                                            disablePagination\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                <div className={isProcessing ? \"col-md-6 p-1\" : 'col-12 p-1'}>\r\n                                    <FilterableTable\r\n                                        title={isProcessing ? \"Destination\" : 'Items'}\r\n                                        headerFontSizePx={11}\r\n                                        bodyFontSizePx={11}\r\n                                        EnableSerialNumber\r\n                                        dataArray={row?.Products_List}\r\n                                        columns={[\r\n                                            createCol('productNameGet', 'string', 'Item'),\r\n                                            ...(!isProcessing ? [\r\n                                                createCol('fromLocationGet', 'string', 'From'),\r\n                                            ] : []),\r\n                                            createCol('toLocationGet', 'string', 'To'),\r\n                                            createCol('quantity', 'number', 'QTY'),\r\n                                            createCol('expence_value', 'number', 'Expence'),\r\n                                        ]}\r\n                                        disablePagination\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered fa-12\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-primary fa-15 vctr\" colSpan={3} >Stock Journal</th>\r\n                            <th colSpan={5} className=\"text-end\"></th>\r\n                        </tr>\r\n                        <tr>\r\n                            {['Sno', 'Journal-No', 'Date', 'Journal Type', 'Voucher', 'Narration', 'Paid Amount', '#'].map(\r\n                                (col, colInd) => <td key={colInd}>{col}</td>\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {arrayData.map((journal, jouInd) => <TableRows row={journal} sno={jouInd + 1} key={jouInd} />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayStockJournal","import { Delete, KeyboardArrowDown, KeyboardArrowUp } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// Local utility functions\r\nconst toNumber = (val) => Number(val) || 0;\r\n\r\nconst add = (a, b) => toNumber(a) + toNumber(b);\r\nconst subtract = (a, b) => toNumber(a) - toNumber(b);\r\nconst multiply = (a, b) => toNumber(a) * toNumber(b);\r\nconst divide = (a, b) => b !== 0 ? toNumber(a) / toNumber(b) : 0;\r\nconst roundNumber = (num, precision = 2) => Number(toNumber(num).toFixed(precision));\r\nconst isEqualNumber = (a, b) => toNumber(a) === toNumber(b);\r\nconst numberFormat = (num) => new Intl.NumberFormat().format(toNumber(num));\r\nconst localDate = (dateStr) => new Date(dateStr).toLocaleDateString();\r\n\r\nconst ListCostingDetails = ({\r\n    paymentBillInfo = [],\r\n    paymentCostingInfo = [],\r\n    setPaymentBillInfo,\r\n    setPaymentCostingInfo,\r\n    onInputValidate,\r\n    onSelectStockJournal,\r\n    journalAmountOnChange,\r\n}) => {\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const onChangeAmount = (itemDetails, amount) => {\r\n        setPaymentCostingInfo((pre) => {\r\n            const selectedItem = [...pre];\r\n            const indexOfInvoice = selectedItem.findIndex(\r\n                (inv) =>\r\n                    isEqualNumber(itemDetails.pay_bill_id, inv.pay_bill_id) &&\r\n                    isEqualNumber(itemDetails.item_id, inv.item_id)\r\n            );\r\n\r\n            if (indexOfInvoice !== -1) {\r\n                selectedItem[indexOfInvoice].expence_value = toNumber(amount);\r\n            }\r\n            return selectedItem;\r\n        });\r\n    };\r\n\r\n    // Weighted average distribution when user enters journal amount\r\n    const onChangeJournalAmount = (journal, amount = 0) => {\r\n        const totalAmount = toNumber(amount);\r\n\r\n        setPaymentBillInfo((pre) => {\r\n            const updated = [...pre];\r\n            const index = updated.findIndex((b) => isEqualNumber(b.pay_bill_id, journal.pay_bill_id));\r\n            if (index !== -1) updated[index].Debit_Amo = totalAmount;\r\n            return updated;\r\n        });\r\n\r\n        setPaymentCostingInfo((prev) => {\r\n            const items = prev.filter((item) => isEqualNumber(item.pay_bill_id, journal.pay_bill_id));\r\n\r\n            // const shouldDistribute = items.every((item) => !item.expence_value || Number(item.expence_value) === 0);\r\n\r\n            // if (!shouldDistribute || items.length === 0) return prev;\r\n\r\n            const totalQty = items.reduce((sum, item) => add(sum, item.itemQuantity), 0);\r\n            const unitCost = divide(totalAmount, totalQty);\r\n\r\n            let distributed = 0;\r\n\r\n            const updatedItems = items.map((item, index) => {\r\n                const weighted = roundNumber(multiply(item.itemQuantity, unitCost));\r\n                if (index < items.length - 1) {\r\n                    distributed = add(distributed, weighted);\r\n                    return {\r\n                        ...item,\r\n                        expence_value: weighted,\r\n                    };\r\n                } else {\r\n                    return {\r\n                        ...item,\r\n                        expence_value: roundNumber(subtract(totalAmount, distributed)),\r\n                    };\r\n                }\r\n            });\r\n\r\n            return prev.map((item) => {\r\n                if (isEqualNumber(item.pay_bill_id, journal.pay_bill_id)) {\r\n                    const updated = updatedItems.find((i) => i.item_id === item.item_id);\r\n                    return updated || item;\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                {paymentBillInfo.map((journal, journalIndex) => (\r\n                    <table className=\"table table-bordered fa-12 my-3\" key={journalIndex}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"bg-light\">{journalIndex + 1}</th>\r\n                                <th className=\"bg-light text-primary vctr\">{journal.bill_name}</th>\r\n                                <th className=\"bg-light\">\r\n                                    Date: {journal.StockJournalDate ? localDate(journal.StockJournalDate) : \"-\"}\r\n                                </th>\r\n                                <th className=\"bg-light\">{journal.JournalBillType}</th>\r\n                                <th className=\"bg-light\">Paid: {journal.TotalPaidAmount}</th>\r\n                                <th className=\"bg-light vctr p-0 text-end\">\r\n                                    <input\r\n                                        value={journal.Debit_Amo || \"\"}\r\n                                        className=\"cus-inpt p-2 border-dark text-primary bg-light\"\r\n                                        placeholder=\"Enter Amount\"\r\n                                        type=\"number\"\r\n                                        onChange={(e) => onChangeJournalAmount(journal, e.target.value)}\r\n                                    />\r\n                                </th>\r\n                                <th className=\"bg-light vctr p-0 text-end\">\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() =>\r\n                                            onSelectStockJournal(\r\n                                                {\r\n                                                    ...journal,\r\n                                                    journalId: journal.pay_bill_id,\r\n                                                },\r\n                                                true\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <Delete className=\"fa-20\" color=\"error\" />\r\n                                    </IconButton>\r\n                                    {/* \r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        className=\"mx-1\"\r\n                                        onClick={() => setOpen((pre) => !pre)}\r\n                                    >\r\n                                        {open ? (\r\n                                            <KeyboardArrowUp className=\"fa-20\" />\r\n                                        ) : (\r\n                                            <KeyboardArrowDown className=\"fa-20\" />\r\n                                        )}\r\n                                    </IconButton> \r\n                                    */}\r\n                                </th>\r\n                            </tr>\r\n\r\n                            {open && (\r\n                                <tr>\r\n                                    <td className=\"vctr\">Sno</td>\r\n                                    <td className=\"vctr\" colSpan={2}>\r\n                                        Item\r\n                                    </td>\r\n                                    <td className=\"vctr\">Quantity</td>\r\n                                    <td className=\"vctr\">Paid Amount</td>\r\n                                    <td className=\"vctr\" colSpan={2}>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <span>Payment Amount</span>\r\n                                            <span className=\"fa-17 text-primary\">\r\n                                                {numberFormat(toNumber(journal.Debit_Amo))}\r\n                                            </span>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </thead>\r\n                        {open && (\r\n                            <tbody>\r\n                                {paymentCostingInfo\r\n                                    .filter((itemDetails) => isEqualNumber(itemDetails.pay_bill_id, journal.pay_bill_id))\r\n                                    .map((item, itemIndex) => (\r\n                                        <tr key={itemIndex}>\r\n                                            <td>{`${journalIndex + 1}.${itemIndex + 1}`}</td>\r\n                                            <td colSpan={2}>{item.item_name}</td>\r\n                                            <td>{item?.itemQuantity}</td>\r\n                                            <td>{item?.PaidAmount}</td>\r\n                                            <td colSpan={2} className=\"p-0\">\r\n                                                <input\r\n                                                    value={item.expence_value || \"\"}\r\n                                                    className=\"cus-inpt p-2 border-0 text-primary\"\r\n                                                    placeholder=\"Enter Amount\"\r\n                                                    type=\"number\"\r\n                                                    onChange={(e) => onChangeAmount(item, e.target.value)}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        )}\r\n                    </table>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListCostingDetails;\r\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { checkIsNumber, isEqualNumber, ISOString, RoundNumber, stringCompare, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { Close, Search } from \"@mui/icons-material\";\r\nimport { paymentBillInfoInitialValue, paymentCostingInfoInitialValue, stockJournalTypes } from \"./variable\";\r\nimport { useEffect, useState } from \"react\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport DisplayStockJournal from \"./displayStockJournal\";\r\nimport ListCostingDetails from \"./listCostingDetail\";\r\n\r\nconst ExpencePayment = ({\r\n    cellHeadStype = { width: '150px' },\r\n    cellStyle = { minWidth: '130px' },\r\n    initialSelectValue = { value: '', label: '' },\r\n    filters,\r\n    baseData,\r\n    paymentGeneralInfo = {},\r\n    paymentBillInfo = [],\r\n    paymentCostingInfo = [],\r\n    setPaymentGeneralInfo,\r\n    setPaymentBillInfo,\r\n    setPaymentCostingInfo,\r\n    updateFilterData,\r\n    updateBaseData,\r\n    closeDialog,\r\n    loadingOn,\r\n    loadingOff\r\n}) => {\r\n\r\n    const [searchFilter, setSearchFilter] = useState({\r\n        reqDate: ISOString(),\r\n        stockJournalType: stockJournalTypes[0].value,\r\n        itemFilter: [],\r\n        journalVoucher: { label: 'ALL', value: '' }\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/products/dropDown`,\r\n        }).then(data => {\r\n            if (data.success) return updateBaseData('itemDropDownData', toArray(data.data));\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/voucher`,\r\n        }).then(data => {\r\n            if (data.success) return updateBaseData('journalVoucherData', toArray(data.data));\r\n        }).catch(e => console.error(e))\r\n    }, [])\r\n\r\n    const searchStockJournal = (date, journalType, items, voucher) => {\r\n        fetchLink({\r\n            address: `payment/paymentMaster/searchStockJournal`,\r\n            method: 'POST',\r\n            bodyData: { reqDate: date, stockJournalType: journalType, filterItems: items, voucher: voucher },\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.data) {\r\n                updateBaseData('stockJournalSearchResult', toArray(data.data))\r\n            } else {\r\n                updateBaseData('stockJournalSearchResult', [])\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    const onSelectStockJournal = (invoiceDetails, deleteOption) => {\r\n\r\n        setPaymentBillInfo(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !isEqualNumber(o?.pay_bill_id, invoiceDetails.journalId));\r\n\r\n            let updateBillInfo;\r\n            if (deleteOption) {\r\n                updateBillInfo = excludeCurrentValue;\r\n            } else {\r\n                const reStruc = Object.fromEntries(\r\n                    Object.entries(paymentBillInfoInitialValue).map(([key, value]) => {\r\n                        switch (key) {\r\n                            case 'pay_bill_id': return [key, invoiceDetails?.journalId];\r\n                            case 'bill_name': return [key, invoiceDetails?.journalVoucherNo];\r\n                            case 'JournalBillType': return [key, invoiceDetails?.BillType];\r\n                            case 'Debit_Amo': return [key, 0];\r\n\r\n                            case 'StockJournalDate': return [key, invoiceDetails.journalDate];\r\n                            case 'TotalPaidAmount': return [key, invoiceDetails.Paid_Amount];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                )\r\n                updateBillInfo = [...excludeCurrentValue, reStruc];\r\n            }\r\n            return updateBillInfo;\r\n        });\r\n\r\n        setPaymentCostingInfo(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !isEqualNumber(o?.pay_bill_id, invoiceDetails.journalId));\r\n\r\n            let updateCostinInfo;\r\n            if (deleteOption) {\r\n                updateCostinInfo = excludeCurrentValue;\r\n            } else {\r\n                const reStruc = invoiceDetails.Products_List.map(journalProduct => Object.fromEntries(\r\n                    Object.entries(paymentCostingInfoInitialValue).map(([key, value]) => {\r\n                        switch (key) {\r\n                            case 'pay_bill_id': return [key, invoiceDetails?.journalId];\r\n                            case 'pur_date': return [key, invoiceDetails?.journalDate];\r\n                            case 'JournalBillType': return [key, invoiceDetails?.BillType];\r\n\r\n                            case 'item_id': return [key, journalProduct?.productId];\r\n                            case 'item_name': return [key, journalProduct?.productNameGet];\r\n                            case 'itemQuantity': return [key, journalProduct?.quantity];\r\n                            case 'PaidAmount': return [key, journalProduct.Paid_Amount];\r\n                            default: return [key, value];\r\n                        }\r\n                    })\r\n                ))\r\n                updateCostinInfo = [...excludeCurrentValue, ...reStruc];\r\n            }\r\n            return updateCostinInfo;\r\n        })\r\n\r\n    }\r\n\r\n    const onChangeAmount = (invoice, amount) => {\r\n        setPaymentBillInfo(pre => {\r\n            const selectedInvoices = [...pre];\r\n\r\n            const indexOfInvoice = selectedInvoices.findIndex(\r\n                inv => isEqualNumber(invoice.pay_bill_id, inv.pay_bill_id)\r\n            );\r\n\r\n            if (indexOfInvoice !== -1) {\r\n                selectedInvoices[indexOfInvoice].Debit_Amo = toNumber(amount);\r\n            }\r\n            return selectedInvoices;\r\n        })\r\n    }\r\n\r\n    const onInputValidate = (input, max) => {\r\n        const inputValue = checkIsNumber(input) ? RoundNumber(input) : 0;\r\n        return inputValue < max ? inputValue : max;\r\n    };\r\n\r\n    const getJournalType = (typeId) => {\r\n        return [\r\n            {\r\n                label: 'MATERIAL INWARD',\r\n                value: 1\r\n            },\r\n            {\r\n                label: 'OTHER GODOWN',\r\n                value: 2\r\n            },\r\n            {\r\n                label: 'PROCESSING',\r\n                value: 3\r\n            },\r\n        ].find(journal => isEqualNumber(journal.value, typeId)).label\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n\r\n                {/* <table className=\"table table-bordered fa-13\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-primary fa-15 vctr\" style={cellHeadStype}>Against Reference</th>\r\n                            <th colSpan={6} className=\"text-end\">\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"outlined\"\r\n                                    onClick={() => updateFilterData('selectStockJournal', true)}\r\n                                >Add reference</Button>\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            {['Sno', 'Journal-No', 'Date', 'Journal Type', 'Paid Amount', 'Payment Amount', 'Action'].map(\r\n                                (col, colInd) => <th key={colInd} className=\"bg-light text-muted\">{col}</th>\r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {paymentBillInfo.map(\r\n                            (journal, journalIndex) => (\r\n                                <tr key={journalIndex}>\r\n                                    <td>{journalIndex + 1}</td>\r\n                                    <td>{journal.bill_name}</td>\r\n                                    <td>{journal.StockJournalDate ? LocalDate(journal.StockJournalDate) : '-'}</td>\r\n                                    <td>{journal.JournalBillType}</td>\r\n                                    <td>{journal.TotalPaidAmount}</td>\r\n                                    <td className=\"p-0\">\r\n                                        <input\r\n                                            value={journal.Debit_Amo || ''}\r\n                                            className=\"cus-inpt p-2 border-0 text-primary\"\r\n                                            placeholder=\"Enter Amount\"\r\n                                            type=\"number\"\r\n                                            onChange={e => {\r\n                                                const maxAmount = Subraction(journal?.bill_amount, journal?.TotalPaidAmount);\r\n                                                const validated = onInputValidate(e.target.value, maxAmount);\r\n                                                onChangeAmount(journal, validated);\r\n                                            }}\r\n                                        />\r\n                                    </td>\r\n                                    <td className=\"p-0 vctr cntr\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => onSelectStockJournal({\r\n                                                ...journal,\r\n                                                journalId: journal.pay_bill_id\r\n                                            }, true)}\r\n                                        ><Delete className=\"fa-20\" color=\"error\" /></IconButton>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        )}\r\n                    </tbody>\r\n                </table> */}\r\n\r\n                {/* <hr className=\"m-2\" /> */}\r\n\r\n                <div className=\"border d-flex align-items-center fw-bold text-primary justify-content-between p-2\">\r\n                    <span>Against Reference ({paymentBillInfo.length})</span>\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => updateFilterData('selectStockJournal', true)}\r\n                    >Add reference</Button>\r\n                </div>\r\n\r\n                <ListCostingDetails\r\n                    paymentBillInfo={paymentBillInfo}\r\n                    setPaymentBillInfo={setPaymentBillInfo}\r\n                    paymentCostingInfo={paymentCostingInfo}\r\n                    setPaymentCostingInfo={setPaymentCostingInfo}\r\n                    onInputValidate={onInputValidate}\r\n                    onChangeAmount={onChangeAmount}\r\n                    onSelectStockJournal={onSelectStockJournal}\r\n                />\r\n            </div>\r\n\r\n            <Dialog\r\n                open={filters.selectStockJournal}\r\n                onClose={closeDialog} fullScreen\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Add Ref - Stock Journal Expences</span>\r\n                    <IconButton onClick={closeDialog}><Close color=\"error\" /></IconButton>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        searchStockJournal(\r\n                            searchFilter.reqDate,\r\n                            searchFilter.stockJournalType,\r\n                            searchFilter.itemFilter.map((item) => item.value),\r\n                            searchFilter.journalVoucher.value\r\n                        );\r\n                    }}>\r\n                        <div className=\"row\">\r\n                            {/* Date filter */}\r\n                            <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Date<RequiredStar /></label>\r\n                                <input\r\n                                    value={searchFilter.reqDate}\r\n                                    type=\"date\"\r\n                                    className=\"cus-inpt p-2 \"\r\n                                    onChange={e => setSearchFilter(pre => ({ ...pre, reqDate: e.target.value }))}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            {/* stock jounal type filter */}\r\n                            <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Stock Journal Type <RequiredStar /></label>\r\n                                <select\r\n                                    value={searchFilter.stockJournalType}\r\n                                    className=\"cus-inpt p-2 \"\r\n                                    onChange={e => setSearchFilter(pre => ({\r\n                                        ...pre,\r\n                                        stockJournalType: e.target.value,\r\n                                        journalVoucher: { label: 'ALL ', value: '' }\r\n                                    }))}\r\n                                    required\r\n                                >\r\n                                    {stockJournalTypes.map((type, typeIndex) => (\r\n                                        <option value={type.value} key={typeIndex}>{type.label}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            {/* item filter */}\r\n                            <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Item Filter <RequiredStar /></label>\r\n                                <Select\r\n                                    value={searchFilter.itemFilter}\r\n                                    onChange={e => setSearchFilter(pre => ({ ...pre, itemFilter: e }))}\r\n                                    menuPortalTarget={document.body}\r\n                                    options={[\r\n                                        initialSelectValue,\r\n                                        ...toArray(baseData.itemDropDownData).map(\r\n                                            (item) => ({ value: item.Product_Id, label: item.Product_Name })\r\n                                        )\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    isMulti={true}\r\n                                    closeMenuOnSelect={false}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* voucher filter */}\r\n                            <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2\">\r\n                                <label>Journal Voucher <RequiredStar /></label>\r\n                                <Select\r\n                                    value={searchFilter.journalVoucher}\r\n                                    onChange={e => setSearchFilter(pre => ({ ...pre, journalVoucher: e }))}\r\n                                    menuPortalTarget={document.body}\r\n                                    options={[\r\n                                        { value: '', label: 'ALL' },\r\n                                        ...toArray(baseData.journalVoucherData).filter(\r\n                                            fil => stringCompare(\r\n                                                fil.Type,\r\n                                                getJournalType(searchFilter.stockJournalType)\r\n                                            )\r\n                                        ).map(\r\n                                            (voucher) => ({ value: voucher.Vocher_Type_Id, label: voucher.Voucher_Type })\r\n                                        )\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    closeMenuOnSelect={false}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* submit search */}\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12 p-2 d-flex flex-column\">\r\n                            <div className=\"mt-auto\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"outlined\"\r\n                                    startIcon={<Search />}\r\n                                >Search</Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n                    <DisplayStockJournal\r\n                        arrayData={toArray(baseData.stockJournalSearchResult)}\r\n                        paymentBillInfo={paymentBillInfo}\r\n                        onSelect={onSelectStockJournal}\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"button\" onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExpencePayment;","import { Button } from \"@mui/material\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Addition, checkIsNumber, isEqualNumber, ISOString, isValidObject, Subraction, toArray } from \"../../../Components/functions\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { paymentGeneralInfoInitialValue } from \"./variable\";\r\nimport { Save } from \"@mui/icons-material\";\r\nimport PurchaseInvoicePayment from \"./purchasePayment\";\r\nimport ChoosePaymentComponent from \"./choosePayment\";\r\nimport { toast } from \"react-toastify\";\r\nimport ExpencePayment from \"./expencesPayment\";\r\n\r\n\r\nconst initialSelectValue = { value: '', label: '' };\r\nconst filterInitialValue = {\r\n    paymentInvoice: initialSelectValue,\r\n    debitAccount: initialSelectValue,\r\n    creditAccount: initialSelectValue,\r\n    paymentType: initialSelectValue,\r\n    journalType: initialSelectValue,\r\n    itemFilter: initialSelectValue,\r\n    journalDate: '',\r\n    selectPaymentDialog: false,\r\n    selectPurchaseInvoice: false,\r\n    selectStockJournal: false,\r\n}\r\n\r\nconst AddPaymentReference = ({ loadingOn, loadingOff, AddRights, EditRights, DeleteRights }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const editValues = location.state;\r\n    const cellStyle = { minWidth: '130px' };\r\n    const cellHeadStype = { width: '150px' };\r\n\r\n    const [paymentGeneralInfo, setPaymentGeneralInfo] = useState(paymentGeneralInfoInitialValue)\r\n    const [paymentBillInfo, setPaymentBillInfo] = useState([]);\r\n    const [paymentCostingInfo, setPaymentCostingInfo] = useState([]);\r\n\r\n    const [baseData, setBaseData] = useState({\r\n        accountGroup: [],\r\n        accounts: [],\r\n        paymentInvoiceSearchResult: [],\r\n        stockJournalSearchResult: [],\r\n        purchaseInvoiceSearchResult: [],\r\n        itemDropDownData: [],\r\n        journalVoucherData: [],\r\n    });\r\n\r\n    const [filters, setFilters] = useState(filterInitialValue)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    accountGroupResponse,\r\n                    accountResponse,\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `payment/accountGroup` }),\r\n                    fetchLink({ address: `payment/accounts` }),\r\n                ]);\r\n\r\n                const accountGroup = toArray(accountGroupResponse.success ? accountGroupResponse.data : []).sort(\r\n                    (a, b) => String(a?.Group_Name).localeCompare(b?.Group_Name)\r\n                );\r\n                const accounts = toArray(accountResponse.success ? accountResponse.data : []).sort(\r\n                    (a, b) => String(a?.Account_name).localeCompare(b?.Account_name)\r\n                );\r\n\r\n                updateBaseData('accountGroup', accountGroup);\r\n                updateBaseData('accounts', accounts);\r\n\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!isEqualNumber(paymentGeneralInfo.pay_bill_type, 1) || !paymentGeneralInfo.debit_ledger || !checkIsNumber(paymentGeneralInfo.debit_ledger)) {\r\n            updateBaseData('purchaseInvoiceSearchResult', []);\r\n            return;\r\n        }\r\n\r\n        fetchLink({\r\n            address: `purchase/paymentPendingInvoices?Acc_Id=${paymentGeneralInfo.debit_ledger}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                updateBaseData('purchaseInvoiceSearchResult', toArray(data.data));\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [paymentGeneralInfo.debit_ledger, paymentGeneralInfo.pay_bill_type]);\r\n\r\n    useEffect(() => {\r\n        if (\r\n            !checkIsNumber(paymentGeneralInfo.pay_id) \r\n            || !checkIsNumber(paymentGeneralInfo.pay_bill_type)\r\n            || (\r\n                !isEqualNumber(paymentGeneralInfo.pay_bill_type, 1)\r\n                && !isEqualNumber(paymentGeneralInfo.pay_bill_type, 3)\r\n            )\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        fetchLink({\r\n            address: `payment/paymentMaster/againstRef?payment_id=${paymentGeneralInfo.pay_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const reSturc = toArray(data.data).map(bill => ({\r\n                    ...bill,\r\n                    PurchaseInvoiceDate: bill.referenceBillDate,\r\n                    StockJournalDate: bill.referenceBillDate,\r\n                    TotalPaidAmount: bill.totalPaidAmount,\r\n                    PendingAmount: Subraction(bill?.Total_Invoice_value, bill.totalPaidAmount),\r\n                }));\r\n                setPaymentBillInfo(reSturc);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `payment/paymentMaster/againstRef/costingDetails?payment_id=${paymentGeneralInfo.pay_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setPaymentCostingInfo(toArray(data.data));\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [paymentGeneralInfo.pay_id, paymentGeneralInfo.pay_bill_type])\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(editValues)) {\r\n            setPaymentGeneralInfo(\r\n                Object.fromEntries(\r\n                    Object.entries(paymentGeneralInfoInitialValue).map(([key, value]) => {\r\n                        if (key === 'payment_date') return [key, editValues[key] ? ISOString(editValues[key]) : value];\r\n                        return [key, editValues[key] ?? value]\r\n                    })\r\n                )\r\n            );\r\n        }\r\n    }, [editValues])\r\n\r\n    const updateBaseData = (key = '', value = []) => {\r\n        setBaseData(pre => ({ ...pre, [key]: value }));\r\n    }\r\n\r\n    const updateFilterData = (key = '', value = []) => {\r\n        setFilters(pre => ({ ...pre, [key]: value }));\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        updateFilterData('selectPaymentDialog', false);\r\n        updateFilterData('selectPurchaseInvoice', false);\r\n        updateFilterData('selectStockJournal', false);\r\n    }\r\n\r\n    const resetAll = () => {\r\n        setPaymentGeneralInfo(paymentGeneralInfoInitialValue);\r\n        setPaymentBillInfo([]);\r\n        setPaymentCostingInfo([]);\r\n        setFilters(filterInitialValue);\r\n        updateBaseData('paymentInvoiceSearchResult', []);\r\n        updateBaseData('stockJournalSearchResult', []);\r\n        updateBaseData('purchaseInvoiceSearchResult', []);\r\n    }\r\n\r\n    const TotalAgainstRef = useMemo(() => {\r\n        return paymentBillInfo.reduce(\r\n            (acc, invoice) => Addition(acc, invoice.Debit_Amo), 0\r\n        )\r\n    }, [paymentBillInfo]);\r\n\r\n    const SavePayment = () => {\r\n        if (TotalAgainstRef > paymentGeneralInfo.debit_amount) return toast.warn('Payment amount is invalid');\r\n\r\n        fetchLink({\r\n            address: `payment/paymentMaster/againstRef`,\r\n            method: 'POST',\r\n            bodyData: {\r\n                payment_id: paymentGeneralInfo.pay_id,\r\n                payment_no: paymentGeneralInfo.payment_invoice_no,\r\n                payment_date: paymentGeneralInfo.payment_date,\r\n                bill_type: paymentGeneralInfo.pay_bill_type,\r\n                BillsDetails: toArray(paymentBillInfo),\r\n                CostingDetails: toArray(paymentCostingInfo),\r\n                DR_CR_Acc_Id: paymentGeneralInfo.debit_ledger\r\n            },\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                resetAll();\r\n                navigate('/erp/payments/paymentList');\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-white p-2 rounded-2\">\r\n\r\n                <div className=\"table-responsive\">\r\n\r\n                    {/* payment invoices */}\r\n                    <div className=\"p-2 d-flex align-items-center mb-3\">\r\n                        <h5 className=\"m-0 flex-grow-1\">Payment Reference Creation</h5>\r\n\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant='contained'\r\n                            className=\"mx-1\"\r\n                            onClick={() => navigate('/erp/payments/paymentList')}\r\n                        >back</Button>\r\n                    </div>\r\n\r\n                    {/* choose Payment */}\r\n                    <ChoosePaymentComponent\r\n                        cellHeadStype={cellHeadStype}\r\n                        cellStyle={cellStyle}\r\n                        paymentGeneralInfo={paymentGeneralInfo}\r\n                        paymentBillInfo={paymentBillInfo}\r\n                        filters={filters}\r\n                        baseData={baseData}\r\n                        setPaymentGeneralInfo={setPaymentGeneralInfo}\r\n                        updateFilterData={updateFilterData}\r\n                        updateBaseData={updateBaseData}\r\n                        closeDialog={closeDialog}\r\n                        loadingOn={loadingOn}\r\n                        loadingOff={loadingOff}\r\n                    />\r\n\r\n                    {/* choose Purchase invoice */}\r\n                    {isEqualNumber(paymentGeneralInfo.pay_bill_type, 1) && (\r\n                        <PurchaseInvoicePayment\r\n                            cellHeadStype={cellHeadStype}\r\n                            cellStyle={cellStyle}\r\n                            paymentGeneralInfo={paymentGeneralInfo}\r\n                            filters={filters}\r\n                            baseData={baseData}\r\n                            setPaymentGeneralInfo={setPaymentGeneralInfo}\r\n                            updateFilterData={updateFilterData}\r\n                            updateBaseData={updateBaseData}\r\n                            closeDialog={closeDialog}\r\n                            paymentBillInfo={paymentBillInfo}\r\n                            setPaymentBillInfo={setPaymentBillInfo}\r\n                        />\r\n                    )}\r\n\r\n                    {/* choose Stock journal */}\r\n                    {isEqualNumber(paymentGeneralInfo.pay_bill_type, 3) && (\r\n                        <ExpencePayment\r\n                            cellHeadStype={cellHeadStype}\r\n                            cellStyle={cellStyle}\r\n                            filters={filters}\r\n                            baseData={baseData}\r\n                            paymentGeneralInfo={paymentGeneralInfo}\r\n                            paymentBillInfo={paymentBillInfo}\r\n                            paymentCostingInfo={paymentCostingInfo}\r\n                            setPaymentGeneralInfo={setPaymentGeneralInfo}\r\n                            setPaymentBillInfo={setPaymentBillInfo}\r\n                            setPaymentCostingInfo={setPaymentCostingInfo}\r\n                            updateFilterData={updateFilterData}\r\n                            updateBaseData={updateBaseData}\r\n                            closeDialog={closeDialog}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                        />\r\n                    )}\r\n\r\n                </div>\r\n\r\n                <hr className=\"my-2\" />\r\n\r\n                <div className=\"p-2 d-flex justify-content-end\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<Save />}\r\n                        disabled={\r\n                            !checkIsNumber(paymentGeneralInfo.pay_id)\r\n                            || paymentBillInfo.length === 0\r\n                        }\r\n                        onClick={SavePayment}\r\n                    >Save</Button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPaymentReference;","import { checkIsNumber, ISOString, storageValue } from \"../../../Components/functions\";\r\n\r\nexport const paymentGeneralInfoInitialValue = {\r\n    pay_id: '',\r\n    year_id: '',\r\n    payment_voucher_type_id: '',\r\n    payment_sno: '',\r\n    payment_invoice_no: '',\r\n\r\n    payment_date: ISOString(),\r\n    pay_bill_type: 1,\r\n    credit_ledger: '',\r\n    credit_ledger_name: 'Select',\r\n    credit_amount: 0,\r\n    debit_ledger: '',\r\n    debit_ledger_name: 'Select',\r\n    debit_amount: 0,\r\n    remarks: '',\r\n    status: 1,\r\n    \r\n    check_no: '',\r\n    check_date: '',\r\n    bank_name: '',\r\n    bank_date: '',\r\n    \r\n    created_by: checkIsNumber(storageValue?.UserId) ? storageValue?.UserId : '',\r\n    altered_by: checkIsNumber(storageValue?.UserId) ? storageValue?.UserId : '',\r\n    created_on: '',\r\n    alterd_on: '',\r\n}\r\n\r\nexport const paymentBillInfoInitialValue = {\r\n    auto_id: '',\r\n    // general info\r\n    created_on: '',\r\n    payment_id: '',\r\n    payment_no: '',\r\n    payment_date: '',\r\n    bill_type: '',\r\n    DR_CR_Acc_Id: '',\r\n    \r\n    // form values\r\n    pay_bill_id: '',\r\n    JournalBillType: '',\r\n    bill_name: '',\r\n    bill_amount: 0,\r\n    Debit_Amo: 0,\r\n    Credit_Amo: 0,\r\n\r\n    // frontEndColumns\r\n    PurchaseInvoiceDate: '',\r\n    StockJournalDate: '',\r\n    TotalPaidAmount: 0,\r\n    PendingAmount: 0,\r\n}\r\n\r\nexport const paymentCostingInfoInitialValue = {\r\n    // backend\r\n    auto_id: '',\r\n    payment_id: '',\r\n    payment_no: '',\r\n    payment_date: '',\r\n    bill_type : '',\r\n    Debit_Ledger_Id: '',\r\n    created_on: '',\r\n\r\n    // frontend \r\n    pay_bill_id: '',\r\n    JournalBillType: '',\r\n    item_id: '',\r\n    item_name: '',\r\n    expence_value: 0,\r\n\r\n    // to show previous payment (frontend only).\r\n    itemQuantity: 0,\r\n    PaidAmount: 0,\r\n}\r\n\r\nexport const paymentTypes = [\r\n    {\r\n        value: 1,\r\n        label: 'VENDOR - PURCHASE INVOICE'\r\n    },\r\n    {\r\n        value: 2,\r\n        label: 'EXPENCES / OTHERS (IN-DIRECT)'\r\n    },\r\n    {\r\n        value: 3,\r\n        label: 'EXPENCES - STOCK JOURNAL (DIRECT)'\r\n    },\r\n    {\r\n        value: 4,\r\n        label: 'ON ACCOUNT'\r\n    },\r\n];\r\n\r\nexport const stockJournalTypes = [\r\n    {\r\n        label: 'MATERIAL INWARD',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'GODOWN TRANSFER',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'PROCESSING',\r\n        value: 3\r\n    },\r\n]\r\n\r\nexport const paymentStatus = [\r\n    {\r\n        label: 'New',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'Process',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'Completed',\r\n        value: 3\r\n    },\r\n    {\r\n        label: 'Canceled',\r\n        value: 0\r\n    },\r\n]","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4z\"\n}), 'Done');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","customTableStyles","table","width","backgroundColor","rows","headCells","customSelectStyles","menu","provided","state","_objectSpread","zIndex","menuPortal","base","groupHeading","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","_ref","cellHeadStype","cellStyle","minWidth","initialSelectValue","value","label","paymentGeneralInfo","paymentBillInfo","setPaymentBillInfo","filters","baseData","setPaymentGeneralInfo","updateFilterData","updateBaseData","closeDialog","onClickPurchaseInvoice","invoiceDetails","deleteOption","pre","excludeCurrentValue","toArray","filter","o","isEqualNumber","pay_bill_id","PIN_Id","updateBillInfo","reStruc","Object","fromEntries","entries","paymentBillInfoInitialValue","map","_ref2","key","Po_Inv_No","toNumber","Total_Invoice_value","Po_Inv_Date","Paid_Amount","Subraction","_jsxs","_Fragment","className","colSpan","Button","type","disabled","purchaseInvoiceSearchResult","length","onClick","col","colInd","invoice","invoiceInd","bill_name","LocalDate","PurchaseInvoiceDate","NumberFormat","bill_amount","TotalPaidAmount","Debit_Amo","placeholder","onChange","e","maxAmount","validated","onInputValidate","input","max","inputValue","checkIsNumber","RoundNumber","target","onChangeAmount","amount","selectedInvoices","indexOfInvoice","findIndex","inv","IconButton","size","Delete","reduce","acc","Addition","Dialog","open","selectPurchaseInvoice","onClose","fullScreen","DialogTitle","Close","DialogContent","isChecked","checked","rowSpan","DialogActions","loadingOn","loadingOff","TotalAgainstRef","useMemo","PendingAgainstRef","debit_amount","paymentTypes","find","pay_bill_type","debit_ledger_name","payment_invoice_no","credit_ledger_name","selectPaymentDialog","Select","paymentType","menuPortalTarget","document","body","options","isDisabled","styles","isSearchable","required","debitAccount","accounts","Acc_Id","Account_name","creditAccount","startIcon","Search","searchPayments","toast","warn","fetchLink","concat","then","data","success","FilterableTable","title","EnableSerialNumber","headerFontSizePx","bodyFontSizePx","tableMaxHeight","dataArray","paymentInvoiceSearchResult","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref3","row","_ref4","TotalReferenceAdded","_ref5","Done","arrayData","onSelect","TableRows","sno","setOpen","useState","isProcessing","BillType","journalVoucherNo","journalDate","voucherTypeGet","narration","paidAmount","journalId","KeyboardArrowUp","KeyboardArrowDown","SourceDetails","disablePagination","Products_List","journal","jouInd","val","Number","add","a","b","subtract","roundNumber","num","precision","arguments","undefined","toFixed","paymentCostingInfo","setPaymentCostingInfo","onSelectStockJournal","journalAmountOnChange","onChangeJournalAmount","totalAmount","updated","index","prev","items","item","totalQty","sum","itemQuantity","unitCost","divide","distributed","updatedItems","weighted","multiply","expence_value","i","item_id","journalIndex","StockJournalDate","dateStr","Date","toLocaleDateString","JournalBillType","Intl","format","itemDetails","itemIndex","item_name","PaidAmount","selectedItem","searchFilter","setSearchFilter","reqDate","ISOString","stockJournalType","stockJournalTypes","itemFilter","journalVoucher","useEffect","catch","console","error","updateCostinInfo","journalProduct","paymentCostingInfoInitialValue","productId","productNameGet","quantity","ListCostingDetails","selectStockJournal","onSubmit","searchStockJournal","date","journalType","voucher","preventDefault","method","bodyData","filterItems","typeIndex","itemDropDownData","Product_Id","Product_Name","isMulti","closeMenuOnSelect","journalVoucherData","fil","stringCompare","Type","typeId","Vocher_Type_Id","Voucher_Type","DisplayStockJournal","stockJournalSearchResult","filterInitialValue","paymentInvoice","AddRights","EditRights","DeleteRights","navigate","useNavigate","editValues","useLocation","paymentGeneralInfoInitialValue","setBaseData","accountGroup","setFilters","async","accountGroupResponse","accountResponse","Promise","all","sort","String","Group_Name","localeCompare","fetchData","debit_ledger","pay_id","reSturc","bill","referenceBillDate","totalPaidAmount","PendingAmount","isValidObject","_editValues$key","ChoosePaymentComponent","PurchaseInvoicePayment","ExpencePayment","Save","SavePayment","payment_id","payment_no","payment_date","bill_type","BillsDetails","CostingDetails","DR_CR_Acc_Id","message","year_id","payment_voucher_type_id","payment_sno","credit_ledger","credit_amount","remarks","status","check_no","check_date","bank_name","bank_date","created_by","storageValue","UserId","altered_by","created_on","alterd_on","auto_id","Credit_Amo","Debit_Ledger_Id","paymentStatus","createSvgIcon","d"],"sourceRoot":""}
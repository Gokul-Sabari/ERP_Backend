{"version":3,"file":"static/js/3068.037f96d8.chunk.js","mappings":"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","sources":["Pages/Inventry/stockReport.jsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import { useEffect, useState, useMemo } from \"react\";\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@mui/icons-material';\r\nimport { Card, CardContent } from \"@mui/material\";\r\nimport { Addition, ISOString, NumberFormat, toArray } from \"../../Components/functions\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\n\r\n\r\nconst StockReport = () => {\r\n    const [StockData, setStockData] = useState([]);\r\n    const [laks, setLaks] = useState(true);\r\n\r\n    const [search, setSearch] = useState({\r\n        zero: false,\r\n        inm: '',\r\n        date: ISOString(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        setStockData([]);\r\n        fetchLink({\r\n            address: `reports/itemGroup/stockInfo/grouped?reqDate=${search.date}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setStockData(data.data);\r\n            } else {\r\n                setStockData([])\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n    }, [search.date])\r\n\r\n    const filteredStockData = useMemo(() => {\r\n        if (StockData !== null) {\r\n            return StockData.map((o) => {\r\n\r\n                const filteredProductDetails = o.product_details.filter(\r\n                    (obj) => String(obj.Group_Name)\r\n                        .toLowerCase()\r\n                        .includes((search.inm)\r\n                            .toLowerCase()\r\n                        )\r\n                );\r\n\r\n                return { ...o, product_details: filteredProductDetails };\r\n            });\r\n\r\n        } else {\r\n            return [];\r\n        }\r\n    }, [StockData, search.inm]);\r\n\r\n    const TableRows = ({ rows }) => {\r\n        const [open, setOpen] = useState(false);\r\n        const [laks, setLaks] = useState(true);\r\n\r\n        const childArray = toArray(rows?.product_details)\r\n\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td className=\"border fa-13 text-center\">\r\n                        <button onClick={() => setOpen(!open)} className=\"icon-btn\">\r\n                            {open ? <KeyboardArrowUp sx={{ fontSize: 'inherit' }} /> : <KeyboardArrowDown sx={{ fontSize: 'inherit' }} />}\r\n                        </button>\r\n                    </td>\r\n                    <td className=\"fa-13 text-center bg-light\">\r\n                        {rows.Stock_Group}\r\n                        <span className=\"text-danger\"> ({rows.product_details.length})</span>\r\n                    </td>\r\n                    <td className=\"fa-13 text-end text-primary\">\r\n                        {NumberFormat(rows.Bal_Qty / 1000)}\r\n                    </td>\r\n                    <td className=\"fa-13 text-end text-primary bg-light\">\r\n                        {NumberFormat(rows.CL_Rate)}\r\n                    </td>\r\n                    <td className=\"fa-13 text-end text-primary\" onClick={() => setLaks(!laks)}>\r\n                        {laks\r\n                            ? NumberFormat(rows.Stock_Value / 100000)\r\n                            : NumberFormat(rows.Stock_Value)\r\n                        }\r\n                    </td>\r\n                    <td className=\"fa-13 text-end text-primary bg-light\">\r\n                        {NumberFormat(rows.Bal_Qty)}\r\n                    </td>\r\n                </tr>\r\n\r\n                {open && (\r\n                    <tr>\r\n                        <td colSpan={6} className=\"px-0 py-2\">\r\n                            <table className=\"table mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        {['SNo', 'INM', 'Quantity', 'Rate', 'Value (₹)'].map((o, i) => (\r\n                                            <th className=\"fa-13 border text-center\" key={i}>{o}</th>\r\n                                        ))}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {childArray?.map((obj, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className=\"fa-13 bg-light\">{i + 1}</td>\r\n                                            <td className=\"fa-13\">{obj.Group_Name}</td>\r\n                                            <td className=\"fa-13 text-end bg-light\">{NumberFormat(obj.Bal_Qty)}</td>\r\n                                            <td className=\"fa-13 text-end\">{NumberFormat(obj.CL_Rate)}</td>\r\n                                            <td className=\"fa-13 text-end fw-bold bg-light\">{NumberFormat(obj.Stock_Value)}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n    \r\n    const memoComp = useMemo(() => {\r\n        return filteredStockData.map((o, i) => {\r\n            return <TableRows key={i} rows={o} />;\r\n        });\r\n    }, [filteredStockData, search.zero]);\r\n\r\n    const overAllTotal = filteredStockData.reduce(\r\n        (acc, group) => Addition(acc, group?.Stock_Value), 0\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n\r\n                <div className=\"px-3 py-2 d-flex justify-content-between align-items-center fw-bold text-dark\" style={{ backgroundColor: '#eae0cc' }}>\r\n                    <span></span>\r\n                    <span>\r\n                        <input\r\n                            type={'search'}\r\n                            className='cus-inpt ps-3 w-100 rounded-5 border-0'\r\n                            value={search.inm}\r\n                            placeholder=\"Search\"\r\n                            onChange={(e) => {\r\n                                setSearch({ ...search, inm: e.target.value });\r\n                            }}\r\n                        />\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-between align-items-center px-3 py-2\" style={{ boxShadow: 'none' }}>\r\n                    <input\r\n                        type={'date'}\r\n                        className='cus-inpt w-auto ps-3 border rounded-5'\r\n                        value={search.date}\r\n                        onChange={(e) => {\r\n                            setSearch({ ...search, date: e.target.value });\r\n                        }}\r\n                    />\r\n                    <h6>\r\n                        {/* Value : */}\r\n                        <span className=\"text-primary fw-bold\" onClick={() => setLaks(!laks)}>\r\n                            ₹{laks\r\n                                ? NumberFormat((overAllTotal / 100000)) + ' (L)'\r\n                                : NumberFormat(overAllTotal)\r\n                            }\r\n                        </span>\r\n                    </h6>\r\n                </div>\r\n\r\n                <CardContent className=\"overflow-scroll pt-0\" style={{ maxHeight: '75vh' }}>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {['-', 'Group Name', 'Tonnage', 'Rate', 'Value (L)', 'Quantity'].map((o, i) => (\r\n                                    <th className=\"tble-hed-stick text-center fa-14 border\" key={i}>{o}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {memoComp}\r\n                        </tbody>\r\n                    </table>\r\n                </CardContent>\r\n            </Card>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default StockReport;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["StockReport","StockData","setStockData","useState","laks","setLaks","search","setSearch","zero","inm","date","ISOString","useEffect","fetchLink","address","then","data","success","catch","e","console","error","filteredStockData","useMemo","map","o","filteredProductDetails","product_details","filter","obj","String","Group_Name","toLowerCase","includes","TableRows","_ref","rows","open","setOpen","childArray","toArray","_jsxs","_Fragment","children","_jsx","className","onClick","KeyboardArrowUp","sx","fontSize","KeyboardArrowDown","Stock_Group","length","NumberFormat","Bal_Qty","CL_Rate","Stock_Value","colSpan","i","memoComp","overAllTotal","reduce","acc","group","Addition","Card","style","backgroundColor","type","value","placeholder","onChange","target","boxShadow","CardContent","maxHeight","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined"],"sourceRoot":""}
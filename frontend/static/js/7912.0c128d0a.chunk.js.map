{"version":3,"file":"static/js/7912.0c128d0a.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/taxCalculator.js","Pages/Sales/convertedStatus.js","Pages/Sales/SalesReportComponent/newSaleOrderCreation.jsx","Pages/Sales/saleOrder.jsx","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/Clear.js","../node_modules/@mui/icons-material/esm/ClearAll.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","/**\r\n * @param {number} amount \r\n * @param {number} gstRate \r\n * @param {string} type 3 Types add, remove, zerotax\r\n * @returns {object} \r\n */\r\n\r\nimport { toNumber } from \"./functions\";\r\n\r\nexport const calculateGSTDetails = (amount, gstRate, type = 'add') => {\r\n\r\n    const validatedAmount = toNumber(amount);\r\n    const validatedGstRate = toNumber(gstRate);\r\n\r\n    const halfGstRate = validatedGstRate / 2;\r\n    let baseAmount, taxAmount, withTax, withoutTax;\r\n\r\n    if (type === 'zerotax') {\r\n        baseAmount = validatedAmount; // No tax applied\r\n        taxAmount = 0;\r\n        withTax = validatedAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'add') {\r\n        taxAmount = (validatedAmount * validatedGstRate) / 100;\r\n        baseAmount = validatedAmount;\r\n        withTax = validatedAmount + taxAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'remove') {\r\n        baseAmount = validatedAmount / (1 + validatedGstRate / 100);\r\n        taxAmount = validatedAmount - baseAmount;\r\n        withTax = validatedAmount;\r\n        withoutTax = baseAmount;\r\n    } else {\r\n        throw new Error(\"Invalid type. Use 'add', 'remove', or 'zerotax'.\");\r\n    }\r\n\r\n    const sgstAmount = (taxAmount / 2).toFixed(2);\r\n    const cgstAmount = (taxAmount / 2).toFixed(2);\r\n    const igstAmount = taxAmount.toFixed(2);\r\n\r\n    return {\r\n        base_amount: Number(baseAmount).toFixed(2),\r\n        with_tax: Number(withTax).toFixed(2),\r\n        without_tax: Number(withoutTax).toFixed(2),\r\n        tax_per: Number(validatedGstRate),\r\n        tax_amount: Number(taxAmount).toFixed(2),\r\n        sgst_per: Number(halfGstRate),\r\n        sgst_amount: Number(sgstAmount),\r\n        cgst_per: Number(halfGstRate),\r\n        cgst_amount: Number(cgstAmount),\r\n        igst_per: Number(validatedGstRate),\r\n        igst_amount: Number(igstAmount),\r\n        type,\r\n    };\r\n};","export const convertedStatus = [\r\n    {\r\n        id: 0,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 1,\r\n        label: 'Verified',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Converted',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, IconButton } from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    isEqualNumber, isGraterNumber, isValidObject, ISOString, getUniqueData,\r\n    Multiplication, Division, NumberFormat, Subraction, numberToWords,\r\n    RoundNumber, Addition,\r\n    onlynum\r\n} from \"../../../Components/functions\";\r\nimport { Add, Clear, ClearAll, Delete, Edit, Save } from \"@mui/icons-material\";\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport { calculateGSTDetails } from '../../../Components/taxCalculator';\r\n\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst NewSaleOrderCreation = ({ editValues, loadingOn, loadingOff, reload, switchScreen }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    // const [productGroup, setProductGroup] = useState([]);\r\n    const [voucherType, setVoucherType] = useState([]);\r\n    const [productBrand, setProductBrand] = useState([]);\r\n    const [productUOM, setProductUOM] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [branch, setBranch] = useState([]);\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n\r\n    const initialValue = {\r\n        Company_Id: storage?.Company_id,\r\n        So_Date: ISOString(),\r\n        VoucherType: '',\r\n        Retailer_Id: '',\r\n        Retailer_Name: 'Select',\r\n        Sales_Person_Id: storage?.UserId,\r\n        Sales_Person_Name: storage?.Name,\r\n        Branch_Id: storage?.BranchId,\r\n        Narration: '',\r\n        Created_by: storage?.UserId,\r\n        Product_Array: [],\r\n        So_Id: '',\r\n        GST_Inclusive: 1,\r\n        IS_IGST: 0,\r\n    }\r\n\r\n    const productInitialDetails = {\r\n        Item_Id: '',\r\n        ItemName: 'Search Item',\r\n        Bill_Qty: 0,\r\n        Item_Rate: 0,\r\n        UOM: '',\r\n        Units: '',\r\n        Product: {},\r\n        Group: 'Search Group',\r\n        GroupID: '',\r\n        Brand: 'Search Brand',\r\n        BrandID: '',\r\n        Amount: 0\r\n    }\r\n\r\n    const [orderDetails, setOrderDetails] = useState(initialValue)\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n    const [productDetails, setProductDetails] = useState(productInitialDetails);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [addProductDialog, setAddProductDialog] = useState(false);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n    const taxType = isNotTaxableBill ? 'zerotax' : isInclusive ? 'remove' : 'add';\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(editValues)) {\r\n            setOrderDetails(pre => ({\r\n                ...pre,\r\n                So_Date: editValues?.So_Date,\r\n                Retailer_Id: editValues?.Retailer_Id,\r\n                Retailer_Name: editValues?.Retailer_Name,\r\n                Sales_Person_Id: editValues?.Sales_Person_Id,\r\n                Sales_Person_Name: editValues?.Sales_Person_Name,\r\n                Branch_Id: editValues?.Branch_Id,\r\n                VoucherType: editValues?.VoucherType,\r\n                Narration: editValues?.Narration,\r\n                Created_by: editValues?.Created_by,\r\n                So_Id: editValues?.So_Id,\r\n                GST_Inclusive: editValues?.GST_Inclusive,\r\n                IS_IGST: editValues?.IS_IGST,\r\n            }));\r\n            setOrderProducts(editValues?.Products_List?.map(pro => ({\r\n                ...pro,\r\n                Item_Id: pro.Item_Id ?? '',\r\n                ItemName: pro?.Product_Name ?? \"\",\r\n                Bill_Qty: pro?.Bill_Qty ?? 0,\r\n                Item_Rate: pro?.Item_Rate ?? 0,\r\n                UOM: pro?.Unit_Id ?? '',\r\n                Units: pro?.Units ?? '',\r\n                Product: {\r\n                    ...pro,\r\n                    Cgst_P: Number(findProductDetails(products, pro.Item_Id)?.Cgst_P) ?? 0,\r\n                    Sgst_P: Number(findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0,\r\n                    Igst_P: Number(findProductDetails(products, pro.Item_Id)?.Igst_P) ?? 0,\r\n                    Gst_P: Addition(findProductDetails(products, pro.Item_Id)?.Cgst_P, findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0\r\n                } ?? {},\r\n                Group: 'Search Group',\r\n                GroupID: '',\r\n                Brand: 'Search Brand',\r\n                BrandID: '',\r\n                Amount: pro?.Amount ?? 0\r\n            })));\r\n            setIsEdit(true)\r\n        } else {\r\n            setOrderDetails(initialValue);\r\n            setOrderProducts([])\r\n            setIsEdit(false)\r\n        }\r\n    }, [editValues, products])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/uom`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProductUOM(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/products?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProducts(data.data);\r\n                // const uniqueGroup = getUniqueData(data.data, 'Product_Group', ['Pro_Group']);\r\n                // setProductGroup(uniqueGroup);\r\n                const uniqueBrand = getUniqueData(data.data, 'Brand', ['Brand_Name']);\r\n                setProductBrand(uniqueBrand);\r\n                // const uniqueUOM = getUniqueData(data.data, 'UOM_Id', ['Units']);\r\n                // setProductUOM(uniqueUOM)\r\n            } else {\r\n                setProducts([]);\r\n                // setProductGroup([])\r\n                setProductBrand([]);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSalePerson(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `purchase/voucherType`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setVoucherType(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/branch/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setBranch(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    const handleProductInputChange = (productId, value, rate, obj, UOM_Id, Units) => {\r\n        const productIndex = orderProducts.findIndex(item => isEqualNumber(item.Item_Id, productId));\r\n\r\n        if (productIndex !== -1) {\r\n            const updatedValues = [...orderProducts];\r\n            updatedValues[productIndex].Bill_Qty = Number(value);\r\n            updatedValues[productIndex].Item_Rate = Number(rate);\r\n            updatedValues[productIndex].UOM = UOM_Id;\r\n            updatedValues[productIndex].Units = Units;\r\n            updatedValues[productIndex].Amount = Multiplication(value, rate);\r\n            updatedValues[productIndex] = { ...updatedValues[productIndex], Product: obj }\r\n\r\n            setOrderProducts(updatedValues);\r\n        } else {\r\n            setOrderProducts(prevValues => [...prevValues, {\r\n                Item_Id: productId,\r\n                Bill_Qty: Number(value),\r\n                Item_Rate: Number(rate),\r\n                UOM: UOM_Id,\r\n                Units: Units,\r\n                Amount: Multiplication(value, rate),\r\n                Product: obj\r\n            }]);\r\n        }\r\n    };\r\n\r\n    const postSaleOrder = () => {\r\n        if (orderProducts?.length > 0 && orderDetails?.Retailer_Id) {\r\n            loadingOn();\r\n            fetchLink({\r\n                address: `sales/saleOrder`,\r\n                method: isEdit ? 'PUT' : 'POST',\r\n                bodyData: {\r\n                    ...orderDetails,\r\n                    Product_Array: orderProducts.filter(o => isGraterNumber(o?.Bill_Qty, 0))\r\n                }\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    toast.success(data?.message);\r\n                    reload()\r\n                    setOrderDetails(initialValue);\r\n                    setOrderProducts([])\r\n                } else {\r\n                    toast.error(data?.message)\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => loadingOff())\r\n\r\n        } else {\r\n            if (orderProducts.length <= 0) {\r\n                return toast.error('Enter any one product quantity')\r\n            }\r\n            if (!orderDetails?.Retailer_Id) {\r\n                return toast.error('Select Retailer')\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeAddProduct = () => {\r\n        setAddProductDialog(false);\r\n        setProductDetails(productInitialDetails);\r\n    }\r\n\r\n    const Total_Invoice_value = orderProducts.reduce((acc, item) => {\r\n        const Amount = RoundNumber(item?.Amount);\r\n\r\n        if (isNotTaxableBill) return Addition(acc, Amount);\r\n\r\n        const product = findProductDetails(products, item.Item_Id);\r\n        const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n\r\n        if (isInclusive) {\r\n            return Addition(acc, calculateGSTDetails(Amount, gstPercentage, 'remove').with_tax);\r\n        } else {\r\n            return Addition(acc, calculateGSTDetails(Amount, gstPercentage, 'add').with_tax);\r\n        }\r\n    }, 0)\r\n\r\n    const totalValueBeforeTax = orderProducts.reduce((acc, item) => {\r\n        const Amount = RoundNumber(item?.Amount);\r\n\r\n        if (isNotTaxableBill) return {\r\n            TotalValue: Addition(acc.TotalValue, Amount),\r\n            TotalTax: 0\r\n        }\r\n\r\n        const product = findProductDetails(products, item.Item_Id);\r\n        const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n\r\n        const taxInfo = calculateGSTDetails(Amount, gstPercentage, isInclusive ? 'remove' : 'add');\r\n        const TotalValue = Addition(acc.TotalValue, taxInfo.without_tax);\r\n        const TotalTax = Addition(acc.TotalTax, taxInfo.tax_amount);\r\n\r\n        return {\r\n            TotalValue, TotalTax\r\n        };\r\n    }, {\r\n        TotalValue: 0,\r\n        TotalTax: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n        setOrderProducts(pre => pre?.map(pro => ({\r\n            ...pro,\r\n            Amount: Multiplication(pro?.Item_Rate, pro?.Bill_Qty)\r\n        })));\r\n    }, [orderDetails.GST_Inclusive])\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"p-3 pt-0\">\r\n                {/* CompnayInfo  */}\r\n                <div className=\"p-3 rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">From:</h5>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4 col-md-6\">\r\n                            <table className=\"table table-borderless m-0 fa-13\">\r\n                                <tbody>\r\n                                    <tr><td>\r\n                                        <span className=\"me-2\">Company: </span>\r\n                                        <span>{companyInfo?.Company_Name}</span>\r\n                                    </td></tr>\r\n                                    <tr><td>\r\n                                        <span className=\"me-2\">Address: </span>\r\n                                        <span>{companyInfo?.Company_Address}</span>\r\n                                    </td></tr>\r\n                                    <tr><td>\r\n                                        <span className=\"me-2\">Phone: </span>\r\n                                        <span>{companyInfo?.Telephone_Number}</span>\r\n                                    </td></tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6\">\r\n                            <table className=\"table table-borderless fa-13 m-0\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Date:</td>\r\n                                        <td>\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={orderDetails?.So_Date ? ISOString(orderDetails?.So_Date) : ''}\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, So_Date: e.target.value })}\r\n                                                className=\"cus-inpt p-1\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Invoice Type:</td>\r\n                                        <td>\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, GST_Inclusive: Number(e.target.value) })}\r\n                                                value={orderDetails.GST_Inclusive}\r\n                                            >\r\n                                                <option value={1}>Inclusive Tax</option>\r\n                                                <option value={0}>Exclusive Tax</option>\r\n                                                <option value={2}>Not Taxable</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Tax Type:</td>\r\n                                        <td>\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, IS_IGST: Number(e.target.value) })}\r\n                                                value={orderDetails.IS_IGST}\r\n                                            >\r\n                                                <option value='0'>GST</option>\r\n                                                <option value='1'>IGST</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-6\">\r\n                            <table className=\"table table-borderless fa-13 m-0\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Sales Person:</td>\r\n                                        <td>\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Sales_Person_Id: Number(e.target.value) })}\r\n                                                value={orderDetails.Sales_Person_Id}\r\n                                            >\r\n                                                <option value='' disabled>select sales person</option>\r\n                                                <option value={storage?.UserId}>{storage?.Name}</option>\r\n                                                {salesPerson?.map((vou, ind) => (\r\n                                                    <option value={vou.UserId} key={ind}>{vou.Name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Voucher Type:</td>\r\n                                        <td>\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, VoucherType: Number(e.target.value) })}\r\n                                                value={orderDetails.VoucherType}\r\n                                            >\r\n                                                <option value='' disabled>select voucher</option>\r\n                                                {voucherType?.filter(vou => vou.Type === 'SALES').map((vou, ind) => (\r\n                                                    <option value={vou.Vocher_Type_Id} key={ind}>{vou.Voucher_Type}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Branch</td>\r\n                                        <td>\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Branch_Id: Number(e.target.value) })}\r\n                                                value={orderDetails.Branch_Id}\r\n                                            >\r\n                                                <option value='' disabled>select Branch</option>\r\n                                                {branch.map((branch, ind) => (\r\n                                                    <option value={branch.BranchId} key={ind}>{branch.BranchName}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Customer Info */}\r\n\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">To:</h5>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Retailer Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Retailer_Id, label: orderDetails?.Retailer_Name }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Retailer_Id: e.value, Retailer_Name: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Retailer Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{storage.Name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{ }</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Q-Pay:</td>\r\n                                        <td className=\"border-0 bg-light\">{10}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Frequency Days:</td>\r\n                                        <td className=\"border-0 bg-light\">{20}</td>\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <FilterableTable\r\n                    title=\"Products Cart\"\r\n                    ButtonArea={\r\n                        <Button\r\n                            onClick={() => setAddProductDialog(true)}\r\n                            sx={{ ml: 1 }}\r\n                            variant='outlined'\r\n                            startIcon={<Add />}\r\n                        >Add Product</Button>\r\n                    }\r\n                    dataArray={orderProducts}\r\n                    columns={[\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.Product_Name,\r\n                            ColumnHeader: 'Product',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.HSN_Code,\r\n                            ColumnHeader: 'HSN Code',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Bill_Qty + ' ' + (row?.Units ?? ''),\r\n                            ColumnHeader: 'Quantity',\r\n                            isVisible: 1,\r\n                            align: 'center'\r\n                        },\r\n                        {\r\n                            Field_Name: 'Item_Rate',\r\n                            ColumnHeader: \"Rate\",\r\n                            Fied_Data: 'number',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Taxable Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = findProductDetails(products, row?.Item_Id)?.Gst_P\r\n                                const amount = row.Amount ?? 0;\r\n                                const taxDetails = calculateGSTDetails(amount, percentage, taxType);\r\n                                return NumberFormat(taxDetails.base_amount)\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = findProductDetails(products, row?.Item_Id)?.Gst_P\r\n                                const amount = row.Amount ?? 0;\r\n                                const taxDetails = calculateGSTDetails(amount, percentage, taxType);\r\n                                return NumberFormat(taxDetails.tax_amount) + ' (' + taxDetails.tax_per + '%)'\r\n                            },\r\n                            ColumnHeader: 'Tax',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST\r\n                                        ? row?.Product?.Igst_P\r\n                                        : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)\r\n                                ) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                return NumberFormat(\r\n                                    isEqualNumber(orderDetails.GST_Inclusive, 1) ? amount : (amount + tax)\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return (\r\n                                    <>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                setProductDetails({\r\n                                                    Item_Id: row.Item_Id,\r\n                                                    ItemName: row?.Product?.Product_Name,\r\n                                                    Bill_Qty: row.Bill_Qty,\r\n                                                    Item_Rate: row.Item_Rate,\r\n                                                    UOM: row.Product.UOM_Id,\r\n                                                    Product: row.Product,\r\n                                                    Group: row?.Product?.Pro_Group,\r\n                                                    GroupID: row?.Product?.Product_Group,\r\n                                                    Brand: row?.Product?.Brand_Name,\r\n                                                    BrandID: row?.Product?.Brand,\r\n                                                    Amount: row?.Amount\r\n                                                });\r\n                                                setAddProductDialog(true);\r\n                                            }}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setOrderProducts(pre => pre.filter(obj => !isEqualNumber(obj.Item_Id, row.Item_Id)))\r\n                                            }}\r\n                                            color='error'\r\n                                        >\r\n                                            <Delete />\r\n                                        </IconButton>\r\n                                    </>\r\n                                )\r\n                            },\r\n                            ColumnHeader: 'Action',\r\n                            isVisible: 1,\r\n                        },\r\n                    ]}\r\n                    EnableSerialNumber\r\n                    CellSize=\"small\"\r\n                    disablePagination={true}\r\n                />\r\n\r\n\r\n                {orderProducts.length > 0 && (\r\n                    <div className=\"d-flex justify-content-end py-2\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border p-2\" rowSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 4 : 5}>\r\n                                        Total in words: {numberToWords(parseInt(Total_Invoice_value))}\r\n                                    </td>\r\n                                    <td className=\"border p-2\">Total Taxable Amount</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                    </td>\r\n                                </tr>\r\n                                {!isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">CGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">SGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </>\r\n                                ) : (\r\n                                    <tr>\r\n                                        <td className=\"border p-2\">IGST</td>\r\n                                        <td className=\"border p-2\">\r\n                                            {NumberFormat(totalValueBeforeTax.TotalTax)}\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Round Off</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {RoundNumber(Math.round(Total_Invoice_value) - Total_Invoice_value)}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Total</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(Math.round(Total_Invoice_value))}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n\r\n                <p className=\"fa-15 mt-3 m-0\">Narration</p>\r\n                <textarea\r\n                    className=\"cus-inpt \"\r\n                    value={orderDetails.Narration}\r\n                    onChange={e => setOrderDetails(pre => ({ ...pre, Narration: e.target.value }))}\r\n                />\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                        variant='outlined'\r\n                        startIcon={<Clear />}\r\n                        onClick={switchScreen}\r\n                    >\r\n                        {'cancel'}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={postSaleOrder}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        color='success'\r\n                        startIcon={<Save />}\r\n                        disabled={orderProducts?.length === 0 || !orderDetails?.Retailer_Id}\r\n                    >Save</Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={addProductDialog}\r\n                onClose={closeAddProduct}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (productDetails.Item_Id && productDetails.Bill_Qty && productDetails.Item_Rate) {\r\n                        handleProductInputChange(\r\n                            productDetails.Item_Id,\r\n                            productDetails.Bill_Qty,\r\n                            productDetails.Item_Rate,\r\n                            productDetails.Product,\r\n                            productDetails.UOM,\r\n                            productDetails.Units,\r\n                        );\r\n                        closeAddProduct();\r\n                    } else {\r\n                        toast.warn(!productDetails.Item_Id ? 'Select Product' : !productDetails.Bill_Qty ? 'Enter Quantity' : 'Enter Rate or Amount');\r\n                    }\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.BrandID, label: productDetails.Brand }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, BrandID: e.value, Brand: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productBrand.map(obj => ({ value: obj?.Brand, label: obj?.Brand_Name }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, GroupID: e.value, Group: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productGroup.map(obj => ({ value: obj?.Product_Group, label: obj?.Pro_Group }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div> */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({ ...pre, GroupID: e.value, Group: e.label }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...products\r\n                                            .filter(\r\n                                                (pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 p-2\">\r\n                                <label>Item Name <RequiredStar /></label>\r\n                                <Select\r\n                                    value={{ value: productDetails.Item_Id, label: productDetails.ItemName }}\r\n                                    onChange={e => {\r\n                                        const productInfo = products.find(pro => isEqualNumber(pro.Product_Id, e.value))\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n                                            Item_Id: e.value,\r\n                                            ItemName: e.label,\r\n                                            Product: productInfo ?? {},\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n                                            UOM: productInfo.UOM_Id ?? pre.UOM,\r\n                                            Units: productInfo.Units ?? pre.Units,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Amount: 0,\r\n                                            Bill_Qty: 0,\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter(pro => productDetails.BrandID ? isEqualNumber(pro.Brand, productDetails.BrandID) : true)\r\n                                                .filter(pro => productDetails.GroupID ? isEqualNumber(pro.Product_Group, productDetails.GroupID) : true)\r\n                                        ].map(obj => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled: (\r\n                                                orderProducts.findIndex(ind => isEqualNumber(\r\n                                                    ind?.Item_Id, obj?.Product_Id\r\n                                                ))\r\n                                            ) === -1 ? false : true\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Quantity <RequiredStar /></label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : ''}\r\n                                    onChange={e => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(productDetails.Item_Rate, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else if (productDetails.Amount) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(pre.Amount, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Rate </label>\r\n                                <input\r\n                                    value={productDetails.Item_Rate ? NumberFormat(productDetails.Item_Rate) : ''}\r\n                                    onInput={onlynum}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Item_Rate: e.target.value,\r\n                                        Amount: pre.Bill_Qty ? Multiplication(e.target.value, pre.Bill_Qty) : pre.Amount\r\n                                    }))}\r\n                                    required\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <select\r\n                                    value={productDetails.UOM}\r\n                                    onChange={e => {\r\n                                        const selectedIndex = e.target.selectedIndex;\r\n                                        const label = e.target.options[selectedIndex].text;\r\n                                        const value = e.target.value;\r\n                                        setProductDetails(pre => ({ ...pre, UOM: value, Units: label }));\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                >\r\n                                    <option value=\"\" disabled>select</option>\r\n                                    {productUOM.map((o, i) => (\r\n                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    required\r\n                                    value={productDetails.Amount ? productDetails.Amount : ''}\r\n                                    onInput={onlynum}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Amount: e.target.value,\r\n                                        Item_Rate: pre.Bill_Qty ? Division(e.target.value, pre.Bill_Qty) : pre.Item_Rate\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions className=\"d-flex justify-content-between align-items-center\">\r\n                        <Button onClick={() => setProductDetails(productInitialDetails)} type='button' startIcon={<ClearAll />}>Clear</Button>\r\n                        <span>\r\n                            <Button type=\"button\" onClick={closeAddProduct}>cancel</Button>\r\n                            <Button type='submit' variant=\"outlined\">Add</Button>\r\n                        </span>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default NewSaleOrderCreation;","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, Button, Dialog, Tooltip, IconButton, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\nimport '../common.css'\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport { Addition, isEqualNumber, ISOString, isValidDate, isValidObject } from \"../../Components/functions\";\r\nimport InvoiceBillTemplate from \"./SalesReportComponent/newInvoiceTemplate\";\r\nimport { Add, Edit, FilterAlt, Search, Visibility } from \"@mui/icons-material\";\r\nimport { convertedStatus } from \"./convertedStatus\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../Components/filterableTable2\";\r\nimport NewSaleOrderCreation from \"./SalesReportComponent/newSaleOrderCreation\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst SaleOrderList = ({ loadingOn, loadingOff }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const query = useQuery();\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [screen, setScreen] = useState(true);\r\n    const [orderInfo, setOrderInfo] = useState({});\r\n    const [viewOrder, setViewOrder] = useState({});\r\n    const [reload, setReload] = useState(false)\r\n\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        Retailer_Id: '',\r\n        RetailerGet: 'ALL',\r\n        Created_by: '',\r\n        CreatedByGet: 'ALL',\r\n        Sales_Person_Id: '',\r\n        SalsePersonGet: 'ALL',\r\n        Cancel_status: 0\r\n    });\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: `sales/saleOrder?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Sales_Person_Id=${filters?.Sales_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSaleOrders(data?.data)\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        })\r\n    }, [\r\n        reload\r\n    ])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSalePerson(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/user/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setUsers(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n        };\r\n        setFilters(pre => ({ ...pre, Fromdate: queryFilters.Fromdate, Todate: queryFilters.Todate }));\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n        const Fromdate = (stateDetails?.Fromdate && isValidDate(stateDetails?.Fromdate)) ? ISOString(stateDetails?.Fromdate) : null;\r\n        const Todate = (stateDetails?.Todate && isValidDate(stateDetails?.Todate)) ? ISOString(stateDetails?.Todate) : null;\r\n        if (Fromdate && Todate) {\r\n            updateQueryString({ Fromdate, Todate });\r\n            setFilters(pre => ({ ...pre, Fromdate: ISOString(stateDetails.Fromdate), Todate: stateDetails.Todate }));\r\n            setReload(pre => !pre);\r\n        }\r\n    }, [stateDetails])\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const saleOrderColumn = [\r\n        {\r\n            Field_Name: 'So_Id',\r\n            ColumnHeader: 'Order ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'Retailer_Name',\r\n            ColumnHeader: 'Customer',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'So_Date',\r\n            ColumnHeader: 'Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Before_Tax',\r\n            ColumnHeader: 'Before Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Tax',\r\n            ColumnHeader: 'Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Invoice_value',\r\n            ColumnHeader: 'Invoice Value',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            ColumnHeader: 'Status',\r\n            isVisible: 1,\r\n            align: 'center',\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                const convert = convertedStatus.find(status => status.id === Number(row?.isConverted));\r\n                return (\r\n                    <span className={'py-0 fw-bold px-2 rounded-4 fa-12 ' + convert?.color ?? 'bg-secondary text-white'}>\r\n                        {convert?.label ?? 'Undefined'}\r\n                    </span>\r\n                )\r\n            },\r\n        },\r\n        {\r\n            Field_Name: 'Action',\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return (\r\n                    <>\r\n                        <Tooltip title='View Order'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    setViewOrder({\r\n                                        orderDetails: row,\r\n                                        orderProducts: row?.Products_List ? row?.Products_List : [],\r\n                                    })\r\n                                }}\r\n                                color='primary' size=\"small\"\r\n                            >\r\n                                <Visibility className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title='Edit'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    switchScreen();\r\n                                    setOrderInfo({ ...row, isEdit: true });\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <Edit className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n    ];\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n\r\n        return (\r\n            <>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Branch</td>\r\n                            <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Round off</td>\r\n                            <td className=\"border p-2\">{row.Round_off}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.GST_Inclusive, 1) && 'Inclusive'}\r\n                                {isEqualNumber(row.GST_Inclusive, 0) && 'Exclusive'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.IS_IGST, 1) && 'IGST'}\r\n                                {isEqualNumber(row.IS_IGST, 0) && 'GST'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Narration</td>\r\n                            <td className=\"border p-2\" colSpan={5}>{row.Narration}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const switchScreen = () => {\r\n        setScreen(!screen)\r\n        setOrderInfo({});\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setDialog({\r\n            ...dialog,\r\n            filters: false,\r\n            orderDetails: false,\r\n        });\r\n        setOrderInfo({});\r\n    }\r\n\r\n    const Total_Invoice_value = saleOrders.reduce((acc, orders) => Addition(acc, orders?.Total_Invoice_value), 0);\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                    <h6 className=\"fa-18 m-0 p-0\">{\r\n                        screen\r\n                            ? 'Sale Orders'\r\n                            : isValidObject(orderInfo)\r\n                                ? 'Modify Sale Order'\r\n                                : 'Sale Order Creation'}\r\n                    </h6>\r\n                    <span>\r\n                        {screen && (\r\n                            <Tooltip title='Filters'>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n                        {screen && (\r\n                            <Button\r\n                                variant='outlined'\r\n                                startIcon={<Add />}\r\n                                onClick={switchScreen}\r\n                            >\r\n                                {'New'}\r\n                            </Button>\r\n                        )}\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent className=\"p-0 \">\r\n                    {screen ? (\r\n                        <>\r\n                            <FilterableTable\r\n                                dataArray={saleOrders}\r\n                                columns={saleOrderColumn}\r\n                                // EnableSerialNumber={true}\r\n                                isExpendable={true}\r\n                                tableMaxHeight={550}\r\n                                expandableComp={ExpendableComponent}\r\n                            />\r\n                            <h6 className=\"m-0 text-end text-muted px-3\">Total Invoice Amount ({saleOrders?.length}) : {Total_Invoice_value}</h6>\r\n                        </>\r\n                    ) : (\r\n                        <NewSaleOrderCreation\r\n                            editValues={orderInfo}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            reload={() => {\r\n                                setReload(pre => !pre);\r\n                                setScreen(pre => !pre)\r\n                            }}\r\n                            switchScreen={switchScreen}\r\n                        />\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <InvoiceBillTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={'Sale Order'}\r\n                />\r\n            )}\r\n\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Retailer_Id, label: filters?.RetailerGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Retailer_Id: e.value, RetailerGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Salse Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Sales_Person_Id, label: filters?.SalsePersonGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Sales_Person_Id: e.value, SalsePersonGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...salesPerson.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Created_by, label: filters?.CreatedByGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Created_by: e.value, CreatedByGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...users.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Canceled Order</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.Cancel_status}\r\n                                            onChange={e => setFilters({ ...filters, Cancel_status: Number(e.target.value) })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={1}>Show</option>\r\n                                            <option value={0}>Hide</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            closeDialog();\r\n                            const updatedFilters = {\r\n                                Fromdate: filters?.Fromdate,\r\n                                Todate: filters?.Todate\r\n                            };\r\n                            updateQueryString(updatedFilters);\r\n                            setReload(pre => !pre);\r\n                        }}\r\n                        startIcon={<Search />}\r\n                        variant=\"outlined\"\r\n                    >Search</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SaleOrderList;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAll');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","calculateGSTDetails","amount","gstRate","type","arguments","length","undefined","validatedAmount","toNumber","validatedGstRate","halfGstRate","baseAmount","taxAmount","withTax","withoutTax","Error","sgstAmount","toFixed","cgstAmount","igstAmount","base_amount","Number","with_tax","without_tax","tax_per","tax_amount","sgst_per","sgst_amount","cgst_per","cgst_amount","igst_per","igst_amount","convertedStatus","id","label","findProductDetails","_arr$find","productid","find","obj","isEqualNumber","Product_Id","_ref","editValues","loadingOn","loadingOff","reload","switchScreen","storage","JSON","parse","localStorage","getItem","retailers","setRetailers","useState","products","setProducts","voucherType","setVoucherType","productBrand","setProductBrand","productUOM","setProductUOM","salesPerson","setSalePerson","branch","setBranch","companyInfo","setCompanyInfo","initialValue","Company_Id","Company_id","So_Date","ISOString","VoucherType","Retailer_Id","Retailer_Name","Sales_Person_Id","UserId","Sales_Person_Name","Name","Branch_Id","BranchId","Narration","Created_by","Product_Array","So_Id","GST_Inclusive","IS_IGST","productInitialDetails","Item_Id","ItemName","Bill_Qty","Item_Rate","UOM","Units","Product","Group","GroupID","Brand","BrandID","Amount","orderDetails","setOrderDetails","orderProducts","setOrderProducts","productDetails","setProductDetails","isEdit","setIsEdit","addProductDialog","setAddProductDialog","isInclusive","isNotTaxableBill","taxType","useEffect","_editValues$Products_","isValidObject","pre","_objectSpread","Products_List","map","pro","_pro$Item_Id","_pro$Product_Name","_pro$Bill_Qty","_pro$Item_Rate","_pro$Unit_Id","_pro$Units","_pro$Cgst_P$Sgst_P$Ig","_Number","_findProductDetails","_Number2","_findProductDetails2","_Number3","_findProductDetails3","_Addition","_findProductDetails4","_findProductDetails5","_pro$Amount","Product_Name","Unit_Id","Cgst_P","Sgst_P","Igst_P","Gst_P","Addition","fetchLink","address","concat","then","data","success","catch","e","console","error","uniqueBrand","getUniqueData","closeAddProduct","Total_Invoice_value","reduce","acc","item","RoundNumber","product","gstPercentage","totalValueBeforeTax","TotalValue","TotalTax","taxInfo","Multiplication","_jsxs","_Fragment","className","Company_Name","Company_Address","Telephone_Number","value","onChange","target","disabled","vou","ind","filter","Type","Vocher_Type_Id","Voucher_Type","BranchName","Select","options","isDisabled","styles","customSelectStyles","isSearchable","placeholder","maxMenuHeight","FilterableTable","title","ButtonArea","Button","onClick","sx","ml","variant","startIcon","Add","dataArray","columns","isCustomCell","Cell","_ref2","_row$Product","row","ColumnHeader","isVisible","_ref3","_row$Product2","HSN_Code","_ref4","_row$Units","align","Field_Name","Fied_Data","_ref5","_findProductDetails6","_row$Amount","percentage","taxDetails","NumberFormat","_ref6","_findProductDetails7","_row$Amount2","_ref7","_ref8","_row$Product3","_row$Product4","_row$Product5","_row$Amount3","tax","taxCalc","_ref9","IconButton","_row$Product6","_row$Product7","_row$Product8","_row$Product9","_row$Product10","UOM_Id","Pro_Group","Product_Group","Brand_Name","size","Edit","Delete","EnableSerialNumber","CellSize","disablePagination","rowSpan","numberToWords","parseInt","Math","round","Clear","postSaleOrder","method","bodyData","o","isGraterNumber","toast","message","finally","Save","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","onSubmit","preventDefault","handleProductInputChange","productId","rate","productIndex","findIndex","updatedValues","prevValues","warn","DialogContent","some","grp","push","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$UOM_Id","_productInfo$Units","_productInfo$Item_Rat","required","Division","min","onInput","onlynum","selectedIndex","text","i","DialogActions","ClearAll","defaultFilters","Fromdate","Todate","navigate","useNavigate","location","useLocation","stateDetails","state","query","URLSearchParams","search","saleOrders","setSaleOrders","users","setUsers","screen","setScreen","orderInfo","setOrderInfo","viewOrder","setViewOrder","setReload","filters","setFilters","RetailerGet","CreatedByGet","SalsePersonGet","Cancel_status","dialog","setDialog","queryFilters","get","isValidDate","updateQueryString","newFilters","params","toString","replace","saleOrderColumn","_convert$label","convert","status","isConverted","Tooltip","Visibility","closeDialog","orders","Card","FilterAlt","CardContent","isExpendable","tableMaxHeight","expandableComp","Branch_Name","Round_off","colSpan","NewSaleOrderCreation","Object","keys","InvoiceBillTemplate","download","actionOpen","clearDetails","TitleText","verticalAlign","updatedFilters","Search","createSvgIcon","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}
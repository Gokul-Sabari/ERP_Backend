{"version":3,"file":"static/js/3720.9901bd35.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/tablecolumn.js","Pages/Inventry/Processing/addProcessing/variables.js","Pages/Inventry/Processing/addProcessing/consumption.jsx","Pages/Inventry/Processing/AddProcessing.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import { getSessionUser } from \"../../../../Components/functions\";\r\n\r\nconst { user } = getSessionUser();\r\n\r\nexport const initialStockJournalInfoValues = {\r\n    PR_Id: '',\r\n    PR_Inv_Id: '',\r\n    Year_Id: '',\r\n    Branch_Id: '',\r\n    Process_no: '',\r\n    P_No: '',\r\n\r\n    Godownlocation: '',\r\n    BillType: 'New',\r\n    VoucherType: '',\r\n    Process_date: '',\r\n    Machine_No: '',\r\n    StartDateTime: '',\r\n    EndDateTime: '',\r\n    ST_Reading: '',\r\n    EN_Reading: '',\r\n    Total_Reading: '',\r\n    Narration: '',\r\n    PR_Status: 'NEW',\r\n    Created_By: user?.name,\r\n    Updated_By: user?.name,\r\n}\r\n\r\nexport const initialSoruceValue = {\r\n    SJD_Id: '',\r\n    STJ_Id: '',\r\n    Sour_Item_Id: '',\r\n    Sour_Item_Name: '',\r\n    Sour_Goodown_Id: '',\r\n    Sour_Batch_Lot_No: '',\r\n    Sour_Qty: '',\r\n    Sour_Unit_Id: '',\r\n    Sour_Unit: '',\r\n    Sour_Rate: '',\r\n    Sour_Amt: '',\r\n}\r\n\r\nexport const initialDestinationValue = {\r\n    SJD_Id: '',\r\n    STJ_Id: '',\r\n    Dest_Item_Id: '',\r\n    Dest_Item_Name: '',\r\n    Dest_Goodown_Id: '',\r\n    Dest_Batch_Lot_No: '',\r\n    Dest_Qty: '',\r\n    Dest_Unit_Id: '',\r\n    Dest_Unit: '',\r\n    Dest_Rate: '',\r\n    Dest_Amt: '',\r\n}\r\n\r\nexport const initialStaffInvolvedValue = {\r\n    STJ_Id: '',\r\n    S_Id: '',\r\n    Staff_Id: '',\r\n    Staff_Name: '',\r\n    Staff_Type_Id: '',\r\n}\r\n\r\nexport const soruceAndDestination = [\r\n    { source: 'Sour_Item_Id', destination: 'Dest_Item_Id' },\r\n    { source: 'Sour_Item_Name', destination: 'Dest_Item_Name' },\r\n    { source: 'Sour_Goodown_Id', destination: 'Dest_Goodown_Id' },\r\n    { source: 'Sour_Batch_Lot_No', destination: 'Dest_Batch_Lot_No' },\r\n    { source: 'Sour_Qty', destination: 'Dest_Qty' },\r\n    { source: 'Sour_Unit_Id', destination: 'Dest_Unit_Id' },\r\n    { source: 'Sour_Unit', destination: 'Dest_Unit' },\r\n    { source: 'Sour_Rate', destination: 'Dest_Rate' },\r\n    { source: 'Sour_Amt', destination: 'Dest_Amt' },\r\n];","import RequiredStar from '../../../../Components/requiredStar';\r\nimport { initialSoruceValue } from './variables'\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../../../Components/tablecolumn\";\r\nimport { Addition, checkIsNumber, Division, isEqualNumber, Multiplication, onlynum } from '../../../../Components/functions';\r\nimport { Button, IconButton } from '@mui/material';\r\nimport { Delete } from '@mui/icons-material';\r\nimport { useEffect } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { fetchLink } from '../../../../Components/fetchComponent';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst ConsumptionOfProcessing = ({\r\n    sourceList = [],\r\n    setSourceList,\r\n    products = [],\r\n    uom = [],\r\n    godown = [],\r\n}) => {\r\n\r\n    const changeSourceValue = (rowIndex, key, value) => {\r\n        setSourceList((prev) => {\r\n            return prev.map((item, index) => {\r\n\r\n                if (isEqualNumber(index, rowIndex)) {\r\n                    switch (key) {\r\n                        case 'Sour_Item_Id': {\r\n                            const newItem = { ...item, Sour_Item_Id: value };\r\n                            newItem.Sour_Item_Name = products?.find(pro =>\r\n                                isEqualNumber(pro?.Product_Id, value)\r\n                            )?.Product_Name ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Unit_Id': {\r\n                            const newItem = { ...item, Sour_Unit_Id: value };\r\n                            newItem.Sour_Unit = uom?.find(uom =>\r\n                                isEqualNumber(uom?.Unit_Id, value)\r\n                            )?.Units ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Qty': {\r\n                            const newItem = { ...item, Sour_Qty: value };\r\n                            if (item.Sour_Rate) {\r\n                                newItem.Sour_Amt = Multiplication(item.Sour_Rate, value);\r\n                            } else if (item.Sour_Amt) {\r\n                                newItem.Sour_Rate = Division(item.Sour_Amt, value);\r\n                            } else {\r\n                                newItem.Sour_Amt = '';\r\n                                newItem.Sour_Rate = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Rate': {\r\n                            const newItem = { ...item, Sour_Rate: value };\r\n                            if (item.Sour_Qty) {\r\n                                newItem.Sour_Amt = Multiplication(value, item.Sour_Qty);\r\n                            } else if (item.Sour_Amt) {\r\n                                newItem.Sour_Qty = Division(item.Sour_Amt, value);\r\n                            } else {\r\n                                newItem.Sour_Amt = '';\r\n                                newItem.Sour_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Amt': {\r\n                            const newItem = { ...item, Sour_Amt: value };\r\n                            if (checkIsNumber(item.Sour_Qty)) {\r\n                                newItem.Sour_Rate = Division(value, item.Sour_Qty);\r\n                            } else if (checkIsNumber(item.Sour_Rate)) {\r\n                                newItem.Sour_Qty = Division(value, item.Sour_Rate);\r\n                            } else {\r\n                                newItem.Sour_Rate = '';\r\n                                newItem.Sour_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        default:\r\n                            return { ...item, [key]: value };\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n\r\n    const SourceItems = ({ row, index }) => {\r\n        const [batchDetails, setBatchDetails] = useState([]);\r\n\r\n        useEffect(() => {\r\n            if (!checkIsNumber(row?.Sour_Item_Id)) return;\r\n\r\n            fetchLink({\r\n                address: `inventory/batchMaster/stockBalance?Product_Id=${row?.Sour_Item_Id}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setBatchDetails(data.data);\r\n                } else {\r\n                    setBatchDetails([])\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n                setBatchDetails([])\r\n            })\r\n\r\n        }, [row?.Sour_Item_Id])\r\n\r\n        return (\r\n            <tr>\r\n                <td className='fa-13'>{index + 1}</td>\r\n                <td className='fa-13 p-0' style={{ minWidth: '200px' }}>\r\n                    <Select\r\n                        value={{ value: row?.Sour_Item_Id, label: row?.Sour_Item_Name }}\r\n                        onChange={e => changeSourceValue(index, 'Sour_Item_Id', e.value)}\r\n                        options={\r\n                            products\r\n                                // .filter(pro =>\r\n                                //     !sourceList.some(src => isEqualNumber(pro.Product_Id, src.Sour_Item_Id))\r\n                                // )\r\n                                .map(pro => ({ value: pro.Product_Id, label: pro.Product_Name }))\r\n                        }\r\n                        menuPortalTarget={document.body}\r\n                        styles={customSelectStyles}\r\n                        isSearchable={true}\r\n                        placeholder={\"Select Item\"}\r\n                        maxMenuHeight={300}\r\n                    />\r\n\r\n                </td>\r\n                <td className='fa-13 px-1 py-0 vctr'>\r\n                    <input\r\n                        value={row?.Sour_Batch_Lot_No ?? \"\"}\r\n                        onChange={e => changeSourceValue(index, 'Sour_Batch_Lot_No', e.target.value)}\r\n                        className=\"cus-inpt p-2\"\r\n                    />\r\n                </td>\r\n                <td className='fa-13 px-1 py-0 vctr'>\r\n                    <input\r\n                        value={row?.Sour_Qty ?? \"\"}\r\n                        required\r\n                        onInput={onlynum}\r\n                        onChange={e => changeSourceValue(index, 'Sour_Qty', e.target.value)}\r\n                        className=\"cus-inpt p-2\"\r\n                    />\r\n                </td>\r\n                <td className='fa-13 px-1 py-0 vctr'>\r\n                    <select\r\n                        value={row?.Sour_Unit_Id ?? \"\"}\r\n                        onChange={e => changeSourceValue(index, 'Sour_Unit_Id', e.target.value)}\r\n                        className=\"cus-inpt p-2\"\r\n                        style={{ minWidth: '40px' }}\r\n                    >\r\n                        <option value=\"\" disabled>Select Unit</option>\r\n                        {uom.map((uom, ind) => (\r\n                            <option key={ind} value={uom.Unit_Id}>{uom.Units}</option>\r\n                        ))}\r\n                    </select>\r\n                </td>\r\n                <td className='fa-13 px-1 py-0 vctr'>\r\n                    <input\r\n                        value={row?.Sour_Rate ?? \"\"}\r\n                        onInput={onlynum}\r\n                        onChange={e => changeSourceValue(index, 'Sour_Rate', e.target.value)}\r\n                        className=\"cus-inpt p-2\"\r\n                    />\r\n                </td>\r\n                <td className='fa-13 px-1 py-0 vctr'>\r\n                    <input\r\n                        value={row?.Sour_Amt ?? \"\"}\r\n                        onInput={onlynum}\r\n                        onChange={e => changeSourceValue(index, 'Sour_Amt', e.target.value)}\r\n                        className=\"cus-inpt p-2\"\r\n                    />\r\n                </td>\r\n                <td className='fa-13 px-1 py-0 vctr'>\r\n                    <select\r\n                        value={row?.Sour_Goodown_Id ?? \"\"}\r\n                        required\r\n                        onChange={e => changeSourceValue(index, 'Sour_Goodown_Id', e.target.value)}\r\n                        className=\"cus-inpt p-2\"\r\n                        style={{ minWidth: '40px' }}\r\n                    >\r\n                        <option value=\"\" disabled>Select Location</option>\r\n                        {godown.map((god, ind) => (\r\n                            <option key={ind} value={god.Godown_Id}>{god.Godown_Name}</option>\r\n                        ))}\r\n                    </select>\r\n                </td>\r\n                <td className='fa-13 px-1 py-0 p-0 vctr text-center'>\r\n                    <IconButton\r\n                        variant=\"contained\"\r\n                        color=\"error\"\r\n                        type=\"button\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setSourceList(sourceList.filter((_, ind) => ind !== index));\r\n                        }}\r\n                    ><Delete className=\"fa-20\" /></IconButton>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-12 p-2 mb-2\">\r\n            <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                <h5 className=\"flex-grow-1 \">\r\n                    CONSUMPTION\r\n                </h5>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                        setSourceList(pre => [...pre, { ...initialSoruceValue }]);\r\n                    }}\r\n                >Add</Button>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"fa-13\">Sno</th>\r\n                            <th className=\"fa-13\">Item <RequiredStar /></th>\r\n                            <th className=\"fa-13\">Batch Lot No</th>\r\n                            <th className=\"fa-13\">Quantity <RequiredStar /></th>\r\n                            <th className=\"fa-13\">Unit</th>\r\n                            <th className=\"fa-13\">Rate</th>\r\n                            <th className=\"fa-13\">Amount</th>\r\n                            <th className=\"fa-13\">Location <RequiredStar /></th>\r\n                            <th className=\"fa-13\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {sourceList.map((row, index) => (\r\n                            <SourceItems key={index} row={row} index={index} />\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"text-end\">\r\n                <span className=\"rounded-2 border bg-light fw-bold text-primary fa-14 p-2\">\r\n                    <span className=\" py-2 pe-2\">Total Quantity: </span>\r\n                    {sourceList.reduce((acc, item) => {\r\n                        return checkIsNumber(item?.Sour_Item_Id) ? Addition(acc, item.Sour_Qty) : acc;\r\n                    }, 0)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConsumptionOfProcessing;","import { useEffect, useState } from \"react\"\r\nimport {\r\n    Addition, Division, ISOString, Multiplication, checkIsNumber,\r\n    formatSQLDateTimeObjectToInputDateTime,\r\n    getSessionUser, isEqualNumber, isGraterNumber, isValidObject,\r\n    onlynum,\r\n    toArray\r\n} from \"../../../Components/functions\"\r\nimport { Button, Card, CardContent, IconButton } from \"@mui/material\"\r\nimport { fetchLink } from \"../../../Components/fetchComponent\"\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { Delete } from \"@mui/icons-material\";\r\nimport RequiredStar from '../../../Components/requiredStar';\r\nimport { toast } from 'react-toastify';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { initialStockJournalInfoValues, initialDestinationValue, initialSoruceValue, initialStaffInvolvedValue } from './addProcessing/variables'\r\nimport ConsumptionOfProcessing from './addProcessing/consumption'\r\n\r\nconst StockManagementCreate = ({ loadingOn, loadingOff }) => {\r\n    const location = useLocation();\r\n    // const navigation = useNavigate();\r\n    const stateDetails = location.state;\r\n    const [baseData, setBaseData] = useState({\r\n        products: [],\r\n        branch: [],\r\n        godown: [],\r\n        voucherType: [],\r\n        uom: [],\r\n        staff: [],\r\n        staffType: []\r\n    });\r\n    const [isViewOnly, setIsViewOnly] = useState(false);\r\n    const [stockJorunalInfo, setStockJorunalInfo] = useState(initialStockJournalInfoValues);\r\n    const [sourceList, setSourceList] = useState([]);\r\n    const [destinationList, setDestinationList] = useState([]);\r\n    const [staffInvolvedList, setStaffInvolvedList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    branchResponse,\r\n                    productsResponse,\r\n                    godownLocationsResponse,\r\n                    voucherTypeResponse,\r\n                    uomResponse,\r\n                    staffResponse,\r\n                    staffCategory,\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `masters/branch/dropDown` }),\r\n                    fetchLink({ address: `masters/products/allProducts` }),\r\n                    fetchLink({ address: `dataEntry/godownLocationMaster` }),\r\n                    fetchLink({ address: `purchase/voucherType` }),\r\n                    fetchLink({ address: `masters/uom` }),\r\n                    fetchLink({ address: `dataEntry/costCenter` }),\r\n                    fetchLink({ address: `dataEntry/costCenter/category` }),\r\n                ]);\r\n\r\n                const branchData = (branchResponse.success ? branchResponse.data : []).sort(\r\n                    (a, b) => String(a?.BranchName).localeCompare(b?.BranchName)\r\n                );\r\n                const productsData = (productsResponse.success ? productsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Product_Name).localeCompare(b?.Product_Name)\r\n                );\r\n                const godownLocations = (godownLocationsResponse.success ? godownLocationsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Godown_Name).localeCompare(b?.Godown_Name)\r\n                );\r\n                const voucherType = (voucherTypeResponse.success ? voucherTypeResponse.data : []).sort(\r\n                    (a, b) => String(a?.Voucher_Type).localeCompare(b?.Voucher_Type)\r\n                );\r\n                const uomData = (uomResponse.success ? uomResponse.data : []).sort(\r\n                    (a, b) => String(a.Units).localeCompare(b.Units)\r\n                );\r\n                const staffData = (staffResponse.success ? staffResponse.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Center_Name).localeCompare(b?.Cost_Center_Name)\r\n                );\r\n                const staffCategoryData = (staffCategory.success ? staffCategory.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Category).localeCompare(b?.Cost_Category)\r\n                );\r\n\r\n                setBaseData((pre) => ({\r\n                    ...pre,\r\n                    products: productsData,\r\n                    branch: branchData,\r\n                    godown: godownLocations,\r\n                    voucherType: voucherType,\r\n                    uom: uomData,\r\n                    staff: staffData,\r\n                    staffType: staffCategoryData,\r\n                }));\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const source = stateDetails?.SourceDetails;\r\n        const destination = stateDetails?.DestinationDetails;\r\n        const staff = stateDetails?.StaffsDetails;\r\n        if (\r\n            isValidObject(stateDetails)\r\n            && Array.isArray(source)\r\n            && Array.isArray(destination)\r\n            && Array.isArray(staff)\r\n        ) {\r\n            const isEditable = stateDetails?.isEditable ? true : false;\r\n            setIsViewOnly(!isEditable);\r\n\r\n            setStockJorunalInfo(\r\n                Object.fromEntries(\r\n                    Object.entries(initialStockJournalInfoValues).map(([key, value]) => {\r\n                        if (key === 'Process_date') return [key, stateDetails[key] ? ISOString(stateDetails[key]) : value]\r\n                        if (key === 'StartDateTime') return [key, stateDetails[key] ? formatSQLDateTimeObjectToInputDateTime(stateDetails[key]) : value]\r\n                        if (key === 'EndDateTime') return [key, stateDetails[key] ? formatSQLDateTimeObjectToInputDateTime(stateDetails[key]) : value]\r\n                        return [key, stateDetails[key] ?? value]\r\n                    })\r\n                )\r\n            );\r\n\r\n            setSourceList(\r\n                source.map(sourceData => Object.fromEntries(\r\n                    Object.entries(initialSoruceValue).map(([key, value]) => {\r\n                        if (key === 'Sour_Item_Name') return [key, sourceData['Product_Name'] ? sourceData['Product_Name'] : value]\r\n                        return [key, sourceData[key] ?? value]\r\n                    })\r\n                ))\r\n            )\r\n\r\n            setDestinationList(\r\n                destination.map(destinationData => Object.fromEntries(\r\n                    Object.entries(initialDestinationValue).map(([key, value]) => {\r\n                        if (key === 'Dest_Item_Name') return [key, destinationData['Product_Name'] ? destinationData['Product_Name'] : value]\r\n                        return [key, destinationData[key] ?? value]\r\n                    })\r\n                ))\r\n            );\r\n\r\n            setStaffInvolvedList(\r\n                staff.map(staffData => Object.fromEntries(\r\n                    Object.entries(initialStaffInvolvedValue).map(([key, value]) => {\r\n                        if (key === 'Staff_Name') return [key, staffData['EmpNameGet'] ? staffData['EmpNameGet'] : value]\r\n                        return [key, staffData[key] ?? value]\r\n                    })\r\n                ))\r\n            );\r\n        }\r\n    }, [stateDetails])\r\n\r\n    const changeDestinationValues = (rowIndex, key, value) => {\r\n        setDestinationList((prev) => {\r\n            return prev.map((item, index) => {\r\n\r\n                if (isEqualNumber(index, rowIndex)) {\r\n                    switch (key) {\r\n                        case 'Dest_Item_Id': {\r\n                            const newItem = { ...item, Dest_Item_Id: value };\r\n                            newItem.Dest_Item_Name = baseData.products?.find(pro =>\r\n                                isEqualNumber(pro?.Product_Id, value)\r\n                            )?.Product_Name ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Dest_Unit_Id': {\r\n                            const newItem = { ...item, Dest_Unit_Id: value };\r\n                            newItem.Dest_Unit = baseData.uom?.find(uom =>\r\n                                isEqualNumber(uom?.Unit_Id, value)\r\n                            )?.Units ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Dest_Qty': {\r\n                            const newItem = { ...item, Dest_Qty: value };\r\n                            if (item.Dest_Rate) {\r\n                                newItem.Dest_Amt = Multiplication(item.Dest_Rate, value);\r\n                            } else if (item.Dest_Amt) {\r\n                                newItem.Dest_Rate = Division(item.Dest_Amt, value);\r\n                            } else {\r\n                                newItem.Dest_Amt = '';\r\n                                newItem.Dest_Rate = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Dest_Rate': {\r\n                            const newItem = { ...item, Dest_Rate: value };\r\n                            if (item.Dest_Qty) {\r\n                                newItem.Dest_Amt = Multiplication(value, item.Dest_Qty);\r\n                            } else if (item.Dest_Amt) {\r\n                                newItem.Dest_Qty = Division(item.Dest_Amt, value);\r\n                            } else {\r\n                                newItem.Dest_Amt = '';\r\n                                newItem.Dest_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Dest_Amt': {\r\n                            const newItem = { ...item, Dest_Amt: value };\r\n                            if (checkIsNumber(item.Dest_Qty)) {\r\n                                newItem.Dest_Rate = Division(value, item.Dest_Qty);\r\n                            } else if (checkIsNumber(item.Dest_Rate)) {\r\n                                newItem.Dest_Qty = Division(value, item.Dest_Rate);\r\n                            } else {\r\n                                newItem.Dest_Rate = '';\r\n                                newItem.Dest_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        default:\r\n                            return { ...item, [key]: value };\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setStockJorunalInfo(initialStockJournalInfoValues)\r\n        setSourceList([])\r\n        setDestinationList([])\r\n        setStaffInvolvedList([])\r\n    }\r\n\r\n    const saveStockJournal = () => {\r\n        if (loadingOn) loadingOn();\r\n\r\n        fetchLink({\r\n            address: `inventory/stockProcessing`,\r\n            method: checkIsNumber(stockJorunalInfo?.PR_Id) ? 'PUT' : 'POST',\r\n            bodyData: {\r\n                ...stockJorunalInfo,\r\n                Source: sourceList.filter(item => checkIsNumber(item?.Sour_Item_Id) && isGraterNumber(item.Sour_Qty, 0)),\r\n                Destination: destinationList.filter(item => checkIsNumber(item?.Dest_Item_Id) && isGraterNumber(item.Dest_Qty, 0)),\r\n                StaffInvolve: staffInvolvedList.filter(item => checkIsNumber(item?.Staff_Id)),\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                resetForm();\r\n                toast.success(data?.message || 'Saved');\r\n            } else {\r\n                toast.error(data?.message || 'Failed');\r\n            }\r\n        }).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent sx={{ minHeight: '80vh' }}>\r\n                    <h5 className=\"text-center mb-2 border-bottom pb-2\">STOCK MANAGEMENT</h5>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        saveStockJournal();\r\n                    }}>\r\n                        <div className=\"row \">\r\n                            {/* Staff involved Info */}\r\n                            <div className=\"col-xxl-3 col-lg-4 col-md-5 p-2\">\r\n                                <div className=\"border p-2\" style={{ minHeight: '30vh', height: '100%' }}>\r\n                                    <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                                        <h6 className=\"flex-grow-1 m-0\">Staff Involved</h6>\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            color=\"primary\"\r\n                                            type=\"button\"\r\n                                            disabled={isViewOnly}\r\n                                            onClick={() => setStaffInvolvedList([...staffInvolvedList, { ...initialStaffInvolvedValue }])}\r\n                                        >Add</Button>\r\n                                    </div>\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"fa-13\">Sno</th>\r\n                                                <th className=\"fa-13\">Name</th>\r\n                                                <th className=\"fa-13\">Type</th>\r\n                                                <th className=\"fa-13\">#</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {staffInvolvedList.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td className='fa-13 vctr text-center'>{index + 1}</td>\r\n                                                    <td className='fa-13 w-100 p-0'>\r\n                                                        <Select\r\n                                                            value={{ value: row?.Staff_Id, label: row?.Staff_Name }}\r\n                                                            onChange={e => setStaffInvolvedList(prev => {\r\n                                                                return prev.map((item, ind) => {\r\n                                                                    if (isEqualNumber(ind, index)) {\r\n                                                                        const staff = baseData.staff.find(c => isEqualNumber(c.Cost_Center_Id, e.value))\r\n                                                                        return {\r\n                                                                            ...item,\r\n                                                                            Staff_Type_Id:\r\n                                                                                checkIsNumber(item.Staff_Type_Id)\r\n                                                                                    ? item.Staff_Type_Id\r\n                                                                                    : checkIsNumber(staff.User_Type)\r\n                                                                                        ? staff.User_Type\r\n                                                                                        : 0,\r\n                                                                            Staff_Id: e.value,\r\n                                                                            Staff_Name: e.label\r\n                                                                        }\r\n                                                                    }\r\n                                                                    return item;\r\n                                                                });\r\n                                                            })}\r\n                                                            options={\r\n                                                                [...baseData.staff.filter(fil => (\r\n                                                                    staffInvolvedList.findIndex(st => (\r\n                                                                        isEqualNumber(st.Staff_Id, fil.Cost_Center_Id)\r\n                                                                    )) === -1 ? true : false\r\n                                                                ))].map(st => ({\r\n                                                                    value: st.Cost_Center_Id,\r\n                                                                    label: st.Cost_Center_Name\r\n                                                                }))\r\n                                                            }\r\n                                                            styles={customSelectStyles}\r\n                                                            isSearchable={true}\r\n                                                            placeholder={\"Select Staff\"}\r\n                                                        />\r\n                                                    </td>\r\n\r\n                                                    <td className='fa-13 vctr p-0' style={{ maxWidth: '130px', minWidth: '80px' }}>\r\n                                                        <select\r\n                                                            value={row?.Staff_Type_Id}\r\n                                                            onChange={e => setStaffInvolvedList(prev => {\r\n                                                                return prev.map((item, ind) => {\r\n                                                                    if (isEqualNumber(ind, index)) {\r\n                                                                        return {\r\n                                                                            ...item,\r\n                                                                            Staff_Type_Id: e.target.value\r\n                                                                        }\r\n                                                                    }\r\n                                                                    return item;\r\n                                                                });\r\n                                                            })}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        >\r\n                                                            <option value=\"\">Select</option>\r\n                                                            {baseData.staffType.map((st, sti) =>\r\n                                                                <option value={st?.Cost_Category_Id} key={sti}>{st?.Cost_Category}</option>\r\n                                                            )}\r\n                                                        </select>\r\n                                                    </td>\r\n\r\n                                                    <td className='fa-13 vctr p-0'>\r\n                                                        <IconButton\r\n                                                            onClick={() => {\r\n                                                                setStaffInvolvedList(prev => {\r\n                                                                    return prev.filter((_, filIndex) => index !== filIndex);\r\n                                                                });\r\n                                                            }}\r\n                                                            size='small'\r\n                                                        >\r\n                                                            <Delete className=\"fa-20\" color='error' />\r\n                                                        </IconButton>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Stock Journal Details */}\r\n                            <div className=\"col-xxl-9 col-lg-8 col-md-7 py-2 px-0 fa-12\">\r\n                                <div className=\"border p-2\" style={{ minHeight: '30vh', height: '100%' }}>\r\n                                    <div className=\"row px-3\">\r\n                                        {/* Common Details - 1 */}\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Branch</label>\r\n                                            <select\r\n                                                value={stockJorunalInfo.Branch_Id}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Branch_Id: e.target.value })}\r\n                                                placeholder={\"Select Branch\"}\r\n                                                className=\"cus-inpt mb-2 p-2\"\r\n                                                disabled={isViewOnly}\r\n                                            >\r\n                                                <option value=\"\" disabled>Select Branch</option>\r\n                                                {baseData.branch.map((br, bi) => (\r\n                                                    <option key={bi} value={br.BranchId}>{br.BranchName}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Date</label>\r\n                                            <input\r\n                                                value={stockJorunalInfo.Process_date}\r\n                                                type=\"date\"\r\n                                                disabled={isViewOnly}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Process_date: e.target.value })}\r\n                                                className=\"cus-inpt p-2 mb-2\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Voucher Type</label>\r\n                                            <select\r\n                                                value={stockJorunalInfo.VoucherType}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, VoucherType: e.target.value })}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                disabled={isViewOnly}\r\n                                            >\r\n                                                <option value=\"\">Select Voucher</option>\r\n                                                {baseData.voucherType.filter(fil => fil.Type === 'PROCESSING').map((vt, vInd) => (\r\n                                                    <option value={vt.Vocher_Type_Id} key={vInd}>{vt.Voucher_Type}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Machine Number</label>\r\n                                            <input\r\n                                                value={stockJorunalInfo.Machine_No}\r\n                                                placeholder=\"Machine Number\"\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Machine_No: e.target.value })}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                disabled={isViewOnly}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Activity Location</label>\r\n                                            <select\r\n                                                value={stockJorunalInfo.Godownlocation}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Godownlocation: e.target.value })}\r\n                                                className=\"cus-inpt p-2\"\r\n                                            >\r\n                                                <option value={''} disabled>select godown</option>\r\n                                                {baseData.godown.map((god, godInd) => (\r\n                                                    <option value={god.Godown_Id} key={godInd}>{god.Godown_Name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Order Status</label>\r\n                                            <select\r\n                                                className=\"cus-inpt p-2\"\r\n                                                value={stockJorunalInfo?.PR_Status}\r\n                                                onChange={e => setStockJorunalInfo(pre => ({ ...pre, PR_Status: e.target.value }))}\r\n                                            >\r\n                                                <option value=\"New\">New</option>\r\n                                                <option value=\"On Process\">On Process</option>\r\n                                                <option value=\"Completed\">Completed</option>\r\n                                                <option value=\"Canceled\">Canceled</option>\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        {/* Common Details - 2 */}\r\n                                        <div className=\"col-12 p-2 \">\r\n\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-bordered\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th colSpan={2} className=\"fa-13 text-center\">Time-Taken</th>\r\n                                                            <th colSpan={2} className=\"fa-13 text-center\">Meter-Reading</th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th className=\"fa-13 text-center\">Start</th>\r\n                                                            <th className=\"fa-13 text-center\">End</th>\r\n                                                            <th className=\"fa-13 text-center\">Start</th>\r\n                                                            <th className=\"fa-13 text-center\">End</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type='datetime-local'\r\n                                                                    onChange={e => {\r\n                                                                        setStockJorunalInfo(pre => ({ ...pre, StartDateTime: e.target.value }));\r\n                                                                    }}\r\n                                                                    value={stockJorunalInfo?.StartDateTime}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type='datetime-local'\r\n                                                                    onChange={e => setStockJorunalInfo(pre => ({ ...pre, EndDateTime: e.target.value }))}\r\n                                                                    value={stockJorunalInfo?.EndDateTime}\r\n                                                                    min={stockJorunalInfo?.StartDateTime}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type=\"number\"\r\n                                                                    onChange={e => setStockJorunalInfo(pre => ({ ...pre, ST_Reading: e.target.value }))}\r\n                                                                    value={stockJorunalInfo?.ST_Reading}\r\n                                                                    min={0}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    placeholder=\"Ex: 2000\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type=\"number\"\r\n                                                                    onChange={e => setStockJorunalInfo(pre => ({ ...pre, EN_Reading: e.target.value }))}\r\n                                                                    value={stockJorunalInfo?.EN_Reading}\r\n                                                                    min={Addition(stockJorunalInfo?.ST_Reading, 1)}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    placeholder=\"Ex: 2200\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n\r\n                                            <textarea\r\n                                                className=\"cus-inpt\"\r\n                                                placeholder=\"Narration\"\r\n                                                rows={5}\r\n                                                disabled={isViewOnly}\r\n                                                value={stockJorunalInfo.Narration}\r\n                                                onChange={e => setStockJorunalInfo(pre => ({ ...pre, Narration: e.target.value }))}\r\n                                            ></textarea>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Source Details */}\r\n                            <ConsumptionOfProcessing \r\n                                sourceList={sourceList}\r\n                                setSourceList={setSourceList}\r\n                                products={toArray(baseData?.products)}\r\n                                uom={toArray(baseData?.uom)}\r\n                                godown={toArray(baseData?.godown)}\r\n                            />\r\n\r\n                            {/* Destination Entry */}\r\n                            <div className=\"col-12 p-2 mb-2\">\r\n                                <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                                    <h5 className=\"flex-grow-1 \">\r\n                                        PRODUCTION\r\n                                    </h5>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        type=\"button\"\r\n                                        onClick={() => {\r\n                                            setDestinationList([...destinationList, { ...initialDestinationValue }]);\r\n                                        }}\r\n                                    >Add</Button>\r\n                                </div>\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table table-bordered \">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"fa-13\">Sno</th>\r\n                                                <th className=\"fa-13\">Item <RequiredStar /></th>\r\n                                                <th className=\"fa-13\">Batch Lot No</th>\r\n                                                <th className=\"fa-13\">Quantity <RequiredStar /></th>\r\n                                                <th className=\"fa-13\">Unit</th>\r\n                                                <th className=\"fa-13\">Rate</th>\r\n                                                <th className=\"fa-13\">Amount</th>\r\n                                                <th className=\"fa-13\">Location <RequiredStar /></th>\r\n                                                <th className=\"fa-13\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {destinationList.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td className='fa-13'>{index + 1}</td>\r\n                                                    <td className='fa-13 p-0' style={{ minWidth: '200px' }}>\r\n                                                        <Select\r\n                                                            value={{ value: row?.Dest_Item_Id, label: row?.Dest_Item_Name }}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Item_Id', e.value)}\r\n                                                            options={\r\n                                                                baseData.products\r\n                                                                    .filter(pro =>\r\n                                                                        !destinationList.some(src => isEqualNumber(pro.Product_Id, src.Dest_Item_Id))\r\n                                                                    )\r\n                                                                    .map(pro => ({ value: pro.Product_Id, label: pro.Product_Name }))\r\n                                                            }\r\n                                                            menuPortalTarget={document.body}\r\n                                                            styles={customSelectStyles}\r\n                                                            isSearchable={true}\r\n                                                            placeholder={\"Select Item\"}\r\n                                                            maxMenuHeight={300}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Dest_Batch_Lot_No ?? \"\"}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Batch_Lot_No', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Dest_Qty ?? \"\"}\r\n                                                            required\r\n                                                            onInput={onlynum}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Qty', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <select\r\n                                                            value={row?.Dest_Unit_Id ?? \"\"}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Unit_Id', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                            style={{ minWidth: '40px' }}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>Select Unit</option>\r\n                                                            {baseData.uom.map((uom, ind) => (\r\n                                                                <option key={ind} value={uom.Unit_Id}>{uom.Units}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Dest_Rate ?? \"\"}\r\n                                                            onInput={onlynum}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Rate', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Dest_Amt ?? \"\"}\r\n                                                            onInput={onlynum}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Amt', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <select\r\n                                                            value={row?.Dest_Goodown_Id ?? \"\"}\r\n                                                            required\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Goodown_Id', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                            style={{ minWidth: '40px' }}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>Select Location</option>\r\n                                                            {baseData.godown.map((god, ind) => (\r\n                                                                <option key={ind} value={god.Godown_Id}>{god.Godown_Name}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 p-0 vctr text-center'>\r\n                                                        <IconButton\r\n                                                            variant=\"contained\"\r\n                                                            color=\"error\"\r\n                                                            type=\"button\"\r\n                                                            size=\"small\"\r\n                                                            onClick={() => {\r\n                                                                setDestinationList(destinationList.filter((_, ind) => ind !== index));\r\n                                                            }}\r\n                                                        ><Delete className=\"fa-20\" /></IconButton>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"text-end\">\r\n                                    <span className=\"rounded-2 border bg-light fw-bold text-primary fa-14 p-2\">\r\n                                        <span className=\" py-2 pe-2\">Total Quantity: </span>\r\n                                        {destinationList.reduce((acc, item) => {\r\n                                            return checkIsNumber(item?.Dest_Item_Id) ? Addition(acc, item.Dest_Qty) : acc;\r\n                                        }, 0)}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"my-2 d-flex justify-content-end align-items-center \">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                type=\"button\"\r\n                                color=\"secondary\"\r\n                                disabled={isViewOnly}\r\n                                onClick={resetForm}\r\n                            >\r\n                                Reset\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\" className=\"ms-2\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                disabled={isViewOnly}\r\n                            >\r\n                                {checkIsNumber(stockJorunalInfo?.STJ_Id) ? \"Update\" : \"Save\"}\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StockManagementCreate;\r\n\r\n// export {\r\n//     initialStockJournalInfoValues,\r\n//     initialSoruceValue,\r\n//     initialDestinationValue,\r\n//     initialStaffInvolvedValue\r\n// }","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","customTableStyles","table","width","backgroundColor","rows","headCells","customSelectStyles","menu","provided","state","zIndex","menuPortal","base","groupHeading","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","user","getSessionUser","initialStockJournalInfoValues","PR_Id","PR_Inv_Id","Year_Id","Branch_Id","Process_no","P_No","Godownlocation","BillType","VoucherType","Process_date","Machine_No","StartDateTime","EndDateTime","ST_Reading","EN_Reading","Total_Reading","Narration","PR_Status","Created_By","Updated_By","initialSoruceValue","SJD_Id","STJ_Id","Sour_Item_Id","Sour_Item_Name","Sour_Goodown_Id","Sour_Batch_Lot_No","Sour_Qty","Sour_Unit_Id","Sour_Unit","Sour_Rate","Sour_Amt","initialDestinationValue","Dest_Item_Id","Dest_Item_Name","Dest_Goodown_Id","Dest_Batch_Lot_No","Dest_Qty","Dest_Unit_Id","Dest_Unit","Dest_Rate","Dest_Amt","initialStaffInvolvedValue","S_Id","Staff_Id","Staff_Name","Staff_Type_Id","_ref","sourceList","setSourceList","products","uom","godown","changeSourceValue","rowIndex","key","value","prev","map","item","index","isEqualNumber","_products$find$Produc","_products$find","newItem","find","pro","Product_Id","Product_Name","_uom$find$Units","_uom$find","Unit_Id","Units","Multiplication","Division","checkIsNumber","SourceItems","_ref2","_row$Sour_Batch_Lot_N","_row$Sour_Qty","_row$Sour_Unit_Id","_row$Sour_Rate","_row$Sour_Amt","_row$Sour_Goodown_Id","row","batchDetails","setBatchDetails","useState","useEffect","fetchLink","then","data","success","catch","err","console","log","_jsxs","className","minWidth","Select","label","onChange","e","options","menuPortalTarget","document","body","styles","isSearchable","placeholder","maxMenuHeight","target","required","onInput","onlynum","disabled","ind","god","Godown_Id","Godown_Name","IconButton","type","size","onClick","filter","_","Delete","Button","pre","reduce","acc","Addition","loadingOn","loadingOff","stateDetails","useLocation","baseData","setBaseData","branch","voucherType","staff","staffType","isViewOnly","setIsViewOnly","stockJorunalInfo","setStockJorunalInfo","destinationList","setDestinationList","staffInvolvedList","setStaffInvolvedList","async","branchResponse","productsResponse","godownLocationsResponse","voucherTypeResponse","uomResponse","staffResponse","staffCategory","Promise","all","branchData","sort","a","b","String","BranchName","localeCompare","productsData","godownLocations","Voucher_Type","uomData","staffData","Cost_Center_Name","staffCategoryData","Cost_Category","error","fetchData","source","SourceDetails","destination","DestinationDetails","StaffsDetails","isValidObject","Array","isArray","isEditable","Object","fromEntries","entries","_stateDetails$key","ISOString","formatSQLDateTimeObjectToInputDateTime","sourceData","_ref3","_sourceData$key","destinationData","_ref4","_destinationData$key","_ref5","_staffData$key","changeDestinationValues","_baseData$products$fi","_baseData$products","_baseData$products$fi2","_baseData$uom$find$Un","_baseData$uom","_baseData$uom$find","resetForm","_Fragment","Card","CardContent","sx","minHeight","onSubmit","preventDefault","method","bodyData","Source","isGraterNumber","Destination","StaffInvolve","toast","message","finally","height","c","Cost_Center_Id","User_Type","fil","findIndex","st","maxWidth","sti","Cost_Category_Id","filIndex","br","bi","BranchId","Type","vt","vInd","Vocher_Type_Id","godInd","colSpan","min","ConsumptionOfProcessing","toArray","_row$Dest_Batch_Lot_N","_row$Dest_Qty","_row$Dest_Unit_Id","_row$Dest_Rate","_row$Dest_Amt","_row$Dest_Goodown_Id","some","src","createSvgIcon","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","root","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined","_typeof","o","Symbol","iterator","constructor","prototype"],"sourceRoot":""}
{"version":3,"file":"static/js/5640.830527bd.chunk.js","mappings":"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","sources":["Pages/Reports/storageClosingStock/itemWise.jsx","Pages/Reports/storageClosingStock/stockInHand.jsx","Pages/Reports/storageClosingStock/variable.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport {\r\n    Addition, checkIsNumber, filterableText,\r\n    groupData, isEqualNumber, stringCompare, toArray, toNumber,\r\n} from \"../../../Components/functions\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport {\r\n    Autocomplete, Button, Card, Checkbox, Dialog,\r\n    DialogActions, DialogContent, DialogTitle, IconButton, \r\n    Paper, Switch, TextField, Tooltip,\r\n} from \"@mui/material\";\r\nimport {\r\n    CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff, Settings,\r\n} from \"@mui/icons-material\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst ItemWiseStockReport = ({\r\n    loadingOn,\r\n    loadingOff,\r\n    Fromdate,\r\n    Todate,\r\n    api = \"itemWise\",\r\n    defaultGrouping = \"\",\r\n    storageStockColumns = [],\r\n    groupingOption = true,\r\n}) => {\r\n\r\n    const [reportData, setReportData] = useState([]);\r\n    const [filters, setFilters] = useState({});\r\n    const [groupBy, setGroupBy] = useState(defaultGrouping);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [dialog, setDialog] = useState(false);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [columnSettings, setColumnSettings] = useState([]);\r\n\r\n    const propsColumns = storageStockColumns.map((col, colInd) => ({\r\n        isVisible: colInd < 11 ? 1 : 0,\r\n        Field_Name: col?.Column_Name,\r\n        Fied_Data: col?.Data_Type,\r\n        OrderBy: colInd + 1,\r\n        isEnabled: true,\r\n    }));\r\n\r\n    const [columns, setColumns] = useState(propsColumns);\r\n    const parseData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const companyId = parseData?.Company_id;\r\n\r\n    useEffect(() => {\r\n        loadingOn();\r\n\r\n        const fetchReportData = fetchLink({\r\n            address: `reports/storageStock/${api}?Fromdate=${Fromdate}&Todate=${Todate}`,\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                setReportData(toArray(data.data));\r\n            }\r\n        });\r\n\r\n        const fetchColumnSettings = fetchLink({\r\n            address: `masters/displayLosColumn?company_id=${companyId}`,\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                const settings = toArray(data.data);\r\n                setColumnSettings(settings);\r\n\r\n                setColumns((prevColumns) =>\r\n                    prevColumns.map((col, index) => {\r\n                        const setting = settings.find(\r\n                            (s) =>\r\n                                s.Column_Name?.toLowerCase() ===\r\n                                col.Field_Name?.toLowerCase() ||\r\n                                s.ColumnName?.toLowerCase() === col.Field_Name?.toLowerCase()\r\n                        );\r\n                        const status = Number(setting?.status);\r\n\r\n                        const isFirstFive = index < 5;\r\n\r\n                        return {\r\n                            ...col,\r\n                            isEnabled: isFirstFive ? true : setting ? status === 1 : true,\r\n                            isVisible: isFirstFive ? 1 : setting ? (status === 1 ? 1 : 0) : 0,\r\n                        };\r\n                    })\r\n                );\r\n            }\r\n        });\r\n\r\n        Promise.all([fetchReportData, fetchColumnSettings])\r\n            .catch((error) => console.error(\"Fetch error:\", error))\r\n            .finally(() => loadingOff());\r\n    }, [Fromdate, Todate, companyId, api, loadingOn, loadingOff]);\r\n\r\n    const sortedColumns = useMemo(() => {\r\n        return [...columns].sort((a, b) =>\r\n            a?.OrderBy && b?.OrderBy\r\n                ? a?.OrderBy - b?.OrderBy\r\n                : b?.OrderBy - a?.OrderBy\r\n        );\r\n    }, [columns]);\r\n\r\n    const DisplayColumn = useMemo(() => {\r\n        return sortedColumns.filter(\r\n            (col) =>\r\n                (isEqualNumber(col?.Defult_Display, 1) ||\r\n                    isEqualNumber(col?.isVisible, 1)) &&\r\n                col.isEnabled === true\r\n        );\r\n    }, [sortedColumns]);\r\n\r\n    const showData = useMemo(() => {\r\n        const filter = Object.keys(filters).length > 0;\r\n        const grouping = groupBy ? true : false;\r\n\r\n        const filtered = filter ? filteredData : reportData;\r\n        const groupFiltered = grouping ? groupData(filtered, groupBy) : [];\r\n\r\n        const aggKeys = DisplayColumn.filter(\r\n            (fil) => filterableText(fil.Fied_Data) === \"number\"\r\n        ).map((col) => col.Field_Name);\r\n\r\n        const groupAggregations = groupFiltered.map((grp) => {\r\n            return {\r\n                ...grp,\r\n                ...Object.fromEntries(\r\n                    aggKeys.map((key) => [\r\n                        key,\r\n                        grp?.groupedData?.reduce(\r\n                            (acc, colmn) => Addition(acc, toNumber(colmn[key]) || 0),\r\n                            0\r\n                        ),\r\n                    ])\r\n                ),\r\n            };\r\n        });\r\n\r\n        return grouping ? groupAggregations : filtered;\r\n    }, [filters, reportData, filteredData, groupBy, DisplayColumn]);\r\n\r\n    const getDisplayName = (columnName) => {\r\n        if (!columnName) return \"\";\r\n\r\n        const columnSetting = columnSettings.find(\r\n            (cs) =>\r\n                cs.Column_Name?.toLowerCase() === columnName?.toLowerCase() ||\r\n                cs.ColumnName?.toLowerCase() === columnName?.toLowerCase()\r\n        );\r\n\r\n        if (columnSetting?.Alias_Name) {\r\n            return columnSetting.Alias_Name;\r\n        }\r\n\r\n        const storageColumn = storageStockColumns.find(\r\n            (col) => col.Column_Name?.toLowerCase() === columnName?.toLowerCase()\r\n        );\r\n\r\n        if (storageColumn?.Alias_Name) {\r\n            return storageColumn.Alias_Name;\r\n        }\r\n\r\n        return columnName?.replace(/_/g, \" \");\r\n    };\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filters]);\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters((prevFilters) => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...reportData];\r\n        for (const column of sortedColumns) {\r\n            if (filters[column.Field_Name]) {\r\n                if (filters[column.Field_Name].type === \"range\") {\r\n                    const { min, max } = filters[column.Field_Name];\r\n                    filtered = filtered.filter((item) => {\r\n                        const value = item[column.Field_Name];\r\n                        return (\r\n                            (min === undefined || value >= min) &&\r\n                            (max === undefined || value <= max)\r\n                        );\r\n                    });\r\n                } else if (filters[column.Field_Name].type === \"date\") {\r\n                    const { start, end } = filters[column.Field_Name].value;\r\n                    filtered = filtered.filter((item) => {\r\n                        const dateValue = new Date(item[column.Field_Name]);\r\n                        return (\r\n                            (start === undefined || dateValue >= new Date(start)) &&\r\n                            (end === undefined || dateValue <= new Date(end))\r\n                        );\r\n                    });\r\n                } else if (Array.isArray(filters[column.Field_Name])) {\r\n                    filtered =\r\n                        filters[column.Field_Name]?.length > 0\r\n                            ? filtered.filter((item) =>\r\n                                filters[column.Field_Name].includes(\r\n                                    item[column.Field_Name]?.toLowerCase().trim()\r\n                                )\r\n                            )\r\n                            : filtered;\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Field_Name, Fied_Data } = column;\r\n        if (Fied_Data === \"number\") {\r\n            return (\r\n                <div className=\"d-flex justify-content-between px-2\">\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.min ?? \"\"}\r\n                        onChange={(e) =>\r\n                            handleFilterChange(Field_Name, {\r\n                                type: \"range\",\r\n                                ...filters[Field_Name],\r\n                                min: e.target.value ? parseFloat(e.target.value) : undefined,\r\n                            })\r\n                        }\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.max ?? \"\"}\r\n                        onChange={(e) =>\r\n                            handleFilterChange(Field_Name, {\r\n                                type: \"range\",\r\n                                ...filters[Field_Name],\r\n                                max: e.target.value ? parseFloat(e.target.value) : undefined,\r\n                            })\r\n                        }\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === \"date\") {\r\n            return (\r\n                <div className=\"d-flex justify-content-between px-2\">\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.start ?? \"\"}\r\n                        onChange={(e) =>\r\n                            handleFilterChange(Field_Name, {\r\n                                type: \"date\",\r\n                                value: {\r\n                                    ...filters[Field_Name]?.value,\r\n                                    start: e.target.value || undefined,\r\n                                },\r\n                            })\r\n                        }\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.end ?? \"\"}\r\n                        onChange={(e) =>\r\n                            handleFilterChange(Field_Name, {\r\n                                type: \"date\",\r\n                                value: {\r\n                                    ...filters[Field_Name]?.value,\r\n                                    end: e.target.value || undefined,\r\n                                },\r\n                            })\r\n                        }\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === \"string\") {\r\n            const distinctValues = [\r\n                ...new Set(\r\n                    reportData.map((item) => item[Field_Name]?.toLowerCase()?.trim())\r\n                ),\r\n            ];\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${Field_Name}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={(option) => option}\r\n                    value={filters[Field_Name] || []}\r\n                    onChange={(event, newValue) =>\r\n                        handleFilterChange(Field_Name, newValue)\r\n                    }\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={getDisplayName(Field_Name)}\r\n                            placeholder={`Select ${getDisplayName(Field_Name)}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setDialog(false);\r\n        setFilterDialog(false);\r\n    };\r\n\r\n    const resetColumns = () => {\r\n        setColumns(propsColumns);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title=\"Item Wise\"\r\n                EnableSerialNumber\r\n                headerFontSizePx={12}\r\n                bodyFontSizePx={12}\r\n                maxHeightOption\r\n                ButtonArea={\r\n                    <>\r\n                        <Tooltip title=\"Column Visibility\">\r\n                            <IconButton size=\"small\" onClick={() => setDialog(true)}>\r\n                                <Settings />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Clear Filters\">\r\n                            <IconButton size=\"small\" onClick={() => setFilters({})}>\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Filters\">\r\n                            <IconButton onClick={() => setFilterDialog(true)} size=\"small\">\r\n                                <FilterAlt />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        {groupingOption && (\r\n                            <div className=\"d-flex align-items-center flex-wrap\">\r\n                                <span>Group-By: </span>\r\n                                <select\r\n                                    className=\"cus-inpt p-2 w-auto m-1\"\r\n                                    value={groupBy}\r\n                                    onChange={(e) => setGroupBy(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">select group</option>\r\n                                    {DisplayColumn.filter(\r\n                                        (fil) =>\r\n                                            filterableText(fil.Fied_Data) === \"string\" &&\r\n                                            fil?.Field_Name !== \"Ledger_Name\" &&\r\n                                            fil.isEnabled\r\n                                    ).map((col, colInd) => (\r\n                                        <option value={col?.Field_Name} key={colInd}>\r\n                                            {getDisplayName(col?.Field_Name)}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                }\r\n                ExcelPrintOption\r\n                dataArray={showData}\r\n                columns={\r\n                    groupBy\r\n                        ? DisplayColumn.filter(\r\n                            (fil) =>\r\n                                showData.length > 0 &&\r\n                                Object.keys(showData[0]).includes(fil.Field_Name) &&\r\n                                fil.isEnabled\r\n                        ).map((col) => ({\r\n                            ...col,\r\n                            ColumnHeader: getDisplayName(col.Field_Name),\r\n                        }))\r\n                        : DisplayColumn.filter((col) => col.isEnabled).map((col) => ({\r\n                            ...col,\r\n                            ColumnHeader: getDisplayName(col.Field_Name),\r\n                        }))\r\n                }\r\n                isExpendable={groupBy ? true : false}\r\n                expandableComp={({ row }) => (\r\n                    <FilterableTable\r\n                        EnableSerialNumber\r\n                        headerFontSizePx={12}\r\n                        bodyFontSizePx={12}\r\n                        dataArray={toArray(row?.groupedData)}\r\n                        columns={DisplayColumn.filter(\r\n                            (clm) => !stringCompare(clm.Field_Name, groupBy) && clm.isEnabled\r\n                        ).map((col) => ({\r\n                            ...col,\r\n                            ColumnHeader: getDisplayName(col.Field_Name),\r\n                        }))}\r\n                    />\r\n                )}\r\n            />\r\n\r\n            <Dialog open={filterDialog} onClose={closeDialog} maxWidth=\"sm\" fullWidth>\r\n                <DialogContent>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        <span>Filters</span>\r\n                        <span>\r\n                            <Tooltip title=\"Column Visibility\">\r\n                                <IconButton size=\"small\" onClick={() => setDialog(true)}>\r\n                                    <Settings />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Clear Filters\">\r\n                                <IconButton size=\"small\" onClick={() => setFilters({})}>\r\n                                    <FilterAltOff />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n                    </h5>\r\n\r\n                    <div className=\"border rounded-3\">\r\n                        {DisplayColumn.filter((col) => col.isEnabled).map((column, ke) => (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className=\"mt-2 mb-1\">\r\n                                    {getDisplayName(column?.Field_Name)}\r\n                                </label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog} color=\"error\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={() => setDialog(false)}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle>Column Settings</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"row\">\r\n                        {columns.map((o, i) => (\r\n                            <div className=\"col-lg-4 col-md-6 p-2\" key={i}>\r\n                                <Card\r\n                                    component={Paper}\r\n                                    className={`p-2 d-flex justify-content-between align-items-center flex-wrap ${i % 2 !== 0 ? \"bg-light\" : \"\"\r\n                                        } ${!o.isEnabled ? \"opacity-50\" : \"\"}`}\r\n                                >\r\n                                    <div className=\"d-flex justify-content-between align-items-center flex-wrap\">\r\n                                        <Switch\r\n                                            checked={Boolean(o?.isVisible) && o.isEnabled}\r\n                                            onChange={(e) =>\r\n                                                o.isEnabled &&\r\n                                                setColumns((prevColumns) =>\r\n                                                    prevColumns.map((oo) =>\r\n                                                        oo.Field_Name === o?.Field_Name\r\n                                                            ? { ...oo, isVisible: e.target.checked ? 1 : 0 }\r\n                                                            : oo\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        // disabled={!o.isEnabled}\r\n                                        />\r\n                                        <h6 className=\"fa-13 mb-0 fw-bold\">\r\n                                            {getDisplayName(o.Field_Name)}\r\n                                            {!o.isEnabled && (\r\n                                                <span className=\"text-muted small\"></span>\r\n                                            )}\r\n                                        </h6>\r\n                                    </div>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={checkIsNumber(o?.OrderBy) ? o?.OrderBy : \"\"}\r\n                                        onChange={(e) =>\r\n                                            o.isEnabled &&\r\n                                            setColumns((prevColumns) =>\r\n                                                prevColumns.map((oo) =>\r\n                                                    oo.Field_Name === o?.Field_Name\r\n                                                        ? { ...oo, OrderBy: e.target.value }\r\n                                                        : oo\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                        disabled={!o.isEnabled}\r\n                                        className=\"mt-2 p-1 border-0 cus-inpt\"\r\n                                        style={{ width: \"80px\" }}\r\n                                        placeholder=\"Order\"\r\n                                    />\r\n                                </Card>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={resetColumns} variant=\"outlined\">\r\n                        Reset\r\n                    </Button>\r\n                    <Button onClick={() => setDialog(false)} color=\"error\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItemWiseStockReport;","import TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport { Box, IconButton, Tab } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { ISOString } from '../../../Components/functions';\r\nimport { Search } from '@mui/icons-material';\r\nimport ItemWiseStockReport from './itemWise';\r\nimport { storageStockColumnsForItemWise, storageStockColumnsForGodownWise } from './variable';\r\n\r\nconst CustomerClosingStockReport = ({ loadingOn, loadingOff }) => {\r\n    const [tabValue, setTabValue] = useState(1);\r\n    const [dateFilter, setDateFilter] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        FilterFromDate: ISOString(),\r\n        FilterTodate: ISOString(),\r\n    })\r\n\r\n    const tabData = [\r\n        {\r\n            name: 'Item Wise',\r\n            component: (\r\n                <ItemWiseStockReport\r\n                    loadingOn={loadingOn}\r\n                    loadingOff={loadingOff}\r\n                    Fromdate={dateFilter.Fromdate}\r\n                    Todate={dateFilter.Todate}\r\n                    api='itemWise'\r\n                    defaultGrouping=''\r\n                    storageStockColumns={storageStockColumnsForItemWise}\r\n                />\r\n            )\r\n        },\r\n        {\r\n            name: 'Godown Wise',\r\n            component: (\r\n                <ItemWiseStockReport\r\n                    loadingOn={loadingOn}\r\n                    loadingOff={loadingOff}\r\n                    Fromdate={dateFilter.Fromdate}\r\n                    Todate={dateFilter.Todate}\r\n                    api='godownWise'\r\n                    defaultGrouping='Godown_Name'\r\n                    storageStockColumns={storageStockColumnsForGodownWise}\r\n                    groupingOption={false}\r\n                />\r\n            )\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"d-flex align-items-center flex-wrap mb-3\">\r\n                <label htmlFor=\"from\" className='me-1 fw-bold '>Fromdate: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    id='from'\r\n                    className='cus-inpt p-2 w-auto me-2'\r\n                    value={dateFilter.FilterFromDate}\r\n                    onChange={e => setDateFilter(pre => ({ ...pre, FilterFromDate: e.target.value }))}\r\n                />\r\n                <label htmlFor=\"to\" className='me-1 fw-bold '>Todate: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    id='to'\r\n                    className='cus-inpt p-2 w-auto'\r\n                    value={dateFilter.FilterTodate}\r\n                    onChange={e => setDateFilter(pre => ({ ...pre, FilterTodate: e.target.value }))}\r\n                />\r\n                <IconButton\r\n                    size='small'\r\n                    onClick={() => setDateFilter(pre => ({\r\n                        ...pre,\r\n                        Fromdate: pre.FilterFromDate ? pre.FilterFromDate : pre.Fromdate,\r\n                        Todate: pre.FilterTodate ? pre.FilterTodate : pre.Todate\r\n                    }))}\r\n                ><Search /></IconButton>\r\n            </div>\r\n\r\n            <TabContext value={tabValue}>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <TabList\r\n                        indicatorColor='transparant'\r\n                        onChange={(e, n) => setTabValue(n)}\r\n                        variant='scrollable'\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        {tabData.map(\r\n                            (tab, tabInd) => (\r\n                                <Tab\r\n                                    key={tabInd}\r\n                                    sx={tabValue === (tabInd + 1) ? { backgroundColor: '#c6d7eb' } : {}}\r\n                                    label={tab.name}\r\n                                    value={tabInd + 1}\r\n                                />\r\n                            )\r\n                        )}\r\n                    </TabList>\r\n                </Box>\r\n\r\n                {tabData.map((tab, tabInd) => (\r\n                    <TabPanel value={tabInd + 1} sx={{ p: 0, pt: 2 }} key={tabInd}>\r\n                        {tab.component}\r\n                    </TabPanel>\r\n                ))}\r\n\r\n            </TabContext>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomerClosingStockReport;","export const storageStockColumnsForItemWise = [\r\n    { Column_Name: 'Trans_Date', Data_Type: 'date' },\r\n    { Column_Name: 'Group_Name', Data_Type: 'string' },\r\n    { Column_Name: 'stock_item_name', Data_Type: 'string' },\r\n    { Column_Name: 'OB_Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'OB_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Bal_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Stock_Item', Data_Type: 'string' },\r\n    { Column_Name: 'Group_ST', Data_Type: 'string' },\r\n    { Column_Name: 'Bag', Data_Type: 'string' },\r\n    { Column_Name: 'Stock_Group', Data_Type: 'string' },\r\n    { Column_Name: 'Product_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'S_Sub_Group_1', Data_Type: 'string' },\r\n    { Column_Name: 'Grade_Item_Group', Data_Type: 'string' },\r\n    { Column_Name: 'Item_Name_Modified', Data_Type: 'string' },\r\n];\r\n\r\nexport const storageStockColumnsForGodownWise = [\r\n    // { Column_Name: 'Trans_Date', Data_Type: 'date' },\r\n    { Column_Name: 'Godown_Name', Data_Type: 'string' },\r\n    { Column_Name: 'stock_item_name', Data_Type: 'string' },\r\n    { Column_Name: 'OB_Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'OB_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Act_Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Stock_Item', Data_Type: 'string' },\r\n    { Column_Name: 'Group_ST', Data_Type: 'string' },\r\n    { Column_Name: 'Bag', Data_Type: 'string' },\r\n    { Column_Name: 'Stock_Group', Data_Type: 'string' },\r\n    { Column_Name: 'Product_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'S_Sub_Group_1', Data_Type: 'string' },\r\n    { Column_Name: 'Grade_Item_Group', Data_Type: 'string' },\r\n    { Column_Name: 'Item_Name_Modified', Data_Type: 'string' },\r\n]\r\n\r\nexport const itemGroupWiseStockValue = [\r\n    { Column_Name: 'Group_Name', Data_Type: 'string' },\r\n    { Column_Name: 'Brand', Data_Type: 'string' },\r\n    { Column_Name: 'Group_ST', Data_Type: 'string' },\r\n    { Column_Name: 'Stock_Group', Data_Type: 'string' },\r\n    { Column_Name: 'S_Sub_Group_1', Data_Type: 'string' },\r\n    { Column_Name: 'Grade_Item_Group', Data_Type: 'string' },\r\n    { Column_Name: 'Trans_Date', Data_Type: 'date' },\r\n    \r\n    { Column_Name: 'OB_Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'OB_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'OB_Value', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_value', Data_Type: 'number' },\r\n    { Column_Name: 'Adj_Pur_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Adj_Pur_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Adj_Pur_value', Data_Type: 'number' },\r\n    { Column_Name: 'IN_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'IN_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'IN_Value', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_value', Data_Type: 'number' },\r\n    { Column_Name: 'Adj_Sal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Adj_Sal_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Adj_Sal_value', Data_Type: 'number' },\r\n    { Column_Name: 'OUT_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Out_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Out_Value', Data_Type: 'number' },\r\n    { Column_Name: 'Expense_value', Data_Type: 'number' },\r\n    { Column_Name: 'Act_Expense', Data_Type: 'number' },\r\n    { Column_Name: 'Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'CL_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'CL_Value', Data_Type: 'number' },\r\n    { Column_Name: 'CR_CL_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Pre_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Pre_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Pre_CL_Value', Data_Type: 'number' },\r\n]","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n} : void 0;\n\n/**\n * @returns {unknown}\n */\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-T-${value}`;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n      children: childrenProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n  const {\n      children,\n      className,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props);\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["icon","_jsx","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","_ref","loadingOn","loadingOff","Fromdate","Todate","api","defaultGrouping","storageStockColumns","groupingOption","reportData","setReportData","useState","filters","setFilters","groupBy","setGroupBy","filteredData","setFilteredData","dialog","setDialog","filterDialog","setFilterDialog","columnSettings","setColumnSettings","propsColumns","map","col","colInd","isVisible","Field_Name","Column_Name","Fied_Data","Data_Type","OrderBy","isEnabled","columns","setColumns","parseData","JSON","parse","localStorage","getItem","companyId","Company_id","useEffect","fetchReportData","fetchLink","address","then","data","success","toArray","fetchColumnSettings","settings","prevColumns","index","setting","find","s","_s$Column_Name","_col$Field_Name","_s$ColumnName","_col$Field_Name2","toLowerCase","ColumnName","status","Number","isFirstFive","Promise","all","catch","error","console","finally","sortedColumns","useMemo","sort","a","b","DisplayColumn","filter","isEqualNumber","Defult_Display","showData","Object","keys","length","grouping","filtered","groupFiltered","groupData","aggKeys","fil","filterableText","groupAggregations","grp","fromEntries","key","_grp$groupedData","groupedData","reduce","acc","colmn","Addition","toNumber","getDisplayName","columnName","columnSetting","cs","_cs$Column_Name","_cs$ColumnName","Alias_Name","storageColumn","_col$Column_Name","replace","applyFilters","handleFilterChange","column","value","prevFilters","type","min","max","item","undefined","start","end","dateValue","Date","Array","isArray","_filters$column$Field","_item$column$Field_Na","includes","trim","renderFilter","_filters$Field_Name$m","_filters$Field_Name","_filters$Field_Name$m2","_filters$Field_Name2","_filters$Field_Name$v","_filters$Field_Name3","_filters$Field_Name3$","_filters$Field_Name$v2","_filters$Field_Name5","_filters$Field_Name5$","_jsxs","className","children","placeholder","onChange","e","target","parseFloat","_filters$Field_Name4","_filters$Field_Name6","distinctValues","Set","_item$Field_Name","_item$Field_Name$toLo","Autocomplete","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","event","newValue","renderOption","props","_ref2","selected","Checkbox","style","marginRight","checked","isOptionEqualToValue","opt","val","renderInput","params","TextField","label","closeDialog","_Fragment","FilterableTable","title","EnableSerialNumber","headerFontSizePx","bodyFontSizePx","maxHeightOption","ButtonArea","Tooltip","IconButton","size","onClick","Settings","FilterAltOff","FilterAlt","ExcelPrintOption","dataArray","ColumnHeader","isExpendable","expandableComp","_ref3","row","clm","stringCompare","Dialog","open","onClose","maxWidth","fullWidth","DialogContent","ke","DialogActions","Button","color","DialogTitle","o","i","Card","component","Paper","Switch","Boolean","oo","checkIsNumber","disabled","width","resetColumns","variant","tabValue","setTabValue","dateFilter","setDateFilter","ISOString","FilterFromDate","FilterTodate","tabData","name","ItemWiseStockReport","storageStockColumnsForItemWise","storageStockColumnsForGodownWise","htmlFor","pre","Search","TabContext","Box","sx","borderBottom","borderColor","TabList","indicatorColor","n","scrollButtons","tab","tabInd","Tab","backgroundColor","TabPanel","p","pt","itemGroupWiseStockValue","createSvgIcon","d","Context","React","idPrefix","setId","Math","round","random","useUniquePrefix","context","Provider","useTabContext","getPanelId","getTabId","_excluded","ref","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","child","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabPanelRoot","styled","overridesResolver","styles","root","theme","padding","spacing","inProps","useThemeProps","ownerState","classes","composeClasses","useUtilityClasses","tabId","clsx","hidden","role","defaultTheme","createTheme","createBox","themeId","THEME_ID","defaultClassName","boxClasses","generateClassName","ClassNameGenerator","generate"],"sourceRoot":""}
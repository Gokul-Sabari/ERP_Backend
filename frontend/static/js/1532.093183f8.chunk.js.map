{"version":3,"file":"static/js/1532.093183f8.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/AccountTreeOutlined.js","../node_modules/@mui/icons-material/esm/AccountBalanceOutlined.js","../node_modules/@mui/icons-material/esm/AttachMoneyOutlined.js","../node_modules/@mui/icons-material/esm/ClearAllOutlined.js","../node_modules/@mui/icons-material/esm/FilterListOutlined.js","Pages/Masters/ExpenseReport.jsx","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/ExpandLess.js","../node_modules/@mui/icons-material/esm/ExpandMore.js","../node_modules/@mui/icons-material/esm/Remove.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/system/esm/createBox.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3zM7 9H4V5h3zm10 6h3v4h-3zm0-10h3v4h-3z\"\n}), 'AccountTreeOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.5 10h-2v7h2zm6 0h-2v7h2zm8.5 9H2v2h19zm-2.5-9h-2v7h2zm-7-6.74L16.71 6H6.29zm0-2.26L2 6v2h19V6z\"\n}), 'AccountBalanceOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4\"\n}), 'AttachMoneyOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAllOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4zM3 6v2h18V6zm3 7h12v-2H6z\"\n}), 'FilterListOutlined');","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n    Paper, Typography, Box, Collapse, IconButton, Table, TableBody, TableCell,\r\n    TableContainer, TableHead, TableRow, CircularProgress, TextField, Button,\r\n    Dialog, DialogTitle, DialogContent, DialogActions, Tooltip, Autocomplete\r\n} from \"@mui/material\";\r\nimport {\r\n    ExpandMore, ExpandLess, AccountTreeOutlined, AccountBalanceOutlined,\r\n    AttachMoneyOutlined, FilterListOutlined, ClearAllOutlined, Add, Remove\r\n} from \"@mui/icons-material\";\r\nimport { NumberFormat } from \"../../Components/functions\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst calculateTotals = (node) => {\r\n    let debit = 0;\r\n    let credit = 0;\r\n\r\n    if (node.accounts?.length) {\r\n        node.accounts.forEach((acc) => {\r\n            debit += Number(acc.Debit_Amount || 0);\r\n            credit += Number(acc.Credit_Amount || 0);\r\n        });\r\n    }\r\n    if (node.children?.length) {\r\n        node.children.forEach((child) => {\r\n            const childTotals = calculateTotals(child);\r\n            debit += childTotals.debit;\r\n            credit += childTotals.credit;\r\n        });\r\n    }\r\n    return { debit, credit, balance: debit - credit };\r\n};\r\n\r\nconst ExpenseNode = ({ node, depth = 0, filters }) => {\r\n    const [expanded, setExpanded] = useState(depth === 0);\r\n    const [childData, setChildData] = useState([]);\r\n    const [loadingChildren, setLoadingChildren] = useState(false);\r\n\r\n    const [accountDetails, setAccountDetails] = useState([]);\r\n    const [loadingAccountDetails, setLoadingAccountDetails] = useState(false);\r\n    const [expandedAccountId, setExpandedAccountId] = useState(null);\r\n\r\n    const totals = calculateTotals(node);\r\n    const hasChildren = node.children?.length > 0;\r\n    const hasAccounts = node.accounts?.length > 0;\r\n    const isAccountLeaf = !hasChildren && node.Acc_Id;\r\n    const canFetchMore = (!hasChildren && !hasAccounts && node.group_id) || isAccountLeaf;\r\n\r\n    const fetchChildData = useCallback(async () => {\r\n        try {\r\n            setLoadingChildren(true);\r\n            const response = await fetchLink({\r\n                address: '/reports/expenseByAccId',\r\n                params: {\r\n                    group_id: node.group_id,\r\n                    fromDate: filters.fromDate,\r\n                    toDate: filters.toDate\r\n                }\r\n            });\r\n            setChildData(response.data || []);\r\n        } catch (err) {\r\n            console.error(\"Error fetching child data:\", err);\r\n            setChildData([]);\r\n        } finally {\r\n            setLoadingChildren(false);\r\n        }\r\n    }, [node.group_id, filters.fromDate, filters.toDate]);\r\n\r\n\r\n\r\n    const fetchAccountDetails = useCallback((accId) => {\r\n        setLoadingAccountDetails(true);\r\n        fetchLink({\r\n            address: 'reports/expenseByAccId',\r\n            method: 'POST',\r\n            bodyData: {\r\n                acc_id: accId,\r\n                fromDate: filters.fromDate,\r\n                toDate: filters.toDate\r\n            },\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        })\r\n            .then((response) => {\r\n                if (response.success) {\r\n                    setAccountDetails((prev) => {\r\n\r\n                        const filtered = prev.filter((d) => !d.Acc_Id?.includes(accId.toString()));\r\n\r\n                        return [...filtered, ...(response.data || [])];\r\n                    });\r\n                } else {\r\n                    toast.error(response?.message || \"Failed to load account details\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"Error fetching account details:\", err);\r\n                toast.error(\"Something went wrong while fetching account details\");\r\n            })\r\n            .finally(() => {\r\n                setLoadingAccountDetails(false);\r\n            });\r\n    }, [filters.fromDate, filters.toDate]);\r\n\r\n    const handleExpandClick = () => {\r\n        if (canFetchMore && !expanded && !childData.length) {\r\n            fetchChildData();\r\n        }\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n\r\n\r\n    const handleAccountExpand = (e, accId) => {\r\n        e.stopPropagation();\r\n        if (expandedAccountId === accId) {\r\n            setExpandedAccountId(null);\r\n        } else {\r\n\r\n            setExpandedAccountId(accId);\r\n            if (!accountDetails.some(detail => detail.Acc_Id?.includes(accId.toString()))) {\r\n                fetchAccountDetails(accId);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Box sx={{ ml: depth * 2 }}>\r\n            <Paper sx={{\r\n                mb: 1,\r\n                p: 1,\r\n                backgroundColor: depth === 0 ? \"#f5f5f5\" : \"white\",\r\n                overflow: 'hidden'\r\n            }}>\r\n                <Box\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    sx={{\r\n                        cursor: (hasChildren || hasAccounts || canFetchMore) ? \"pointer\" : \"default\",\r\n                        minHeight: '48px'\r\n                    }}\r\n                    onClick={handleExpandClick}\r\n                >\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        flex: '1 1 50%',\r\n                        minWidth: 0\r\n                    }}>\r\n                        {(hasChildren || hasAccounts || canFetchMore) && (\r\n                            <IconButton size=\"small\" sx={{ mr: 1 }}>\r\n                                {expanded ? <ExpandLess /> : <ExpandMore />}\r\n                            </IconButton>\r\n                        )}\r\n                        {hasChildren\r\n                            ? <AccountTreeOutlined color=\"primary\" sx={{ mr: 1 }} />\r\n                            : <AccountBalanceOutlined color=\"secondary\" sx={{ mr: 1 }} />\r\n                        }\r\n                        <Typography fontWeight=\"medium\" noWrap sx={{ flex: 1 }}>\r\n                            {node.group_name || node.Account_Name || 'Expense'}\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box sx={{\r\n                        display: 'flex',\r\n                        flex: '1 1 50%',\r\n                        justifyContent: 'flex-end',\r\n                        gap: 3,\r\n                        pr: 2\r\n                    }}>\r\n                        <Typography variant=\"body2\" sx={{ minWidth: 120, textAlign: 'right' }}>\r\n                            Debit: ₹{NumberFormat(Number(totals.debit.toFixed(2)))}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ minWidth: 120, textAlign: 'right' }}>\r\n                            Credit: ₹{NumberFormat(Number(totals.credit.toFixed(2)))}\r\n                        </Typography>\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            sx={{\r\n                                minWidth: 140,\r\n                                textAlign: 'right',\r\n                                fontWeight: \"bold\",\r\n                                color: totals.balance >= 0 ? \"green\" : \"red\"\r\n                            }}\r\n                        >\r\n                            Balance: ₹{NumberFormat(Math.abs(totals.balance).toFixed(2))}\r\n                            {totals.balance >= 0 ? 'Dr' : 'Cr'}\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Collapse in={expanded}>\r\n                    {hasAccounts && (\r\n                        <TableContainer sx={{ mt: 1, mb: 1 }}>\r\n                            <Table size=\"small\" sx={{ tableLayout: 'fixed' }}>\r\n                                <colgroup>\r\n                                    <col style={{ width: '50%' }} />\r\n                                    <col style={{ width: '10%' }} />\r\n                                    <col style={{ width: '10%' }} />\r\n                                    <col style={{ width: '10%' }} />\r\n                                </colgroup>\r\n                                <TableHead>\r\n                                    <TableRow sx={{ backgroundColor: \"#eeeeee\" }}>\r\n                                        <TableCell>Account</TableCell>\r\n                                        <TableCell align=\"right\">Debit</TableCell>\r\n                                        <TableCell align=\"right\">Credit</TableCell>\r\n                                        <TableCell align=\"right\">Balance</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {node.accounts.map(acc => {\r\n                                        const isLeafAccount = !acc.children?.length;\r\n                                        return (\r\n                                            <React.Fragment key={acc.Acc_Id}>\r\n                                                <TableRow hover>\r\n                                                    <TableCell sx={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>\r\n                                                        <Box display=\"flex\" alignItems=\"center\">\r\n                                                            <AttachMoneyOutlined fontSize=\"small\" sx={{ mr: 1 }} />\r\n                                                            {acc.Account_Name}\r\n                                                            {isLeafAccount && (\r\n                                                                <IconButton\r\n                                                                    size=\"small\"\r\n                                                                    onClick={(e) => handleAccountExpand(e, acc.Acc_Id)}\r\n                                                                    sx={{ ml: 1 }}\r\n                                                                >\r\n                                                                    {expandedAccountId === acc.Acc_Id\r\n                                                                        ? <Remove fontSize=\"small\" />\r\n                                                                        : <Add fontSize=\"small\" />}\r\n                                                                </IconButton>\r\n                                                            )}\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">₹{NumberFormat(Number(acc.Debit_Amount || 0).toFixed(2))}</TableCell>\r\n                                                    <TableCell align=\"right\">₹{NumberFormat(Number(acc.Credit_Amount || 0).toFixed(2))}</TableCell>\r\n                                                    <TableCell align=\"right\">₹{NumberFormat(Number(acc.Debit_Amount || 0 - acc.Credit_Amount || 0).toFixed(2))}</TableCell>\r\n                                                </TableRow>\r\n\r\n                                                {expandedAccountId === acc.Acc_Id && (\r\n                                                    <TableRow>\r\n                                                        <TableCell colSpan={4} sx={{ p: 0, backgroundColor: \"#fafafa\" }}>\r\n                                                            {loadingAccountDetails ? (\r\n                                                                <Box display=\"flex\" justifyContent=\"center\" p={2}>\r\n                                                                    <CircularProgress size={24} />\r\n                                                                </Box>\r\n                                                            ) : accountDetails.some(detail => detail.Acc_Id?.includes(acc.Acc_Id.toString())) ? (\r\n                                                                <Table size=\"small\" sx={{ tableLayout: \"fixed\" }}>\r\n                                                                    <colgroup>\r\n                                                                        <col style={{ width: \"10%\" }} />\r\n                                                                        <col style={{ width: \"10%\" }} />\r\n                                                                        <col style={{ width: \"20%\" }} />\r\n                                                                        <col style={{ width: \"18%\" }} />\r\n                                                                        <col style={{ width: \"10%\" }} />\r\n                                                                        <col style={{ width: \"10%\" }} />\r\n                                                                    </colgroup>\r\n                                                                    <TableHead>\r\n                                                                        <TableRow sx={{ backgroundColor: \"#f0f0f0\" }}>\r\n                                                                            <TableCell>Date</TableCell>\r\n                                                                            <TableCell>Invoice No</TableCell>\r\n                                                                            <TableCell align=\"left\">Particular</TableCell>\r\n                                                                            <TableCell align=\"right\">Debit</TableCell>\r\n                                                                            <TableCell align=\"right\">Credit</TableCell>\r\n                                                                            <TableCell align=\"right\">Balance</TableCell>\r\n                                                                        </TableRow>\r\n                                                                    </TableHead>\r\n                                                                    <TableBody>\r\n                                                                        {accountDetails\r\n                                                                            .filter(detail => detail.Acc_Id?.includes(acc.Acc_Id.toString()))\r\n                                                                            .map((detail, idx) => (\r\n                                                                                <TableRow key={`detail-${idx}`}>\r\n                                                                                    <TableCell>\r\n                                                                                        {new Date(detail.Ledger_Date).toLocaleDateString('en-GB', {\r\n                                                                                            day: '2-digit',\r\n                                                                                            month: '2-digit',\r\n                                                                                            year: 'numeric'\r\n                                                                                        }).replace(/\\//g, '-')}\r\n                                                                                    </TableCell>\r\n                                                                                    <TableCell>{detail.invoice_no}</TableCell>\r\n                                                                                    <TableCell>{detail.Particulars}</TableCell>\r\n                                                                                    <TableCell align=\"right\">₹{NumberFormat(Number(detail.Debit_Amt || 0).toFixed(2))}</TableCell>\r\n                                                                                    <TableCell align=\"right\">₹{NumberFormat(Number(detail.Credit_Amt || 0).toFixed(2))}</TableCell>\r\n                                                                                    <TableCell align=\"right\">₹{NumberFormat((Number(detail.Debit_Amt || 0) - Number(detail.Credit_Amt || 0)).toFixed(2))}</TableCell>    </TableRow>\r\n                                                                            ))}\r\n                                                                    </TableBody>\r\n                                                                </Table>\r\n                                                            ) : (\r\n                                                                <Typography sx={{ p: 2, color: \"text.secondary\" }}>\r\n                                                                    No transactions available\r\n                                                                </Typography>\r\n                                                            )}\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )}\r\n                                            </React.Fragment>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    )}\r\n\r\n                    {hasChildren && (\r\n                        <Box sx={{ mt: 1 }}>\r\n                            {node.children.map(child => (\r\n                                <ExpenseNode\r\n                                    key={child.group_id}\r\n                                    node={child}\r\n                                    depth={depth + 1}\r\n                                    filters={filters}\r\n                                />\r\n                            ))}\r\n                        </Box>\r\n                    )}\r\n\r\n                    {canFetchMore && expanded && (\r\n                        <Box sx={{ mt: 1 }}>\r\n                            {loadingChildren ? (\r\n                                <Box display=\"flex\" justifyContent=\"center\" p={2}>\r\n                                    <CircularProgress size={24} />\r\n                                </Box>\r\n                            ) : childData.length > 0 ? (\r\n                                childData.map((item) => (\r\n                                    <ExpenseNode\r\n                                        key={item.group_id || item.Acc_Id}\r\n                                        node={item}\r\n                                        depth={depth + 1}\r\n                                        filters={filters}\r\n                                    />\r\n                                ))\r\n                            ) : (\r\n                                <Typography variant=\"body2\" sx={{ p: 2, textAlign: 'center', color: 'text.secondary' }}>\r\n                                    No additional data available\r\n                                </Typography>\r\n                            )}\r\n                        </Box>\r\n                    )}\r\n                </Collapse>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst ExpenseHierarchy = () => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    const [hierarchy, setHierarchy] = useState([]);\r\n    const [fullHierarchy, setFullHierarchy] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [filterDialogOpen, setFilterDialogOpen] = useState(false);\r\n    const [filterOptions, setFilterOptions] = useState({ accountNames: [] });\r\n    const [filters, setFilters] = useState({\r\n        fromDate: today,\r\n        toDate: today,\r\n        accountName: null,\r\n    });\r\n\r\n    const extractAccountNames = useCallback((nodes, accountNames = new Set()) => {\r\n        nodes.forEach(node => {\r\n            if (node.accounts?.length) {\r\n                node.accounts.forEach(acc => {\r\n                    if (acc.Account_Name) accountNames.add(acc.Account_Name);\r\n                });\r\n            }\r\n            if (node.children?.length) {\r\n                extractAccountNames(node.children, accountNames);\r\n            }\r\n        });\r\n        return accountNames;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (fullHierarchy.length > 0) {\r\n            const accountNames = extractAccountNames(fullHierarchy);\r\n            setFilterOptions(prev => ({\r\n                ...prev,\r\n                accountNames: Array.from(accountNames).sort(),\r\n            }));\r\n        }\r\n    }, [fullHierarchy, extractAccountNames]);\r\n\r\n    const filterHierarchy = useCallback((nodes) => {\r\n        if (!nodes) return [];\r\n        return nodes.reduce((acc, node) => {\r\n            const newNode = { ...node };\r\n            if (newNode.accounts?.length) {\r\n                newNode.accounts = newNode.accounts.filter(acc => {\r\n                    if (filters.accountName && !acc.Account_Name?.toLowerCase().includes(filters.accountName.toLowerCase())) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            if (newNode.children?.length) {\r\n                newNode.children = filterHierarchy(newNode.children);\r\n            }\r\n            const hasMatchingAccounts = newNode.accounts?.length > 0;\r\n            const hasMatchingChildren = newNode.children?.length > 0;\r\n            if (hasMatchingAccounts || hasMatchingChildren) {\r\n                acc.push(newNode);\r\n            }\r\n            return acc;\r\n        }, []);\r\n    }, [filters.accountName]);\r\n\r\n    const fetchExpenseHierarchy = useCallback(async () => {\r\n        try {\r\n            setLoading(true);\r\n            const query = new URLSearchParams({\r\n                fromDate: filters.fromDate,\r\n                toDate: filters.toDate\r\n            }).toString();\r\n            const response = await fetchLink({ address: `/reports/expenseReport?${query}` });\r\n            const data = response.data || [];\r\n            setFullHierarchy(data);\r\n            setHierarchy(data);\r\n        } catch (err) {\r\n            console.error(\"Error fetching expenses:\", err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [filters.fromDate, filters.toDate]);\r\n\r\n    const applyFilters = useCallback(() => {\r\n        if (!filters.accountName) {\r\n            setHierarchy(fullHierarchy);\r\n        } else {\r\n            const filteredData = filterHierarchy(JSON.parse(JSON.stringify(fullHierarchy)));\r\n            setHierarchy(filteredData);\r\n        }\r\n        setFilterDialogOpen(false);\r\n    }, [filters.accountName, fullHierarchy, filterHierarchy]);\r\n\r\n    const resetFilters = useCallback(() => {\r\n        setFilters({\r\n            fromDate: today,\r\n            toDate: today,\r\n            accountName: null,\r\n        });\r\n        setHierarchy(fullHierarchy);\r\n    }, [fullHierarchy, today]);\r\n\r\n    useEffect(() => {\r\n        fetchExpenseHierarchy();\r\n    }, [fetchExpenseHierarchy]);\r\n\r\n    return (\r\n        <Box sx={{ p: 3 }}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n                <Typography variant=\"h5\">Expense Hierarchy</Typography>\r\n                <Box>\r\n                    <Tooltip title=\"Reset filters\">\r\n                        <IconButton onClick={resetFilters} sx={{ mr: 1 }}>\r\n                            <ClearAllOutlined />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Filter options\">\r\n                        <IconButton\r\n                            color=\"primary\"\r\n                            onClick={() => setFilterDialogOpen(true)}\r\n                            sx={{ backgroundColor: 'rgba(25, 118, 210, 0.04)' }}\r\n                        >\r\n                            <FilterListOutlined />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Dialog open={filterDialogOpen} onClose={() => setFilterDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n                <DialogTitle>Filter Options</DialogTitle>\r\n                <DialogContent>\r\n                    <Box display=\"flex\" flexDirection=\"column\" gap={2} sx={{ pt: 2 }}>\r\n                        <TextField\r\n                            type=\"date\"\r\n                            label=\"From Date\"\r\n                            value={filters.fromDate}\r\n                            onChange={(e) => setFilters({ ...filters, fromDate: e.target.value })}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            type=\"date\"\r\n                            label=\"To Date\"\r\n                            value={filters.toDate}\r\n                            onChange={(e) => setFilters({ ...filters, toDate: e.target.value })}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                        />\r\n                        <Autocomplete\r\n                            options={filterOptions.accountNames}\r\n                            value={filters.accountName}\r\n                            onChange={(e, newValue) => setFilters({ ...filters, accountName: newValue })}\r\n                            renderInput={(params) => (\r\n                                <TextField {...params} label=\"Account Name\" fullWidth />\r\n                            )}\r\n                            freeSolo\r\n                        />\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setFilterDialogOpen(false)}>Cancel</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={applyFilters}\r\n                        disabled={loading}\r\n                    >\r\n                        Apply Filters\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {loading ? (\r\n                <Box display=\"flex\" justifyContent=\"center\" p={4}><CircularProgress /></Box>\r\n            ) : hierarchy.length === 0 ? (\r\n                <Paper sx={{ p: 2, textAlign: \"center\" }}>\r\n                    <Typography>No expense data available</Typography>\r\n                </Paper>\r\n            ) : (\r\n                hierarchy.map(group => (\r\n                    <ExpenseNode\r\n                        key={group.group_id}\r\n                        node={group}\r\n                        filters={filters}\r\n                    />\r\n                ))\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ExpenseHierarchy;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14z\"\n}), 'Remove');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}"],"names":["createSvgIcon","_jsx","d","calculateTotals","node","_node$accounts","_node$children","debit","credit","accounts","length","forEach","acc","Number","Debit_Amount","Credit_Amount","children","child","childTotals","balance","ExpenseNode","_ref","_node$children2","_node$accounts2","depth","filters","expanded","setExpanded","useState","childData","setChildData","loadingChildren","setLoadingChildren","accountDetails","setAccountDetails","loadingAccountDetails","setLoadingAccountDetails","expandedAccountId","setExpandedAccountId","totals","hasChildren","hasAccounts","isAccountLeaf","Acc_Id","canFetchMore","group_id","fetchChildData","useCallback","async","response","fetchLink","address","params","fromDate","toDate","data","err","console","error","fetchAccountDetails","accId","method","bodyData","acc_id","headers","then","success","prev","filter","_d$Acc_Id","includes","toString","toast","message","catch","finally","Box","sx","ml","_jsxs","Paper","mb","p","backgroundColor","overflow","display","alignItems","cursor","minHeight","onClick","handleExpandClick","flex","minWidth","IconButton","size","mr","ExpandLess","ExpandMore","AccountTreeOutlined","color","AccountBalanceOutlined","Typography","fontWeight","noWrap","group_name","Account_Name","justifyContent","gap","pr","variant","textAlign","NumberFormat","toFixed","Math","abs","Collapse","in","TableContainer","mt","Table","tableLayout","style","width","TableHead","TableRow","TableCell","align","TableBody","map","_acc$children","isLeafAccount","React","hover","textOverflow","AttachMoneyOutlined","fontSize","e","handleAccountExpand","stopPropagation","some","detail","_detail$Acc_Id","Remove","Add","colSpan","CircularProgress","_detail$Acc_Id2","_detail$Acc_Id3","idx","Date","Ledger_Date","toLocaleDateString","day","month","year","replace","invoice_no","Particulars","Debit_Amt","Credit_Amt","item","ExpenseHierarchy","today","toISOString","split","hierarchy","setHierarchy","fullHierarchy","setFullHierarchy","loading","setLoading","filterDialogOpen","setFilterDialogOpen","filterOptions","setFilterOptions","accountNames","setFilters","accountName","extractAccountNames","nodes","arguments","undefined","Set","_node$accounts3","_node$children3","add","useEffect","Array","from","sort","filterHierarchy","reduce","_newNode$accounts","_newNode$children","_newNode$accounts2","_newNode$children2","newNode","_acc$Account_Name","toLowerCase","hasMatchingAccounts","hasMatchingChildren","push","fetchExpenseHierarchy","query","URLSearchParams","applyFilters","filteredData","JSON","parse","stringify","resetFilters","Tooltip","title","ClearAllOutlined","FilterListOutlined","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","flexDirection","pt","TextField","type","label","value","onChange","target","InputLabelProps","shrink","Autocomplete","options","newValue","renderInput","freeSolo","DialogActions","Button","disabled","group","generateUtilityClasses","defaultTheme","createTheme","createBox","themeId","THEME_ID","defaultClassName","boxClasses","root","generateClassName","ClassNameGenerator","generate","_excluded","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","className","component","other","_objectWithoutPropertiesLoose","_extends","as","clsx"],"sourceRoot":""}
{"version":3,"file":"static/js/5312.1dba0167.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Pages/Sales/SalesReportComponent/NewDeliveryOrder.jsx"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, IconButton } from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    isEqualNumber, isGraterNumber, isValidObject, ISOString, getUniqueData,\r\n    Multiplication, Division, NumberFormat, Subraction, numberToWords,\r\n    RoundNumber, Addition\r\n} from \"../../../Components/functions\";\r\nimport { Add, Clear, ClearAll, Delete, Edit, Save } from \"@mui/icons-material\";\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\n\r\n\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst NewDeliveryOrder = ({ editValues, loadingOn, loadingOff, reload, switchScreen, editOn }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [productBrand, setProductBrand] = useState([]);\r\n    const [productUOM, setProductUOM] = useState([]);\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const [voucherType, setVoucherType] = useState([]);\r\n\r\n    const [branch, setBranch] = useState([]);\r\n    const initialValue = {\r\n        Company_Id: storage?.Company_id,\r\n        Do_Date: ISOString(),\r\n        VoucherType: '',\r\n        Retailer_Id: '',\r\n        Retailer_Name: 'Select',\r\n        Delivery_Status: 1,\r\n        Delivery_Person_Id: 0,\r\n        Payment_Ref_No: '',\r\n        Delivery_Person_Name: '',\r\n        Payment_Mode: 0,\r\n        Payment_Status: 0,\r\n        Branch_Id: storage?.BranchId,\r\n        Narration: '',\r\n        Created_by: storage?.UserId,\r\n        Product_Array: [],\r\n        So_No: editValues?.So_Id,\r\n        GST_Inclusive: 1,\r\n        IS_IGST: 0,\r\n    }\r\n\r\n    const productInitialDetails = {\r\n        Item_Id: '',\r\n        ItemName: 'Search Item',\r\n        Bill_Qty: 0,\r\n        Item_Rate: 0,\r\n        UOM: '',\r\n        Units: '',\r\n        Product: {},\r\n        Group: 'Search Group',\r\n        GroupID: '',\r\n        Brand: 'Search Brand',\r\n        BrandID: '',\r\n        Amount: 0\r\n    }\r\n\r\n    const [orderDetails, setOrderDetails] = useState(initialValue)\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n    const [productDetails, setProductDetails] = useState(productInitialDetails);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [addProductDialog, setAddProductDialog] = useState(false);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n    const [deliveryPerson, setDeliveryPerson] = useState(null);\r\n    const [deliveryPersonList, setDeliveryPersonList] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchLocation = async () => {\r\n            try {\r\n                const position = await new Promise((resolve, reject) => {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n                });\r\n                const { latitude, longitude } = position.coords;\r\n\r\n                setOrderDetails(pre => ({\r\n                    ...pre,\r\n                    Delivery_Latitude: latitude,\r\n                    Delivery_Longitude: longitude,\r\n                }));\r\n            } catch (error) {\r\n                console.error(error)\r\n                toast.warn('Unable to fetch location. Allow location access.');\r\n            }\r\n        };\r\n\r\n        if (isValidObject(editValues)) {\r\n\r\n            setOrderDetails(pre => ({\r\n                ...pre,\r\n                Do_Id: editValues?.Do_Id,\r\n                Do_Date: editValues?.Do_Date ?? ISOString(),\r\n                VoucherType: editValues?.Voucher_Type,\r\n                Retailer_Id: editValues?.Retailer_Id,\r\n                Retailer_Name: editValues?.Retailer_Name,\r\n                Delivery_Status: editValues?.Delivery_Status,\r\n                Delivery_Person_Id: editValues?.Delivery_Person_Id,\r\n                Delivery_Person_Name: editValues?.Delivery_Person_Name,\r\n                Payment_Status: editValues?.Payment_Status,\r\n                Payment_Mode: editValues?.Payment_Mode,\r\n                Branch_Id: editValues?.Branch_Id,\r\n                Narration: editValues?.Narration,\r\n                Created_by: editValues?.Created_by,\r\n                Payment_Ref_No: editValues?.Payment_Ref_No,\r\n                So_No: editValues?.So_Id,\r\n                GST_Inclusive: editValues?.GST_Inclusive,\r\n                IS_IGST: editValues?.IS_IGST,\r\n\r\n            }));\r\n            setOrderProducts(editValues?.Products_List?.map(pro => ({\r\n                ...pro,\r\n                Item_Id: pro.Item_Id ?? '',\r\n                ItemName: pro?.Product_Name ?? \"\",\r\n                Bill_Qty: pro?.Bill_Qty ?? 0,\r\n                Item_Rate: pro?.Item_Rate ?? 0,\r\n                UOM: pro?.Unit_Id ?? '',\r\n                Units: pro?.Units ?? '',\r\n                Product: {\r\n                    ...pro,\r\n                    Cgst_P: Number(findProductDetails(products, pro.Item_Id)?.Cgst_P) ?? 0,\r\n                    Sgst_P: Number(findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0,\r\n                    Igst_P: Number(findProductDetails(products, pro.Item_Id)?.Igst_P) ?? 0,\r\n                    Gst_P: Addition(findProductDetails(products, pro.Item_Id)?.Cgst_P, findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0\r\n                } ?? {},\r\n                Group: 'Search Group',\r\n                GroupID: '',\r\n                Brand: 'Search Brand',\r\n                BrandID: '',\r\n                Amount: pro?.Amount ?? 0\r\n            })));\r\n            setIsEdit(true)\r\n            if (!editValues?.Latitude || !editValues?.Longitude) {\r\n                fetchLocation();\r\n            }\r\n        } else {\r\n            setOrderDetails(initialValue);\r\n            setOrderProducts([])\r\n            setIsEdit(false)\r\n        }\r\n    }, [editValues, products])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/uom`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProductUOM(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/products?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProducts(data.data);\r\n\r\n                const uniqueBrand = getUniqueData(data.data, 'Brand', ['Brand_Name']);\r\n                setProductBrand(uniqueBrand);\r\n\r\n            } else {\r\n                setProducts([]);\r\n                setProductBrand([]);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setDeliveryPersonList(data.data);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `purchase/voucherType`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setVoucherType(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/branch/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setBranch(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    const handleProductInputChange = (productId, value, rate, obj, UOM_Id, Units) => {\r\n        const productIndex = orderProducts.findIndex(item => isEqualNumber(item.Item_Id, productId));\r\n\r\n        if (productIndex !== -1) {\r\n            const updatedValues = [...orderProducts];\r\n            updatedValues[productIndex].Bill_Qty = Number(value);\r\n            updatedValues[productIndex].Item_Rate = Number(rate);\r\n            updatedValues[productIndex].UOM = UOM_Id;\r\n            updatedValues[productIndex].Units = Units;\r\n            updatedValues[productIndex].Amount = Multiplication(value, rate);\r\n            updatedValues[productIndex] = { ...updatedValues[productIndex], Product: obj }\r\n\r\n            setOrderProducts(updatedValues);\r\n        } else {\r\n            setOrderProducts(prevValues => [...prevValues, {\r\n                Item_Id: productId,\r\n                Bill_Qty: Number(value),\r\n                Item_Rate: Number(rate),\r\n                UOM: UOM_Id,\r\n                Units: Units,\r\n                Amount: Multiplication(value, rate),\r\n                Product: obj\r\n            }]);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const postSaleOrder = () => {\r\n        if (orderProducts?.length > 0 && orderDetails?.Retailer_Id) {\r\n            loadingOn();\r\n            console.log(\"fasdadadas\", orderProducts)\r\n            fetchLink({\r\n                address: `delivery/deliveryOrder`,\r\n                method: (isEdit && !editOn) ? 'PUT' : 'POST',\r\n\r\n                bodyData: {\r\n                    ...orderDetails,\r\n                    Product_Array: orderProducts.filter(o => isGraterNumber(o?.Bill_Qty, 0)),\r\n                    Delivery_Person_Id: deliveryPerson ? deliveryPerson.UserId : Number(orderDetails?.Delivery_Person_Id),\r\n                    Payment_Status: (orderDetails?.Payment_Status) ? Number(orderDetails?.Payment_Status) : 1,\r\n                    Payment_Ref_No: orderDetails?.Payment_Ref_No,\r\n                    Delivery_Status: (orderDetails?.Delivery_Status) ? Number(orderDetails?.Delivery_Status) : 1,\r\n                    Payment_Mode: (orderDetails?.Payment_Mode) ? Number(orderDetails?.Payment_Mode) : 1\r\n                }\r\n\r\n            }).then(data => {\r\n\r\n                if (data.success) {\r\n                    toast.success(data?.message);\r\n\r\n                    setOrderDetails(initialValue);\r\n                    setOrderProducts([])\r\n                    reload()\r\n                } else {\r\n                    toast.error(data?.message)\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => loadingOff())\r\n\r\n        } else {\r\n            if (orderProducts.length <= 0) {\r\n                return toast.error('Enter any one product quantity')\r\n            }\r\n            if (!orderDetails?.Retailer_Id) {\r\n                toast.error('Select Retailer')\r\n                return toast.error('Select Retailer')\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeAddProduct = () => {\r\n        setAddProductDialog(false);\r\n        setProductDetails(productInitialDetails);\r\n    }\r\n\r\n    const Total_Invoice_value = orderProducts.reduce((o, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty);\r\n        const Amount = Multiplication(billQty, itemRate);\r\n\r\n        if (isInclusive || isNotTaxableBill) {\r\n            return o += Amount;\r\n        }\r\n\r\n        if (isExclusiveBill) {\r\n            const product = findProductDetails(products, item.Item_Id);\r\n            const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n            const tax = taxCalc(0, itemRate, gstPercentage)\r\n            return o += (Amount + (tax * billQty));\r\n        }\r\n        return o;\r\n    }, 0);\r\n\r\n    const totalValueBeforeTax = orderProducts.reduce((acc, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty) || 0;\r\n\r\n        if (isNotTaxableBill) {\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n            return acc;\r\n        }\r\n\r\n        const product = findProductDetails(products, item.Item_Id);\r\n        const gstPercentage = IS_IGST ? product.Igst_P : product.Gst_P;\r\n\r\n        if (isInclusive) {\r\n            const itemTax = taxCalc(1, itemRate, gstPercentage);\r\n            const basePrice = Subraction(itemRate, itemTax);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, basePrice);\r\n        }\r\n        if (isExclusiveBill) {\r\n            const itemTax = taxCalc(0, itemRate, gstPercentage);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n        }\r\n\r\n        return acc;\r\n    }, {\r\n        TotalValue: 0,\r\n        TotalTax: 0\r\n    });\r\n\r\n    useEffect(() => {\r\n        setOrderProducts(pre => pre?.map(pro => ({\r\n            ...pro,\r\n            Amount: Multiplication(pro?.Item_Rate, pro?.Bill_Qty)\r\n        })));\r\n    }, [orderDetails.GST_Inclusive])\r\n\r\n    const handleDeliveryPersonChange = (selectedOption) => {\r\n\r\n        setDeliveryPerson(selectedOption ? { UserId: selectedOption.value, Name: selectedOption.label } : null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {editOn && (\r\n                <>\r\n                    <h6 className=\"fa-18 m-0 p-3 py-2 d-flex align-items-center justify-content-between\">Create Delivery Order</h6>\r\n                </>\r\n            )}\r\n\r\n            <div className=\"p-3 pt-0\">\r\n                {/* CompnayInfo  */}\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">From:</h5>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-md-7\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\" colSpan={2}>\r\n                                            {companyInfo?.Company_Name}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{companyInfo?.Company_Address}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{companyInfo?.Telephone_Number}</td>\r\n                                    </tr>\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-5\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Date:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={orderDetails?.Do_Date ? ISOString(orderDetails?.Do_Date) : ''}\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Do_Date: e.target.value })}\r\n                                                className=\"cus-inpt p-1\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Invoice Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, GST_Inclusive: Number(e.target.value) })}\r\n                                                value={orderDetails.GST_Inclusive}\r\n                                            >\r\n                                                <option value={1}>Inclusive Tax</option>\r\n                                                <option value={0}>Exclusive Tax</option>\r\n                                                <option value={2}>Not Taxable</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Tax Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, IS_IGST: Number(e.target.value) })}\r\n                                                value={orderDetails.IS_IGST}\r\n                                            >\r\n                                                <option value='0'>GST</option>\r\n                                                <option value='1'>IGST</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Branch</td>\r\n\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1 \"\r\n                                                onChange={e => setOrderDetails({\r\n                                                    ...orderDetails,\r\n                                                    VoucherType: e.target.value\r\n                                                })}\r\n\r\n                                                value={orderDetails.VoucherType}\r\n                                            >\r\n\r\n                                                <option value='' disabled>select voucher</option>\r\n                                                {voucherType.map((vou, ind) => (\r\n                                                    <option\r\n                                                        value={vou.Vocher_Type_Id}\r\n                                                        key={ind}\r\n                                                    >\r\n                                                        {vou.Voucher_Type}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Branch</td>\r\n\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Branch_Id: Number(e.target.value) })}\r\n                                                value={orderDetails.Branch_Id}\r\n                                            >\r\n                                                <option value='' disabled>select Branch</option>\r\n                                                {branch.map((branch, ind) => (\r\n                                                    <option value={branch.BranchId} key={ind}>{branch.BranchName}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Customer Info */}\r\n\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">To:</h5>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Retailer Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Retailer_Id, label: orderDetails?.Retailer_Name }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Retailer_Id: e.value, Retailer_Name: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Retailer Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{storage.Name}</td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{ }</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Delivery_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Delivery_Status: e.target.value })}\r\n                                                value={orderDetails.Delivery_Status ? orderDetails.Delivery_Status : 1}\r\n                                            >\r\n                                                <option value={5}>Pending</option>\r\n\r\n                                                <option value={7}>Delivered</option>\r\n                                                <option value={6}>Return</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Mode:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Payment_Mode: e.target.value })}\r\n                                                value={orderDetails.Payment_Mode || 0}\r\n                                            >\r\n                                                <option value={0}></option>\r\n                                                <option value={1}>Cash</option>\r\n                                                <option value={3}>QR-Pay</option>\r\n                                                <option value={2}>G-Pay</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Q-Pay:</td>\r\n                                        <td className=\"border-0 bg-light\">{10}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Frequency Days:</td>\r\n                                        <td className=\"border-0 bg-light\">{20}</td>\r\n                                    </tr>\r\n\r\n\r\n\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Payment_Status: Number(e.target.value) })}\r\n                                                value={orderDetails.Payment_Status}\r\n                                            >\r\n                                                <option value={1}>Pending</option>\r\n\r\n                                                <option value={3}>Complete</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Delivery Person Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={\r\n                                                    deliveryPerson\r\n                                                        ? { value: deliveryPerson.UserId, label: deliveryPerson.Name }\r\n                                                        : { value: orderDetails?.Delivery_Person_Id, label: orderDetails?.Delivery_Person_Name }\r\n                                                }\r\n                                                onChange={handleDeliveryPersonChange}\r\n                                                options={[\r\n                                                    { value: '', label: 'Select', isDisabled: true },\r\n                                                    ...deliveryPersonList.map((obj) => ({\r\n                                                        value: obj.UserId,\r\n                                                        label: obj.Name,\r\n                                                    })),\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\r\n                                                    deliveryPerson\r\n                                                        ? deliveryPerson.Name\r\n                                                        : 'Sales Person Name'\r\n                                                }\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment Reference No:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Payment_Ref_No: e.target.value })}\r\n                                                value={orderDetails?.Payment_Ref_No}  // Default to empty string if no value available\r\n                                                placeholder=\"Enter Payment Reference Number\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* Actions */}\r\n                <div className=\"d-flex align-items-end justify-content-end flex-wrap mb-3\">\r\n\r\n                    <Button\r\n                        onClick={() => setAddProductDialog(true)}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        startIcon={<Add />}\r\n                    >Add Product</Button>\r\n                </div>\r\n\r\n                <FilterableTable\r\n                    dataArray={orderProducts}\r\n                    columns={[\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.Product_Name,\r\n                            ColumnHeader: 'Product',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.HSN_Code,\r\n                            ColumnHeader: 'HSN Code',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Bill_Qty + ' ' + (row?.Units ?? ''),\r\n                            ColumnHeader: 'Quantity',\r\n                            isVisible: 1,\r\n                            align: 'center'\r\n                        },\r\n                        {\r\n                            Field_Name: 'Item_Rate',\r\n                            ColumnHeader: \"Rate\",\r\n                            Fied_Data: 'number',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Taxable Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST ? row?.Product?.Igst_P : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage);\r\n                                return NumberFormat(\r\n                                    isInclusive ? (amount - tax) : amount\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST ? row?.Product?.Igst_P : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                return NumberFormat(\r\n                                    taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                ) + ' (' + percentage + '%)'\r\n                            },\r\n                            ColumnHeader: 'Tax',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST\r\n                                        ? row?.Product?.Igst_P\r\n                                        : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)\r\n                                ) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                return NumberFormat(\r\n                                    isEqualNumber(orderDetails.GST_Inclusive, 1) ? amount : (amount + tax)\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return (\r\n                                    <>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                setProductDetails({\r\n                                                    Item_Id: row.Item_Id,\r\n                                                    ItemName: row?.Product?.Product_Name,\r\n                                                    Bill_Qty: row.Bill_Qty,\r\n                                                    Item_Rate: row.Item_Rate,\r\n                                                    UOM: row.Product.UOM_Id,\r\n                                                    Product: row.Product,\r\n                                                    Group: row?.Product?.Pro_Group,\r\n                                                    GroupID: row?.Product?.Product_Group,\r\n                                                    Brand: row?.Product?.Brand_Name,\r\n                                                    BrandID: row?.Product?.Brand,\r\n                                                    Amount: row?.Amount\r\n                                                });\r\n                                                setAddProductDialog(true);\r\n                                            }}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setOrderProducts(pre => pre.filter(obj => !isEqualNumber(obj.Item_Id, row.Item_Id)))\r\n                                            }}\r\n                                            color='error'\r\n                                        >\r\n                                            <Delete />\r\n                                        </IconButton>\r\n\r\n                                    </>\r\n                                )\r\n                            },\r\n                            ColumnHeader: 'Action',\r\n                            isVisible: 1,\r\n                        },\r\n                    ]}\r\n                    EnableSerialNumber\r\n                    CellSize=\"small\"\r\n                    disablePagination={true}\r\n                />\r\n\r\n\r\n                {orderProducts.length > 0 && (\r\n                    <div className=\"d-flex justify-content-end py-2\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border p-2\" rowSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 4 : 5}>\r\n                                        Total in words: {numberToWords(parseInt(Total_Invoice_value))}\r\n                                    </td>\r\n                                    <td className=\"border p-2\">Total Taxable Amount</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                    </td>\r\n                                </tr>\r\n                                {!isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">CGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">SGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </>\r\n                                ) : (\r\n                                    <tr>\r\n                                        <td className=\"border p-2\">IGST</td>\r\n                                        <td className=\"border p-2\">\r\n                                            {NumberFormat(totalValueBeforeTax.TotalTax)}\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Round Off</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(\r\n                                            Total_Invoice_value - (\r\n                                                totalValueBeforeTax.TotalValue + totalValueBeforeTax.TotalTax\r\n                                            )\r\n                                        )}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Total</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(Total_Invoice_value)}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n\r\n                <p className=\"fa-15 mt-3 m-0\">Narration</p>\r\n                <textarea\r\n                    className=\"cus-inpt \"\r\n                    value={orderDetails.Narration}\r\n                    onChange={e => setOrderDetails(pre => ({ ...pre, Narration: e.target.value }))}\r\n                />\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                        variant='outlined'\r\n                        startIcon={<Clear />}\r\n                        onClick={switchScreen}\r\n                    >\r\n                        {'cancel'}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={postSaleOrder}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        color='success'\r\n                        startIcon={<Save />}\r\n                        disabled={orderProducts?.length === 0 || !orderDetails?.Retailer_Id}\r\n                    >Save</Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={addProductDialog}\r\n                onClose={closeAddProduct}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (productDetails.Item_Id && productDetails.Bill_Qty && productDetails.Item_Rate) {\r\n                        handleProductInputChange(\r\n                            productDetails.Item_Id,\r\n                            productDetails.Bill_Qty,\r\n                            productDetails.Item_Rate,\r\n                            productDetails.Product,\r\n                            productDetails.UOM,\r\n                            productDetails.Units,\r\n                        );\r\n                        closeAddProduct();\r\n                    } else {\r\n                        toast.warn(!productDetails.Item_Id ? 'Select Product' : !productDetails.Bill_Qty ? 'Enter Quantity' : 'Enter Rate or Amount');\r\n                    }\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.BrandID, label: productDetails.Brand }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, BrandID: e.value, Brand: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productBrand.map(obj => ({ value: obj?.Brand, label: obj?.Brand_Name }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, GroupID: e.value, Group: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productGroup.map(obj => ({ value: obj?.Product_Group, label: obj?.Pro_Group }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div> */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({ ...pre, GroupID: e.value, Group: e.label }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...products\r\n                                            .filter(\r\n                                                (pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 p-2\">\r\n                                <label>Item Name <RequiredStar /></label>\r\n                                <Select\r\n                                    value={{ value: productDetails.Item_Id, label: productDetails.ItemName }}\r\n                                    onChange={e => {\r\n                                        const productInfo = products.find(pro => isEqualNumber(pro.Product_Id, e.value))\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n                                            Item_Id: e.value,\r\n                                            ItemName: e.label,\r\n                                            Product: productInfo ?? {},\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n                                            UOM: productInfo.UOM_Id ?? pre.UOM,\r\n                                            Units: productInfo.Units ?? pre.Units,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Amount: 0,\r\n                                            Bill_Qty: 0,\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter(pro => productDetails.BrandID ? isEqualNumber(pro.Brand, productDetails.BrandID) : true)\r\n                                                .filter(pro => productDetails.GroupID ? isEqualNumber(pro.Product_Group, productDetails.GroupID) : true)\r\n                                        ].map(obj => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled: (\r\n                                                orderProducts.findIndex(ind => isEqualNumber(\r\n                                                    ind?.Item_Id, obj?.Product_Id\r\n                                                ))\r\n                                            ) === -1 ? false : true\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Quantity <RequiredStar /></label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : ''}\r\n                                    onChange={e => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(productDetails.Item_Rate, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else if (productDetails.Amount) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(pre.Amount, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Rate </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Item_Rate ? NumberFormat(productDetails.Item_Rate) : ''}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Item_Rate: e.target.value,\r\n                                        Amount: pre.Bill_Qty ? Multiplication(e.target.value, pre.Bill_Qty) : pre.Amount\r\n                                    }))}\r\n                                    min={1}\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <select\r\n                                    value={productDetails.UOM}\r\n                                    onChange={e => {\r\n                                        const selectedIndex = e.target.selectedIndex;\r\n                                        const label = e.target.options[selectedIndex].text;\r\n                                        const value = e.target.value;\r\n                                        setProductDetails(pre => ({ ...pre, UOM: value, Units: label }));\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                >\r\n                                    <option value=\"\" disabled>select</option>\r\n                                    {productUOM.map((o, i) => (\r\n                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Amount ? productDetails.Amount : ''}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Amount: e.target.value,\r\n                                        Item_Rate: pre.Bill_Qty ? Division(e.target.value, pre.Bill_Qty) : pre.Item_Rate\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions className=\"d-flex justify-content-between align-items-center\">\r\n                        <Button onClick={() => setProductDetails(productInitialDetails)} type='button' startIcon={<ClearAll />}>Clear</Button>\r\n                        <span>\r\n                            <Button type=\"button\" onClick={closeAddProduct}>cancel</Button>\r\n                            <Button type='submit' variant=\"outlined\">Add</Button>\r\n                        </span>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default NewDeliveryOrder;"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","taxCalc","amount","arguments","length","undefined","percentage","RoundNumber","findProductDetails","_arr$find","productid","find","obj","isEqualNumber","Product_Id","_ref","editValues","loadingOn","loadingOff","reload","switchScreen","editOn","storage","JSON","parse","localStorage","getItem","retailers","setRetailers","useState","products","setProducts","productBrand","setProductBrand","productUOM","setProductUOM","companyInfo","setCompanyInfo","voucherType","setVoucherType","branch","setBranch","initialValue","Company_Id","Company_id","Do_Date","ISOString","VoucherType","Retailer_Id","Retailer_Name","Delivery_Status","Delivery_Person_Id","Payment_Ref_No","Delivery_Person_Name","Payment_Mode","Payment_Status","Branch_Id","BranchId","Narration","Created_by","UserId","Product_Array","So_No","So_Id","GST_Inclusive","IS_IGST","productInitialDetails","Item_Id","ItemName","Bill_Qty","Item_Rate","UOM","Units","Product","Group","GroupID","Brand","BrandID","Amount","orderDetails","setOrderDetails","orderProducts","setOrderProducts","productDetails","setProductDetails","isEdit","setIsEdit","addProductDialog","setAddProductDialog","isExclusiveBill","isInclusive","isNotTaxableBill","deliveryPerson","setDeliveryPerson","deliveryPersonList","setDeliveryPersonList","useEffect","_editValues$Products_","isValidObject","pre","_editValues$Do_Date","_objectSpread","Do_Id","Voucher_Type","Products_List","map","pro","_pro$Item_Id","_pro$Product_Name","_pro$Bill_Qty","_pro$Item_Rate","_pro$Unit_Id","_pro$Units","_pro$Cgst_P$Sgst_P$Ig","_Number","_findProductDetails","_Number2","_findProductDetails2","_Number3","_findProductDetails3","_Addition","_findProductDetails4","_findProductDetails5","_pro$Amount","Product_Name","Unit_Id","Cgst_P","Number","Sgst_P","Igst_P","Gst_P","Addition","Latitude","Longitude","async","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","Delivery_Latitude","Delivery_Longitude","error","console","toast","warn","fetchLocation","fetchLink","address","concat","then","data","success","catch","e","uniqueBrand","getUniqueData","closeAddProduct","Total_Invoice_value","reduce","o","item","itemRate","billQty","parseInt","Multiplication","product","gstPercentage","totalValueBeforeTax","acc","TotalValue","itemTax","basePrice","Subraction","TotalTax","_jsxs","_Fragment","className","colSpan","Company_Name","Company_Address","Telephone_Number","type","value","onChange","target","disabled","vou","ind","Vocher_Type_Id","BranchName","Select","label","options","isDisabled","styles","customSelectStyles","isSearchable","placeholder","maxMenuHeight","Name","selectedOption","Button","onClick","sx","ml","variant","startIcon","Add","FilterableTable","dataArray","columns","isCustomCell","Cell","_ref2","_row$Product","row","ColumnHeader","isVisible","_ref3","_row$Product2","HSN_Code","_ref4","_row$Units","align","Field_Name","Fied_Data","_ref5","_ref6","_row$Product3","_row$Product4","_row$Product5","_row$Amount","tax","NumberFormat","_ref7","_ref8","_row$Product6","_row$Product7","_row$Product8","_row$Amount2","_ref9","_ref10","_row$Product9","_row$Product10","_row$Product11","_row$Amount3","_ref11","IconButton","_row$Product12","_row$Product13","_row$Product14","_row$Product15","_row$Product16","UOM_Id","Pro_Group","Product_Group","Brand_Name","size","Edit","filter","Delete","EnableSerialNumber","CellSize","disablePagination","rowSpan","numberToWords","Clear","postSaleOrder","log","method","bodyData","isGraterNumber","message","finally","Save","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","onSubmit","preventDefault","handleProductInputChange","productId","rate","productIndex","findIndex","updatedValues","prevValues","DialogContent","some","grp","push","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$UOM_Id","_productInfo$Units","_productInfo$Item_Rat","required","Division","min","selectedIndex","text","i","DialogActions","ClearAll"],"sourceRoot":""}
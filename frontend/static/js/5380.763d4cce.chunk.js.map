{"version":3,"file":"static/js/5380.763d4cce.chunk.js","mappings":"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","sources":["Components/imagePreview.jsx","Components/tablecolumn.js","../node_modules/@mui/icons-material/esm/PersonAdd.js","Pages/Attendance/visitLogs.jsx","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/LocationOn.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle, IconButton, Tooltip } from '@mui/material';\r\nimport { Close } from '@mui/icons-material';\r\n\r\nconst ImagePreviewDialog = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const { url } = props;\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <span>\r\n\r\n            <Tooltip title=\"Tap to Open\">\r\n                <span onClick={handleOpen} style={{ cursor: 'pointer' }}>{props.children}</span>\r\n            </Tooltip>\r\n\r\n            <Dialog open={open} onClose={handleClose} fullWidth maxWidth='lg'>\r\n\r\n                <DialogTitle className='bg-dark text-white d-flex justify-content-between'>\r\n                    <span>Image Preview</span>\r\n                    <IconButton onClick={handleClose}><Close sx={{ color: 'white' }} /></IconButton>\r\n                </DialogTitle>\r\n\r\n                <DialogContent className='bg-dark pb-4 d-flex align-items-center justify-content-center'>\r\n                    <img src={url} alt=\"Preview\" style={{ maxWidth: '100%', maxHeight: '100%' }} />\r\n                </DialogContent>\r\n\r\n                {/* <DialogActions className='bg-dark'>\r\n                    <Button startIcon={<Close />} variant='outlined' color=\"primary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions> */}\r\n\r\n            </Dialog>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default ImagePreviewDialog;","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: '45px',\r\n        background: 'rgba(255, 255, 255, 0.322)'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n            ? '#E2ECF9'\r\n            : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m-9-2V7H4v3H1v2h3v3h2v-3h3v-2zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'PersonAdd');","import React, { useState, useEffect } from \"react\";\r\nimport { IconButton, Card, CardContent, Tooltip } from \"@mui/material\";\r\nimport { LocationOn, PersonAdd } from \"@mui/icons-material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles, customTableStyles } from \"../../Components/tablecolumn\"; \r\n// import { toast } from 'react-toastify';\r\nimport { ISOString, LocalTime } from \"../../Components/functions\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport ImagePreviewDialog from \"../../Components/imagePreview\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst VisitedLogs = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const nav = useNavigate()\r\n\r\n    const [logData, setLogData] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n\r\n    const [filter, setFilter] = useState({\r\n        UserId: '',\r\n        UserGet: 'All Sales Person',\r\n        reqDate: ISOString(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `empAttendance/visitLogs?UserId=${filter?.UserId}&reqDate=${filter?.reqDate}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setLogData(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n        \r\n    }, [filter?.UserId, filter?.reqDate])\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSalePerson(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n            \r\n    }, [storage?.Company_id])\r\n\r\n    const logColumns = [\r\n        {\r\n            name: 'Picture',\r\n            cell: row => (\r\n                <span className=\"py-1\">\r\n                    <ImagePreviewDialog url={row?.imageUrl}>\r\n                        <img\r\n                            src={row?.imageUrl}\r\n                            alt={'Picture'}\r\n                            style={{ height: 150, width: 150 }}\r\n                        />\r\n                    </ImagePreviewDialog>\r\n                </span>\r\n            ),\r\n            sortable: false,\r\n            maxWidth: '170px'\r\n        },\r\n        {\r\n            name: 'Retailer Info',\r\n            cell: row => (\r\n                <div className=\"py-2 w-100\">\r\n                    <h6>\r\n                        {row?.EntryByGet}, {LocalTime(row?.EntryAt)}\r\n                    </h6>\r\n                    <p className=\"mb-2\">{row?.Narration && ('Narration: ' + row?.Narration)}</p>\r\n\r\n                    <div className=\"table-responisve rounded-3 border p-2\">\r\n                        <table className=\"mb-0\">\r\n                            <tbody >\r\n                                <tr>\r\n                                    <td className=\"border-0\">Reatailer </td>\r\n                                    <td className=\"border-0\">\r\n                                        {row?.Reatailer_Name}\r\n                                        <span className=\"ps-2\">\r\n                                            {!Boolean(row?.IsExistingRetailer) && <span className=\"p-2 py-0 fa-10 rounded-4 bg-success text-white fw-bold\">New</span>}\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"pe-4 border-0\">Contact_Person </td>\r\n                                    <td className=\"border-0\"> {row?.Contact_Person}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-0\">Mobile </td>\r\n                                    <td className=\"border-0\">{row?.Contact_Mobile}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-0\">Address </td>\r\n                                    <td className=\"border-0\">{row?.Location_Address}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-0\">Location </td>\r\n                                    <td className=\"border-0\">\r\n                                        {row?.Latitude + ', ' + row?.Longitude}\r\n\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Actions</td>\r\n                                    <td className=\"border-0\" >\r\n                                        {(row?.Latitude && row.Longitude) && (\r\n                                            <Tooltip title='Open in Google Map'>\r\n                                                <IconButton\r\n                                                    size=\"small\"\r\n                                                    onClick={() => window.open(`https://www.google.com/maps/search/?api=1&query=${row?.Latitude},${row?.Longitude}`, '_blank')}\r\n                                                    color='primary'>\r\n                                                    <LocationOn className=\"fa-18\" />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        )}\r\n                                        {!Boolean(row?.IsExistingRetailer) && (\r\n                                            <Tooltip title='Convert as a Retailer'>\r\n                                                <IconButton\r\n                                                    color='primary'\r\n                                                    size=\"small\"\r\n                                                    onClick={() => nav('/masters/retailers', {\r\n                                                        state: {\r\n                                                            retailer: row\r\n                                                        }\r\n                                                    })}\r\n                                                >\r\n                                                    <PersonAdd />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        )}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            ),\r\n            minWidth: '500px'\r\n        },\r\n        // {\r\n        //     name: 'Entry By',\r\n        //     selector: row => row?.EntryByGet,\r\n        //     sortable: true,\r\n        // },\r\n        // {\r\n        //     name: 'Retailer',\r\n        //     selector: row => row?.Reatailer_Name,\r\n        //     sortable: true,\r\n        // },\r\n        // {\r\n        //     name: 'Contact Person',\r\n        //     selector: row => row?.Contact_Person,\r\n        //     sortable: true,\r\n        // },\r\n        // {\r\n        //     name: 'Mobile',\r\n        //     selector: row => row?.Contact_Mobile,\r\n        //     sortable: true,\r\n        // },\r\n        // {\r\n        //     name: 'Address',\r\n        //     selector: row => row?.Location_Address,\r\n        //     sortable: true,\r\n        // },\r\n\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent sx={{ minHeight: '300px' }}>\r\n\r\n                    <div className=\"px-3 pt-2 mb-3 d-flex align-items-center justify-content-between\">\r\n                        <h6 className=\"fa-18\">Visit Logs</h6>\r\n                    </div>\r\n\r\n                    <div className=\"row mb-3\">\r\n\r\n                        <div className=\"col-xl-3 col-md-4 col-sm-6\">\r\n                            <label>Sales Person</label>\r\n                            <Select\r\n                                value={{ value: filter?.UserId, label: filter?.UserGet }}\r\n                                onChange={(e) => setFilter({ ...filter, UserId: e.value, UserGet: e.label })}\r\n                                options={[\r\n                                    { value: '', label: 'All SalesPerson' },\r\n                                    ...salesPerson.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                placeholder={\"Sales Person Name\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-3 col-md-4 col-sm-6\">\r\n                            <label>Date</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                value={filter?.reqDate}\r\n                                onChange={e => setFilter({ ...filter, reqDate: e.target.value })}\r\n                                className=\"cus-inpt\"\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"rounded-4 overflow-hidden\" >\r\n                        <DataTable\r\n                            columns={logColumns}\r\n                            data={logData}\r\n                            pagination\r\n                            highlightOnHover={false}\r\n                            fixedHeader={true}\r\n                            fixedHeaderScrollHeight={'60vh'}\r\n                            customStyles={customTableStyles}\r\n                        />\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VisitedLogs;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7m0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5\"\n}), 'LocationOn');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["props","open","setOpen","useState","url","handleClose","_jsxs","children","_jsx","Tooltip","title","onClick","handleOpen","style","cursor","Dialog","onClose","fullWidth","maxWidth","DialogTitle","className","IconButton","Close","sx","color","DialogContent","src","alt","maxHeight","customTableStyles","table","width","backgroundColor","rows","headCells","fontSize","customSelectStyles","control","provided","state","_objectSpread","height","background","menu","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","createSvgIcon","d","VisitedLogs","storage","JSON","parse","localStorage","getItem","nav","useNavigate","logData","setLogData","salesPerson","setSalePerson","filter","setFilter","UserId","UserGet","reqDate","ISOString","useEffect","fetchLink","concat","then","data","success","catch","e","console","error","Company_id","logColumns","cell","row","ImagePreviewDialog","imageUrl","sortable","EntryByGet","LocalTime","EntryAt","Narration","Reatailer_Name","Boolean","IsExistingRetailer","Contact_Person","Contact_Mobile","Location_Address","Latitude","Longitude","size","window","LocationOn","retailer","PersonAdd","minWidth","_Fragment","Card","CardContent","minHeight","Select","value","label","onChange","options","map","obj","Name","styles","isSearchable","placeholder","type","target","DataTable","columns","pagination","highlightOnHover","fixedHeader","fixedHeaderScrollHeight","customStyles","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","root","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined"],"sourceRoot":""}
{"version":3,"file":"static/js/5408.7709f4a6.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","Pages/Payments/PaymentReport/accountTransaction.jsx","../node_modules/@mui/icons-material/esm/ClearAll.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n            ? '#E2ECF9'\r\n            : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","import { useEffect, useState } from \"react\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { ISOString, isValidDate, stringCompare, Subraction, toArray } from \"../../../Components/functions\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { ClearAll, FilterAlt, Search } from \"@mui/icons-material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst initialSelectValue = { value: '', label: '' }\r\n\r\nconst AccountTransaction = ({ loadingOn, loadingOff }) => {\r\n    const [reportData, setReportData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        refresh: false,\r\n        filterDialog: false,\r\n        debitAccount: initialSelectValue,\r\n        creditAccount: initialSelectValue,\r\n        accountType: 'DEBIT ACCOUNT',\r\n        accountGroup: initialSelectValue\r\n    });\r\n\r\n    const [filtersDropDown, setFiltersDropDown] = useState({\r\n        voucherType: [],\r\n        debit_accounts: [],\r\n        credit_accounts: [],\r\n        accountGroups: []\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const query = useQuery();\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n        };\r\n        setFilters(pre => ({ ...pre, Fromdate: queryFilters.Fromdate, Todate: queryFilters.Todate }));\r\n    }, [location.search]);\r\n\r\n    useEffect(() => {\r\n        const Fromdate = (stateDetails?.Fromdate && isValidDate(stateDetails?.Fromdate)) ? ISOString(stateDetails?.Fromdate) : null;\r\n        const Todate = (stateDetails?.Todate && isValidDate(stateDetails?.Todate)) ? ISOString(stateDetails?.Todate) : null;\r\n        if (Fromdate && Todate) {\r\n            updateQueryString({ Fromdate, Todate });\r\n            setFilters(pre => ({\r\n                ...pre,\r\n                Fromdate: ISOString(stateDetails.Fromdate),\r\n                Todate: stateDetails.Todate\r\n            }));\r\n        }\r\n    }, [stateDetails])\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `payment/paymentMaster/filtersValues`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setFiltersDropDown(pre => ({\r\n                    ...pre,\r\n                    voucherType: toArray(data?.others?.voucherType),\r\n                    debit_accounts: toArray(data?.others?.debit_accounts),\r\n                    credit_accounts: toArray(data?.others?.credit_accounts)\r\n                }))\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `payment/accountGroup`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setFiltersDropDown(pre => ({\r\n                    ...pre,\r\n                    accountGroups: toArray(data.data)\r\n                }))\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `payment/reports/accountsTransaction?Fromdate=${filters.Fromdate}&Todate=${filters.Todate}`,\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setReportData(data.data);\r\n            }\r\n        }).catch(e => console.log(e))\r\n    }, [filters.refresh])\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setFilters(pre => ({\r\n            ...pre,\r\n            filterDialog: false,\r\n        }));\r\n    }\r\n\r\n    const refreshData = () => {\r\n        setFilters(pre => ({\r\n            ...pre,\r\n            refresh: !pre.refresh,\r\n        }));\r\n    }\r\n\r\n    // const filteredData = useMemo(() => {\r\n    //     // filter account type\r\n    //     const data = [...reportData].filter(fil => stringCompare(fil.accountType, filters.accountType));\r\n\r\n    //     return data.filter(value => {\r\n\r\n    //         // if (value)\r\n    //     })\r\n    // }, [filters.debitAccount.value, filters.creditAccount.value, filters.accountType, reportData])\r\n\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title=\"Pending Reference\"\r\n                headerFontSizePx={13}\r\n                bodyFontSizePx={13}\r\n                EnableSerialNumber\r\n                dataArray={reportData.filter(fil => stringCompare(fil.accountType, filters.accountType))}\r\n                ButtonArea={\r\n                    <>\r\n                        <IconButton\r\n                            onClick={() => setFilters(pre => ({ ...pre, filterDialog: true }))}\r\n                        ><FilterAlt /></IconButton>\r\n                    </>\r\n                }\r\n                columns={[\r\n                    createCol('accountGet', 'string', 'Account'),\r\n                    createCol('accountGroupGet', 'string', 'Account Group'),\r\n                    createCol('accountTotalDebit', 'number', 'Total Payment Amount'),\r\n                    createCol('transactionCount', 'number', 'Payment Counts'),\r\n                    // {\r\n                    //     isVisible: 1,\r\n                    //     ColumnHeader: 'Pending Reference',\r\n                    //     isCustomCell: true,\r\n                    //     Cell: ({ row }) => Subraction(row.debit_amount, row.total_referenced)\r\n                    // }\r\n                ]}\r\n            />\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                {/* from date */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* to date */}\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Display Side</td>\r\n                                    <td>\r\n                                        <select\r\n                                            className=\"cus-inpt p-2\"\r\n                                            value={filters.accountType}\r\n                                            onChange={e => setFilters(pre => ({ ...pre, accountType: e.target.value }))}\r\n                                        >\r\n                                            <option value={'DEBIT ACCOUNT'}>DEBIT ACCOUNT</option>\r\n                                            <option value={'CREDIT ACCOUNT'}>CREDIT ACCOUNT</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n{/* \r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Account Group</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.accountGroup}\r\n                                            onChange={e => setFilters({ ...filters, accountGroup: e })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filtersDropDown.accountGroups.map(ag => ({\r\n                                                    value: ag.Group_Id,\r\n                                                    label: ag.Group_Name\r\n                                                }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                            menuPortalTarget={document.body}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Debit Account</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.debitAccount}\r\n                                            onChange={e => setFilters({ ...filters, debit_amount: e })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filtersDropDown.debit_accounts\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                            menuPortalTarget={document.body}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Credit Account</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={filters?.creditAccount}\r\n                                            onChange={e => setFilters({ ...filters, creditAccount: e })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...filtersDropDown.credit_accounts\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                            menuPortalTarget={document.body}\r\n                                        />\r\n                                    </td>\r\n                                </tr> */}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions className=\"d-flex align-items-center justify-content-between\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={() => {\r\n                            setFilters(pre => ({\r\n                                ...pre,\r\n                                ...defaultFilters\r\n                            }))\r\n                        }}\r\n                        startIcon={<ClearAll />}\r\n                    >clear</Button>\r\n                    <span>\r\n                        <Button onClick={closeDialog}>close</Button>\r\n                        <Button\r\n                            onClick={() => {\r\n                                closeDialog();\r\n                                const updatedFilters = {\r\n                                    Fromdate: filters?.Fromdate,\r\n                                    Todate: filters?.Todate\r\n                                };\r\n                                updateQueryString(updatedFilters);\r\n                                refreshData();\r\n                            }}\r\n                            startIcon={<Search />}\r\n                            variant=\"contained\"\r\n                        >Search</Button>\r\n                    </span>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AccountTransaction;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAll');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","menu","provided","state","_objectSpread","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","defaultFilters","Fromdate","ISOString","Todate","initialSelectValue","value","label","_ref","loadingOn","loadingOff","reportData","setReportData","useState","filters","setFilters","refresh","filterDialog","debitAccount","creditAccount","accountType","accountGroup","filtersDropDown","setFiltersDropDown","voucherType","debit_accounts","credit_accounts","accountGroups","navigate","useNavigate","location","useLocation","stateDetails","query","URLSearchParams","search","useEffect","queryFilters","get","isValidDate","pre","updateQueryString","fetchLink","then","data","success","_data$others","_data$others2","_data$others3","toArray","others","catch","e","console","error","concat","log","newFilters","params","toString","replace","closeDialog","_jsxs","_Fragment","children","_jsx","FilterableTable","title","headerFontSizePx","bodyFontSizePx","EnableSerialNumber","dataArray","filter","fil","stringCompare","ButtonArea","IconButton","onClick","FilterAlt","columns","createCol","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","className","verticalAlign","type","onChange","target","DialogActions","Button","startIcon","ClearAll","updatedFilters","Search","createSvgIcon","d"],"sourceRoot":""}
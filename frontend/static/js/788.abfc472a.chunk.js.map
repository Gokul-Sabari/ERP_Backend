{"version":3,"file":"static/js/788.abfc472a.chunk.js","mappings":"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","sources":["Pages/Analytics/entryComps/numCardComp.jsx","Pages/Analytics/entryComps/driverComp.jsx","Pages/Analytics/entryComps/godownComp.jsx","Pages/Analytics/entryComps/deliveryComp.jsx","Pages/Analytics/entryComps/staffComp.jsx","Pages/Analytics/entryComps/weightCheckingComp.jsx","Pages/Analytics/entryInfo.jsx"],"sourcesContent":["import { NumberFormat } from \"../../../Components/functions\"\r\n\r\nconst CardComp = ({ Value, Label }) => (\r\n    <div className=\"grid-card d-flex align-items-center justify-content-center flex-column cus-shadow\">\r\n        <h1 style={{ fontSize: '45px', color: 'blue', margin: '0 0.5em' }}>\r\n            {isNaN(Value)\r\n                ? Value ? Value : '-'\r\n                : Value ? NumberFormat(Value) : '0'\r\n            }\r\n        </h1>\r\n        <h2 className='fa-20'>{Label}</h2>\r\n    </div>\r\n)\r\n\r\nexport default CardComp;","import React, { useEffect, useState } from 'react';\r\nimport CardComp from './numCardComp';\r\nimport { BarChart } from '@mui/x-charts/BarChart';\r\nimport { getMonth } from '../../../Components/functions';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\n\r\nconst ContCard = ({ Value, Label }) => <CardComp Value={Value} Label={Label} />\r\n\r\nconst DriverInfoComp = ({ reqDate, reqLocation }) => {\r\n    const [activityData, setActivityData] = useState([]);\r\n    const [tripBased, setTripBased] = useState([]);\r\n    const [filter, setFilter] = useState({\r\n        currentMonth: getMonth(),\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `dataEntry/driverActivities?reqDate=${reqDate}&reqLocation=${reqLocation}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setActivityData(data.data)\r\n            }\r\n        })\r\n        .catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `dataEntry/driverActivities/tripBased?reqDate=${reqDate}&reqLocation=${reqLocation}`\r\n        }).then(data => setTripBased(data.data))\r\n        .catch(e => console.error(e))\r\n    }, [reqDate, reqLocation])\r\n\r\n    const calculateCategoryTotals = (data) => {\r\n        const categoryTotals = {};\r\n\r\n        data.forEach(driver => {\r\n            driver.LocationGroup.forEach(group => {\r\n                if (!categoryTotals[group.TripCategory]) {\r\n                    categoryTotals[group.TripCategory] = 0;\r\n                }\r\n                group.TripDetails.forEach(detail => {\r\n                    categoryTotals[group.TripCategory] += detail?.Trips?.reduce((sum, obj) => sum + (obj?.TonnageValue || 0), 0);\r\n                });\r\n            });\r\n        });\r\n\r\n        return categoryTotals;\r\n    };\r\n\r\n    const categoryTotals = calculateCategoryTotals(activityData);\r\n\r\n    const totalTonnageValue = Object.values(categoryTotals).reduce((sum, val) => sum + val, 0);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"my-2\">\r\n                <div className='cus-grid text-dark'>\r\n                    <ContCard Value={activityData?.length} Label={'DRIVERS'} />\r\n                    <ContCard\r\n                        Value={tripBased?.reduce((sum, obj) => {\r\n                            let total = 0;\r\n                            total += obj?.Trips?.length || 0\r\n                            return total + sum;\r\n                        }, 0)}\r\n                        Label={'TRIPS'}\r\n                    />\r\n                    <ContCard Value={totalTonnageValue} Label={'TOTAL'} />\r\n                    {Object.entries(categoryTotals).map(([objKey, objValue]) => <ContCard key={objKey} Value={objValue} Label={objKey} />)}\r\n                </div>\r\n            </div>\r\n\r\n            <input \r\n                type='month'\r\n                className='cus-inpt w-auto mt-3' \r\n                value={filter.currentMonth} \r\n                onChange={e => setFilter(pre => ({ ...pre, currentMonth: e.target.value}))} \r\n            />\r\n\r\n            <div className=\"my-3 d-flex justify-content-center flex-wrap\">\r\n                <BarChart\r\n                    xAxis={[{ scaleType: 'band', data: tripBased?.map(o => o?.DriverName) }]}\r\n                    series={[\r\n                        { data: tripBased?.map(o => o?.Trips?.length), label: 'TRIPS',  },\r\n                        {\r\n                            data: tripBased?.map(o => Number(o?.Trips?.reduce((sum, obj) => {\r\n                                let total = 0;\r\n                                total += obj?.Categories?.reduce((catSum, catObj) => {\r\n                                    let catTotal = 0;\r\n                                    catTotal += catObj?.TonnageValue || 0\r\n                                    return catTotal + catSum\r\n                                }, 0)\r\n                                return sum + total\r\n                            }, 0)).toFixed(2)),\r\n                            label: 'TONNAGE', \r\n                        }\r\n                    ]}\r\n                    width={900}\r\n                    height={400}\r\n                    barLabel=\"value\"\r\n                    borderRadius={6}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DriverInfoComp;","import React, { useEffect, useState } from 'react';\r\nimport { UTCTime } from '../../../Components/functions';\r\nimport CardComp from './numCardComp';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\n\r\nconst ContCard = ({ Value, Label }) => <CardComp Value={Value} Label={Label} />\r\n\r\nconst GodownInfo = ({reqDate, reqLocation}) => {\r\n    const [activityData, setActivityData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `dataEntry/godownActivities/abstract?reqDate=${reqDate}&reqLocation=${reqLocation}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setActivityData(data.data)\r\n            }\r\n        })\r\n        .catch(e => console.error(e))\r\n    }, [reqDate, reqLocation])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"my-2\">\r\n                <div className='cus-grid text-dark'>\r\n                    <ContCard Value={activityData[0]?.PurchaseTotal || 0} Label={'Purchase'} />\r\n                    <ContCard Value={activityData[0]?.SalesTotal || 0} Label={'Sales'} />\r\n                    <ContCard Value={activityData[0]?.ManagementTotal || 0} Label={'Handling'} />\r\n                    <ContCard Value={activityData[0]?.EntryAt ? UTCTime(activityData[0]?.EntryAt) : '-'} Label={'Updated'} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GodownInfo;","import React, { useEffect, useState } from 'react';\r\nimport { UTCTime } from '../../../Components/functions';\r\nimport CardComp from './numCardComp';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\n\r\nconst ContCard = ({ Value, Label }) => <CardComp Value={Value} Label={Label} />\r\n\r\nconst DeliveryInfo = ({reqDate, reqLocation}) => {\r\n    const [activityData, setActivityData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `dataEntry/deliveryActivities/abstract?reqDate=${reqDate}&reqLocation=${reqLocation}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setActivityData(data.data)\r\n            }\r\n        })\r\n        .catch(e => console.error(e))\r\n    }, [reqDate, reqLocation])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"my-2\">\r\n                <div className='cus-grid text-dark'>\r\n                    <ContCard Value={activityData[0]?.EntryTime ? UTCTime(activityData[0]?.EntryTime) : '-'} Label={'Time'} />\r\n                    <ContCard Value={activityData[0]?.OverAllSales || 0} Label={'Sales'} />\r\n                    <ContCard Value={activityData[0]?.NotTaken || 0} Label={'NotTaken'} />\r\n                    <ContCard Value={activityData[0]?.NotVerified || 0} Label={'NotVerified'} />\r\n                    <ContCard Value={activityData[0]?.NotDelivery || 0} Label={'Not Delivery'} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeliveryInfo;","import React, { useEffect, useState } from 'react';\r\nimport CardComp from './numCardComp';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\n\r\nconst ContCard = ({ Value, Label }) => <CardComp Value={Value} Label={Label} />\r\n\r\nconst StaffInfo = ({ reqDate, reqLocation }) => {\r\n    const [activityData, setActivityData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `dataEntry/staffActivities/staffBased?reqDate=${reqDate}&reqLocation=${reqLocation}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setActivityData(data.data)\r\n            }\r\n        })\r\n        .catch(e => console.error(e)) \r\n    }, [reqDate, reqLocation])\r\n\r\n    const categoryTotal = () => {\r\n        let category = [];\r\n\r\n        activityData?.forEach(obj => {\r\n            obj?.Categories?.forEach(cat => {\r\n                const catIndex = category.findIndex(o => o?.Category === cat?.Category);\r\n                if (catIndex !== -1) {\r\n                    category[catIndex] = {\r\n                        ...category[catIndex],\r\n                        Total: category[catIndex]?.Total + (cat?.StaffDetails?.Tonnage || 0)\r\n                    }\r\n                } else {\r\n                    category.push({\r\n                        Category: cat?.Category,\r\n                        Total: (cat?.StaffDetails?.Tonnage || 0)\r\n                    })\r\n                }\r\n            })\r\n        })\r\n\r\n        return category;\r\n    }\r\n\r\n    const overAllTotal = categoryTotal()?.reduce((sum, obj) => {\r\n        let total = 0;\r\n        total += (obj?.Category !== 'OTHERS 1 - PRINT') ? obj?.Total : 0;\r\n        return sum + total\r\n    }, 0)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"my-2\">\r\n                <div className='cus-grid text-dark'>\r\n                    <ContCard Value={activityData?.length || 0} Label={'Staffs'} />\r\n                    {categoryTotal()?.map((o, i) => (\r\n                        <ContCard Value={o?.Total} Label={o?.Category} key={i} />\r\n                    ))}\r\n                    <ContCard Value={overAllTotal} Label={'Total'} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StaffInfo;","import React, { useEffect, useState } from 'react';\r\nimport CardComp from './numCardComp';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\n\r\nconst ContCard = ({ Value, Label }) => <CardComp Value={Value} Label={Label} />\r\n\r\nconst WeightCheckingComp = ({ reqDate, reqLocation }) => {\r\n    const [activityData, setActivityData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `dataEntry/weightCheckActivity?reqDate=${reqDate}&reqLocation=${reqLocation}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setActivityData(data.data)\r\n            }\r\n        })\r\n        .catch(e => console.error(e))\r\n    }, [reqDate, reqLocation])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"my-2\">\r\n                <div className='cus-grid text-dark'>\r\n                    <ContCard Value={activityData?.length || 0} Label={'Items'} />\r\n                    {Object.entries(activityData?.reduce((avg, obj) => {\r\n                        let Average_Input = avg.Average_Input += obj.InputKG || 0;\r\n                        let Average_Output = avg.Average_Output += obj.OutputKG || 0;\r\n                        return {\r\n                            Average_Input,\r\n                            Average_Output\r\n                        }\r\n                    }, {\r\n                        Average_Input: 0,\r\n                        Average_Output: 0\r\n                    })).map(([key, value]) => (\r\n                        <ContCard Value={parseInt(value / activityData.length)} Label={key?.replace('_', ' ')} key={key} />\r\n                    ))}\r\n                    {/* <ContCard Value={''} Label={'Total'} /> */}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeightCheckingComp;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Card, CardContent, IconButton, Collapse } from '@mui/material';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@mui/icons-material';\r\nimport { ISOString } from '../../Components/functions';\r\n\r\nimport DriverInfoComp from './entryComps/driverComp';\r\nimport GodownInfo from './entryComps/godownComp';\r\nimport DeliveryInfo from './entryComps/deliveryComp';\r\nimport StaffInfo from './entryComps/staffComp';\r\nimport WeightCheckingComp from './entryComps/weightCheckingComp';\r\n\r\nimport { CiDeliveryTruck } from \"react-icons/ci\";\r\nimport { BsBox } from \"react-icons/bs\";\r\nimport { HiOutlineHomeModern } from \"react-icons/hi2\"\r\n// import { GrUserWorker } from \"react-icons/gr\";\r\nimport { HiUsers } from \"react-icons/hi\";\r\nimport { SlSpeedometer } from \"react-icons/sl\";\r\n\r\nconst DataEntryAbstract = () => {\r\n    const [filter, setFilter] = useState({\r\n        reqDate: ISOString(),\r\n        reqLocation: 'MILL',\r\n    });\r\n\r\n    const [displayContent, setDisplayContent] = useState([\r\n        {\r\n            name: 'Driver Activities',\r\n            isOpen: false,\r\n            icon: <CiDeliveryTruck style={{ fontSize: '40px' }} />\r\n        },\r\n        {\r\n            name: 'Godown Activities',\r\n            isOpen: false,\r\n            icon: <HiOutlineHomeModern style={{ fontSize: '40px' }} />\r\n        },\r\n        {\r\n            name: 'Delivery Activities',\r\n            isOpen: false,\r\n            icon: <BsBox style={{ fontSize: '40px' }} />\r\n        },\r\n        {\r\n            name: 'Staff Activities',\r\n            isOpen: false,\r\n            icon: <HiUsers style={{ fontSize: '40px' }} />\r\n        },\r\n        {\r\n            name: 'Weight Checking Activities',\r\n            isOpen: false,\r\n            icon: <SlSpeedometer style={{ fontSize: '40px' }} />\r\n        },\r\n    ]);\r\n\r\n    const memoizedComponents = useMemo(() => [\r\n        <DriverInfoComp reqDate={filter.reqDate} reqLocation={filter.reqLocation} />,\r\n        <GodownInfo reqDate={filter.reqDate} reqLocation={filter.reqLocation} />,\r\n        <DeliveryInfo reqDate={filter.reqDate} reqLocation={filter.reqLocation} />,\r\n        <StaffInfo reqDate={filter.reqDate} reqLocation={filter.reqLocation} />,\r\n        <WeightCheckingComp reqDate={filter.reqDate} reqLocation={filter.reqLocation} />,\r\n    ], [filter.reqDate, filter.reqLocation]);\r\n\r\n    useEffect(() => {\r\n        setDisplayContent(pre => pre.map((item, index) => ({\r\n            ...item,\r\n            comp: memoizedComponents[index],\r\n        })));\r\n    }, [memoizedComponents]);\r\n\r\n    const handleToggle = index => {\r\n        setDisplayContent(prevDisplayContent =>\r\n            prevDisplayContent.map((item, i) =>\r\n                i === index ? { ...item, isOpen: !item.isOpen } : item\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex flex-wrap\">\r\n                <div className='d-flex flex-column p-1'>\r\n                    <label className='mb-1'>DATE</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        className='cus-inpt w-auto'\r\n                        value={filter.reqDate}\r\n                        onChange={e => setFilter(pre => ({ ...pre, reqDate: e.target.value }))}\r\n                    />\r\n                </div>\r\n                <div className='d-flex flex-column p-1'>\r\n                    <label className='mb-1'>LOCATION</label>\r\n                    <select\r\n                        className='cus-inpt w-auto'\r\n                        value={filter.reqLocation}\r\n                        onChange={e => setFilter(pre => ({ ...pre, reqLocation: e.target.value }))}\r\n                    >\r\n                        <option value=\"MILL\">MILL</option>\r\n                        <option value=\"GODOWN\">GODOWN</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            {displayContent.map((item, index) => (\r\n                <Card key={index} className='mt-2'>\r\n                    <div\r\n                        className=\"fa-17 fw-bold border-bottom p-0 d-flex justify-content-between align-items-center\"\r\n                        onClick={() => handleToggle(index)}\r\n                        style={{ cursor: 'pointer' }}\r\n                    >\r\n                        <div className='d-flex justify-content-between align-items-center p-0'>\r\n                            <span className='p-4 bg-primary text-white'>{item.icon}</span>\r\n                            <span className='ps-3 fa-20'>{item.name}</span>\r\n                        </div>\r\n                        <IconButton size='small' className='p-2'>\r\n                            {item.isOpen ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Collapse in={item.isOpen} unmountOnExit>\r\n                        <CardContent>{item.comp}</CardContent>\r\n                    </Collapse>\r\n                </Card>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DataEntryAbstract;\r\n"],"names":["_ref","Value","Label","_jsxs","className","children","_jsx","style","fontSize","color","margin","isNaN","NumberFormat","ContCard","CardComp","_ref2","reqDate","reqLocation","activityData","setActivityData","useState","tripBased","setTripBased","filter","setFilter","currentMonth","getMonth","useEffect","fetchLink","address","then","data","success","catch","e","console","error","categoryTotals","forEach","driver","LocationGroup","group","TripCategory","TripDetails","detail","_detail$Trips","Trips","reduce","sum","obj","TonnageValue","calculateCategoryTotals","totalTonnageValue","Object","values","val","_Fragment","length","_obj$Trips","total","entries","map","_ref3","objKey","objValue","type","value","onChange","pre","target","BarChart","xAxis","scaleType","o","DriverName","series","_o$Trips","label","_o$Trips2","Number","_obj$Categories","Categories","catSum","catObj","catTotal","toFixed","width","height","barLabel","borderRadius","_activityData$","_activityData$2","_activityData$3","_activityData$4","_activityData$5","PurchaseTotal","SalesTotal","ManagementTotal","EntryAt","UTCTime","_activityData$6","EntryTime","OverAllSales","NotTaken","NotVerified","NotDelivery","_categoryTotal","_categoryTotal2","categoryTotal","category","cat","catIndex","findIndex","Category","_category$catIndex","_cat$StaffDetails","_cat$StaffDetails2","Total","StaffDetails","Tonnage","push","overAllTotal","i","avg","Average_Input","InputKG","Average_Output","OutputKG","key","parseInt","replace","DataEntryAbstract","ISOString","displayContent","setDisplayContent","name","isOpen","icon","CiDeliveryTruck","HiOutlineHomeModern","BsBox","HiUsers","SlSpeedometer","memoizedComponents","useMemo","DriverInfoComp","GodownInfo","DeliveryInfo","StaffInfo","WeightCheckingComp","item","index","comp","Card","onClick","prevDisplayContent","handleToggle","cursor","IconButton","size","KeyboardArrowUp","KeyboardArrowDown","Collapse","in","unmountOnExit","CardContent"],"sourceRoot":""}
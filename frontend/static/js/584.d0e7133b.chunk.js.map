{"version":3,"file":"static/js/584.d0e7133b.chunk.js","mappings":"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","sources":["Pages/DataEntry/newDriverActivities.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { convertToTimeObject, createAbbreviation, isEqualNumber, ISOString, NumberFormat, onlynum, UTCTime } from '../../Components/functions';\r\nimport { toast } from 'react-toastify'\r\nimport { Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, Paper, Tab, Box } from '@mui/material';\r\nimport { TabPanel, TabList, TabContext } from '@mui/lab';\r\nimport { MyContext } from '../../Components/context/contextProvider';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\n\r\n\r\nconst ContCard = ({ Value, Label }) => (\r\n    <div className=\"grid-card d-flex align-items-center justify-content-center flex-column cus-shadow\">\r\n        <h1 style={{ fontSize: '45px', color: 'blue', margin: '0 0.5em' }}>{NumberFormat(Value)}</h1>\r\n        <h2 className='fa-20'>{Label}</h2>\r\n    </div>\r\n)\r\n\r\nconst DriverActivities = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const { contextObj } = useContext(MyContext);\r\n\r\n    const initialValue = {\r\n        Id: '',\r\n        ActivityDate: ISOString(),\r\n        LocationDetails: 'MILL',\r\n        DriverName: '',\r\n        TripCategory: 'LRY SHED & LOCAL',\r\n        TonnageValue: '',\r\n        TripNumber: 1,\r\n        EventTime: '10:00',\r\n        EndTime: '12:00',\r\n        VehicleNumber: '',\r\n        CreatedBy: storage.UserId,\r\n    }\r\n    const [activityData, setActivityData] = useState([]);\r\n    const [driverBased, setDriverBased] = useState([]);\r\n    const [listBased, setListBased] = useState([]);\r\n    const [timeBased, setTimeBased] = useState([]);\r\n    const [drivers, setDrivers] = useState([]);\r\n    const [inputValues, setInputValues] = useState(initialValue);\r\n    const [reload, setReload] = useState(false);\r\n    const [filter, setFilter] = useState({\r\n        reqDate: ISOString(),\r\n        reqLocation: 'MILL',\r\n        dialog: false,\r\n        view: 'LIST',\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `dataEntry/driverActivities/drivers`\r\n        }).then(data => setDrivers(data.success ? data.data : [])).catch(e => console.error(e))\r\n    }, [reload])\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `dataEntry/driverActivities?reqDate=${filter.reqDate}&reqLocation=${filter.reqLocation}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setActivityData(data.success ? data.data : [])\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `dataEntry/driverActivities/tripBased?reqDate=${filter.reqDate}&reqLocation=${filter.reqLocation}`\r\n        }).then(data => setDriverBased(data.success ? data.data : [])).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `dataEntry/driverActivities/timeBased?reqDate=${filter.reqDate}&reqLocation=${filter.reqLocation}`\r\n        }).then(data => setTimeBased(data.success ? data.data : [])).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `dataEntry/driverActivities/view2?reqDate=${filter.reqDate}&reqLocation=${filter.reqLocation}`\r\n        }).then(data => setListBased(data.success ? data.data : [])).catch(e => console.error(e))\r\n    }, [reload, filter.reqDate, filter.reqLocation])\r\n\r\n    const closeDialog = () => {\r\n        setFilter(pre => ({ ...pre, dialog: false }));\r\n        setInputValues(initialValue)\r\n    }\r\n\r\n    const saveActivity = () => {\r\n        fetchLink({\r\n            address: `dataEntry/driverActivities`,\r\n            method: inputValues.Id ? 'PUT' : 'POST',\r\n            bodyData: inputValues\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                closeDialog()\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    const DriverDispComp = ({ obj }) => {\r\n\r\n        const newRowTotal = obj?.LocationGroup?.reduce((total, group) => {\r\n            const groupTonnage = group?.TripDetails?.reduce((grpSum, trip) => {\r\n                const tripTotal = trip?.Trips?.reduce((sum, trip) => sum + (trip?.TonnageValue || 0), 0);\r\n                return tripTotal + grpSum;\r\n            }, 0);\r\n            return total + groupTonnage;\r\n        }, 0);\r\n\r\n        return (\r\n            <tr>\r\n                <td\r\n                    style={{ verticalAlign: 'middle' }}\r\n                    className='fa-13 fw-bold text-primary border rounded-4 text-center'\r\n                >\r\n                    {obj.DriverName}\r\n                </td>\r\n                {obj?.LocationGroup?.map(o => o?.TripDetails?.map((oo, ii) => (\r\n                    <td key={ii} className='border rounded-4 p-0' >\r\n\r\n                        {oo?.Trips.map((ooo, iii) => (\r\n                            <div\r\n                                className='d-flex justify-content-between p-1 cellHover'\r\n                                key={iii}\r\n                                onClick={\r\n                                    isEqualNumber(contextObj?.Edit_Rights, 1)\r\n                                        ? () => {\r\n                                            setInputValues(ooo);\r\n                                            setFilter(pre => ({ ...pre, dialog: true }))\r\n                                        }\r\n                                        : () => { }\r\n                                }\r\n                            >\r\n                                <span className='p-1 fa-14 fw-bold text-primary'>{NumberFormat(ooo?.TonnageValue)}</span>\r\n                                <span className='p-1 fa-13'>{ooo?.EventTime ? convertToTimeObject(ooo?.EventTime) : '-'}</span>\r\n                            </div>\r\n                        ))}\r\n\r\n                    </td>\r\n                )))}\r\n                <td className='border' style={{ verticalAlign: 'middle' }}>\r\n                    <h6 className=' my-auto text-center'>{NumberFormat(newRowTotal)}</h6>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const calculateCategoryTotals = (data) => {\r\n        const categoryTotals = {};\r\n\r\n        data.forEach(driver => {\r\n            driver.LocationGroup.forEach(group => {\r\n                if (!categoryTotals[group.TripCategory]) {\r\n                    categoryTotals[group.TripCategory] = 0;\r\n                }\r\n                group.TripDetails.forEach(detail => {\r\n                    categoryTotals[group.TripCategory] += detail?.Trips?.reduce((sum, obj) => sum + (obj?.TonnageValue || 0), 0);\r\n                });\r\n            });\r\n        });\r\n\r\n        return categoryTotals;\r\n    };\r\n\r\n    const categoryTotals = calculateCategoryTotals(activityData);\r\n\r\n    const totalTonnageValue = Object.values(categoryTotals).reduce((sum, val) => sum + val, 0);\r\n\r\n    const dispView = (val) => {\r\n\r\n        switch (val) {\r\n            case 'DATA ENTRY':\r\n                return (\r\n                    <div className=\"table-responsive\">\r\n                        <table className='table'>\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='fa-14 border' style={{ backgroundColor: '#EDF0F7' }}>Driver Name</th>\r\n                                    {activityData[0] && activityData[0]?.LocationGroup?.map((o, i) => (\r\n                                        <th\r\n                                            className='fa-14 border text-center'\r\n                                            key={i}\r\n                                            colSpan={o?.TripDetails?.length}\r\n                                            style={{ backgroundColor: '#EDF0F7' }}\r\n                                        >\r\n                                            {o?.TripCategory}\r\n                                        </th>\r\n                                    ))}\r\n                                    <th className='border' style={{ backgroundColor: '#EDF0F7' }}></th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className='border'></th>\r\n                                    {activityData[0] && activityData[0]?.LocationGroup?.map(o => o?.TripDetails?.map((oo, ii) => (\r\n                                        <th className='fa-14 border text-center' key={ii}>\r\n                                            {createAbbreviation(o?.TripCategory)}-{oo.TripNumber}\r\n                                        </th>\r\n                                    )))}\r\n                                    <th className='fa-14 border text-center'>Total</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n\r\n                                {activityData?.map((o, i) => <DriverDispComp key={i} obj={o} />)}\r\n\r\n                                <tr>\r\n                                    <td className='border'></td>\r\n                                    {activityData[0] && activityData[0]?.LocationGroup?.map((o, i) => (\r\n                                        <td\r\n                                            className='fa-13 border text-center fw-bold'\r\n                                            key={i}\r\n                                            colSpan={o?.TripDetails?.length}\r\n                                        >\r\n                                            {categoryTotals[o.TripCategory] ? NumberFormat(categoryTotals[o.TripCategory]) : '-'}\r\n                                        </td>\r\n                                    ))}\r\n                                    <td className='fa-14 fw-bold border text-primary text-center'>{NumberFormat(totalTonnageValue)}</td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )\r\n            case 'ABSTRACT':\r\n                return (\r\n                    <>\r\n                        <div className=\"my-2\">\r\n                            <div className='cus-grid text-dark'>\r\n                                <ContCard Value={activityData?.length} Label={'DRIVERS'} />\r\n                                <ContCard\r\n                                    Value={driverBased?.reduce((sum, obj) => {\r\n                                        let total = 0;\r\n                                        total += obj?.Trips?.length || 0\r\n                                        return total + sum;\r\n                                    }, 0)}\r\n                                    Label={'TRIPS'}\r\n                                />\r\n                                <ContCard Value={totalTonnageValue} Label={'TOTAL'} />\r\n                                {Object.entries(categoryTotals).map(([objKey, objValue]) => <ContCard key={objKey} Value={objValue} Label={objKey} />)}\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'CATEGORY BASED':\r\n                return (\r\n                    <div className=\"d-flex justify-content-around flex-wrap my-3\">\r\n                        {Object.entries(categoryTotals).map(([objKey, objValue]) => (\r\n                            <div className=\"grid-card w-100 my-2 cus-shadow\" style={{ backgroundColor: '#EDF0F7' }} key={objKey}>\r\n                                <h6 className=' fw-bold fa-18 d-flex justify-content-between'>\r\n                                    <span>{objKey}</span>\r\n                                    <span>{NumberFormat(objValue)}</span>\r\n                                </h6>\r\n                                {activityData?.map(oo => (\r\n                                    oo?.LocationGroup?.map(loc => (objKey === loc?.TripCategory) && (\r\n                                        loc.TripDetails?.map(trip => trip?.Trips?.map((tr, ti) => (\r\n                                            <div className=\"p-2 my-2 border grid-card bg-white d-flex justify-content-between\" key={ti}>\r\n                                                <span>{tr?.DriverName}</span>\r\n                                                <span>\r\n                                                    <span className='pe-2 text-primary fw-bold'>{NumberFormat(tr?.TonnageValue)}</span>\r\n                                                    {tr?.EventTime ? convertToTimeObject(tr?.EventTime) : '-'}\r\n                                                </span>\r\n                                            </div>\r\n                                        )))\r\n                                    ))\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )\r\n            case 'DRIVER BASED':\r\n                return (\r\n                    driverBased?.map((o, i) => (\r\n                        <Card\r\n                            component={Paper}\r\n                            variant='outlined'\r\n                            className=\"p-3 my-3 \"\r\n                            key={i}\r\n                        >\r\n                            <div>\r\n                                <h6 className='blue-text mb-2 pb-2 d-flex justify-content-between border-bottom fa-20'>\r\n                                    <span>{o?.DriverName}</span>\r\n                                    <span>\r\n                                        {NumberFormat(o?.Trips?.reduce((sum, obj) => {\r\n                                            let total = 0;\r\n                                            obj?.Categories?.forEach(cat => total += cat?.TonnageValue || 0)\r\n                                            return total + sum\r\n                                        }, 0))}\r\n                                        <span className='text-muted fa-14 ps-2 fw-light'>/ {o?.Trips?.length}</span>\r\n                                    </span>\r\n                                </h6>\r\n\r\n                                <div className=\"d-flex justify-content-around flex-wrap\">\r\n                                    {Object.keys(categoryTotals).map((objKey, ind) => (\r\n                                        <div\r\n                                            className=\"d-flex justify-content-between align-items-center m-2 border rounded-3 p-3\"\r\n                                            style={{ minWidth: '250px', backgroundColor: '#EAFEFF' }}\r\n                                            key={ind}\r\n                                        >\r\n                                            <h6 className='fw-bold mb-0 text-muted'>{objKey}</h6>\r\n                                            <h6 className='blue-text mb-0'>\r\n                                                {NumberFormat(o?.Trips?.reduce((totalSum, oo) => {\r\n                                                    let ovTotal = 0;\r\n                                                    ovTotal += oo?.Categories?.reduce((sum, cat) => {\r\n                                                        let total = 0;\r\n                                                        total += (cat?.TripCategory === objKey) ? cat?.TonnageValue : 0\r\n                                                        return total + sum\r\n                                                    }, 0)\r\n                                                    return ovTotal + totalSum\r\n                                                }, 0))}\r\n                                            </h6>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n\r\n                                <div className=\"table-responsive rounded-3 overflow-hidden border p-0\">\r\n                                    <table className=\"table m-0\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className='fa-14 text-center border-bottom'>Trip No</th>\r\n                                                <th className='fa-14 text-center '>Category</th>\r\n                                                <th className='fa-14 text-center '>Tonnage</th>\r\n                                                <th className='fa-14 text-center '>Time</th>\r\n                                                <th className='fa-14 text-center '>Trip-Total</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {o?.Trips?.map((trip, tripInd) => {\r\n                                                const categoryCount = trip?.Categories?.length || 1;\r\n                                                const totalTonnage = trip?.Categories?.reduce((sum, obj) => sum + (obj?.TonnageValue || 0), 0);\r\n\r\n                                                return (\r\n                                                    trip?.Categories?.map((cat, catInd) => (\r\n                                                        <tr key={`${tripInd}-${catInd}`}>\r\n                                                            {catInd === 0 && (\r\n                                                                <td className='fa-14 border-end border-bottom text-center fw-bold' rowSpan={categoryCount} style={{ verticalAlign: 'middle' }}>\r\n                                                                    {trip?.TripNumber}\r\n                                                                </td>\r\n                                                            )}\r\n                                                            <td className='fa-13 border-end border-bottom text-center'>\r\n                                                                {cat?.TripCategory}\r\n                                                            </td>\r\n                                                            <td className='fa-13 border-end border-bottom text-center'>\r\n                                                                {cat?.TonnageValue}\r\n                                                            </td>\r\n                                                            <td className='fa-13 border-end border-bottom text-center'>\r\n                                                                {cat?.EventTime ? convertToTimeObject(cat?.EventTime) : '-'}\r\n                                                            </td>\r\n                                                            {catInd === 0 && (\r\n                                                                <td className='fa-16 border-end border-bottom text-center blue-text' rowSpan={categoryCount} style={{ verticalAlign: 'middle' }}>\r\n                                                                    {NumberFormat(totalTonnage)}\r\n                                                                </td>\r\n                                                            )}\r\n                                                        </tr>\r\n                                                    ))\r\n                                                );\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Card>\r\n                    ))\r\n                )\r\n            case 'TIME BASED':\r\n                return (\r\n                    <>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        {['Sno', 'Time', 'Driver', 'Tonnage', 'Category', 'Trip-No'].map((o, i) => (\r\n                                            <th className=\"fa-14 border text-center\" key={i} style={{ backgroundColor: '#EDF0F7' }}>{o}</th>\r\n                                        ))}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {timeBased?.map((o, i) => {\r\n                                        const rows = o?.Trips?.length || 1;\r\n                                        console.log(o?.EventTime)\r\n\r\n                                        return o?.Trips?.map((trip, tripInd) => (\r\n                                            <tr key={`${trip + '-' + tripInd}`}>\r\n                                                {tripInd === 0 && (\r\n                                                    <td\r\n                                                        className='fa-13 border text-center'\r\n                                                        rowSpan={rows}\r\n                                                        style={{ verticalAlign: 'middle' }}\r\n                                                    >\r\n                                                        {i + 1}\r\n                                                    </td>\r\n                                                )}\r\n                                                {tripInd === 0 && (\r\n                                                    <td\r\n                                                        className='fa-13 border text-center'\r\n                                                        rowSpan={rows}\r\n                                                        style={{ verticalAlign: 'middle' }}\r\n                                                    >\r\n                                                        {o?.EventTime ? UTCTime(o?.EventTime) : '-'}\r\n                                                    </td>\r\n                                                )}\r\n                                                <td className='fa-13 border text-center'>{trip?.DriverName}</td>\r\n                                                <td className='fa-13 border text-center blue-text'>{trip?.TonnageValue}</td>\r\n                                                <td className='fa-13 border text-center'>{trip?.TripCategory}</td>\r\n                                                <td className='fa-13 border text-center'>{trip?.TripNumber}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </>\r\n                )\r\n            case 'LIST':\r\n                return (\r\n                    <>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        {Object.entries(categoryTotals).map(([objKey, objValue]) => (\r\n                                            <td className='fa-14 border text-center' key={objKey}>\r\n                                                {objKey} : <span className='blue-text'>{NumberFormat(objValue)}</span>\r\n                                            </td>\r\n                                        ))}\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        {['SNo', 'DRIVER NAME', 'TRIP NO', 'VEHICLE NO', 'TONNAGE', 'START TIME', 'END TIME', 'CATEGORY'\r\n                                            // ...Object.entries(categoryTotals).map(([objKey, objValue]) => createAbbreviation(objKey) + ' (' + NumberFormat(objValue) + ')')\r\n                                        ].map((o, i) => (\r\n                                            <th key={i} className='fa-14 border text-center' style={{ backgroundColor: '#EDF0F7' }}>{o}</th>\r\n                                        ))}\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {listBased?.map((o, i) => {\r\n                                        const TripCount = o?.DriverTrips?.reduce((acc, trip) => acc + (trip?.Trips?.length || 1), 0) || 1;\r\n\r\n                                        return (\r\n                                            o?.DriverTrips?.map((oo, ii) => (\r\n                                                oo?.Trips?.map((ooo, iii) => {\r\n                                                    const isFirstRow = ii === 0 && iii === 0;\r\n                                                    const onClick = () => {\r\n                                                        if (isEqualNumber(contextObj?.Edit_Rights, 1)) {\r\n                                                            setInputValues(ooo);\r\n                                                            setFilter(pre => ({ ...pre, dialog: true }))\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    return (\r\n                                                        <tr key={`${i}_${ii}_${iii}`}>\r\n                                                            {isFirstRow && (\r\n                                                                <>\r\n                                                                    <td\r\n                                                                        className='fa-13 border text-center'\r\n                                                                        rowSpan={TripCount}\r\n                                                                        style={{ verticalAlign: 'middle' }}\r\n                                                                    >\r\n                                                                        {i + 1}\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        className='fa-13 border text-center blue-text'\r\n                                                                        rowSpan={TripCount}\r\n                                                                        style={{ verticalAlign: 'middle' }}\r\n                                                                    >\r\n                                                                        {o?.DriverName}\r\n                                                                    </td>\r\n                                                                </>\r\n                                                            )}\r\n                                                            <td className='fa-13 border text-center p-0' onClick={onClick}>\r\n                                                                <div className=\"cellHover p-2\">\r\n                                                                    {ooo?.TripNumber}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td className='fa-13 border text-center p-0' onClick={onClick}>\r\n                                                                <div className=\"cellHover p-2\">\r\n                                                                    {ooo?.VehicleNumber || ''}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td className='fa-13 border text-center p-0' onClick={onClick}>\r\n                                                                <div className=\"cellHover p-2\">\r\n                                                                    {ooo?.TonnageValue}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td className='fa-13 border text-center p-0' onClick={onClick}>\r\n                                                                <div className=\"cellHover p-2\">\r\n                                                                    {ooo?.EventTime ? convertToTimeObject(ooo?.EventTime) : '-'}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td className='fa-13 border text-center p-0' onClick={onClick}>\r\n                                                                <div className=\"cellHover p-2\">\r\n                                                                    {ooo?.EndTime ? convertToTimeObject(ooo?.EndTime) : '-'}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td className='fa-13 border text-center p-0' onClick={onClick}>\r\n                                                                <div className=\"cellHover p-2\">\r\n                                                                    {ooo?.TripCategory || '-'}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                })\r\n                                            ))\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </>\r\n                )\r\n\r\n            default:\r\n                return <></>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 fa-16 fw-bold border-bottom d-flex justify-content-between\">\r\n                    <span>Driver Activities</span>\r\n                    {isEqualNumber(contextObj?.Add_Rights, 1) && (\r\n                        <Button variant='outlined' onClick={() => setFilter(pre => ({ ...pre, dialog: true }))}>Add Activity</Button>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"d-flex flex-wrap p-2 px-3\">\r\n                    <div className='d-flex flex-column p-1'>\r\n                        <label className='mb-1'>DATE</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            className='cus-inpt w-auto'\r\n                            value={filter.reqDate}\r\n                            onChange={e => setFilter(pre => ({ ...pre, reqDate: e.target.value }))}\r\n                        />\r\n                    </div>\r\n                    <div className='d-flex flex-column p-1'>\r\n                        <label className='mb-1'>LOCATION</label>\r\n                        <select\r\n                            className='cus-inpt w-auto'\r\n                            value={filter.reqLocation}\r\n                            onChange={e => setFilter(pre => ({ ...pre, reqLocation: e.target.value }))}\r\n                        >\r\n                            <option value=\"MILL\">MILL</option>\r\n                            <option value=\"GODOWN\">GODOWN</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <CardContent >\r\n                    <TabContext value={filter.view}>\r\n                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                            <TabList\r\n                                indicatorColor='transparant'\r\n                                onChange={(e, n) => setFilter(pre => ({ ...pre, view: n }))}\r\n                                variant=\"scrollable\"\r\n                                scrollButtons=\"auto\"\r\n                                allowScrollButtonsMobile\r\n                            >\r\n                                <Tab sx={filter.view === 'LIST' ? { backgroundColor: '#c6d7eb' } : {}} label=\"LIST\" value='LIST' />\r\n                                <Tab sx={filter.view === 'DATA ENTRY' ? { backgroundColor: '#c6d7eb' } : {}} label={'DATA ENTRY'} value='DATA ENTRY' />\r\n                                <Tab sx={filter.view === 'ABSTRACT' ? { backgroundColor: '#c6d7eb' } : {}} label=\"ABSTRACT\" value='ABSTRACT' />\r\n                                <Tab sx={filter.view === 'CATEGORY BASED' ? { backgroundColor: '#c6d7eb' } : {}} label=\"CATEGORY BASED\" value='CATEGORY BASED' />\r\n                                <Tab sx={filter.view === 'DRIVER BASED' ? { backgroundColor: '#c6d7eb' } : {}} label=\"DRIVER BASED\" value='DRIVER BASED' />\r\n                                <Tab sx={filter.view === 'TIME BASED' ? { backgroundColor: '#c6d7eb' } : {}} label=\"TIME BASED\" value='TIME BASED' />\r\n                            </TabList>\r\n                        </Box>\r\n                        {['LIST', 'DATA ENTRY', 'ABSTRACT', 'CATEGORY BASED', 'DRIVER BASED', 'TIME BASED'].map(o => (\r\n                            <TabPanel value={o} sx={{ px: 0, py: 2 }} key={o}>\r\n                                {(activityData.length || driverBased.length) ? dispView(o) : <></>}\r\n                            </TabPanel>\r\n                        ))}\r\n                    </TabContext>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={filter.dialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>\r\n                    {inputValues?.Id ? 'Modify Activity' : 'Add Driver Activity'}\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    saveActivity();\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className='border-0' style={{ verticalAlign: 'middle' }}>Date</td>\r\n                                        <td className='border-0' >\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={inputValues?.ActivityDate}\r\n                                                className='cus-inpt'\r\n                                                onChange={e => setInputValues(pre => ({ ...pre, ActivityDate: e.target.value }))}\r\n                                                required\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className='border-0' style={{ verticalAlign: 'middle' }}>Location</td>\r\n                                        <td className='border-0' >\r\n                                            <select\r\n                                                value={inputValues?.LocationDetails}\r\n                                                onChange={e => setInputValues(pre => ({ ...pre, LocationDetails: e.target.value }))}\r\n                                                className='cus-inpt'\r\n                                                required\r\n                                            >\r\n                                                <option value={'MILL'}>MILL</option>\r\n                                                <option value={'GODOWN'}>GODOWN</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className='border-0' style={{ verticalAlign: 'middle' }}>Driver Name</td>\r\n                                        <td className='border-0' >\r\n                                            <input\r\n                                                value={inputValues?.DriverName}\r\n                                                type='search'\r\n                                                list='driverList'\r\n                                                required\r\n                                                className='cus-inpt'\r\n                                                placeholder='Type or Search Driver name'\r\n                                                onChange={e => setInputValues(pre => ({ ...pre, DriverName: e.target.value }))}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className='border-0' style={{ verticalAlign: 'middle' }}>Vehicle Number</td>\r\n                                        <td className='border-0' >\r\n                                            <input\r\n                                                value={inputValues?.VehicleNumber}\r\n                                                type='text'\r\n                                                // list='driverList'\r\n                                                // required\r\n                                                placeholder='Vehicle Number'\r\n                                                className='cus-inpt'\r\n                                                onChange={e => setInputValues(pre => ({ ...pre, VehicleNumber: e.target.value }))}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className='border-0' style={{ verticalAlign: 'middle' }}>Trip Number</td>\r\n                                        <td className='border-0' >\r\n                                            <input\r\n                                                value={inputValues?.TripNumber}\r\n                                                className='cus-inpt'\r\n                                                type='number'\r\n                                                required\r\n                                                min={1}\r\n                                                placeholder='Trip Count Number'\r\n                                                onChange={e => setInputValues(pre => ({ ...pre, TripNumber: e.target.value }))}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className='border-0' style={{ verticalAlign: 'middle' }}>Tonnage Value</td>\r\n                                        <td className='border-0' >\r\n                                            <input\r\n                                                value={inputValues?.TonnageValue}\r\n                                                className='cus-inpt'\r\n                                                onInput={onlynum}\r\n                                                required\r\n                                                onChange={e => setInputValues(pre => ({ ...pre, TonnageValue: e.target.value }))}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className='border-0' style={{ verticalAlign: 'middle' }}>Time</td>\r\n                                        <td className='border-0' >\r\n                                            <div className='d-flex'>\r\n                                                <div className='w-50 pe-1'>\r\n                                                    <input\r\n                                                        type='time'\r\n                                                        value={inputValues?.EventTime}\r\n                                                        required\r\n                                                        className='cus-inpt'\r\n                                                        onChange={e => setInputValues(pre => ({ ...pre, EventTime: e.target.value }))}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className='w-50 ps-1'>\r\n                                                    <input\r\n                                                        type='time'\r\n                                                        value={inputValues?.EndTime}\r\n                                                        // required\r\n                                                        className='cus-inpt'\r\n                                                        onChange={e => setInputValues(pre => ({ ...pre, EndTime: e.target.value }))}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className='border-0' style={{ verticalAlign: 'middle' }}>TYPE</td>\r\n                                        <td className='border-0' >\r\n                                            <select\r\n                                                value={inputValues?.TripCategory}\r\n                                                onChange={e => setInputValues(pre => ({ ...pre, TripCategory: e.target.value }))}\r\n                                                className='cus-inpt'\r\n                                                required\r\n                                            >\r\n                                                <option value={'LRY SHED & LOCAL'}>LRY SHED & LOCAL</option>\r\n                                                <option value={'OTHER GODOWNS'}>OTHER GODOWNS</option>\r\n                                                <option value={'TRANSFER'}>TRANSFER</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={closeDialog} type='button'>Cancel</Button>\r\n                        <Button type='submit'>SUBMIT</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            <datalist id='driverList'>\r\n                {drivers.map((o, i) => <option key={i} value={o.DriverName} />)}\r\n            </datalist>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DriverActivities;"],"names":["ContCard","_ref","Value","Label","_jsxs","className","children","_jsx","style","fontSize","color","margin","NumberFormat","DriverActivities","storage","JSON","parse","localStorage","getItem","contextObj","useContext","MyContext","initialValue","Id","ActivityDate","ISOString","LocationDetails","DriverName","TripCategory","TonnageValue","TripNumber","EventTime","EndTime","VehicleNumber","CreatedBy","UserId","activityData","setActivityData","useState","driverBased","setDriverBased","listBased","setListBased","timeBased","setTimeBased","drivers","setDrivers","inputValues","setInputValues","reload","setReload","filter","setFilter","reqDate","reqLocation","dialog","view","useEffect","fetchLink","address","then","data","success","catch","e","console","error","closeDialog","pre","DriverDispComp","_ref2","_obj$LocationGroup","_obj$LocationGroup2","obj","newRowTotal","LocationGroup","reduce","total","group","_group$TripDetails","TripDetails","grpSum","trip","_trip$Trips","tripTotal","Trips","sum","verticalAlign","map","o","_o$TripDetails","oo","ii","ooo","iii","onClick","isEqualNumber","Edit_Rights","convertToTimeObject","categoryTotals","forEach","driver","detail","_detail$Trips","calculateCategoryTotals","totalTonnageValue","Object","values","val","dispView","_activityData$","_activityData$$Locati","_activityData$2","_activityData$2$Locat","_activityData$3","_activityData$3$Locat","backgroundColor","i","_o$TripDetails2","colSpan","length","_o$TripDetails3","createAbbreviation","_o$TripDetails4","_Fragment","_obj$Trips","entries","_ref3","objKey","objValue","_ref4","_oo$LocationGroup","loc","_loc$TripDetails","_trip$Trips2","tr","ti","_o$Trips","_o$Trips2","_o$Trips4","Card","component","Paper","variant","_obj$Categories","Categories","cat","keys","ind","_o$Trips3","minWidth","totalSum","_oo$Categories","ovTotal","tripInd","_trip$Categories","_trip$Categories2","_trip$Categories3","categoryCount","totalTonnage","catInd","rowSpan","_o$Trips5","_o$Trips6","rows","log","UTCTime","_ref5","_o$DriverTrips","_o$DriverTrips2","TripCount","DriverTrips","acc","_trip$Trips3","_oo$Trips","isFirstRow","Add_Rights","Button","type","value","onChange","target","CardContent","TabContext","Box","sx","borderBottom","borderColor","TabList","indicatorColor","n","scrollButtons","allowScrollButtonsMobile","Tab","label","TabPanel","px","py","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","onSubmit","preventDefault","method","bodyData","toast","message","DialogContent","required","list","placeholder","min","onInput","onlynum","DialogActions","id"],"sourceRoot":""}
{"version":3,"file":"static/js/1836.ee076834.chunk.js","mappings":"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","sources":["Pages/Dashboard/tallyLastSyncedTime.jsx","../node_modules/@mui/icons-material/esm/ArrowRight.js","Pages/Reports/dayBook.jsx","../node_modules/@mui/icons-material/esm/OpenInNew.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { ISOString, LocalDate, UTCDateWithTime, UTCTime } from \"../../Components/functions\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\n\r\nconst LastSynedTime = () => {\r\n    const parseData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const isAdmin = Number(parseData?.UserTypeId) === 0 || Number(parseData?.UserTypeId) === 1;\r\n    const [lastSyncedTime, setLastSynedTime] = useState({\r\n        Last_Sync_Date_Time: null,\r\n        lastSalesSync: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (isAdmin) {\r\n            fetchLink({\r\n                address: `dashboard/lastSyncedTime`,\r\n                headers: {\r\n                    'Db': parseData?.Company_id\r\n                }\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    const tally = data?.data[0]?.Last_Sync_Date_Time ? new Date(data?.data[0]?.Last_Sync_Date_Time) : null;\r\n                    const sales = data?.data[0]?.lastSalesSync ? new Date(data?.data[0]?.lastSalesSync) : null;\r\n                    setLastSynedTime({\r\n                        Last_Sync_Date_Time: tally,\r\n                        lastSalesSync: sales\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }, [isAdmin, parseData?.Company_id])\r\n\r\n    return (\r\n        <>\r\n            {/* <span className=\"fa-14 px-2 py-1 bg-white rounded border\"> Sync: </span> */}\r\n            <div className=\"d-flex\">\r\n                <div className=\"rounded-3 overflow-hidden border p-0\">\r\n                    <table className=\"table table-borderless w-auto m-0 fa-14 \">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"px-2 py-1 border-bottom\">Tally Sync</td>\r\n                                <td className=\"px-2 py-1 border-bottom\">{\r\n                                    lastSyncedTime.Last_Sync_Date_Time\r\n                                        ? LocalDate(UTCDateWithTime(lastSyncedTime.Last_Sync_Date_Time))\r\n                                        + ', '\r\n                                        + UTCTime(lastSyncedTime.Last_Sync_Date_Time)\r\n                                        : '-'}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"px-2 py-1\">Sales Sync</td>\r\n                                <td className=\"px-2 py-1\">{\r\n                                    lastSyncedTime.lastSalesSync\r\n                                        ? LocalDate(UTCDateWithTime(lastSyncedTime.lastSalesSync))\r\n                                        + ', '\r\n                                        + UTCTime(lastSyncedTime.lastSalesSync)\r\n                                        : '-'}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LastSynedTime;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m10 17 5-5-5-5z\"\n}), 'ArrowRight');","import { useEffect, useMemo, useState } from \"react\";\r\nimport { Addition, filterableText, getSessionUser, ISOString, isValidDate, NumberFormat, stringCompare, toArray } from '../../Components/functions'\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { Card, CardContent, IconButton, Tooltip } from \"@mui/material\";\r\nimport { ArrowRight, KeyboardArrowDown, KeyboardArrowUp, OpenInNew, Search } from \"@mui/icons-material\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport LastSynedTime from \"../Dashboard/tallyLastSyncedTime\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst DayBookOfERP = ({ loadingOn, loadingOff }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const user = getSessionUser().user;\r\n    const [dayBookData, setDayBookData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: defaultFilters.Fromdate,\r\n        Todate: defaultFilters.Todate,\r\n        fetchFrom: defaultFilters.Fromdate,\r\n        fetchTo: defaultFilters.Todate,\r\n        filterDialog: false,\r\n        refresh: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n        setDayBookData([])\r\n        fetchLink({\r\n            address: `dashboard/dayBook?Fromdate=${filters?.fetchFrom}&Todate=${filters?.fetchTo}`,\r\n            headers: {\r\n                \"Db\": user?.Company_id\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setDayBookData(data.data);\r\n            }\r\n        }).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        }).catch(e => console.error(e))\r\n    }, [filters?.fetchFrom, filters?.fetchTo])\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n        };\r\n        setFilters(pre => ({ ...pre, fetchFrom: queryFilters.Fromdate, fetchTo: queryFilters.Todate }));\r\n    }, [location.search]);\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setFilters({\r\n            ...filters,\r\n            filterDialog: false,\r\n        });\r\n    }\r\n\r\n    const RowComp = ({ row, Sno }) => {\r\n        const [open, setOpen] = useState(false);\r\n\r\n        const ERP_Rows = useMemo(() => toArray(row?.groupedData).filter(\r\n            item => stringCompare(item?.dataSource, 'ERP')\r\n        ), [row]);\r\n\r\n        const Tally_Rows = useMemo(() => toArray(row?.groupedData).filter(\r\n            item => stringCompare(item?.dataSource, 'TALLY')\r\n        ), [row]);\r\n\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td>{Sno}</td>\r\n                    <td>{row?.ModuleName}</td>\r\n                    <td>\r\n                        {ERP_Rows.reduce((acc, item) => Addition(acc, item?.VoucherBreakUpCount), 0)}\r\n                        {/* {ERP_Rows.length\r\n                            + ' ( ' +\r\n                            ERP_Rows.reduce((acc, item) => Addition(acc, item?.VoucherBreakUpCount), 0)\r\n                            + ' - Entry )'} */}\r\n                    </td>\r\n                    <td>{NumberFormat(ERP_Rows.reduce((acc, item) => Addition(acc, item.Amount), 0))}</td>\r\n                    <td>\r\n                        {Tally_Rows.reduce((acc, item) => Addition(acc, item?.VoucherBreakUpCount), 0)}\r\n                        {/* {Tally_Rows.length\r\n                            + ' ( ' +\r\n                            Tally_Rows.reduce((acc, item) => Addition(acc, item?.VoucherBreakUpCount), 0)\r\n                            + ' - Entry )'} */}\r\n                    </td>\r\n                    <td>{NumberFormat(Tally_Rows.reduce((acc, item) => Addition(acc, item.Amount), 0))}</td>\r\n                    <td className=\"p-0 text-center vctr\">\r\n                        <IconButton onClick={() => setOpen(!open)} size=\"small\">\r\n                            {open ? <KeyboardArrowUp sx={{ fontSize: 'inherit' }} /> : <KeyboardArrowDown sx={{ fontSize: 'inherit' }} />}\r\n                        </IconButton>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                navigate(row?.groupedData[0]?.navLink, {\r\n                                    state: {\r\n                                        ModuleName: row.ModuleName,\r\n                                        Fromdate: filters?.fetchFrom,\r\n                                        Todate: filters?.fetchTo\r\n                                    }\r\n                                })\r\n                            }} className=\"ms-2\"\r\n                        >\r\n                            {<OpenInNew sx={{ fontSize: 'inherit' }} />}\r\n                        </IconButton>\r\n                    </td>\r\n                </tr>\r\n\r\n                {open && (\r\n                    <>\r\n                        <tr>\r\n                            <td colSpan={7} className=\"bg-light fw-bold\">\r\n                                ERP {`(${ERP_Rows.length})`}\r\n                            </td>\r\n                        </tr>\r\n\r\n                        {ERP_Rows.map((item, index) => (\r\n                            <tr key={index}>\r\n                                <td>{Sno + '.1.' + (index + 1)}</td>\r\n                                <td>{item?.Voucher_Type}</td>\r\n                                <td>{item?.VoucherBreakUpCount}</td>\r\n                                <td>{NumberFormat(item?.Amount)}</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td className=\"p-0 text-center vctr\">\r\n                                    <Tooltip title={'Open ' + item?.Voucher_Type + ' Details'}>\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                navigate(item?.navLink, {\r\n                                                    state: {\r\n                                                        ...item,\r\n                                                        Fromdate: filters?.fetchFrom,\r\n                                                        Todate: filters?.fetchTo\r\n                                                    }\r\n                                                })\r\n                                            }}\r\n                                            className=\"icon-btn\"\r\n                                        >\r\n                                            <ArrowRight sx={{ fontSize: 'inherit' }} />\r\n                                        </button>\r\n                                    </Tooltip>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n\r\n                        <tr>\r\n                            <td colSpan={7} className=\"bg-light fw-bold\">\r\n                                TALLY {`(${Tally_Rows.length})`}\r\n                            </td>\r\n                        </tr>\r\n\r\n                        {Tally_Rows?.map((item, index) => (\r\n                            <tr key={index}>\r\n                                <td>{Sno + '.2.' + (index + 1)}</td>\r\n                                <td>{item?.Voucher_Type}</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td>{item?.VoucherBreakUpCount}</td>\r\n                                <td>{NumberFormat(item?.Amount)}</td>\r\n                                <td className=\"p-0 text-center vctr\">\r\n                                    <Tooltip title={'Open ' + item?.Voucher_Type + ' Details'}>\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                navigate(item?.navLink, {\r\n                                                    state: {\r\n                                                        ...item,\r\n                                                        Fromdate: filters?.fetchFrom,\r\n                                                        Todate: filters?.fetchTo\r\n                                                    }\r\n                                                })\r\n                                            }}\r\n                                            className=\"icon-btn\"\r\n                                        >\r\n                                            <ArrowRight sx={{ fontSize: 'inherit' }} />\r\n                                        </button>\r\n                                    </Tooltip>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </>\r\n                )}\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card>\r\n                <div className=\"p-2 d-flex align-items-center flex-wrap border-bottom\">\r\n                    <h5 className=\"m-0 my-1 flex-grow-1 d-flex align-items-center flex-wrap\">\r\n                        <span className=\"mx-2\">Day Book</span>\r\n                        <LastSynedTime />\r\n                    </h5>\r\n                    <div>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={filters.Fromdate}\r\n                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                            className=\"cus-inpt w-auto p-1\"\r\n                        />\r\n                    </div>\r\n                    <span className=\"px-2\">To</span>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={filters.Todate}\r\n                        onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                        className=\"cus-inpt me-2 w-auto p-1\"\r\n                    />\r\n                    <IconButton\r\n                        onClick={() => {\r\n                            const updatedFilters = {\r\n                                Fromdate: filters?.Fromdate,\r\n                                Todate: filters?.Todate\r\n                            };\r\n                            updateQueryString(updatedFilters);\r\n                            closeDialog();\r\n                        }}\r\n                        variant=\"outlined\" size=\"small\"\r\n                    ><Search /></IconButton>\r\n                </div>\r\n                <CardContent>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered fa-13\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Sno</th>\r\n                                    <th>Voucher</th>\r\n                                    {/* <th>Voucher Count</th> */}\r\n                                    {/* <th>Total Amount</th> */}\r\n                                    <th>ERP Entries</th>\r\n                                    <th>ERP Amount</th>\r\n                                    <th>Tally Entries</th>\r\n                                    <th>Tally Amount</th>\r\n                                    <th>Detilas</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {dayBookData.map((item, index) => (\r\n                                    <RowComp key={index} row={item} Sno={index + 1} />\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DayBookOfERP;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'OpenInNew');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["LastSynedTime","parseData","JSON","parse","localStorage","getItem","isAdmin","Number","UserTypeId","lastSyncedTime","setLastSynedTime","useState","Last_Sync_Date_Time","lastSalesSync","useEffect","fetchLink","address","headers","Company_id","then","data","success","_data$data$","_data$data$2","_data$data$3","_data$data$4","tally","Date","sales","_jsx","_Fragment","children","className","_jsxs","LocalDate","UTCDateWithTime","UTCTime","createSvgIcon","d","defaultFilters","Fromdate","ISOString","Todate","_ref","loadingOn","loadingOff","navigate","useNavigate","location","useLocation","query","URLSearchParams","search","user","getSessionUser","dayBookData","setDayBookData","filters","setFilters","fetchFrom","fetchTo","filterDialog","refresh","concat","finally","catch","e","console","error","queryFilters","get","isValidDate","pre","_objectSpread","RowComp","_ref2","row","Sno","open","setOpen","ERP_Rows","useMemo","toArray","groupedData","filter","item","stringCompare","dataSource","Tally_Rows","ModuleName","reduce","acc","Addition","VoucherBreakUpCount","NumberFormat","Amount","IconButton","onClick","size","KeyboardArrowUp","sx","fontSize","KeyboardArrowDown","_row$groupedData$","navLink","state","OpenInNew","colSpan","length","map","index","Voucher_Type","Tooltip","title","ArrowRight","Card","type","value","onChange","target","newFilters","params","toString","replace","updateQueryString","variant","Search","CardContent","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","overridesResolver","props","styles","root","padding","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined"],"sourceRoot":""}
{"version":3,"file":"static/js/4080.2c7f0cef.chunk.js","mappings":"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","sources":["Components/filterableTable.jsx","Pages/Analytics/QPayComps/settings.jsx","Pages/Analytics/QPayComps/salesBased.jsx","Pages/Analytics/QPayComps/qPayBased.jsx","Pages/Analytics/QPayComps/qpayGroupingList.jsx","Pages/Analytics/QPayReports2.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, TableBody, TableContainer, TableRow, Paper, TablePagination, TableHead, TableCell, TableSortLabel } from '@mui/material';\r\nimport { isEqualNumber, LocalDate, NumberFormat } from './functions';\r\n\r\nconst FilterableTable = ({ dataArray, columns, onClickFun }) => {\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(20);\r\n    const [sortCriteria, setSortCriteria] = useState([]);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSortRequest = (columnId) => {\r\n        const existingCriteria = sortCriteria.find(criteria => criteria.columnId === columnId);\r\n        if (existingCriteria) {\r\n            const isAsc = existingCriteria.direction === 'asc';\r\n            setSortCriteria(sortCriteria.map(criteria =>\r\n                criteria.columnId === columnId\r\n                    ? { ...criteria, direction: isAsc ? 'desc' : 'asc' }\r\n                    : criteria\r\n            ));\r\n        } else {\r\n            setSortCriteria([...sortCriteria, { columnId, direction: 'asc' }]);\r\n        }\r\n    };\r\n\r\n    const sortData = (data) => {\r\n        if (!sortCriteria.length) return data;\r\n\r\n        const sortedData = [...data].sort((a, b) => {\r\n            for (const criteria of sortCriteria) {\r\n                const { columnId, direction } = criteria;\r\n                const aValue = a[columnId];\r\n                const bValue = b[columnId];\r\n\r\n                if (aValue !== bValue) {\r\n                    if (direction === 'asc') {\r\n                        return aValue > bValue ? 1 : -1;\r\n                    } else {\r\n                        return aValue < bValue ? 1 : -1;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        return sortedData;\r\n    };\r\n\r\n    const sortedData = sortData(dataArray);\r\n    const startIndex = page * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    const paginatedData = sortedData.slice(startIndex, endIndex);\r\n\r\n    const formatString = (val, dataType) => {\r\n        switch (dataType) {\r\n            case 'number':\r\n                return NumberFormat(val)\r\n            case 'date':\r\n                return LocalDate(val);\r\n            case 'string':\r\n                return val;\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer component={Paper} sx={{ maxHeight: 550 }}>\r\n                <Table stickyHeader size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column, ke) => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)) && (\r\n                                <TableCell\r\n                                    key={ke}\r\n                                    className='fa-13 fw-bold border-end border-top'\r\n                                    style={{ backgroundColor: '#EDF0F7' }}\r\n                                    sortDirection={\r\n                                        sortCriteria.some(criteria => criteria.columnId === column.Field_Name)\r\n                                            ? sortCriteria.find(criteria => criteria.columnId === column.Field_Name).direction\r\n                                            : false\r\n                                    }\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={sortCriteria.some(criteria => criteria.columnId === column.Field_Name)}\r\n                                        direction={\r\n                                            sortCriteria.some(criteria => criteria.columnId === column.Field_Name)\r\n                                                ? sortCriteria.find(criteria => criteria.columnId === column.Field_Name).direction\r\n                                                : 'asc'\r\n                                        }\r\n                                        onClick={() => handleSortRequest(column.Field_Name)}\r\n                                    >\r\n                                        {column?.Field_Name?.replace(/_/g, ' ')}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {paginatedData.map((row, index) => (\r\n                            <TableRow key={index}>\r\n                                {columns.map(column => (\r\n                                    Object.entries(row).map(([key, value]) => (\r\n                                        (\r\n                                            (column.Field_Name === key)\r\n                                            &&\r\n                                            (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1))\r\n                                        ) && (\r\n                                            <TableCell\r\n                                                key={column + index}\r\n                                                className='fa-13 border-end'\r\n                                                onClick={() => onClickFun ? onClickFun(row) : console.log('Function not supplied')}\r\n                                            >\r\n                                                {formatString(value, column?.Fied_Data)}\r\n                                            </TableCell>\r\n                                        )\r\n                                    ))\r\n                                ))}\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <div className=\"p-2\">\r\n                <TablePagination\r\n                    component=\"div\"\r\n                    count={dataArray.length}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    rowsPerPage={rowsPerPage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    rowsPerPageOptions={[20, 50, 100, 200, 500]}\r\n                    labelRowsPerPage=\"Rows per page\"\r\n                    showFirstButton\r\n                    showLastButton\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterableTable;\r\n","import { useState, useEffect } from 'react';\r\nimport { IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Button, Switch, Card, Paper } from \"@mui/material\";\r\nimport { RotateLeft, Settings } from '@mui/icons-material';\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchLink } from '../../../Components/fetchComponent'\r\n\r\n\r\nconst QPayColumnVisiblitySettings = ({ CompanyId, refresh, columns, ReportId }) => {\r\n    const [modifiedColumns, setModifiedColumns] = useState([]);\r\n    const [reset, setReset] = useState(false);\r\n    const [dialog, setDialog] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setModifiedColumns([...columns])\r\n    }, [columns, reset])\r\n\r\n    const saveColumnVisiblity = () => {\r\n        setDialog(false);\r\n        fetchLink({\r\n            address: `reports/tallyReports/qpay/columnVisiblity`,\r\n            method: 'POST',\r\n            bodyData: {\r\n                dataArray: modifiedColumns,\r\n                CompanyId: CompanyId,\r\n                ReportId: ReportId ? ReportId : 1\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (refresh) {\r\n                refresh()\r\n            }\r\n        })\r\n            \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <IconButton size='small' onClick={() => setDialog(pre => !pre)}>\r\n                <Settings />\r\n            </IconButton>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={() => setDialog(false)}\r\n                fullWidth maxWidth='lg'\r\n            >\r\n                <DialogTitle>Column Visiblity Settings</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <div className=\"row\">\r\n                        {modifiedColumns?.map((o, i) => (\r\n                            <div className=\"col-lg-4 col-md-6 p-2\" key={i}>\r\n                                <Card\r\n                                    component={Paper}\r\n                                    className={`p-2 d-flex justify-content-between align-items-center flex-wrap ${i % 2 !== 0 ? 'bg-light' : ''}`}\r\n                                >\r\n                                    {/* <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={Boolean(o?.Defult_Display) || Boolean(o?.isVisible)}\r\n                                                disabled={Boolean(o?.Defult_Display)}\r\n                                                onChange={e =>\r\n                                                    setModifiedColumns(prevColumns =>\r\n                                                        prevColumns.map(oo =>\r\n                                                            oo.Field_Id === o?.Field_Id\r\n                                                                ? { ...oo, isVisible: e.target.checked ? 1 : 0 }\r\n                                                                : oo\r\n                                                        )\r\n                                                    )}\r\n                                            />\r\n                                        }\r\n                                        label={o?.Field_Name}\r\n                                        sx={{ fontSize: '14px'}}\r\n                                        labelPlacement=\"end\"\r\n                                        className=\"fw-bold text-primary\"\r\n                                    /> */}\r\n                                    <div className='d-flex justify-content-between align-items-center flex-wrap'>\r\n                                        <Switch\r\n                                            checked={Boolean(o?.Defult_Display) || Boolean(o?.isVisible)}\r\n                                            disabled={Boolean(o?.Defult_Display)}\r\n                                            onChange={e =>\r\n                                                setModifiedColumns(prevColumns =>\r\n                                                    prevColumns.map(oo =>\r\n                                                        oo.Field_Id === o?.Field_Id\r\n                                                            ? { ...oo, isVisible: e.target.checked ? 1 : 0 }\r\n                                                            : oo\r\n                                                    )\r\n                                                )}\r\n                                        />\r\n\r\n                                        <h6 className='fa-13 mb-0 fw-bold '>{o?.Field_Name}</h6>\r\n                                    </div>\r\n                                    <input\r\n                                        type='number'\r\n                                        value={Number(o?.OrderBy) ? o?.OrderBy : ''}\r\n                                        onChange={e =>\r\n                                            setModifiedColumns(prevColumns =>\r\n                                                prevColumns.map(oo =>\r\n                                                    oo.Field_Id === o?.Field_Id\r\n                                                        ? { ...oo, OrderBy: e.target.value }\r\n                                                        : oo\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                        label={'Order Value'}\r\n                                        className='mt-2 p-1 border-0 cus-inpt'\r\n                                        style={{ width: '80px' }}\r\n                                        placeholder='Order'\r\n                                    />\r\n                                </Card>\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>\r\n                </DialogContent>\r\n\r\n                <DialogActions className='d-flex justify-content-between'>\r\n                    <Button onClick={() => setReset(pre => !pre)} variant='outlined' startIcon={<RotateLeft />}>reset</Button>\r\n\r\n                    <span>\r\n                        <Button onClick={() => setDialog(false)} color='error'>Cancel</Button>\r\n                        <Button onClick={saveColumnVisiblity} variant='outlined'>Save</Button>\r\n                    </span>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QPayColumnVisiblitySettings;","import { useEffect, useState } from \"react\";\r\nimport { BarChart } from '@mui/x-charts/BarChart';\r\nimport { NumberFormat } from \"../../../Components/functions\";\r\nimport { Collapse } from \"@mui/material\";\r\n\r\n\r\nconst QPaySalesBasedComp = ({ dataArray }) => {\r\n    const [salesRange, setSalesRange] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const range = [\r\n            {\r\n                min: 0,\r\n                max: 5000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 5000,\r\n                max: 10000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 10000,\r\n                max: 20000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 20000,\r\n                max: 50000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 50000,\r\n                max: 100000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 100000,\r\n                max: 200000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 200000,\r\n                max: 500000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 500000,\r\n                max: 1000000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 1000000,\r\n                max: 1500000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 1500000,\r\n                max: 2000000,\r\n                data: []\r\n            },\r\n            {\r\n                min: 2000000,\r\n                max: 1e15,\r\n                data: []\r\n            },\r\n        ];\r\n\r\n        dataArray.forEach(o => {\r\n            const salesAmount = Number(o.Sales_Amount);\r\n            const rangeIndex = range.findIndex(obj => (salesAmount > obj.min) && (salesAmount <= obj.max));\r\n            if (rangeIndex !== -1) {\r\n                range[rangeIndex].data.push(o);\r\n            } else {\r\n                // console.log(salesAmount)\r\n            }\r\n        });\r\n        setSalesRange(range);\r\n\r\n    }, [dataArray])\r\n\r\n    const RowComp = ({ o, i }) => {\r\n        const [open, setOpen] = useState(false);\r\n\r\n        return (\r\n            <>\r\n                <tr onClick={() => setOpen(pre => !pre)} className=\"hov\">\r\n                    <td className=\"fa-13 border text-center hov-bg\">{i + 1}</td>\r\n                    <td className=\"fa-13 border text-center hov-bg\">\r\n                        {\r\n                            salesRange[i + 1]\r\n                                ? (NumberFormat(o?.min) + ' - ' + NumberFormat(o?.max))\r\n                                : '< ' + o?.min.toString()\r\n                        }\r\n                    </td>\r\n                    <td className=\"fa-13 border text-center hov-bg blue-text\">{o?.data?.length}</td>\r\n                    <td className=\"fa-13 border text-center hov-bg\">{NumberFormat((o?.data?.length / dataArray?.length) * 100)}%</td>\r\n                    <td className=\"fa-13 border text-center hov-bg\">\r\n                        {(o.data.length === 0) ? 0 : ((o?.data?.reduce((sum, item) => sum + item.Sales_Count || 0, 0)) / o.data.length).toFixed(2)}\r\n                    </td>\r\n                    <td className=\"fa-13 border text-center hov-bg\">\r\n                        {(o.data.length === 0) ? 0 : ((o?.data?.reduce((sum, item) => sum + item.Freq_Days || 0, 0)) / o.data.length).toFixed(2)}\r\n                    </td>\r\n                </tr>\r\n                <Collapse in={open} unmountOnExit>\r\n                    <tr>\r\n                        <td colSpan={6}>\r\n\r\n                        </td>\r\n                    </tr>\r\n                </Collapse>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"px-3 d-flex align-items-center justify-content-center flex-column py-2\">\r\n                <BarChart\r\n                    xAxis={[{\r\n                        scaleType: 'band',\r\n                        data:\r\n                            salesRange?.map((o, i) => (\r\n                                salesRange[i + 1]\r\n                                    ? '> ' + NumberFormat(o?.max)\r\n                                    : '< ' + (o?.min)\r\n                            ))\r\n                    }]}\r\n                    series={[\r\n                        // { data: salesRange?.map(o => ((o?.data?.length / dataArray?.length) * 100).toFixed(2)), label: 'Parties', color: 'skyblue' },\r\n                        { data: salesRange?.map(o => o?.data?.length), label: 'Parties', color: 'skyblue' },\r\n                        // { \r\n                        //     data: salesRange?.map(o => (o.data.length === 0) ? 0 : ((o?.data?.reduce((sum, item) => sum + item.Sales_Count || 0, 0)) / o.data.length).toFixed(2)), \r\n                        //     label: 'Sales Count' \r\n                        // },\r\n                        // { \r\n                        //     data: salesRange?.map(o => (o.data.length === 0) ? 0 : ((o?.data?.reduce((sum, item) => sum + item.Freq_Days || 0, 0)) / o.data.length).toFixed(2)), \r\n                        //     label: 'Frequency Days' \r\n                        // },\r\n                    ]}\r\n                    height={400}\r\n                    barLabel=\"value\"\r\n                    borderRadius={6}\r\n                />\r\n\r\n                <div className=\"table-responsive w-100\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {['Sno', 'Amount-Range', 'Parties', 'Percentage', 'Sales Count (Avg)', 'Frequency Days (Avg)'].map(o => (\r\n                                    <th className=\"border fa-14 text-center\" style={{ backgroundColor: '#EDF0F7' }} key={o}>{o}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {salesRange.map((o, i) => <RowComp key={i} o={o} i={i} />)}\r\n                            <tr>\r\n                                <td className=\"border\"></td>\r\n                                <td className=\"border\"></td>\r\n                                <td className=\"fa-13 border text-center\">\r\n                                    {NumberFormat(salesRange?.reduce((sum, o) => {\r\n                                        return sum += o?.data?.length\r\n                                    }, 0))}\r\n                                </td>\r\n                                <td className=\"fa-13 border text-center\">\r\n                                    {NumberFormat(salesRange?.reduce((sum, o) => {\r\n                                        return sum += ((o?.data?.length / dataArray?.length) * 100)\r\n                                    }, 0))}%\r\n                                </td>\r\n                                <td className=\"fa-13 border text-center\">\r\n                                    {NumberFormat((dataArray?.length / (dataArray?.reduce((sum, o) => {\r\n                                        return sum += Number(o?.Sales_Count) || 0\r\n                                    }, 0))) * 100)}\r\n                                </td>\r\n                                <td className=\"fa-13 border text-center\">\r\n                                    {NumberFormat((dataArray?.length / (dataArray?.reduce((sum, o) => {\r\n                                        return sum += Number(o?.Freq_Days) || 0\r\n                                    }, 0))) * 100)}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QPaySalesBasedComp;","import { useEffect, useState } from \"react\";\r\nimport { PieChart } from '@mui/x-charts/PieChart';\r\nimport { getRandomColor, NumberFormat } from \"../../../Components/functions\";\r\nimport { Button } from \"@mui/material\";\r\n// import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\r\n\r\n// const icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\n// const checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst QPayBasedComp = ({ dataArray, columns, filters }) => {\r\n    const [qPayRange, setQPayRange] = useState([]);\r\n    const [reload, setReload] = useState(false);\r\n    const [filtered, setFiltered] = useState([])\r\n    const [localState, setLocalState] = useState({\r\n        group: localStorage.getItem('qPayGroup') || '',\r\n    })\r\n\r\n    const comStr = (str) => str ? (str.trim()).toLowerCase() : '';\r\n\r\n    useEffect(() => {\r\n        const filteredList = Array.isArray(filters[localState.group]) ? filters[localState.group] : []\r\n        setFiltered(filteredList)\r\n    }, [filters, localState.group])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const range = [\r\n            {\r\n                min: 0,\r\n                max: 5,\r\n                data: []\r\n            },\r\n            {\r\n                min: 5,\r\n                max: 10,\r\n                data: []\r\n            },\r\n            {\r\n                min: 10,\r\n                max: 15,\r\n                data: []\r\n            },\r\n            {\r\n                min: 15,\r\n                max: 20,\r\n                data: []\r\n            },\r\n            {\r\n                min: 20,\r\n                max: 30,\r\n                data: []\r\n            },\r\n            {\r\n                min: 30,\r\n                max: 40,\r\n                data: []\r\n            },\r\n            {\r\n                min: 40,\r\n                max: 60,\r\n                data: []\r\n            },\r\n            {\r\n                min: 60,\r\n                max: 1e4,\r\n                data: []\r\n            },\r\n        ];\r\n\r\n        dataArray.forEach(o => {\r\n            const qpayDays = Number(o.Q_Pay_Days);\r\n            const rangeIndex = range.findIndex(obj => (qpayDays > obj.min) && (qpayDays <= obj.max));\r\n            if (rangeIndex !== -1) {\r\n                range[rangeIndex].data.push(o);\r\n            }\r\n        });\r\n\r\n        setQPayRange(range);\r\n\r\n    }, [dataArray, reload])\r\n\r\n    const onChangeGroup = (val) => {\r\n        setLocalState(pre => ({ ...pre, group: val.target.value }))\r\n        localStorage.setItem('qPayGroup', val.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-xxl-3 col-lg-4 col-md-6 col-sm-8\">\r\n                <select\r\n                    className=\"cus-inpt w-auto border\"\r\n                    value={localState.group}\r\n                    onChange={onChangeGroup}\r\n                >\r\n                    <option value=\"\">Select Group By</option>\r\n                    {columns?.map((o, i) => o?.Fied_Data === 'string' && (\r\n                        <option value={o?.Field_Name} key={i}>{o?.Field_Name?.replace(/_/g, ' ')}</option>\r\n                    ))}\r\n                </select>\r\n                {/* <Autocomplete\r\n                    multiple\r\n                    options={[...columns?.filter(col => col?.Fied_Data === 'string')].map(filCol => filCol?.Field_Name)}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={localState.group || []}\r\n                    onChange={(event, newValue) => onChangeGroup(newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} label={'Add Grouping'} placeholder={`Select column for Grouping`} />\r\n                    )}\r\n                /> */}\r\n            </div>\r\n\r\n            {(localState?.group === '' || filtered.length === 0) ? (\r\n                <div className=\"d-flex justify-content-around align-items-center flex-wrap px-3 py-2\">\r\n\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {['Sno', 'Day-Range', 'Parties', 'Percentage'].map(o => (\r\n                                        <th className=\"border fa-15\" style={{ backgroundColor: '#EDF0F7' }} key={o}>{o}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {qPayRange.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className=\"fa-15 border text-center\">{i + 1}</td>\r\n                                        <td className=\"fa-15 border text-center\">\r\n                                            {\r\n                                                qPayRange[i + 1]\r\n                                                    ? ((o?.min + 1)?.toString() + ' - ' + o?.max?.toString())\r\n                                                    : '< ' + o?.min.toString()\r\n                                            }\r\n                                        </td>\r\n                                        <td className=\"fa-15 border text-center\">{o?.data?.length}</td>\r\n                                        <td className=\"fa-15 border text-center\">{NumberFormat((o?.data?.length / dataArray?.length) * 100)}</td>\r\n                                    </tr>\r\n                                ))}\r\n                                <tr>\r\n                                    <td className=\"border\"></td>\r\n                                    <td className=\"border\"></td>\r\n                                    <td className=\"fa-13 border text-center\">\r\n                                        {NumberFormat(qPayRange?.reduce((sum, o) => {\r\n                                            return sum += o?.data?.length\r\n                                        }, 0))}\r\n                                    </td>\r\n                                    <td className=\"fa-13 border text-center\">\r\n                                        {NumberFormat(qPayRange?.reduce((sum, o) => {\r\n                                            return sum += ((o?.data?.length / dataArray?.length) * 100)\r\n                                        }, 0))}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex align-items-center flex-column overflow-scroll\">\r\n                        <h5>Q-Pay Days</h5>\r\n                        <PieChart\r\n                            series={[\r\n                                {\r\n                                    data: qPayRange?.map((range, rangeInd) => ({\r\n                                        label: qPayRange[rangeInd + 1]\r\n                                            ? (NumberFormat(range?.min) + '-' + NumberFormat(range?.max)) + '(' + range?.data?.length + ')'\r\n                                            : '< ' + NumberFormat(range?.min) + '(' + range?.data?.length + ')',\r\n                                        // value: range?.data?.length,\r\n                                        value: ((range?.data?.length / dataArray?.length) * 100).toFixed(2),\r\n                                        color: getRandomColor()\r\n                                    })),\r\n                                    arcLabel: (item) => `${item.label}`,\r\n                                    arcLabelMinAngle: 35,\r\n                                }\r\n                            ]}\r\n                            width={570}\r\n                            height={400}\r\n                            title=\"QPay Days\"\r\n                        />\r\n\r\n                        <Button onClick={() => setReload(pre => !pre)}>Change color</Button>\r\n                    </div>\r\n\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"cus-grid mt-3\">\r\n                        {filtered.map((group, groupIndex) => (\r\n                            <div className=\"table-responsive grid-card bg-white border\" key={groupIndex}>\r\n                                <h6 className=\"fw-bold text-muted d-flex justify-content-between\">\r\n                                    {String(group)?.toUpperCase()}\r\n                                    <span>\r\n                                        {NumberFormat(qPayRange?.reduce((overall, o) => {\r\n                                            return overall += o?.data?.reduce((sum, obj) => {\r\n                                                return (comStr(obj[localState.group]) === comStr(group))\r\n                                                    ? sum + 1\r\n                                                    : sum\r\n                                            }, 0)\r\n                                        }, 0))}\r\n                                    </span>\r\n                                </h6>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            {['Sno', 'Day-Range', 'Parties', 'Percentage'].map(o => (\r\n                                                <th className=\"border fa-14\" style={{ backgroundColor: '#EDF0F7' }} key={o}>{o}</th>\r\n                                            ))}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {qPayRange.map((o, i) => (\r\n                                            <tr key={i}>\r\n                                                <td className=\"fa-15 border text-center\">{i + 1}</td>\r\n                                                <td className=\"fa-15 border text-center\">\r\n                                                    {\r\n                                                        qPayRange[i + 1]\r\n                                                            ? ((o?.min + 1)?.toString() + ' - ' + o?.max?.toString())\r\n                                                            : '< ' + o?.min.toString()\r\n                                                    }\r\n                                                </td>\r\n                                                <td className=\"fa-15 border text-center\">\r\n                                                    {o?.data?.reduce((sum, obj) => {\r\n                                                        return (comStr(obj[localState.group]) === comStr(group))\r\n                                                            ? sum + 1\r\n                                                            : sum\r\n                                                    }, 0)}\r\n                                                </td>\r\n                                                <td className=\"fa-15 border text-center\">\r\n                                                    {NumberFormat((o?.data?.reduce((sum, obj) => {\r\n                                                        return (comStr(obj[localState.group]) === comStr(group))\r\n                                                            ? sum + 1\r\n                                                            : sum\r\n                                                    }, 0) / qPayRange?.reduce((overall, o) => {\r\n                                                        return overall += o?.data?.reduce((sum, obj) => {\r\n                                                            return (comStr(obj[localState.group]) === comStr(group))\r\n                                                                ? sum + 1\r\n                                                                : sum\r\n                                                        }, 0)\r\n                                                    }, 0)) * 100)}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QPayBasedComp;","import { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\r\nimport { isEqualNumber, LocalDate, NumberFormat } from '../../../Components/functions';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return NumberFormat(val)\r\n        case 'date':\r\n            return LocalDate(val);\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst getFun = (key, dataType, dataArray) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return {\r\n                filterVariant: 'range',\r\n                filterFn: 'between',\r\n            }\r\n        case 'date':\r\n            return {\r\n                filterVariant: 'text',\r\n            };\r\n        case 'string':\r\n            // const distinctValues = [...new Set(dataArray.map(item => item[key]))].sort();\r\n            return {\r\n                filterVariant: 'text'\r\n            };\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\n\r\nconst QPayGroupingList = ({ dataArray, columns }) => {\r\n    const [dispColmn, setDispColmn] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const displayColumns = [...columns].filter(column => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)));\r\n\r\n        const muiColumns = displayColumns.map((column) => ({\r\n            header: column?.Field_Name?.replace(/_/g, ' '),\r\n            accessorKey: column?.Field_Name,\r\n            sortable: true,\r\n            size: 150,\r\n            aggregationFn: column?.Field_Name?.includes('mount') ? 'sum' : column?.Fied_Data === 'number' ? 'mean' : 'uniqueCount',\r\n            AggregatedCell: ({ cell }) => <div className='blue-text text-center float-end w-100'>{NumberFormat(cell.getValue())}</div>,\r\n            Cell: ({ cell }) => (\r\n                <p className={`m-0 text-center fa-14 w-100 `}>\r\n                    {formatString(cell.getValue(), column?.Fied_Data)}\r\n                </p>\r\n            ),\r\n            ...getFun(column?.Field_Name, column?.Fied_Data, dataArray),\r\n        }))\r\n\r\n        setDispColmn(muiColumns)\r\n    }, [columns])\r\n\r\n    const table = useMaterialReactTable({\r\n        columns: dispColmn,\r\n        data: dataArray || [],\r\n        enableColumnResizing: true,\r\n        enableGrouping: true,\r\n        enableStickyHeader: true,\r\n        enableStickyFooter: true,\r\n        enableColumnOrdering: true,\r\n        enableRowNumbers: false,\r\n        initialState: {\r\n            density: 'compact',\r\n            pagination: { pageIndex: 0, pageSize: 100 },\r\n            sorting: [{ id: 'Q_Pay_Days' }],\r\n        },\r\n        muiToolbarAlertBannerChipProps: { color: 'primary' },\r\n        muiTableContainerProps: { sx: { maxHeight: '64vh', minHeight: '56vh' } },\r\n    })\r\n\r\n\r\n    return (\r\n        <MaterialReactTable table={table} />\r\n    )\r\n}\r\n\r\n\r\nexport default QPayGroupingList;","import { useState, useEffect } from \"react\";\r\nimport { Card, FormControlLabel, Switch, Tab, Box, Checkbox, TextField, Autocomplete, IconButton, Dialog, DialogContent, DialogActions, Button, Tooltip } from \"@mui/material\";\r\nimport { CheckBoxOutlineBlank, CheckBox, FilterAlt, FilterAltOff } from '@mui/icons-material'\r\nimport { TabPanel, TabList, TabContext } from '@mui/lab';\r\nimport QPaySalesBasedComp from \"./QPayComps/salesBased\";\r\nimport QPayBasedComp from \"./QPayComps/qPayBased\";\r\nimport FilterableTable from \"../../Components/filterableTable\";\r\nimport QPayColumnVisiblitySettings from \"./QPayComps/settings\";\r\nimport { isEqualNumber, isObject, checkIsNumber } from \"../../Components/functions\";\r\nimport QPayGroupingList from './QPayComps/qpayGroupingList'\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GrTransaction } from \"react-icons/gr\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\n\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\n\r\nconst QPayReports = () => {\r\n    const nav = useNavigate();\r\n\r\n    const tabList = ['LIST', 'Q-PAY BASED', 'SALES VALUE BASED'];\r\n    const filterInitialValue = {\r\n        zeros: false,\r\n        company: 2,\r\n        consolidate: 1,\r\n        view: 'LIST',\r\n        filterDialog: false,\r\n        displayGrouping: false,\r\n    }\r\n\r\n    const [repData, setRepData] = useState([]);\r\n    const [showData, setShowData] = useState([]);\r\n    const [reload, setReload] = useState(false);\r\n\r\n    const [cusFilter, setCusFilter] = useState(filterInitialValue);\r\n    const [columns, setColumns] = useState([]);\r\n    const [sortedColumns, setSortedColumns] = useState([])\r\n\r\n    const [filters, setFilters] = useState({});\r\n    const [filteredData, setFilteredData] = useState(showData);\r\n\r\n    const [ledgerId, setLedgerId] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setSortedColumns(columns?.sort((a, b) => (a?.OrderBy && b?.OrderBy) ? a?.OrderBy - b?.OrderBy : b?.OrderBy - a?.OrderBy))\r\n    }, [columns])\r\n\r\n    useEffect(() => {\r\n        setRepData([])\r\n        fetchLink({\r\n            address: `reports/tallyReports/qPay?Company_Id=${cusFilter?.company}&Consolidate=${cusFilter?.consolidate}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRepData(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [cusFilter?.company, cusFilter?.consolidate, reload])\r\n\r\n    useEffect(() => {\r\n        const temp = [...repData];\r\n        const zerosIncluded = !cusFilter.zeros ? temp.filter(o => o?.Q_Pay_Days) : temp;\r\n\r\n        setShowData(zerosIncluded);\r\n    }, [repData, cusFilter.zeros]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/tallyReports/qpay/columnVisiblity?CompanyId=${cusFilter.company}&Report_Type_Id=${Boolean(cusFilter?.consolidate) ? 1 : 2}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                data?.data?.sort((a, b) => a?.Field_Name?.localeCompare(b?.Field_Name));\r\n                setColumns(data.data)\r\n            }\r\n        })\r\n        .catch(e => console.error(e))   \r\n    }, [cusFilter.company, cusFilter?.consolidate, reload])\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filters]);\r\n\r\n    useEffect(() => {\r\n        const filterCount = Object.keys(filters).length;\r\n        const dataArray = (filterCount > 0) ? filteredData : showData;\r\n\r\n        const str = dataArray?.reduce((idStr, obj) => {\r\n            return obj?.Ledger_Tally_Id ? [...idStr, obj?.Ledger_Tally_Id] : idStr\r\n        }, [])\r\n        setLedgerId(str)\r\n    }, [filters, showData, filteredData])\r\n\r\n    const openSalesTransaction = (obj) => {\r\n\r\n        if (Array.isArray(obj) && obj?.length) {\r\n            const Ledger_Tally_Id = obj?.reduce((idStr, item) => {\r\n                if (item) {\r\n                    return idStr ? `${idStr},${item}` : `${item}`;\r\n                }\r\n                return idStr;\r\n            }, '');\r\n            nav('transaction', {\r\n                state: {\r\n                    Ledger_Tally_Id: Ledger_Tally_Id,\r\n                    isObj: false,\r\n                    rowDetails: obj,\r\n                    company: cusFilter.company,\r\n                    preFilters: filters\r\n                }\r\n            })\r\n\r\n        } else if (isObject(obj) && checkIsNumber(obj.Ledger_Tally_Id)) {\r\n\r\n            nav('transaction', {\r\n                state: {\r\n                    Ledger_Tally_Id: obj.Ledger_Tally_Id,\r\n                    isObj: true,\r\n                    rowDetails: obj,\r\n                    company: cusFilter.company,\r\n                    preFilters: filters\r\n                }\r\n            })\r\n\r\n        } else {\r\n            toast.error('Ledger Id not available')\r\n        }\r\n    }\r\n\r\n    const dispTab = (val) => {\r\n        const filterCount = Object.keys(filters).length;\r\n        const dataArray = (filterCount > 0) ? filteredData : showData;\r\n        switch (val) {\r\n            // case 'LIST': return <QPayListComp dataArray={filteredData} />\r\n            case 'LIST': return <FilterableTable dataArray={dataArray} columns={sortedColumns} onClickFun={openSalesTransaction} />\r\n            case 'Q-PAY BASED': return <QPayBasedComp dataArray={dataArray} columns={sortedColumns} filters={filters} />\r\n            case 'SALES VALUE BASED': return <QPaySalesBasedComp dataArray={dataArray} />\r\n            default: <></>\r\n        }\r\n    }\r\n\r\n    const reloadData = () => {\r\n        setReload(pre => !pre)\r\n    }\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...showData];\r\n        for (const column of sortedColumns) {\r\n            if (filters[column.Field_Name]) {\r\n                if (filters[column.Field_Name].type === 'range') {\r\n                    const { min, max } = filters[column.Field_Name];\r\n                    filtered = filtered.filter(item => {\r\n                        const value = item[column.Field_Name];\r\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\r\n                    });\r\n                } else if (filters[column.Field_Name].type === 'date') {\r\n                    const { start, end } = filters[column.Field_Name].value;\r\n                    filtered = filtered.filter(item => {\r\n                        const dateValue = new Date(item[column.Field_Name]);\r\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\r\n                    });\r\n                } else if (Array.isArray(filters[column.Field_Name])) {\r\n                    filtered = filters[column.Field_Name]?.length > 0 ? filtered.filter(item => filters[column.Field_Name].includes(item[column.Field_Name].toLowerCase().trim())) : filtered\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Field_Name, Fied_Data } = column;\r\n        if (Fied_Data === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...filters[Field_Name], min: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'range', ...filters[Field_Name], max: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...filters[Field_Name]?.value, start: e.target.value || undefined } })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(Field_Name, { type: 'date', value: { ...filters[Field_Name]?.value, end: e.target.value || undefined } })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === 'string') {\r\n            const distinctValues = [...new Set(showData.map(item => item[Field_Name]?.toLowerCase()?.trim()))];\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${Field_Name}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={filters[Field_Name] || []}\r\n                    onChange={(event, newValue) => handleFilterChange(Field_Name, newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={Field_Name}\r\n                            placeholder={`Select ${Field_Name?.replace(/_/g, ' ')}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n\r\n                <div className=\"p-2 border-bottom fa-16 fw-bold\">\r\n                    <span className=\"text-uppercase ps-3\">Q-Pay Report</span>\r\n                </div>\r\n\r\n                <div className=\"d-flex flex-wrap justify-content-between p-2\">\r\n                    <span>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={!cusFilter.zeros}\r\n                                    onChange={e => setCusFilter(pre => ({ ...pre, zeros: !(e.target.checked) }))}\r\n                                />\r\n                            }\r\n                            label=\"Remove Zeros\"\r\n                            labelPlacement=\"start\"\r\n                            className=\" fw-bold text-primary\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={cusFilter.consolidate === 1 ? true : false}\r\n                                    onChange={e => setCusFilter(pre => ({ ...pre, consolidate: e.target.checked ? 1 : 0 }))}\r\n                                />\r\n                            }\r\n                            label=\"Consolidate\"\r\n                            labelPlacement=\"start\"\r\n                            className=\" fw-bold text-primary\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={cusFilter.displayGrouping}\r\n                                    onChange={e => setCusFilter(pre => ({ ...pre, displayGrouping: e.target.checked }))}\r\n                                />\r\n                            }\r\n                            label=\"Grouping\"\r\n                            labelPlacement=\"start\"\r\n                            className=\" fw-bold text-primary\"\r\n                        />\r\n                    </span>\r\n\r\n                    <span>\r\n                        <QPayColumnVisiblitySettings\r\n                            CompanyId={cusFilter.company}\r\n                            columns={sortedColumns}\r\n                            refresh={reloadData}\r\n                            ReportId={Boolean(cusFilter?.consolidate) ? 1 : 2}\r\n                        />\r\n                        <Tooltip title='Open Sales List'>\r\n                            <IconButton\r\n                                onClick={() => openSalesTransaction(ledgerId)}\r\n                                size=\"small\"\r\n                            >\r\n                                <GrTransaction />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Filters\">\r\n                            <IconButton\r\n                                onClick={() => setCusFilter(pre => ({ ...pre, filterDialog: true }))}\r\n                                size=\"small\"\r\n                                className=\"d-md-none d-inline\"\r\n                            >\r\n                                <FilterAlt />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </span>\r\n                </div>\r\n\r\n                {cusFilter.displayGrouping ? <QPayGroupingList dataArray={showData} columns={sortedColumns} /> : (\r\n                    <div className=\"row \">\r\n\r\n                        <div className=\"col-xxl-10 col-lg-9 col-md-8\">\r\n                            <div className=\"p-2\">\r\n                                <TabContext value={cusFilter.view}>\r\n                                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                                        <TabList\r\n                                            indicatorColor='transparant'\r\n                                            onChange={(e, n) => setCusFilter(pre => ({ ...pre, view: n }))}\r\n                                            variant=\"scrollable\"\r\n                                            scrollButtons=\"auto\"\r\n                                            allowScrollButtonsMobile\r\n                                        >\r\n                                            {tabList.map(o => (\r\n                                                <Tab sx={cusFilter.view === o ? { backgroundColor: '#c6d7eb' } : {}} label={o} value={o} key={o} />\r\n                                            ))}\r\n                                        </TabList>\r\n                                    </Box>\r\n                                    {tabList.map(o => (\r\n                                        <TabPanel value={o} sx={{ px: 0, py: 2 }} key={o}>\r\n                                            {dispTab(cusFilter.view)}\r\n                                        </TabPanel>\r\n                                    ))}\r\n                                </TabContext>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\r\n                            <h5 className=\"d-flex justify-content-between px-2\">\r\n                                Filters\r\n                                <Tooltip title='Clear Filters'>\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() => setFilters({})}\r\n                                    >\r\n                                        <FilterAltOff />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </h5>\r\n                            <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                                {columns.map((column, ke) => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)) && (\r\n                                    <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                        <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\r\n                                        {renderFilter(column)}\r\n                                    </div>\r\n                                ))}\r\n                                <br />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                )}\r\n\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={cusFilter?.filterDialog}\r\n                onClose={() => setCusFilter(pre => ({ ...pre, filterDialog: false }))}\r\n                fullWidth\r\n                maxWidth='sm'\r\n            >\r\n                {/* <DialogTitle></DialogTitle> */}\r\n                <DialogContent>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {columns.map((column, ke) => (isEqualNumber(column?.Defult_Display, 1) || isEqualNumber(column?.isVisible, 1)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Field_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setCusFilter(pre => ({ ...pre, filterDialog: false }))} color='error'>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QPayReports"],"names":["_ref","dataArray","columns","onClickFun","page","setPage","useState","rowsPerPage","setRowsPerPage","sortCriteria","setSortCriteria","startIndex","endIndex","paginatedData","data","length","sort","a","b","criteria","columnId","direction","aValue","bValue","sortData","slice","formatString","val","dataType","NumberFormat","LocalDate","_jsxs","children","_jsx","TableContainer","component","Paper","sx","maxHeight","Table","stickyHeader","size","TableHead","TableRow","map","column","ke","_column$Field_Name","isEqualNumber","Defult_Display","isVisible","TableCell","className","style","backgroundColor","sortDirection","some","Field_Name","find","TableSortLabel","active","onClick","existingCriteria","isAsc","handleSortRequest","replace","TableBody","row","index","Object","entries","_ref2","key","value","console","log","Fied_Data","TablePagination","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","rowsPerPageOptions","labelRowsPerPage","showFirstButton","showLastButton","CompanyId","refresh","ReportId","modifiedColumns","setModifiedColumns","reset","setReset","dialog","setDialog","useEffect","_Fragment","IconButton","pre","Settings","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","o","i","Card","Switch","checked","Boolean","disabled","onChange","e","prevColumns","oo","Field_Id","type","Number","OrderBy","label","width","placeholder","DialogActions","Button","variant","startIcon","RotateLeft","color","saveColumnVisiblity","fetchLink","address","method","bodyData","then","success","toast","message","error","catch","finally","salesRange","setSalesRange","range","min","max","forEach","salesAmount","Sales_Amount","rangeIndex","findIndex","obj","push","RowComp","_o$data","_o$data2","_o$data3","_o$data4","setOpen","toString","reduce","sum","item","Sales_Count","toFixed","Freq_Days","Collapse","in","unmountOnExit","colSpan","BarChart","xAxis","scaleType","series","_o$data5","height","barLabel","borderRadius","_o$data6","_o$data7","filters","qPayRange","setQPayRange","reload","setReload","filtered","setFiltered","localState","setLocalState","group","localStorage","getItem","comStr","str","trim","toLowerCase","filteredList","Array","isArray","qpayDays","Q_Pay_Days","setItem","_o$Field_Name","_o$max","PieChart","rangeInd","_range$data","_range$data2","_range$data3","getRandomColor","arcLabel","arcLabelMinAngle","title","groupIndex","_String","String","toUpperCase","overall","_ref3","_o$max2","_o$data8","getFun","filterVariant","filterFn","dispColmn","setDispColmn","muiColumns","filter","_column$Field_Name2","header","accessorKey","sortable","aggregationFn","includes","AggregatedCell","cell","getValue","Cell","table","useMaterialReactTable","enableColumnResizing","enableGrouping","enableStickyHeader","enableStickyFooter","enableColumnOrdering","enableRowNumbers","initialState","density","pagination","pageIndex","pageSize","sorting","id","muiToolbarAlertBannerChipProps","muiTableContainerProps","minHeight","MaterialReactTable","icon","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","QPayReports","nav","useNavigate","tabList","repData","setRepData","showData","setShowData","cusFilter","setCusFilter","zeros","company","consolidate","view","filterDialog","displayGrouping","setColumns","sortedColumns","setSortedColumns","setFilters","filteredData","setFilteredData","ledgerId","setLedgerId","temp","zerosIncluded","_data$data","_a$Field_Name","localeCompare","applyFilters","keys","idStr","Ledger_Tally_Id","openSalesTransaction","state","isObj","rowDetails","preFilters","isObject","checkIsNumber","dispTab","FilterableTable","QPayBasedComp","QPaySalesBasedComp","handleFilterChange","prevFilters","undefined","start","end","dateValue","Date","_filters$column$Field","renderFilter","_filters$Field_Name$m","_filters$Field_Name","_filters$Field_Name$m2","_filters$Field_Name2","_filters$Field_Name$v","_filters$Field_Name3","_filters$Field_Name3$","_filters$Field_Name$v2","_filters$Field_Name5","_filters$Field_Name5$","parseFloat","_filters$Field_Name4","_filters$Field_Name6","distinctValues","Set","_item$Field_Name","_item$Field_Name$toLo","Autocomplete","multiple","options","disableCloseOnSelect","getOptionLabel","option","newValue","renderOption","props","selected","Checkbox","marginRight","isOptionEqualToValue","opt","renderInput","params","TextField","FormControlLabel","control","labelPlacement","QPayColumnVisiblitySettings","reloadData","Tooltip","GrTransaction","FilterAlt","QPayGroupingList","TabContext","Box","borderBottom","borderColor","TabList","indicatorColor","n","scrollButtons","allowScrollButtonsMobile","Tab","TabPanel","px","py","FilterAltOff","overflow"],"sourceRoot":""}
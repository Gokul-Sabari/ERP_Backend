{"version":3,"file":"static/js/7520.f08e48ab.chunk.js","mappings":"ijBAIA,SAAeA,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,wCACD,gBCFJ,GAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,uwCACD,oB,oCCGJ,MAAMC,EAAeA,CAACC,EAAKC,KACvB,OAAQA,GACJ,IAAK,SACD,OAAOC,EAAAA,EAAAA,IAAaF,GACxB,IAAK,OACD,OAAOG,EAAAA,EAAAA,IAAUH,GACrB,IAAK,SACD,OAAOA,EACX,QACI,MAAO,GACf,EA6BEI,GAAYC,EAAAA,EAAAA,IAAS,CACvBC,eAAgB,IAChBC,iBAAkB,IAClBC,kBAAkB,IAGhBC,GAAOZ,EAAAA,EAAAA,KAACa,EAAAA,EAAoB,CAACC,SAAS,UACtCC,GAAcf,EAAAA,EAAAA,KAACgB,EAAAA,EAAQ,CAACF,SAAS,UAqbvC,EAnbwBG,IAAkE,IAAjE,SAAEC,EAAQ,QAAEC,EAAO,aAAEC,EAAY,QAAEC,EAAO,cAAEC,GAAeL,EAChF,MAAOM,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,KACpCG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,KAChCK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,CAAC,IACjCO,EAAcC,IAAmBR,EAAAA,EAAAA,UAASC,GAE3CQ,EADcC,OAAOC,KAAKN,GAASO,OACT,EAAKL,EAAeN,GAC7CY,EAAmBC,IAAwBd,EAAAA,EAAAA,UAAS,CAAC,IACrDe,EAASC,IAAchB,EAAAA,EAAAA,UAAS,CACnCK,SAAS,EACTY,cAAc,IAElBC,QAAQC,IAAItB,IAEZuB,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,6BAADC,OAA+B9B,KACvC+B,MAAKC,IACJ,GAAQ,OAAJA,QAAI,IAAJA,GAAAA,EAAMC,SACFD,EAAKA,KAAK,GAAI,CAAC,IAADE,EAAAC,EAEd,MAAMC,EAAIJ,EAAKA,KAAK,GACdK,EAAU,CACZC,eAAiB,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGE,eACnBC,WAAa,OAADH,QAAC,IAADA,OAAC,EAADA,EAAGI,YACfC,OAAS,OAADL,QAAC,IAADA,GAAa,QAAZF,EAADE,EAAGM,kBAAU,IAAAR,OAAZ,EAADA,EAAeS,KAAIC,IAAK,IAAAC,EAAA,MAAK,CACjCC,SAAe,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOE,SACjBC,WAAiB,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOG,WACnBC,UAAgB,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOI,UAClBC,eAAqB,OAALL,QAAK,IAALA,OAAK,EAALA,EAAOK,eACvBC,WAAW,EACXxC,QAAc,OAALkC,QAAK,IAALA,GAAkB,QAAbC,EAALD,EAAOO,mBAAW,IAAAN,OAAb,EAALA,EAAoBF,KAAIS,IAAM,CACnCC,iBAAwB,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQC,iBAC1BC,YAAmB,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQE,YACrBC,WAAkB,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQG,WACpBC,YAAmB,OAANJ,QAAM,IAANA,OAAM,EAANA,EAAQI,YACrBC,SAAgB,OAANL,QAAM,IAANA,OAAM,EAANA,EAAQK,SAClBX,SAAgB,OAANM,QAAM,IAANA,OAAM,EAANA,EAAQN,SAClBY,WAAW,EACXC,iBAAiB,GAAD7B,OAAU,OAALc,QAAK,IAALA,OAAK,EAALA,EAAOK,eAAc,KAAAnB,OAAU,OAANsB,QAAM,IAANA,OAAM,EAANA,EAAQE,iBAE7D,KAECM,EAA2B,QAAjBzB,EAAGE,EAAQI,cAAM,IAAAN,OAAA,EAAdA,EAAgB0B,QAAO,CAACC,EAAQlB,IACxCkB,EAAOhC,OAAOc,EAAMlC,UAC5B,IACHC,EAAWiD,EACf,CACJ,IACDG,OAAMC,GAAKvC,QAAQC,IAAIsC,IAAG,GAE9B,CAAChE,KAEJ2B,EAAAA,EAAAA,YAAU,KACF3B,IACA4B,EAAAA,EAAAA,GAAU,CACNC,QAAQ,gCACRoC,OAAQ,OACRC,QAAS,CACL,GAAMjE,GAEVkE,SAAU,CACNC,UAAWlE,EACXmE,SAAUrE,KAEf+B,MAAKC,IACI,OAAJA,QAAI,IAAJA,GAAAA,EAAMC,SACNxB,EAAiB,OAAJuB,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KACvB,IACD+B,OAAMC,GAAKvC,QAAQC,IAAIsC,IAC9B,GACD,CAAC/D,EAASD,KAEb2B,EAAAA,EAAAA,YAAU,KACN,MAEM2C,EAFiB,IAAI5D,GAAS6D,MAAK,CAACC,EAAGC,IAAOD,EAAEf,UAAYgB,EAAEhB,SAAYe,EAAEf,SAAWgB,EAAEhB,SAAWgB,EAAEhB,SAAWe,EAAEf,WAEvFiB,QAAOtB,IACpCuB,QAAQC,OAAa,OAANxB,QAAM,IAANA,OAAM,EAANA,EAAQG,eAAiBoB,QAAQC,OAAa,OAANxB,QAAM,IAANA,OAAM,EAANA,EAAQI,gBAClEb,KAAIS,IAAM,IAAAyB,EAAA,OAAAC,EAAAA,EAAAA,GAAA,CACRC,OAAc,OAAN3B,QAAM,IAANA,GAAmB,QAAbyB,EAANzB,EAAQE,mBAAW,IAAAuB,OAAb,EAANA,EAAqBG,QAAQ,KAAM,KAC3CC,YAAmB,OAAN7B,QAAM,IAANA,OAAM,EAANA,EAAQO,iBACrBuB,UAAU,EACVC,KAAM,IAENC,cAAehE,EAAwB,OAANgC,QAAM,IAANA,OAAM,EAANA,EAAQE,aAAelC,EAAwB,OAANgC,QAAM,IAANA,OAAM,EAANA,EAAQE,aAAe,GACjG+B,eAAgBC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OACrBxG,EAAAA,EAAAA,KAAA,OAAK0G,UAAU,wCAAuCC,SACjDF,EAAKG,YAAavG,EAAAA,EAAAA,IAAaoG,EAAKG,YAAc,IACjD,EAEVC,KAAMC,IAAA,IAAC,KAAEL,GAAMK,EAAA,OACX9G,EAAAA,EAAAA,KAAA,KAAG0G,UAAS,8BAAgCC,SACvCzG,EAAauG,EAAKG,WAAkB,OAANtC,QAAM,IAANA,OAAM,EAANA,EAAQC,mBACvC,GAjIJnE,KACZ,OAAQA,GACJ,IAAK,SACD,MAAO,CACH2G,cAAe,QACfC,SAAU,WAElB,IAAK,OAIL,IAAK,SAMD,MAAO,CACHD,cAAe,QAGvB,QACI,MAAO,CAAC,EAChB,EA4GWE,CAAa,OAAN3C,QAAM,IAANA,OAAM,EAANA,EAAQC,kBAAiB,IAGvC/C,EAAagE,EAAW,GACzB,CAAC5D,EAASU,KAEbO,EAAAA,EAAAA,YAAU,KACNqE,GAAc,GACf,CAACpF,IAEJ,MAMMqF,EAAmBA,KACrB,MAAMC,GAAMC,EAAAA,EAAAA,IAAY9G,EAAZ8G,CAAuB3F,IACnC4F,EAAAA,EAAAA,IAAS/G,EAAT+G,CAAoBF,EAAI,EAGtBtD,GAAQyD,EAAAA,EAAAA,IAAsB,CAChC3F,QAASL,EACT2B,KAAMhB,GAAY,GAClBsF,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBC,oBAAoB,EACpBC,sBAAsB,EACtBC,kBAAkB,EAClBC,aAAc,CACVC,QAAS,UAOTC,WAAY,CAAEC,UAAW,EAAGC,SAAU,MAE1CC,+BAAgC,CAAEC,MAAO,WACzCC,uBAAwB,CAAEC,GAAI,CAAEC,UAAW,QAASC,UAAW,SAC/DC,cAAe,CACXH,GAAI,CACAI,QAAS,CACLC,YAAa,SAIzBC,sBAAuB,CACnBN,GAAI,CACAO,WAAY,UAEhBnC,UAAW,uBAEfoC,sBAAuB,CACnBpC,UAAW,2BAEfqC,8BAA+BC,IAAA,IAAC,MAAElF,GAAOkF,EAAA,OACrCC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACAZ,GAAI,CACAa,QAAS,OACTC,IAAK,OACLC,QAAS,MACTC,SAAU,QACZ3C,SAAA,EAEF3G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CACHC,QAASrC,EACTsC,WAAWzJ,EAAAA,EAAAA,KAAC0J,EAAY,IAAI/C,SAC/B,cAGD3G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CACHI,SAA2D,IAAjD7F,EAAM8F,2BAA2BC,KAAKxH,OAChDmH,QAASA,IAjECK,KACtB,MAAMC,EAAUD,EAAKhG,KAAKkG,GAAQA,EAAIC,WAChC5C,GAAMC,EAAAA,EAAAA,IAAY9G,EAAZ8G,CAAuByC,IACnCxC,EAAAA,EAAAA,IAAS/G,EAAT+G,CAAoBF,EAAI,EA+DR6C,CAAiBnG,EAAM8F,2BAA2BC,MAEtDJ,WAAWzJ,EAAAA,EAAAA,KAAC0J,EAAY,IAAI/C,SAC/B,mBAGD3G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CACHC,QAASA,IAAM/G,GAAWyH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAExH,cAAc,MAC1D+G,WAAWzJ,EAAAA,EAAAA,KAACmK,EAAgB,IAAIxD,SACnC,iBAKD3G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CACHC,QAASA,IAAM/G,GAAWyH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAEpI,SAAS,MACrD4E,UAAU,qBACV+C,WAAWzJ,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,IAAIzD,SAC5B,cAGC,IAIR0D,GAAsBC,EAAAA,EAAAA,UAAQ,IAAMxG,GAAO,CAACA,EAAOxB,EAAmBJ,EAAUZ,IAEhFiJ,EAAqBA,CAACjG,EAAQkG,KAChCzI,GAAW0I,IAAWzE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfyE,GAAW,IACd,CAACnG,GAASkG,KACX,EAGDtD,EAAeA,KACjB,IAAIwD,EAAW,IAAIhJ,GACnB,IAAK,MAAM4C,KAAU1C,EACjB,GAAIE,EAAQwC,EAAOO,kBACf,GAA8C,UAA1C/C,EAAQwC,EAAOO,kBAAkB8F,KAAkB,CACnD,MAAM,IAAEC,EAAG,IAAEC,GAAQ/I,EAAQwC,EAAOO,kBACpC6F,EAAWA,EAAS9E,QAAOkF,IACvB,MAAMN,EAAQM,EAAKxG,EAAOO,kBAC1B,YAAgBkG,IAARH,GAAqBJ,GAASI,UAAiBG,IAARF,GAAqBL,GAASK,EAAI,GAEzF,MAAO,GAA8C,SAA1C/I,EAAQwC,EAAOO,kBAAkB8F,KAAiB,CACzD,MAAM,MAAEK,EAAK,IAAEC,GAAQnJ,EAAQwC,EAAOO,kBAAkB2F,MACxDE,EAAWA,EAAS9E,QAAOkF,IACvB,MAAMI,EAAY,IAAIC,KAAKL,EAAKxG,EAAOO,mBACvC,YAAkBkG,IAAVC,GAAuBE,GAAa,IAAIC,KAAKH,WAAoBD,IAARE,GAAqBC,GAAa,IAAIC,KAAKF,GAAK,GAEzH,MAAO,GAAIG,MAAMC,QAAQvJ,EAAQwC,EAAOO,mBAAoB,CAAC,IAADyG,EACxDZ,GAA2C,QAAhCY,EAAAxJ,EAAQwC,EAAOO,yBAAiB,IAAAyG,OAAA,EAAhCA,EAAkCjJ,QAAS,EAAIqI,EAAS9E,QAAOkF,GAAQhJ,EAAQwC,EAAOO,kBAAkB0G,SAAST,EAAKxG,EAAOO,kBAAkB2G,cAAcC,UAAWf,CACvL,CAGRzI,EAAgByI,EAAS,EAGvBgB,EAAgBpH,IAClB,MAAM,iBAAEO,EAAgB,YAAEL,EAAW,iBAAED,GAAqBD,EACxB,IAADqH,EAAAC,EAAAC,EAAAC,EAmBKC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAnBxC,GAAyB,WAArB7H,EACA,OACI0E,EAAAA,EAAAA,MAAA,OAAKvC,UAAU,sCAAqCC,SAAA,EAChD3G,EAAAA,EAAAA,KAAA,SACIqM,YAAY,MACZ1B,KAAK,SACLjE,UAAU,iCACV8D,MAAqC,QAAhCmB,EAA2B,QAA3BC,EAAE9J,EAAQ+C,UAAiB,IAAA+G,OAAA,EAAzBA,EAA2BhB,WAAG,IAAAe,EAAAA,EAAI,GACzCW,SAAWpH,GAAMqF,EAAmB1F,GAAgBmB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAI2E,KAAM,SAAY7I,EAAQ+C,IAAiB,IAAE+F,IAAK1F,EAAEqH,OAAO/B,MAAQgC,WAAWtH,EAAEqH,OAAO/B,YAASO,QAE5J/K,EAAAA,EAAAA,KAAA,SACIqM,YAAY,MACZ1B,KAAK,SACLjE,UAAU,iCACV8D,MAAqC,QAAhCqB,EAA2B,QAA3BC,EAAEhK,EAAQ+C,UAAiB,IAAAiH,OAAA,EAAzBA,EAA2BjB,WAAG,IAAAgB,EAAAA,EAAI,GACzCS,SAAWpH,GAAMqF,EAAmB1F,GAAgBmB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAI2E,KAAM,SAAY7I,EAAQ+C,IAAiB,IAAEgG,IAAK3F,EAAEqH,OAAO/B,MAAQgC,WAAWtH,EAAEqH,OAAO/B,YAASO,UAIjK,GAAyB,SAArBxG,EACP,OACI0E,EAAAA,EAAAA,MAAA,OAAKvC,UAAU,sCAAqCC,SAAA,EAChD3G,EAAAA,EAAAA,KAAA,SACIqM,YAAY,aACZ1B,KAAK,OACLjE,UAAU,iCACV8D,MAA8C,QAAzCuB,EAA2B,QAA3BC,EAAElK,EAAQ+C,UAAiB,IAAAmH,GAAO,QAAPC,EAAzBD,EAA2BxB,aAAK,IAAAyB,OAAP,EAAzBA,EAAkCjB,aAAK,IAAAe,EAAAA,EAAI,GAClDO,SAAWpH,IAAC,IAAAuH,EAAA,OAAKlC,EAAmB1F,EAAkB,CAAE8F,KAAM,OAAQH,OAAKxE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAgC,QAAhCyG,EAAO3K,EAAQ+C,UAAiB,IAAA4H,OAAA,EAAzBA,EAA2BjC,OAAK,IAAEQ,MAAO9F,EAAEqH,OAAO/B,YAASO,KAAc,KAE/J/K,EAAAA,EAAAA,KAAA,SACIqM,YAAY,WACZ1B,KAAK,OACLjE,UAAU,iCACV8D,MAA4C,QAAvC0B,EAA2B,QAA3BC,EAAErK,EAAQ+C,UAAiB,IAAAsH,GAAO,QAAPC,EAAzBD,EAA2B3B,aAAK,IAAA4B,OAAP,EAAzBA,EAAkCnB,WAAG,IAAAiB,EAAAA,EAAI,GAChDI,SAAWpH,IAAC,IAAAwH,EAAA,OAAKnC,EAAmB1F,EAAkB,CAAE8F,KAAM,OAAQH,OAAKxE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAgC,QAAhC0G,EAAO5K,EAAQ+C,UAAiB,IAAA6H,OAAA,EAAzBA,EAA2BlC,OAAK,IAAES,IAAK/F,EAAEqH,OAAO/B,YAASO,KAAc,OAIlK,GAAyB,WAArBxG,EAA+B,CACtC,MAAMoI,EAAiB,IAAI,IAAIC,IAAIlL,EAAUmC,KAAIiH,IAAI,IAAA+B,EAAAC,EAAA,OAA0B,QAA1BD,EAAI/B,EAAKjG,UAAiB,IAAAgI,GAAe,QAAfC,EAAtBD,EAAwBrB,qBAAa,IAAAsB,OAAf,EAAtBA,EAAuCrB,MAAM,MAAIhG,OAC1G,OACIzF,EAAAA,EAAAA,KAAC+M,EAAAA,EAAY,CACTC,UAAQ,EACRC,GAAE,GAAAjK,OAAK6B,EAAgB,WACvBqI,QAASP,EACTQ,sBAAoB,EACpBC,eAAgBC,GAAUA,EAC1B7C,MAAO1I,EAAQ+C,IAAqB,GACpCyH,SAAUA,CAACgB,EAAOC,IAAahD,EAAmB1F,EAAkB0I,GACpEC,aAAcA,CAACC,EAAOJ,EAAMK,KAAA,IAAE,SAAEC,GAAUD,EAAA,OACtCzE,EAAAA,EAAAA,MAAA,MAAAjD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQyH,GAAK,IAAA9G,SAAA,EACT3G,EAAAA,EAAAA,KAAC4N,EAAAA,EAAQ,CACLhN,KAAMA,EACNG,YAAaA,EACb8M,MAAO,CAAEC,YAAa,GACtBC,QAASJ,IAEZN,KACA,EAETW,qBAAsBA,CAACC,EAAK9N,IAAQ8N,IAAQ9N,EAC5C+N,YAAcC,IACVnO,EAAAA,EAAAA,KAACoO,EAAAA,GAASpI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACFmI,GAAM,IACVE,MAAkB,OAAX7J,QAAW,IAAXA,OAAW,EAAXA,EAAa0B,QAAQ,KAAM,KAClCmG,YAAW,UAAArJ,OAAuB,OAAXwB,QAAW,IAAXA,OAAW,EAAXA,EAAa0B,QAAQ,KAAM,UAKtE,GAGJ,OACI+C,EAAAA,EAAAA,MAAAqF,EAAAA,SAAA,CAAA3H,SAAA,EACIsC,EAAAA,EAAAA,MAAA,OAAKvC,UAAU,OAAMC,SAAA,EAEjB3G,EAAAA,EAAAA,KAAA,OAAK0G,UAAU,+BAA8BC,UACzC3G,EAAAA,EAAAA,KAAA,OAAK0G,UAAU,MAAKC,UAChB3G,EAAAA,EAAAA,KAACuO,EAAAA,GAAkB,CAACzK,MAAOuG,SAInCpB,EAAAA,EAAAA,MAAA,OAAKvC,UAAU,gDAA+CC,SAAA,EAC1DsC,EAAAA,EAAAA,MAAA,MAAIvC,UAAU,sCAAqCC,SAAA,CAAC,WAEhD3G,EAAAA,EAAAA,KAACwO,EAAAA,EAAO,CAACC,MAAM,gBAAe9H,UAC1B3G,EAAAA,EAAAA,KAAC0O,EAAAA,EAAU,CACPrI,KAAK,QACLmD,QAASA,IAAMzH,EAAW,CAAC,GAAG4E,UAE9B3G,EAAAA,EAAAA,KAAC2O,EAAAA,EAAY,YAIzB1F,EAAAA,EAAAA,MAAA,OAAKvC,UAAU,oBAAoBmH,MAAO,CAAEtF,UAAW,OAAQqG,SAAU,QAASjI,SAAA,CAC7E/E,EAAQiC,KAAI,CAACS,EAAQuK,KAAE,IAAAC,EAAA,OAAMC,EAAAA,EAAAA,IAAoB,OAANzK,QAAM,IAANA,OAAM,EAANA,EAAQG,WAAY,KAAMsK,EAAAA,EAAAA,IAAoB,OAANzK,QAAM,IAANA,OAAM,EAANA,EAAQI,YAAa,KACrGuE,EAAAA,EAAAA,MAAA,OAAcvC,UAAU,iCAAgCC,SAAA,EACpD3G,EAAAA,EAAAA,KAAA,SAAO0G,UAAU,YAAWC,SAAQ,OAANrC,QAAM,IAANA,GAAmB,QAAbwK,EAANxK,EAAQE,mBAAW,IAAAsK,OAAb,EAANA,EAAqB5I,QAAQ,KAAM,OAChEwF,EAAapH,KAFRuK,EAIb,KACD7O,EAAAA,EAAAA,KAAA,mBAMZiJ,EAAAA,EAAAA,MAAC+F,EAAAA,EAAM,CACHC,KAAMzM,EAAQV,QACdoN,QAASA,IAAMzM,GAAWyH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAEpI,SAAS,MACrDqN,WAAS,EAACC,SAAS,KAAIzI,SAAA,EAEvB3G,EAAAA,EAAAA,KAACqP,EAAAA,EAAW,CAAA1I,UACRsC,EAAAA,EAAAA,MAAA,MAAIvC,UAAU,sCAAqCC,SAAA,CAAC,WAEhD3G,EAAAA,EAAAA,KAACwO,EAAAA,EAAO,CAACC,MAAM,gBAAe9H,UAC1B3G,EAAAA,EAAAA,KAAC0O,EAAAA,EAAU,CACPrI,KAAK,QACLmD,QAASA,IAAMzH,EAAW,CAAC,GAAG4E,UAE9B3G,EAAAA,EAAAA,KAAC2O,EAAAA,EAAY,cAK7B3O,EAAAA,EAAAA,KAACsP,EAAAA,EAAa,CAAA3I,UAEVsC,EAAAA,EAAAA,MAAA,OAAKvC,UAAU,oBAAoBmH,MAAO,CAAEtF,UAAW,OAAQqG,SAAU,QAASjI,SAAA,CAC7E/E,EAAQiC,KAAI,CAACS,EAAQuK,KAAE,IAAAU,EAAA,OAAMR,EAAAA,EAAAA,IAAoB,OAANzK,QAAM,IAANA,OAAM,EAANA,EAAQG,WAAY,KAAMsK,EAAAA,EAAAA,IAAoB,OAANzK,QAAM,IAANA,OAAM,EAANA,EAAQI,YAAa,KACrGuE,EAAAA,EAAAA,MAAA,OAAcvC,UAAU,iCAAgCC,SAAA,EACpD3G,EAAAA,EAAAA,KAAA,SAAO0G,UAAU,YAAWC,SAAQ,OAANrC,QAAM,IAANA,GAAmB,QAAbiL,EAANjL,EAAQE,mBAAW,IAAA+K,OAAb,EAANA,EAAqBrJ,QAAQ,KAAM,OAChEwF,EAAapH,KAFRuK,EAIb,KACD7O,EAAAA,EAAAA,KAAA,eAIRA,EAAAA,EAAAA,KAACwP,EAAAA,EAAa,CAAA7I,UACV3G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CACHC,QAASA,IAAM/G,GAAWyH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAEpI,SAAS,MAAU6E,SAClE,gBAMTsC,EAAAA,EAAAA,MAAC+F,EAAAA,EAAM,CACHC,KAAMzM,EAAQE,aACdwM,QAASA,IAAMzM,GAAWyH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAExH,cAAc,MAC1DyM,WAAS,EAACC,SAAS,KAAIzI,SAAA,EAEvB3G,EAAAA,EAAAA,KAACqP,EAAAA,EAAW,CAAA1I,SAAC,kBACb3G,EAAAA,EAAAA,KAACsP,EAAAA,EAAa,CAAA3I,UACV3G,EAAAA,EAAAA,KAAA,OAAK0G,UAAU,MAAMmH,MAAO,CAAErF,UAAW,SAAU7B,SAC9C,IAAI/E,GAASgE,QAAOtB,IACjByK,EAAAA,EAAAA,IAAoB,OAANzK,QAAM,IAANA,OAAM,EAANA,EAAQG,WAAY,KAC/BsK,EAAAA,EAAAA,IAAoB,OAANzK,QAAM,IAANA,OAAM,EAANA,EAAQI,YAAa,KACN,WAA5BJ,EAAOC,kBACwB,WAA5BD,EAAOC,oBACfV,KAAI,CAACP,EAAGmM,KAAC,IAAAC,EAAAC,EAAA,OACR1G,EAAAA,EAAAA,MAAA,OAAKvC,UAAU,kCAAiCC,SAAA,EAC5C3G,EAAAA,EAAAA,KAAA,SAAA2G,SAAS,OAADrD,QAAC,IAADA,GAAc,QAAboM,EAADpM,EAAGkB,mBAAW,IAAAkL,OAAb,EAADA,EAAgBxJ,QAAQ,KAAM,QACtClG,EAAAA,EAAAA,KAAA,UACI0G,UAAU,WACV8D,MAAwC,QAAnCmF,EAAErN,EAAmB,OAADgB,QAAC,IAADA,OAAC,EAADA,EAAGkB,oBAAY,IAAAmL,EAAAA,EAAI,GAC5CrD,SAAUpH,GAAK3C,GAAqB2H,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAE,CAAC5G,EAAEkB,aAAcU,EAAEqH,OAAO/B,UAAU7D,SAGtF,CACI,CAAE0H,MAAO,qBAAsB7D,MAAO,IACtC,CAAE6D,MAAO,QAAS7D,MAAO,SACzB,CAAE6D,MAAO,SAAU7D,MAAO,UAC1B,CAAE6D,MAAO,MAAO7D,MAAO,OACvB,CAAE6D,MAAO,MAAO7D,MAAO,OACvB,CAAE6D,MAAO,OAAQ7D,MAAO,QACxB,CAAE6D,MAAO,SAAU7D,MAAO,UAC1B,CAAE6D,MAAO,cAAe7D,MAAO,eAC/B,CAAE6D,MAAO,MAAO7D,MAAO,OACvB,CAAE6D,MAAO,SAAU7D,MAAO,WAC5B3G,KAAI,CAACP,EAAGmM,KACNzP,EAAAA,EAAAA,KAAA,UAAQwK,MAAOlH,EAAEkH,MAAM7D,SAAUrD,EAAE+K,OAANoB,SApBSA,EAwBhD,SAIlBzP,EAAAA,EAAAA,KAACwP,EAAAA,EAAa,CAAA7I,UACV3G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CACHC,QAASA,IAAM/G,GAAWyH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAExH,cAAc,MAAUiE,SACvE,iBAKV,E,iECvdLiJ,GAAYnC,IACd,MAAM,SAAE9G,EAAQ,MAAE6D,EAAK,MAAEqF,GAAoBpC,EAAVqC,GAAKC,EAAAA,EAAAA,GAAKtC,EAAKuC,IAElD,OACIhQ,EAAAA,EAAAA,KAAA,OAAAgG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACIiK,KAAK,WACLC,OAAQ1F,IAAUqF,EAClB5C,GAAE,YAAAjK,OAAc6M,GAChB,yBAAA7M,OAAwB6M,IACpBC,GAAK,IAAAnJ,SAER6D,IAAUqF,IACP7P,EAAAA,EAAAA,KAACkJ,EAAAA,EAAG,CAACiH,EAAG,EAAExJ,UACN3G,EAAAA,EAAAA,KAACoQ,EAAAA,EAAU,CAAAzJ,SAAEA,QAGnB,EAqfd,GAjfwB0J,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC1B,MAAMC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,UACzCC,EAAWC,IAAgB7P,EAAAA,EAAAA,UAAS,KAQpC8P,EAAeC,IAAoB/P,EAAAA,EAAAA,UAPpB,CAClBgQ,OAAQ,GACRC,kBAAkB,EAClBC,uBAAwB,CAAC,EACzBC,0BAA0B,EAC1BC,iBAAiB,KAGf,WAAEC,IAAeC,EAAAA,EAAAA,YAAWC,EAAAA,IAC3BlQ,EAASC,IAAcN,EAAAA,EAAAA,UAAS,CAAC,GAClCwQ,GAAMC,EAAAA,EAAAA,OACLC,EAAQC,IAAa3Q,EAAAA,EAAAA,WAAS,IAC9B4Q,EAAaC,KAAkB7Q,EAAAA,EAAAA,UAAS,IAM/CoB,EAAAA,EAAAA,YAAU,MACNC,EAAAA,EAAAA,GAAU,CACNC,QAAQ,qBACTE,MAAKC,IACI,OAAJA,QAAI,IAAJA,GAAAA,EAAMC,SACNmO,EAAiB,OAAJpO,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KACvB,IACD+B,OAAMC,GAAKvC,QAAQC,IAAIsC,IAAG,GAC9B,CAACiN,IAEJ,MAAM5H,GAAqBA,CAACjG,EAAQkG,KAChCzI,GAAW0I,IAAWzE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfyE,GAAW,IACd,CAACnG,GAASkG,KACX,EAGDkB,GAAgBpH,IAClB,MAAM,YAAEE,EAAW,iBAAED,GAAqBD,EACN,IAADiO,EAAAC,EAAAC,EAAAC,EA2BKC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAyBEC,EAAAC,EApD1C,MAAyB,WAArB3O,GAEI0E,EAAAA,EAAAA,MAAA,OAAKvC,UAAU,iCAAgCC,SAAA,EAC3C3G,EAAAA,EAAAA,KAAA,SACIqM,YAAY,MACZ1B,KAAK,SACLjE,UAAU,gBACV8D,MAAgC,QAA3B+H,EAAsB,QAAtBC,EAAE1Q,EAAQ0C,UAAY,IAAAgO,OAAA,EAApBA,EAAsB5H,WAAG,IAAA2H,EAAAA,EAAI,GACpCjG,SAAWpH,GAAMqF,GAAmB/F,GAAWwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAC3C2E,KAAM,SACH7I,EAAQ0C,IAAY,IACvBoG,IAAK1F,EAAEqH,OAAO/B,MAAQgC,WAAWtH,EAAEqH,OAAO/B,YAASO,QAG3D/K,EAAAA,EAAAA,KAAA,SACIqM,YAAY,MACZ1B,KAAK,SACLjE,UAAU,gBACV8D,MAAgC,QAA3BiI,EAAsB,QAAtBC,EAAE5Q,EAAQ0C,UAAY,IAAAkO,OAAA,EAApBA,EAAsB7H,WAAG,IAAA4H,EAAAA,EAAI,GACpCnG,SAAWpH,GAAMqF,GAAmB/F,GAAWwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAC3C2E,KAAM,SACH7I,EAAQ0C,IAAY,IACvBqG,IAAK3F,EAAEqH,OAAO/B,MAAQgC,WAAWtH,EAAEqH,OAAO/B,YAASO,UAKvC,SAArBxG,GAEH0E,EAAAA,EAAAA,MAAA,OAAKvC,UAAU,2CAA0CC,SAAA,EACrD3G,EAAAA,EAAAA,KAAA,SACIqM,YAAY,aACZ1B,KAAK,OACLjE,UAAU,wCACV8D,MAAyC,QAApCmI,EAAsB,QAAtBC,EAAE9Q,EAAQ0C,UAAY,IAAAoO,GAAO,QAAPC,EAApBD,EAAsBpI,aAAK,IAAAqI,OAAP,EAApBA,EAA6B7H,aAAK,IAAA2H,EAAAA,EAAI,GAC7CrG,SAAWpH,IAAC,IAAAiO,EAAA,OAAK5I,GAAmB/F,EAAa,CAC7CmG,KAAM,OACNH,OAAKxE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAA2B,QAA3BmN,EAAOrR,EAAQ0C,UAAY,IAAA2O,OAAA,EAApBA,EAAsB3I,OAAK,IAAEQ,MAAO9F,EAAEqH,OAAO/B,YAASO,KACpE,KAEN/K,EAAAA,EAAAA,KAAA,SACIqM,YAAY,WACZ1B,KAAK,OACLjE,UAAU,wCACV8D,MAAuC,QAAlCsI,EAAsB,QAAtBC,EAAEjR,EAAQ0C,UAAY,IAAAuO,GAAO,QAAPC,EAApBD,EAAsBvI,aAAK,IAAAwI,OAAP,EAApBA,EAA6B/H,WAAG,IAAA6H,EAAAA,EAAI,GAC3CxG,SAAWpH,IAAC,IAAAkO,EAAA,OAAK7I,GAAmB/F,EAAa,CAC7CmG,KAAM,OACNH,OAAKxE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAA2B,QAA3BoN,EAAOtR,EAAQ0C,UAAY,IAAA4O,OAAA,EAApBA,EAAsB5I,OAAK,IAAES,IAAK/F,EAAEqH,OAAO/B,YAASO,KAClE,OAIc,WAArBxG,GAEHvE,EAAAA,EAAAA,KAAA,SACI2K,KAAK,OACL0B,YAAY,YACZ3F,UAAU,WACV8D,MAAkC,QAA7ByI,EAAsB,QAAtBC,EAAEpR,EAAQ0C,UAAY,IAAA0O,OAAA,EAApBA,EAAsB1I,aAAK,IAAAyI,EAAAA,EAAI,GACtC3G,SAAUpH,GAAKqF,GAAmB/F,EAAa,CAC3CmG,KAAM,cACNH,MAAO6I,OAAOnO,EAAEqH,OAAO/B,OAAOgB,eAAiB,YATxD,CAaP,EAGE8H,GAAUrS,IAAY,IAADmC,EAAA,IAAV,EAAEE,GAAGrC,EAClB,MAAOsS,EAAUC,IAAe/R,EAAAA,EAAAA,UAAS,MAEnCgS,EAAgB,CAClBjQ,eAAiB,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGE,eACnBC,WAAa,OAADH,QAAC,IAADA,OAAC,EAADA,EAAGI,YACfgQ,YAAc,OAADpQ,QAAC,IAADA,OAAC,EAADA,EAAGoQ,YAChB/P,OAAS,OAADL,QAAC,IAADA,GAAa,QAAZF,EAADE,EAAGM,kBAAU,IAAAR,OAAZ,EAADA,EAAeS,KAAIC,IAAK,IAAAC,EAAA,MAAK,CACjCC,SAAe,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOE,SACjBC,WAAiB,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOG,WACnBC,UAAgB,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOI,UAClBC,eAAqB,OAALL,QAAK,IAALA,OAAK,EAALA,EAAOK,eACvBC,WAAW,EACXxC,QAAc,OAALkC,QAAK,IAALA,GAAkB,QAAbC,EAALD,EAAOO,mBAAW,IAAAN,OAAb,EAALA,EAAoBF,KAAIS,IAAM,CACnCC,iBAAwB,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQC,iBAC1BC,YAAmB,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQE,YACrBC,WAAkB,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQG,WACpBC,YAAmB,OAANJ,QAAM,IAANA,OAAM,EAANA,EAAQI,YACrBC,SAAgB,OAANL,QAAM,IAANA,OAAM,EAANA,EAAQK,SAClBX,SAAgB,OAANM,QAAM,IAANA,OAAM,EAANA,EAAQN,SAClBY,WAAW,MAElB,KAGC+O,EAAc9N,QAAQ0N,GACtBtG,EAAK0G,EAAe,OAADrQ,QAAC,IAADA,OAAC,EAADA,EAAGI,iBAAcqH,EAU1C,OACI9B,EAAAA,EAAAA,MAAAqF,EAAAA,SAAA,CAAA3H,SAAA,EACI3G,EAAAA,EAAAA,KAAC0O,EAAAA,EAAU,CAAC,mBAAkBzB,EAAIzD,QAVrB8D,IACjBkG,EAAYlG,EAAMsG,cAAc,EAS2BjN,UACnD3G,EAAAA,EAAAA,KAAC6T,EAAAA,EAAI,OAGT7T,EAAAA,EAAAA,KAAC8T,EAAAA,GAAO,CACJ7G,GAAIA,EACJgC,KAAM0E,EACNJ,SAAUA,EACVrE,QAdQ6E,KAChBP,EAAY,KAAK,EAcTQ,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QACdvN,UAEFsC,EAAAA,EAAAA,MAACmL,EAAAA,EAAQ,CAAAzN,SAAA,EAELsC,EAAAA,EAAAA,MAACoL,EAAAA,EAAQ,CACL7K,QACIA,KACIgI,GAAiBtH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbkE,GAAG,IACNyH,uBAAwB8B,EACxB/B,kBAAkB,MAEtBY,GAAe,GACfvQ,EAAW,CAAC,EAAE,EAErB4E,SAAA,EAED3G,EAAAA,EAAAA,KAACsU,EAAAA,EAAY,CAAA3N,UAAC3G,EAAAA,EAAAA,KAACuU,EAAAA,EAAU,CAACzT,SAAS,aACnCd,EAAAA,EAAAA,KAACwU,EAAAA,EAAY,CAAA7N,SAAC,aAGlBsC,EAAAA,EAAAA,MAACoL,EAAAA,EAAQ,CACL7K,QACY,OAAPwH,QAAO,IAAPA,GAAAA,EAASyD,WAEJ,KACEjD,GAAiBtH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbkE,GAAG,IACNyH,uBAAwB8B,EACxB5B,iBAAiB,MAErB9P,EAAW,CAAC,GACZuQ,GAAe,EAAE,EARnB,IAAMoC,EAAAA,GAAMC,KAAK,mBAU1BhO,SAAA,EAED3G,EAAAA,EAAAA,KAACsU,EAAAA,EAAY,CAAA3N,UAAC3G,EAAAA,EAAAA,KAACoK,EAAAA,EAAS,CAACtJ,SAAS,aAClCd,EAAAA,EAAAA,KAACwU,EAAAA,EAAY,CAAA7N,SAAC,gBAGlBsC,EAAAA,EAAAA,MAACoL,EAAAA,EAAQ,CACL7K,QAASA,IAAMyI,EAAI,SAAU,CAAE2C,MAAO,CAAElB,YAAaD,KAAmB9M,SAAA,EAExE3G,EAAAA,EAAAA,KAACsU,EAAAA,EAAY,CAAA3N,UAAC3G,EAAAA,EAAAA,KAAC6U,EAAAA,EAAI,CAAC/T,SAAS,aAC7Bd,EAAAA,EAAAA,KAACwU,EAAAA,EAAY,CAAA7N,SAAC,aAGlBsC,EAAAA,EAAAA,MAACoL,EAAAA,EAAQ,CACL7K,QAASA,IAAMgI,GAAiBtH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAE0H,0BAA0B,EAAMD,uBAAwB8B,MAAkB9M,SAAA,EAE5H3G,EAAAA,EAAAA,KAACsU,EAAAA,EAAY,CAAA3N,UAAC3G,EAAAA,EAAAA,KAAC8U,EAAAA,EAAM,CAAChU,SAAS,QAAQsH,MAAM,aAC7CpI,EAAAA,EAAAA,KAACwU,EAAAA,EAAY,CAAA7N,SAAC,qBAK3B,EAILoO,GAAUvO,IAAY,IAADwO,EAAA,IAAV,EAAE1R,GAAGkD,EAClB,OACIxG,EAAAA,EAAAA,KAAAsO,EAAAA,SAAA,CAAA3H,UACI3G,EAAAA,EAAAA,KAAA,OAAK0G,UAAU,mBAAkBC,UAC7BsC,EAAAA,EAAAA,MAAA,SAAOvC,UAAU,QAAOC,SAAA,EACpB3G,EAAAA,EAAAA,KAAA,SAAA2G,UACI3G,EAAAA,EAAAA,KAAA,MAAA2G,SACK,CAAC,MAAO,QAAS,SAAU,YAAa,SAAS9C,KAAIP,IAClDtD,EAAAA,EAAAA,KAAA,MAAI0G,UAAU,2BAAmCmH,MAAO,CAAEoH,gBAAiB,WAAYtO,SAAErD,GAA3CA,UAI1DtD,EAAAA,EAAAA,KAAA,SAAA2G,SACM,OAADrD,QAAC,IAADA,GAAa,QAAZ0R,EAAD1R,EAAGM,kBAAU,IAAAoR,OAAZ,EAADA,EAAenR,KAAI,CAACC,EAAOoR,KAAQ,IAAAC,EAAA,OAChCnV,EAAAA,EAAAA,KAACoV,EAAAA,SAAc,CAAAzO,SACL,OAAL7C,QAAK,IAALA,GAAkB,QAAbqR,EAALrR,EAAOO,mBAAW,IAAA8Q,OAAb,EAALA,EAAoBtR,KAAI,CAACS,EAAQ+Q,KAAS,IAAAC,EAAAC,EAAA,OACvCtM,EAAAA,EAAAA,MAAA,MAAAtC,SAAA,CACmB,IAAd0O,IACGpM,EAAAA,EAAAA,MAAAqF,EAAAA,SAAA,CAAA3H,SAAA,EACI3G,EAAAA,EAAAA,KAAA,MAAI0G,UAAU,gCAAgC8O,QAAc,OAAL1R,QAAK,IAALA,GAAkB,QAAbwR,EAALxR,EAAOO,mBAAW,IAAAiR,OAAb,EAALA,EAAoBjT,OAAOsE,SAAEuO,EAAW,KAC/FlV,EAAAA,EAAAA,KAAA,MAAI0G,UAAU,0CAA0C8O,QAAc,OAAL1R,QAAK,IAALA,GAAkB,QAAbyR,EAALzR,EAAOO,mBAAW,IAAAkR,OAAb,EAALA,EAAoBlT,OAAOsE,SAClF,OAAL7C,QAAK,IAALA,OAAK,EAALA,EAAOI,gBAIpBlE,EAAAA,EAAAA,KAAA,MACI0G,UAAS,gIAAA1D,OAEH6C,QAAQC,OAAa,OAANxB,QAAM,IAANA,OAAM,EAANA,EAAQG,aAAe,cAAgB,GAAE,0DAAAzB,OACxD6C,QAAQC,OAAa,OAANxB,QAAM,IAANA,OAAM,EAANA,EAAQI,cAAgB,YAAc,GAAE,0DACvDiC,SAEC,OAANrC,QAAM,IAANA,OAAM,EAANA,EAAQE,eAEbxE,EAAAA,EAAAA,KAAA,MAAI0G,UAAU,oBAAmBC,SAAQ,OAANrC,QAAM,IAANA,OAAM,EAANA,EAAQC,oBAC3CvE,EAAAA,EAAAA,KAAA,MAAI0G,UAAU,oBAAmBC,SAAQ,OAANrC,QAAM,IAANA,OAAM,EAANA,EAAQK,aAnBtC0Q,EAoBJ,KAtBQH,EAwBJ,YAKlC,EAILO,GAAcA,KAChBjE,GAAiBtH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAEwH,kBAAkB,EAAOC,uBAAwB,CAAC,KAAK,EAGxF+D,GAAgCA,KAClClE,GAAiBtH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAE0H,0BAA0B,EAAOD,uBAAwB,CAAC,KAAK,EAGhGgE,GAAoBA,KACtBnE,GAAiBtH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAE2H,iBAAiB,MACpD9P,EAAW,CAAC,EAAE,EAuClB,OACIkH,EAAAA,EAAAA,MAAAqF,EAAAA,SAAA,CAAA3H,SAAA,EAEIsC,EAAAA,EAAAA,MAAC2M,EAAAA,EAAI,CAAAjP,SAAA,EAEDsC,EAAAA,EAAAA,MAAA,OAAKvC,UAAU,oFAAmFC,SAAA,EAC9F3G,EAAAA,EAAAA,KAAA,QAAM0G,UAAU,mCAAkCC,SAAC,sBAClDoI,EAAAA,EAAAA,IAAwB,OAAV+C,QAAU,IAAVA,OAAU,EAAVA,EAAY+D,WAAY,KACnC7V,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CAACuM,QAAQ,WAAWtM,QAASA,IAAMyI,EAAI,UAAUtL,SAAC,mBAIjE3G,EAAAA,EAAAA,KAAA,OAAK0G,UAAU,iCAAgCC,UAC3C3G,EAAAA,EAAAA,KAAA,SACI2K,KAAK,SACLjE,UAAU,kBACV2F,YAAY,qBACZ7B,MAA4B,QAAvB8F,EAAe,OAAbiB,QAAa,IAAbA,OAAa,EAAbA,EAAeE,cAAM,IAAAnB,EAAAA,EAAI,GAChChE,SAAUpH,GAAKsM,GAAiBtH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAEuH,OAAQ4B,OAAOnO,EAAEqH,OAAO/B,OAAOgB,uBAIzFxL,EAAAA,EAAAA,KAAC+V,EAAAA,EAAW,CAACrP,UAAU,MAAKC,UACxB3G,EAAAA,EAAAA,KAACgW,GAAAA,GAAe,CACZtU,UACkB,OAAb6P,QAAa,IAAbA,GAAAA,EAAeE,OACZ,IAAIJ,GAAWzL,QAAOqQ,GAClB5C,OAAU,OAAH4C,QAAG,IAAHA,OAAG,EAAHA,EAAKvS,aAAa8H,cAAcD,SAASgG,EAAcE,UAF7CJ,EAM7BzP,QAAS,CACL,CAAEsU,WAAY,cAAeC,aAAc,cAAeC,UAAW,SAAUxR,UAAW,GAC1F,CAAEuR,aAAc,SAAUvR,UAAW,EAAGyR,cAAc,EAAMxP,KAAMC,IAAA,IAAAwP,EAAA,IAAC,IAAEvM,GAAKjD,EAAA,OAAQ,OAAHiD,QAAG,IAAHA,GAAe,QAAZuM,EAAHvM,EAAKnG,kBAAU,IAAA0S,OAAZ,EAAHA,EAAiBjU,MAAM,GACtG,CAAE8T,aAAc,UAAWvR,UAAW,EAAGyR,cAAc,EAAMxP,KAAMmC,IAAA,IAAAuN,EAAA,IAAC,IAAExM,GAAKf,EAAA,OAAQ,OAAHe,QAAG,IAAHA,GAAe,QAAZwM,EAAHxM,EAAKnG,kBAAU,IAAA2S,OAAZ,EAAHA,EAAiBxR,QAAO,CAACyR,EAAK1L,KAAI,IAAA2L,EAAA,OAAKD,EAAO1Q,OAAW,OAAJgF,QAAI,IAAJA,GAAiB,QAAb2L,EAAJ3L,EAAMzG,mBAAW,IAAAoS,OAAb,EAAJA,EAAmBpU,OAAO,GAAE,EAAE,GACnK,CAAE6T,WAAY,eAAgBC,aAAc,aAAcC,UAAW,SAAUxR,UAAW,GAC1F,CAAEuR,aAAc,UAAWvR,UAAW,EAAGyR,cAAc,EAAMxP,KAAM6G,IAAA,IAAC,IAAE3D,GAAK2D,EAAA,OAAQ,OAAH3D,QAAG,IAAHA,GAAAA,EAAK2M,WAAYC,EAAAA,EAAAA,IAAmB,OAAH5M,QAAG,IAAHA,OAAG,EAAHA,EAAK2M,WAAa,KAAK,GACxI,CAAEP,aAAc,SAAUvR,UAAW,EAAGyR,cAAc,EAAMxP,KAAM+P,IAAA,IAAC,IAAE7M,GAAK6M,EAAA,OAAK5W,EAAAA,EAAAA,KAACsT,GAAO,CAAChQ,EAAGyG,GAAO,IAEtG8M,oBAAkB,EAClBC,cAAc,EACdC,eAAgBC,IAAA,IAAC,IAAEjN,GAAKiN,EAAA,OAAKhX,EAAAA,EAAAA,KAAC+U,GAAO,CAACzR,EAAGyG,GAAO,EAChDkN,eAAgB,YAK5BhO,EAAAA,EAAAA,MAAC+F,EAAAA,EAAM,CACHC,KAAmB,OAAbsC,QAAa,IAAbA,OAAa,EAAbA,EAAeG,iBACrBxC,QAASuG,GACTyB,YAAU,EAAAvQ,SAAA,EAEVsC,EAAAA,EAAAA,MAACoG,EAAAA,EAAW,CAAC3I,UAAU,0DAAyDC,SAAA,EAC5EsC,EAAAA,EAAAA,MAAA,QAAAtC,SAAA,CAAM,aACO3G,EAAAA,EAAAA,KAAA,QAAM0G,UAAU,YAAWC,SAAe,OAAb4K,QAAa,IAAbA,GAAqC,QAAxBhB,EAAbgB,EAAeI,8BAAsB,IAAApB,OAAxB,EAAbA,EAAuC9M,iBAEjFzD,EAAAA,EAAAA,KAAA,QAAA2G,UACI3G,EAAAA,EAAAA,KAAC0O,EAAAA,EAAU,CAAClF,QAASiM,GAAarN,MAAM,QAAQ1B,UAAU,aAAYC,UAClE3G,EAAAA,EAAAA,KAACmX,EAAAA,EAAK,YAIlBnX,EAAAA,EAAAA,KAACsP,EAAAA,EAAa,CAAA3I,UACK,OAAb4K,QAAa,IAAbA,GAAqC,QAAxBf,EAAbe,EAAeI,8BAAsB,IAAAnB,OAAxB,EAAbA,EAAuChN,kBAAyB,OAAPwN,QAAO,IAAPA,OAAO,EAAPA,EAASyD,cAChEzU,EAAAA,EAAAA,KAACoX,EAAe,CACZlW,SAAuB,OAAbqQ,QAAa,IAAbA,GAAqC,QAAxBd,EAAbc,EAAeI,8BAAsB,IAAAlB,OAAxB,EAAbA,EAAuCjN,eACjDrC,QAAgB,OAAP6P,QAAO,IAAPA,OAAO,EAAPA,EAASyD,WAClBrT,aAAcU,OAmB1B9B,EAAAA,EAAAA,KAACwP,EAAAA,EAAa,CAAA7I,UACV3G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CACHC,QAASiM,GACThM,WAAWzJ,EAAAA,EAAAA,KAACqX,EAAAA,EAAuB,IAAI1Q,SAC1C,eAMTsC,EAAAA,EAAAA,MAAC+F,EAAAA,EAAM,CACHC,KAAmB,OAAbsC,QAAa,IAAbA,OAAa,EAAbA,EAAeK,yBACrB1C,QAASwG,GACTvG,WAAS,EAACC,SAAS,KAAIzI,SAAA,EAEvB3G,EAAAA,EAAAA,KAACqP,EAAAA,EAAW,CAAA1I,SAAC,kBACbsC,EAAAA,EAAAA,MAACqG,EAAAA,EAAa,CAAA3I,SAAA,CAAC,uCACwB3G,EAAAA,EAAAA,KAAA,QAAM0G,UAAU,YAAWC,SAAe,OAAb4K,QAAa,IAAbA,GAAqC,QAAxBb,EAAba,EAAeI,8BAAsB,IAAAjB,OAAxB,EAAbA,EAAuCjN,aAAkB,mBAE7HwF,EAAAA,EAAAA,MAACuG,EAAAA,EAAa,CAAA7I,SAAA,EACV3G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CACHC,QAASkM,GAA8B/O,SAC1C,YAGD3G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CACHC,QApJG8N,KAAO,IAADC,EACzB/F,GAAiBtH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAE0H,0BAA0B,OAC7D9O,EAAAA,EAAAA,GAAU,CACNC,QAAQ,mBACRoC,OAAQ,SACRE,SAAU,CACN7B,eAA6B,OAAb+N,QAAa,IAAbA,GAAqC,QAAxBgG,EAAbhG,EAAeI,8BAAsB,IAAA4F,OAAxB,EAAbA,EAAuC/T,kBAE5DP,MAAKC,IACI,OAAJA,QAAI,IAAJA,GAAAA,EAAMC,SACNuR,EAAAA,GAAMvR,QAAQD,EAAKsU,SACnBpF,GAAUlI,IAAQA,KAElBwK,EAAAA,GAAM+C,MAAMvU,EAAKsU,QACrB,IACDvS,OAAMC,GAAKvC,QAAQC,IAAIsC,KACrBwS,SAAQ,IAAMlG,GAAiBtH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAEyH,uBAAwB,CAAC,OAAM,EAqIrElI,WAAWzJ,EAAAA,EAAAA,KAAC8U,EAAAA,EAAM,IAClBgB,QAAQ,WACR1N,MAAM,QAAOzB,SAChB,kBAMTsC,EAAAA,EAAAA,MAAC+F,EAAAA,EAAM,CACHC,KAAmB,OAAbsC,QAAa,IAAbA,OAAa,EAAbA,EAAeM,gBACrB3C,QAASyG,GACTxG,WAAS,EAACC,SAAS,KAAIzI,SAAA,EAEvBsC,EAAAA,EAAAA,MAACoG,EAAAA,EAAW,CAAC3I,UAAU,iCAAgCC,SAAA,EACnDsC,EAAAA,EAAAA,MAAA,QAAAtC,SAAA,CAAM,gBACU3G,EAAAA,EAAAA,KAAA,QAAM0G,UAAU,YAAWC,SAAe,OAAb4K,QAAa,IAAbA,GAAqC,QAAxBZ,EAAbY,EAAeI,8BAAsB,IAAAhB,OAAxB,EAAbA,EAAuClN,aAAkB,gBAEtGzD,EAAAA,EAAAA,KAAA,QAAA2G,UACI3G,EAAAA,EAAAA,KAAC0O,EAAAA,EAAU,CAAClF,QAASmM,GAAmBvN,MAAM,QAAQ1B,UAAU,aAAYC,UACxE3G,EAAAA,EAAAA,KAACmX,EAAAA,EAAK,YAIlBlO,EAAAA,EAAAA,MAACqG,EAAAA,EAAa,CAAA3I,SAAA,EACV3G,EAAAA,EAAAA,KAAC2X,EAAAA,EAAI,CAACnN,MAAO6H,EAAa/F,SAvblBsL,CAACtK,EAAOC,KAC5B+E,GAAe/E,EAAS,EAsbwC5G,SAClC,OAAb4K,QAAa,IAAbA,GAAqC,QAAxBX,EAAbW,EAAeI,8BAAsB,IAAAf,GAAQ,QAARC,EAArCD,EAAuCjN,cAAM,IAAAkN,OAAhC,EAAbA,EAA+ChN,KAAI,CAACC,EAAO2L,KACxDzP,EAAAA,EAAAA,KAAC6X,EAAAA,EAAG,CAACxJ,MAAY,OAALvK,QAAK,IAALA,OAAK,EAALA,EAAOI,WAAgBuL,OAG7B,OAAb8B,QAAa,IAAbA,GAAqC,QAAxBT,EAAbS,EAAeI,8BAAsB,IAAAb,GAAQ,QAARC,EAArCD,EAAuCnN,cAAM,IAAAoN,OAAhC,EAAbA,EAA+ClN,KAAI,CAACC,EAAO2L,KAAC,IAAAqI,EAAA,OACzD9X,EAAAA,EAAAA,KAAC4P,GAAQ,CAACpF,MAAO6H,EAAaxC,MAAOJ,EAAE9I,UACnC3G,EAAAA,EAAAA,KAAA,OAAK0G,UAAU,MAAKC,SACV,OAAL7C,QAAK,IAALA,GAAc,QAATgU,EAALhU,EAAOlC,eAAO,IAAAkW,OAAT,EAALA,EAAgBjU,KAAI,CAACS,EAAQyT,KACzBlS,QAAQC,OAAa,OAANxB,QAAM,IAANA,OAAM,EAANA,EAAQG,eACvBoB,QAAQC,OAAa,OAANxB,QAAM,IAANA,OAAM,EAANA,EAAQI,gBAEpBuE,EAAAA,EAAAA,MAAA,OAAKvC,UAAU,gBAAeC,SAAA,EAC1B3G,EAAAA,EAAAA,KAAA,SAAO0G,UAAU,0BAAyBC,SAAQ,OAANrC,QAAM,IAANA,OAAM,EAANA,EAAQE,cACnDkH,GAAapH,KAFkByT,QANPtI,EAalC,QAGnBxG,EAAAA,EAAAA,MAACuG,EAAAA,EAAa,CAAA7I,SAAA,EACV3G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CACHC,QAASmM,GAAkBhP,SAC9B,YAGD3G,EAAAA,EAAAA,KAACuJ,EAAAA,EAAM,CACHC,QAASA,IAAMgI,GAAiBtH,IAAGlE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUkE,GAAG,IAAEwH,kBAAkB,EAAMG,iBAAiB,MAC3FpI,WAAWzJ,EAAAA,EAAAA,KAACgY,EAAAA,EAAM,IAClBlC,QAAQ,YAAWnP,SACtB,wBAKV,C,6DC7gBX,SAAe5G,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,mDACD,0B,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,iIACD,W,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,4FACD,uB,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,0GACD,Q,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,6EACD,S,4DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,uIACD,O,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,kJACD,Y,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,+IACD,e,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,kIACD,S,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,+EACD,O,6DCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,mNACD,a,0ICJG,SAASgY,EAA2BC,GACzC,OAAOC,EAAAA,EAAAA,IAAqB,iBAAkBD,EAChD,EAC2BE,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,S,eCDrE,MAAMpI,EAAY,CAAC,YAAa,aAkB1BqI,GAAkBC,EAAAA,EAAAA,IAAO,MAAO,CACpCC,KAAM,iBACNL,KAAM,OACNM,kBAAmBA,CAAC/K,EAAOgL,IAAWA,EAAOC,MAHvBJ,EAIrB,KACM,CACLjP,QAAS,GACT,eAAgB,CACdsP,cAAe,QAoDrB,EAhDiCvD,EAAAA,YAAiB,SAAqBwD,EAASC,GAC9E,MAAMpL,GAAQqL,EAAAA,EAAAA,GAAgB,CAC5BrL,MAAOmL,EACPL,KAAM,oBAEF,UACF7R,EAAS,UACTqS,EAAY,OACVtL,EACJqC,GAAQkJ,EAAAA,EAAAA,GAA8BvL,EAAOuC,GACzCiJ,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGzL,EAAO,CACrCsL,cAEII,EAlCkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,EAAAA,EAAAA,GAHO,CACZV,KAAM,CAAC,SAEoBT,EAA4BkB,EAAQ,EA2BjDE,CAAkBJ,GAClC,OAAoBjZ,EAAAA,EAAAA,KAAKqY,GAAiBa,EAAAA,EAAAA,GAAS,CACjDI,GAAIP,EACJrS,WAAW6S,EAAAA,EAAAA,GAAKJ,EAAQT,KAAMhS,GAC9BuS,WAAYA,EACZJ,IAAKA,GACJ/I,GACL,G,sDCtDA,IAAI0J,EAAE,CAAC/Y,eAAe,IAAIC,iBAAiB,IAAI+Y,cAAa,EAAGC,eAAe,IAAIC,WAAU,EAAGlL,MAAM,sBAAsBmL,SAAS,YAAYC,mBAAkB,EAAGC,aAAY,EAAGC,QAAO,EAAGC,cAAc,GAAGrZ,kBAAiB,EAAGsZ,YAAY,CAACC,KAAK,OAAOC,MAAM,SAASC,qBAAqB,IAAwBC,EAAGC,GAAInY,OAAOoY,OAAO,CAAC,EAAEf,EAAEc,GAAG,MAAME,UAAUC,MAAMC,WAAAA,CAAYJ,GAAGK,MAAML,GAAGM,KAAKrC,KAAK,oBAAoB,EAAE,MAAMsC,UAAUJ,MAAMC,WAAAA,CAAYJ,GAAGK,MAAML,GAAGM,KAAKrC,KAAK,mBAAmB,EAAE,MAAMuC,UAAUL,MAAMC,WAAAA,CAAYJ,GAAGK,MAAML,GAAGM,KAAKrC,KAAK,6BAA6B,EAAE,MAAMwC,UAAUN,MAAMC,WAAAA,CAAYJ,GAAGK,MAAML,GAAGM,KAAKrC,KAAK,4BAA4B,EAAE,IAAIyC,EAAGV,GAAIA,EAAWW,EAAED,EAAEE,EAAEF,EAAEG,EAAEH,EAAEI,EAAEJ,EAAEK,EAAEL,EAAyFM,EAAGhB,GAAwBc,EAAT,kBAAJd,EAAeA,EAAEiB,IAAOjB,GAAGkB,EAAGlB,GAAwBe,EAAT,kBAAJf,EAAeA,EAAEmB,aAAgBnB,GAA4HoB,EAAGpB,GAAKqB,GAAIT,EAAIZ,EAAKqB,EAAjuB,QAAuuBC,EAAGtB,GAAI,CAACqB,EAAEE,IAAIC,EAAExB,EAAFwB,CAAKX,EAAIQ,EAAKE,IAAKC,EAAGxB,GAAKqB,GAAQA,EAAGrB,EAAE7Z,eAAskBsb,EAAEA,CAACzB,EAAEqB,KAAK,GAAnDrB,KAAKA,IAAIA,KAAK0B,SAAS1B,IAAIzU,QAAQyU,EAAE,IAAiB2B,CAAEN,GAAG,CAAC,GAAwB,WAArBrB,EAAE5Z,iBAA4B,OAAOua,EAAEU,EAAEO,kBAAkB,GAAG5B,EAAE5Z,iBAAiB,OAAOua,EAAEU,EAAEQ,WAAWjW,QAAQ,IAAIoU,EAAE5Z,kBAAkB,CAAC,OAAOua,EAAEU,EAAEQ,WAAW,EAAEC,EAAEA,CAAC9B,EAAEqB,KAAK,IAAIE,EAAEF,EAA0N,OAArNrB,EAAEb,cAAca,EAAE7Z,gBAAgBkb,EAAEU,QAAQ/B,EAAE7Z,iBAAiB,GAAG6Z,EAAEZ,gBAAgBiC,EAAEU,QAAQ/B,EAAEZ,iBAAiB,GAAGiC,EAAEU,QAAQ,OAAO,GAAGV,EAAEU,QAAQ,OAAO,KAAER,EAAEvB,EAAEZ,eAAtyC,SAASY,EAAEqB,GAAG,MAAM,KAAHA,GAAQrB,EAAE+B,QAAQ,MAAM,EAAS/B,EAAEpU,QAAQ,KAAK,MAAaoU,CAAC,CAAsuCgC,CAAEX,EAAErB,EAAEZ,gBAAgBY,EAAEZ,gBAAsBuB,EAAEY,EAAE,EAA2NlW,EAAEA,CAAC2U,EAAEqB,KAAK,GAAc,kBAAJA,EAAa,OAAOI,EAAEzB,EAAEqB,GAAG,GAAc,kBAAJA,EAAa,OAAOS,EAAE9B,EAAEqB,GAAG,GAAc,mBAAJA,GAAerB,EAAEL,YAAY,MAAlV9J,EAACmK,EAAEqB,KAAK,MAAME,EAAEF,EAAE,OAAO,QAAQ,OAAOV,EAAEX,EAAEL,YAAY4B,GAAG,EAA8R1L,CAAEmK,EAAEqB,GAAG,GAAO,OAAJA,GAAqB,qBAAJA,EAAgB,MAArUY,EAACjC,EAAEqB,IAAmB,qBAAJA,QAA0C,IAAzBrB,EAAEF,qBAAqCgC,EAAE9B,EAAEA,EAAEF,qBAAqB,IAAuBgC,EAAE9B,EAAd,OAAJqB,EAAoB,OAAmB,IAAyLY,CAAEjC,EAAEqB,GAAG,MAAM,IAAIZ,EAAE,gBAAD/X,cACj8E2Y,EAAC,kLAEf,EAAMa,EAAIlC,GAAKqB,IAAK,MAAME,EAAExB,EAAEC,GAAGmC,EAAEZ,EAAElb,iBAAiBwB,OAAOC,KAAKuZ,EAAE,IAAIE,EAAE7B,cAAc,IAAI0C,EAHyxB,SAACpC,GAAC,QAAAqC,EAAAC,UAAAva,OAAIsZ,EAAC,IAAAvQ,MAAAuR,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAADlB,EAACkB,EAAA,GAAAD,UAAAC,GAAA,OAAGlB,EAAE5W,QAAO,CAAC8W,EAAEY,IAAIA,EAAEZ,IAAGvB,EAAE,CAGxzBwC,CAAE5B,EAAE,IAHwzBZ,IAAKqB,GAAIrB,EAAEP,OAAOmB,EAAIS,EAAvoB,UAA6oBA,EAGh1BoB,CAAElB,GAHm1BvB,IAAKqB,GAAIrB,EAAEX,UAAU+B,EAAER,EAAIS,EAAGrB,EAAE7L,OAAXiN,CAAmBP,EAAE,KAAKQ,EAG/3BqB,CAAEnB,GAHk+BoB,EAAC3C,EAAEqB,IAAKE,IAAK,IAAIvB,EAAET,kBAAkB,OAAOgC,EAAE,GAAGF,EAAEtZ,OAAO,EAAE,MAAM,IAAIwY,EAAE,qJAAqJ,IAAI4B,EAAEtB,EAAE,IAAI,IAAI,IAAIuB,EAAE,EAAEA,EAAEf,EAAEtZ,OAAOqa,IAAI,CAAC,MAAMQ,EAAE1B,EAAEG,EAAEe,IAAID,EAAEb,EAAEtB,EAAFsB,CAAKa,EAAE9W,EAAE2U,EAAI4C,GAAI,CAAC,OAAOT,EAAEtB,EAAIsB,EAAGU,MAAM,GAAG,IAAIzB,EAAEG,EAAFH,CAAKe,EAAE,EAG5yCQ,CAAEpB,EAAEY,GAH4yCW,EAAC9C,EAAEqB,EAAEE,IAAKY,IAAK,IAAIC,EAAED,EAAE,IAAI,IAAIS,EAAE,EAAEA,EAAErB,EAAExZ,OAAO6a,IAAI,CAAC,IAAIG,EAAElC,EAAE,IAAI,IAAI,IAAImC,EAAE,EAAEA,EAAE3B,EAAEtZ,OAAOib,IAAI,CAAC,MAAMC,EAAEjC,EAAEK,EAAE2B,IAAIE,EAAE3B,EAAEqB,GAAKK,GAAIF,EAAEzB,EAAEtB,EAAFsB,CAAKyB,EAAE1X,EAAE2U,EAAEkD,GAAG,CAACH,EAAElC,EAAIkC,EAAGF,MAAM,GAAG,IAAIT,EAAEhB,EAAEgB,EAAFhB,CAAK2B,EAAE,CAAC,OAAOX,CAAC,EAG19CU,CAAEvB,EAAEY,EAAEd,IAAI,GAAKe,EAAGra,OAAO,EAAE,MAAM,IAAImY,EAAE,sDAAsD,OAAOkC,CAAC,EAAwHe,EAAInD,GAAKqB,IAAK,IAAI+B,OAAO,MAAM,IAAI5C,EAAE,wDAAwD,MAAMe,EAAtNvB,IAAKqB,IAAK,MAAac,EAAId,EAAGe,EAAZrC,EAAEC,GAAcR,YAAY,QAAQ,MAAM,OAAO,IAAI6D,KAAK,CAAClB,GAAG,CAAC9R,KAAI,QAAA3H,OAAS0Z,EAAC,mBAAkB,EAAuGkB,CAAEtD,EAAFsD,CAAKjC,GAAGc,EAAEpC,EAAEC,GAAGoC,EAAED,EAAE3C,YAAY,MAAM,MAAMoD,EAAC,GAAAla,OAAIyZ,EAAE7C,SAAQ,KAAA5W,OAAI0Z,GAAIW,EAAEQ,SAASC,cAAc,KAAKT,EAAE/V,SAAS4V,EAAEG,EAAEU,KAAKC,IAAIC,gBAAgBpC,GAAGwB,EAAEa,aAAa,aAAa,UAAUL,SAASM,KAAKC,YAAYf,GAAGA,EAAEgB,QAAQR,SAASM,KAAKG,YAAYjB,EAAE,C","sources":["../node_modules/@mui/icons-material/esm/FileDownload.js","../node_modules/@mui/icons-material/esm/SettingsOutlined.js","Components/dynamicMuiTable.jsx","Pages/Analytics/reportTemplates.jsx","../node_modules/@mui/icons-material/esm/ArrowBackIosNewOutlined.js","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/FilterAltOff.js","../node_modules/@mui/icons-material/esm/Launch.js","../node_modules/@mui/icons-material/esm/List.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/export-to-csv/output/index.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'FileDownload');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4m0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2\"\n}), 'SettingsOutlined');","import React from 'react';\r\nimport { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\r\nimport { isEqualNumber, LocalDate, NumberFormat } from './functions';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { Autocomplete, IconButton, Tooltip, TextField, Checkbox, Dialog, DialogContent, DialogTitle, DialogActions, Button, Box } from '@mui/material';\r\nimport { CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff, FileDownload, SettingsOutlined } from '@mui/icons-material';\r\nimport { mkConfig, generateCsv, download } from 'export-to-csv';\r\nimport { fetchLink } from './fetchComponent';\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return NumberFormat(val)\r\n        case 'date':\r\n            return LocalDate(val);\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst getFun = (dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return {\r\n                filterVariant: 'range',\r\n                filterFn: 'between',\r\n            }\r\n        case 'date':\r\n            return {\r\n                filterVariant: 'text',\r\n            };\r\n        case 'string':\r\n            // const distinctValues = [];\r\n            // dataArray?.forEach(item => (item[key] && (distinctValues.findIndex(o => o?.value === item[key]?.toLocaleLowerCase()) === -1))\r\n            //     ? distinctValues.push({ label: String(item[key]), value: String(item[key]).toLocaleLowerCase() })\r\n            //     : null\r\n            // )\r\n            return {\r\n                filterVariant: 'text',\r\n            }\r\n\r\n        default:\r\n            return {}\r\n    }\r\n}\r\n\r\nconst csvConfig = mkConfig({\r\n    fieldSeparator: ',',\r\n    decimalSeparator: '.',\r\n    useKeysAsHeaders: true,\r\n});\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst DynamicMuiTable = ({ reportId, company, queryFilters, buttons, groupingState }) => {\r\n    const [dispColmn, setDispColmn] = useState([]);\r\n    const [dataArray, setDataArray] = useState([]);\r\n    const [columns, setColumns] = useState([]);\r\n    const [filters, setFilters] = useState({});\r\n    const [filteredData, setFilteredData] = useState(dataArray);\r\n    const filterCount = Object.keys(filters).length;\r\n    const showData = (filterCount > 0) ? filteredData : dataArray;\r\n    const [aggregationValues, setAggregationValues] = useState({});\r\n    const [dialogs, setDialogs] = useState({\r\n        filters: false,\r\n        aggregations: false\r\n    });\r\n    console.log(groupingState)\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/template?ReportId=${reportId}`\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                if (data.data[0]) {\r\n\r\n                    const o = data.data[0];\r\n                    const strucre = {\r\n                        Report_Type_Id: o?.Report_Type_Id,\r\n                        reportName: o?.Report_Name,\r\n                        tables: o?.tablesList?.map(table => ({\r\n                            Table_Id: table?.Table_Id,\r\n                            Table_Name: table?.Table_Name,\r\n                            AliasName: table?.AliasName,\r\n                            Table_Accronym: table?.Table_Accronym,\r\n                            isChecked: true,\r\n                            columns: table?.columnsList?.map(column => ({\r\n                                Column_Data_Type: column?.Column_Data_Type,\r\n                                Column_Name: column?.Column_Name,\r\n                                IS_Default: column?.IS_Default,\r\n                                IS_Join_Key: column?.IS_Join_Key,\r\n                                Order_By: column?.Order_By,\r\n                                Table_Id: column?.Table_Id,\r\n                                isVisible: true,\r\n                                accessColumnName: `${table?.Table_Accronym}_${column?.Column_Name}`\r\n                            }))\r\n                        }))\r\n                    }\r\n                    const allColumns = strucre.tables?.reduce((colArr, table) => {\r\n                        return colArr.concat(table.columns);\r\n                    }, []);\r\n                    setColumns(allColumns);\r\n                }\r\n            }\r\n        }).catch(e => console.log(e))\r\n\r\n    }, [reportId])\r\n\r\n    useEffect(() => {\r\n        if (reportId) {\r\n            fetchLink({\r\n                address: `reports/template/executeQuery`,\r\n                method: 'POST',\r\n                headers: {\r\n                    'Db': company,\r\n                },\r\n                bodyData: {\r\n                    filterReq: queryFilters,\r\n                    ReportID: reportId\r\n                }\r\n            }).then(data => {\r\n                if (data?.success) {\r\n                    setDataArray(data?.data);\r\n                }\r\n            }).catch(e => console.log(e))\r\n        }\r\n    }, [company, reportId])\r\n\r\n    useEffect(() => {\r\n        const displayColumns = [...columns].sort((a, b) => (a.Order_By && b.Order_By) ? a.Order_By - b.Order_By : b.Order_By - a.Order_By)\r\n\r\n        const muiColumns = displayColumns.filter(column =>\r\n            !Boolean(Number(column?.IS_Default)) && !Boolean(Number(column?.IS_Join_Key))\r\n        ).map(column => ({\r\n            header: column?.Column_Name?.replace(/_/g, ' '),\r\n            accessorKey: column?.accessColumnName,\r\n            sortable: true,\r\n            size: 150,\r\n            // ...aggregations(column?.Column_Data_Type, column?.Column_Name),\r\n            aggregationFn: aggregationValues[column?.Column_Name] ? aggregationValues[column?.Column_Name] : '',\r\n            AggregatedCell: ({ cell }) => (\r\n                <div className='blue-text text-center float-end w-100'>\r\n                    {cell.getValue() ? NumberFormat(cell.getValue()) : ''}\r\n                </div>\r\n            ),\r\n            Cell: ({ cell }) => (\r\n                <p className={`m-0 text-center fa-14 w-100`}>\r\n                    {formatString(cell.getValue(), column?.Column_Data_Type)}\r\n                </p>\r\n            ),\r\n            ...getFun(column?.Column_Data_Type),\r\n        }))\r\n\r\n        setDispColmn(muiColumns)\r\n    }, [columns, aggregationValues])\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filters]);\r\n\r\n    const handleExportRows = (rows) => {\r\n        const rowData = rows.map((row) => row.original);\r\n        const csv = generateCsv(csvConfig)(rowData);\r\n        download(csvConfig)(csv);\r\n    };\r\n\r\n    const handleExportData = () => {\r\n        const csv = generateCsv(csvConfig)(dataArray);\r\n        download(csvConfig)(csv);\r\n    };\r\n\r\n    const table = useMaterialReactTable({\r\n        columns: dispColmn,\r\n        data: showData || [],\r\n        enableColumnResizing: true,\r\n        enableGrouping: true,\r\n        enableStickyHeader: true,\r\n        enableStickyFooter: true,\r\n        enableColumnOrdering: true,\r\n        enableRowNumbers: false,\r\n        initialState: {\r\n            density: 'compact',\r\n            // grouping: groupingState?.filter(o => typeof o === 'string')\r\n            // .filter(o => {\r\n            //     const ind = dispColmn.findIndex(indVal => indVal?.accessorKey === o);\r\n            //     return ind !== -1; \r\n            // })\r\n            // ,\r\n            pagination: { pageIndex: 0, pageSize: 100 },\r\n        },\r\n        muiToolbarAlertBannerChipProps: { color: 'primary' },\r\n        muiTableContainerProps: { sx: { maxHeight: '68dvh', minHeight: '46vh' } },\r\n        muiTableProps: {\r\n            sx: {\r\n                caption: {\r\n                    captionSide: 'top',\r\n                },\r\n            },\r\n        },\r\n        muiTableHeadCellProps: {\r\n            sx: {\r\n                fontWeight: 'normal',\r\n            },\r\n            className: ' border text-center'\r\n        },\r\n        muiTableBodyCellProps: {\r\n            className: ' border-end text-center'\r\n        },\r\n        renderTopToolbarCustomActions: ({ table }) => (\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    gap: '16px',\r\n                    padding: '8px',\r\n                    flexWrap: 'wrap',\r\n                }}\r\n            >\r\n                <Button\r\n                    onClick={handleExportData}\r\n                    startIcon={<FileDownload />}\r\n                >\r\n                    All Data\r\n                </Button>\r\n                <Button\r\n                    disabled={table.getPrePaginationRowModel().rows.length === 0}\r\n                    onClick={() =>\r\n                        handleExportRows(table.getPrePaginationRowModel().rows)\r\n                    }\r\n                    startIcon={<FileDownload />}\r\n                >\r\n                    Filtered Rows\r\n                </Button>\r\n                <Button\r\n                    onClick={() => setDialogs(pre => ({ ...pre, aggregations: true }))}\r\n                    startIcon={<SettingsOutlined />}\r\n                >\r\n                    Aggregation\r\n                </Button>\r\n                {/*  */}\r\n                {/* {buttons({grouping: table.getState().grouping})} */}\r\n                <Button\r\n                    onClick={() => setDialogs(pre => ({ ...pre, filters: true }))}\r\n                    className=\"d-md-none d-inline\"\r\n                    startIcon={<FilterAlt />}\r\n                >\r\n                    Filters\r\n                </Button>\r\n            </Box>\r\n        ),\r\n    })\r\n\r\n    const memoizedTableConfig = useMemo(() => table, [table, aggregationValues, showData, groupingState]);\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...dataArray];\r\n        for (const column of columns) {\r\n            if (filters[column.accessColumnName]) {\r\n                if (filters[column.accessColumnName].type === 'range') {\r\n                    const { min, max } = filters[column.accessColumnName];\r\n                    filtered = filtered.filter(item => {\r\n                        const value = item[column.accessColumnName];\r\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\r\n                    });\r\n                } else if (filters[column.accessColumnName].type === 'date') {\r\n                    const { start, end } = filters[column.accessColumnName].value;\r\n                    filtered = filtered.filter(item => {\r\n                        const dateValue = new Date(item[column.accessColumnName]);\r\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\r\n                    });\r\n                } else if (Array.isArray(filters[column.accessColumnName])) {\r\n                    filtered = filters[column.accessColumnName]?.length > 0 ? filtered.filter(item => filters[column.accessColumnName].includes(item[column.accessColumnName].toLowerCase().trim())) : filtered\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { accessColumnName, Column_Name, Column_Data_Type } = column;\r\n        if (Column_Data_Type === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], min: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], max: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, start: e.target.value || undefined } })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, end: e.target.value || undefined } })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'string') {\r\n            const distinctValues = [...new Set(dataArray.map(item => item[accessColumnName]?.toLowerCase()?.trim()))].sort();\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${accessColumnName}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={filters[accessColumnName] || []}\r\n                    onChange={(event, newValue) => handleFilterChange(accessColumnName, newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={Column_Name?.replace(/_/g, ' ')}\r\n                            placeholder={`Select ${Column_Name?.replace(/_/g, ' ')}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row \">\r\n\r\n                <div className=\"col-xxl-10 col-lg-9 col-md-8\">\r\n                    <div className=\"p-2\">\r\n                        <MaterialReactTable table={memoizedTableConfig} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <Dialog\r\n                open={dialogs.filters}\r\n                onClose={() => setDialogs(pre => ({ ...pre, filters: false }))}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setDialogs(pre => ({ ...pre, filters: false }))}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialogs.aggregations}\r\n                onClose={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\r\n                fullWidth maxWidth='lg'\r\n            >\r\n                <DialogTitle>Aggregations</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"row\" style={{ minHeight: '30dvh' }}>\r\n                        {[...columns].filter(column => (\r\n                            isEqualNumber(column?.IS_Default, 0)\r\n                            && isEqualNumber(column?.IS_Join_Key, 0)\r\n                            && (column.Column_Data_Type === 'number'\r\n                                || column.Column_Data_Type === 'string')\r\n                        )).map((o, i) => (\r\n                            <div className=\"col-xxl-3 col-lg-4 col-md-6 p-2\" key={i}>\r\n                                <label>{o?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                <select\r\n                                    className='cus-inpt'\r\n                                    value={aggregationValues[o?.Column_Name] ?? ''}\r\n                                    onChange={e => setAggregationValues(pre => ({ ...pre, [o.Column_Name]: e.target.value }))}\r\n                                >\r\n                                    {\r\n                                        [\r\n                                            { label: 'Select Aggregation', value: '' },\r\n                                            { label: 'count', value: 'count' },\r\n                                            { label: 'extent', value: 'extent' },\r\n                                            { label: 'max', value: 'max' },\r\n                                            { label: 'min', value: 'min' },\r\n                                            { label: 'mean', value: 'mean' },\r\n                                            { label: 'median', value: 'median' },\r\n                                            { label: 'uniqueCount', value: 'uniqueCount' },\r\n                                            { label: 'sum', value: 'sum' },\r\n                                            { label: 'unique', value: 'unique' },\r\n                                        ].map((o, i) => (\r\n                                            <option value={o.value} key={i}>{o.label}</option>\r\n                                        ))\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DynamicMuiTable;","import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n    Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tab, Tabs, Box, Typography,\r\n    ListItemIcon, ListItemText, MenuItem, MenuList, Popover, \r\n} from '@mui/material';\r\nimport { ArrowBackIosNewOutlined, Edit, Visibility, List, Delete, FilterAlt, Launch, Close } from '@mui/icons-material';\r\nimport { isEqualNumber, UTCDateWithTime } from '../../Components/functions';\r\nimport { MyContext } from '../../Components/context/contextProvider';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport DynamicMuiTable from '../../Components/dynamicMuiTable';\r\nimport { toast } from 'react-toastify';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport FilterableTable from '../../Components/filterableTable2'\r\n\r\n\r\n\r\nconst TabPanel = (props) => {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`tabpanel-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ReportTemplates = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'))\r\n    const [templates, setTemplates] = useState([]);\r\n    const variableState = {\r\n        search: '',\r\n        openFilterDialog: false,\r\n        filterTablesAndColumns: {},\r\n        deleteConfirmationDialog: false,\r\n        preFilterDialog: false,\r\n    }\r\n    const [localVariable, setLocalVariable] = useState(variableState);\r\n    const { contextObj } = useContext(MyContext);\r\n    const [filters, setFilters] = useState({})\r\n    const nav = useNavigate();\r\n    const [reload, setReload] = useState(false)\r\n    const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setSelectedTab(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/template`,\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                setTemplates(data?.data);\r\n            }\r\n        }).catch(e => console.log(e))\r\n    }, [reload])\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Column_Name, Column_Data_Type } = column;\r\n        if (Column_Data_Type === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"cus-inpt me-1\"\r\n                        value={filters[Column_Name]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'range',\r\n                            ...filters[Column_Name],\r\n                            min: e.target.value ? parseFloat(e.target.value) : undefined\r\n                        })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"cus-inpt ms-1\"\r\n                        value={filters[Column_Name]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'range',\r\n                            ...filters[Column_Name],\r\n                            max: e.target.value ? parseFloat(e.target.value) : undefined\r\n                        })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between flex-wrap'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"cus-inpt w-auto flex-grow-1 me-1 my-1\"\r\n                        value={filters[Column_Name]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'date',\r\n                            value: { ...filters[Column_Name]?.value, start: e.target.value || undefined }\r\n                        })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"cus-inpt w-auto flex-grow-1 ms-1 my-1\"\r\n                        value={filters[Column_Name]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'date',\r\n                            value: { ...filters[Column_Name]?.value, end: e.target.value || undefined }\r\n                        })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'string') {\r\n            return (\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='Search...'\r\n                    className='cus-inpt'\r\n                    value={filters[Column_Name]?.value ?? ''}\r\n                    onChange={e => handleFilterChange(Column_Name, {\r\n                        type: 'textCompare',\r\n                        value: String(e.target.value).toLowerCase() || ''\r\n                    })}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    const Actions = ({ o }) => {\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n        const dataToForward = {\r\n            Report_Type_Id: o?.Report_Type_Id,\r\n            reportName: o?.Report_Name,\r\n            ReportState: o?.ReportState,\r\n            tables: o?.tablesList?.map(table => ({\r\n                Table_Id: table?.Table_Id,\r\n                Table_Name: table?.Table_Name,\r\n                AliasName: table?.AliasName,\r\n                Table_Accronym: table?.Table_Accronym,\r\n                isChecked: true,\r\n                columns: table?.columnsList?.map(column => ({\r\n                    Column_Data_Type: column?.Column_Data_Type,\r\n                    Column_Name: column?.Column_Name,\r\n                    IS_Default: column?.IS_Default,\r\n                    IS_Join_Key: column?.IS_Join_Key,\r\n                    Order_By: column?.Order_By,\r\n                    Table_Id: column?.Table_Id,\r\n                    isVisible: true\r\n                }))\r\n            }))\r\n        }\r\n\r\n        const popOverOpen = Boolean(anchorEl);\r\n        const id = popOverOpen ? o?.Report_Name : undefined;\r\n\r\n        const handleClick = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setAnchorEl(null);\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <IconButton aria-describedby={id} onClick={handleClick}>\r\n                    <List />\r\n                </IconButton>\r\n\r\n                <Popover\r\n                    id={id}\r\n                    open={popOverOpen}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                >\r\n                    <MenuList>\r\n\r\n                        <MenuItem\r\n                            onClick={\r\n                                () => {\r\n                                    setLocalVariable(pre => ({\r\n                                        ...pre,\r\n                                        filterTablesAndColumns: dataToForward,\r\n                                        openFilterDialog: true,\r\n                                    }));\r\n                                    setSelectedTab(0);\r\n                                    setFilters({})\r\n                                }\r\n                            }\r\n                        >\r\n                            <ListItemIcon><Visibility fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>OPEN</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={\r\n                                !storage?.Company_id\r\n                                    ? () => toast.warn('Select Company!')\r\n                                    : () => {\r\n                                        setLocalVariable(pre => ({\r\n                                            ...pre,\r\n                                            filterTablesAndColumns: dataToForward,\r\n                                            preFilterDialog: true,\r\n                                        }));\r\n                                        setFilters({});\r\n                                        setSelectedTab(0);\r\n                                    }\r\n                            }\r\n                        >\r\n                            <ListItemIcon><FilterAlt fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>FILTERS</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={() => nav('create', { state: { ReportState: dataToForward } })}\r\n                        >\r\n                            <ListItemIcon><Edit fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>EDIT</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={() => setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: true, filterTablesAndColumns: dataToForward }))}\r\n                        >\r\n                            <ListItemIcon><Delete fontSize=\"small\" color='error' /></ListItemIcon>\r\n                            <ListItemText>DELETE</ListItemText>\r\n                        </MenuItem>\r\n\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const RowComp = ({ o }) => {\r\n        return (\r\n            <>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {['SNo', 'Table', 'Column', 'Data-Type', 'Order'].map(o => (\r\n                                    <th className=\"border fa-14 text-center\" key={o} style={{ backgroundColor: '#EDF0F7' }}>{o}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {o?.tablesList?.map((table, tableInd) => (\r\n                                <React.Fragment key={tableInd}>\r\n                                    {table?.columnsList?.map((column, columnInd) => (\r\n                                        <tr key={columnInd}>\r\n                                            {columnInd === 0 && (\r\n                                                <>\r\n                                                    <td className=\"border fa-13 text-center vctr\" rowSpan={table?.columnsList?.length}>{tableInd + 1}</td>\r\n                                                    <td className=\"border fa-13 text-center blue-text vctr\" rowSpan={table?.columnsList?.length}>\r\n                                                        {table?.AliasName}\r\n                                                    </td>\r\n                                                </>\r\n                                            )}\r\n                                            <td\r\n                                                className={`\r\n                                                    border fa-13 vctr\r\n                                                    ${Boolean(Number(column?.IS_Default)) ? ' blue-text ' : ''}\r\n                                                    ${Boolean(Number(column?.IS_Join_Key)) ? ' fw-bold ' : ''}\r\n                                                    `}\r\n                                            >\r\n                                                {column?.Column_Name}\r\n                                            </td>\r\n                                            <td className=\"border fa-13 vctr\">{column?.Column_Data_Type}</td>\r\n                                            <td className=\"border fa-13 vctr\">{column?.Order_By}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </React.Fragment>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, openFilterDialog: false, filterTablesAndColumns: {} }))\r\n    }\r\n\r\n    const closeDeleteConfirmationDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false, filterTablesAndColumns: {} }))\r\n    }\r\n\r\n    const closeFilterDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, preFilterDialog: false }));\r\n        setFilters({})\r\n    }\r\n\r\n    const deleteTemplate = () => {\r\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false }))\r\n        fetchLink({\r\n            address: `reports/template`,\r\n            method: 'DELETE',\r\n            bodyData: {\r\n                Report_Type_Id: localVariable?.filterTablesAndColumns?.Report_Type_Id\r\n            }\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                toast.success(data.message)\r\n                setReload(pre => !pre)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.log(e))\r\n            .finally(() => setLocalVariable(pre => ({ ...pre, filterTablesAndColumns: {} })))\r\n    }\r\n\r\n    // const saveReportGroupingState = (reportid, grouping) => {\r\n    //     fetchLink({\r\n    //         address: `reports/template/templateState`,\r\n    //         method: 'POST',\r\n    //         bodyData: {\r\n    //             Report_Type_Id: reportid,\r\n    //             ReportState: grouping\r\n    //         }\r\n    //     }).then(data => {\r\n    //         if (data.success) {\r\n    //             toast.success(data.message);\r\n    //         } else {\r\n    //             toast.error(data.message)\r\n    //         }\r\n    //     }).catch(e => console.error(e))\r\n    // }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card>\r\n\r\n                <div className=\"p-2 border-bottom fa-16 fw-bold d-flex justify-content-between align-items-center\">\r\n                    <span className=\"text-primary text-uppercase ps-3\">Report Templates</span>\r\n                    {isEqualNumber(contextObj?.Add_Rights, 1) && (\r\n                        <Button variant='outlined' onClick={() => nav('create')}>Add Report</Button>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-end p-3\">\r\n                    <input\r\n                        type=\"search\"\r\n                        className='cus-inpt w-auto'\r\n                        placeholder='Search Report Name'\r\n                        value={localVariable?.search ?? ''}\r\n                        onChange={e => setLocalVariable(pre => ({ ...pre, search: String(e.target.value).toLowerCase() }))}\r\n                    />\r\n                </div>\r\n\r\n                <CardContent className='p-0'>\r\n                    <FilterableTable\r\n                        dataArray={\r\n                            !localVariable?.search ? templates : (\r\n                                [...templates].filter(fil =>\r\n                                    String(fil?.Report_Name).toLowerCase().includes(localVariable.search)\r\n                                )\r\n                            )\r\n                        }\r\n                        columns={[\r\n                            { Field_Name: 'Report_Name', ColumnHeader: 'Report Name', Fied_Data: 'string', isVisible: 1 },\r\n                            { ColumnHeader: 'Tables', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.tablesList?.length },\r\n                            { ColumnHeader: 'Columns', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.tablesList?.reduce((sum, item) => sum += Number(item?.columnsList?.length), 0) },\r\n                            { Field_Name: 'CreatedByGet', ColumnHeader: 'Created By', Fied_Data: 'string', isVisible: 1, },\r\n                            { ColumnHeader: 'Columns', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.CreatedAt ? UTCDateWithTime(row?.CreatedAt) : ' - ' },\r\n                            { ColumnHeader: 'Action', isVisible: 1, isCustomCell: true, Cell: ({ row }) => <Actions o={row} /> },\r\n                        ]}\r\n                        EnableSerialNumber\r\n                        isExpendable={true}\r\n                        expandableComp={({ row }) => <RowComp o={row} />}\r\n                        tableMaxHeight={650}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={localVariable?.openFilterDialog}\r\n                onClose={closeDialog}\r\n                fullScreen\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between align-items-center fa-16'>\r\n                    <span>\r\n                        Report - <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span>\r\n                    </span>\r\n                    <span>\r\n                        <IconButton onClick={closeDialog} color='error' className=' shadow-lg'>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {(localVariable?.filterTablesAndColumns?.Report_Type_Id && storage?.Company_id) && (\r\n                        <DynamicMuiTable\r\n                            reportId={localVariable?.filterTablesAndColumns?.Report_Type_Id}\r\n                            company={storage?.Company_id}\r\n                            queryFilters={filters}\r\n                            // buttons={({ grouping }) => (\r\n                            //     <Button\r\n                            //         onClick={() => saveReportGroupingState(localVariable?.filterTablesAndColumns?.Report_Type_Id, grouping)}\r\n                            //         disabled={grouping.length === 0}\r\n                            //         startIcon={<Save />}\r\n                            //     >\r\n                            //         Save State\r\n                            //     </Button>\r\n                            // )}\r\n                            // groupingState={\r\n                            //     localVariable?.filterTablesAndColumns?.ReportState \r\n                            //         ? JSON.parse(localVariable?.filterTablesAndColumns?.ReportState)\r\n                            //         : []\r\n                            // }\r\n                        />\r\n                    )}\r\n                    {/* {console.log(localVariable)} */}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeDialog}\r\n                        startIcon={<ArrowBackIosNewOutlined />}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={localVariable?.deleteConfirmationDialog}\r\n                onClose={closeDeleteConfirmationDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the Template <span className='blue-text'>{localVariable?.filterTablesAndColumns?.reportName}</span> permanently\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeDeleteConfirmationDialog}\r\n                    >\r\n                        cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={deleteTemplate}\r\n                        startIcon={<Delete />}\r\n                        variant='outlined'\r\n                        color='error'\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={localVariable?.preFilterDialog}\r\n                onClose={closeFilterDialog}\r\n                fullWidth maxWidth='md'\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between'>\r\n                    <span>\r\n                        Filters For <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span> - Report\r\n                    </span>\r\n                    <span>\r\n                        <IconButton onClick={closeFilterDialog} color='error' className='shadow-lg '>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Tabs value={selectedTab} onChange={handleTabChange}>\r\n                        {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\r\n                            <Tab label={table?.AliasName} key={i} />\r\n                        ))}\r\n                    </Tabs>\r\n                    {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\r\n                        <TabPanel value={selectedTab} index={i} key={i}>\r\n                            <div className=\"row\">\r\n                                {table?.columns?.map((column, ii) => (\r\n                                    !Boolean(Number(column?.IS_Default)) &&\r\n                                    !Boolean(Number(column?.IS_Join_Key)) &&\r\n                                    (\r\n                                        <div className=\"p-2 col-md-6 \" key={ii}>\r\n                                            <label className='mb-2 fw-bold text-muted'>{column?.Column_Name}</label>\r\n                                            {renderFilter(column)}\r\n                                        </div>\r\n                                    )\r\n                                ))}\r\n                            </div>\r\n                        </TabPanel>\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeFilterDialog}\r\n                    >\r\n                        cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => setLocalVariable(pre => ({ ...pre, openFilterDialog: true, preFilterDialog: false }))}\r\n                        startIcon={<Launch />}\r\n                        variant='contained'\r\n                    >\r\n                        Open report\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportTemplates","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\n}), 'ArrowBackIosNewOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2m-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckBox');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5zm0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2\"\n}), 'CheckBoxOutlineBlank');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.79 5.61C20.3 4.95 19.83 4 19 4H6.83l7.97 7.97zM2.81 2.81 1.39 4.22 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.17l5.78 5.78 1.41-1.41z\"\n}), 'FilterAltOff');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'Launch');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 13h2v-2H3zm0 4h2v-2H3zm0-8h2V7H3zm4 4h14v-2H7zm0 4h14v-2H7zM7 7v2h14V7z\"\n}), 'List');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","var y={fieldSeparator:\",\",decimalSeparator:\".\",quoteStrings:!0,quoteCharacter:'\"',showTitle:!1,title:\"My Generated Report\",filename:\"generated\",showColumnHeaders:!0,useTextFile:!1,useBom:!0,columnHeaders:[],useKeysAsHeaders:!1,boolDisplay:{true:\"TRUE\",false:\"FALSE\"},replaceUndefinedWith:\"\"},L=\"\\r\\n\",F=\"\\uFEFF\",q=($)=>Object.assign({},y,$);class Q extends Error{constructor($){super($);this.name=\"CsvGenerationError\"}}class T extends Error{constructor($){super($);this.name=\"EmptyHeadersError\"}}class U extends Error{constructor($){super($);this.name=\"CsvDownloadEnvironmentError\"}}class V extends Error{constructor($){super($);this.name=\"UnsupportedDataFormatError\"}}var X=($)=>$,z=($)=>$,Z=X,_=X,Y=X,K=X,N=X;var r=function($,x){if(x=='\"'&&$.indexOf('\"')>-1)return $.replace(/\"/g,'\"\"');return $},D=($)=>typeof $===\"object\"?K($.key):K($),h=($)=>typeof $===\"object\"?N($.displayLabel):N($),P=($,...x)=>x.reduce((W,j)=>j(W),$),S=($)=>(x)=>$.useBom?_(z(x)+F):x,R=($)=>(x)=>$.showTitle?B(_(z(x)+$.title))(Y(\"\")):x,B=($)=>(x)=>_(z($)+z(x)+L),E=($)=>(x,W)=>w($)(Y(z(x)+z(W))),w=($)=>(x)=>X(z(x)+$.fieldSeparator),O=($,x)=>(W)=>{if(!$.showColumnHeaders)return W;if(x.length<1)throw new T(\"Option to show headers but none supplied. Make sure there are keys in your collection or that you've supplied headers through the config options.\");let j=Y(\"\");for(let A=0;A<x.length;A++){const J=h(x[A]);j=E($)(j,b($,z(J)))}return j=Y(z(j).slice(0,-1)),B(W)(j)},C=($,x,W)=>(j)=>{let A=j;for(var J=0;J<W.length;J++){let I=Y(\"\");for(let M=0;M<x.length;M++){const H=D(x[M]),v=W[J][z(H)];I=E($)(I,b($,v))}I=Y(z(I).slice(0,-1)),A=B(A)(I)}return A},l=z,k=($)=>+$===$&&(!isFinite($)||Boolean($%1)),m=($,x)=>{if(k(x)){if($.decimalSeparator===\"locale\")return Z(x.toLocaleString());if($.decimalSeparator)return Z(x.toString().replace(\".\",$.decimalSeparator))}return Z(x.toString())},G=($,x)=>{let W=x;if($.quoteStrings||$.fieldSeparator&&x.indexOf($.fieldSeparator)>-1||$.quoteCharacter&&x.indexOf($.quoteCharacter)>-1||x.indexOf(\"\\n\")>-1||x.indexOf(\"\\r\")>-1)W=$.quoteCharacter+r(x,$.quoteCharacter)+$.quoteCharacter;return Z(W)},p=($,x)=>{const W=x?\"true\":\"false\";return Z($.boolDisplay[W])},g=($,x)=>{if(typeof x===\"undefined\"&&$.replaceUndefinedWith!==void 0)return G($,$.replaceUndefinedWith+\"\");if(x===null)return G($,\"null\");return G($,\"\")},b=($,x)=>{if(typeof x===\"number\")return m($,x);if(typeof x===\"string\")return G($,x);if(typeof x===\"boolean\"&&$.boolDisplay)return p($,x);if(x===null||typeof x===\"undefined\")return g($,x);throw new V(`\n    typeof ${typeof x} isn't supported. Only number, string, boolean, null and undefined are supported.\n    Please convert the data in your object to one of those before generating the CSV.\n    `)};var Q$=($)=>(x)=>{const W=q($),j=W.useKeysAsHeaders?Object.keys(x[0]):W.columnHeaders;let A=P(_(\"\"),S(W),R(W),O(W,j),C(W,j,x));if(z(A).length<1)throw new Q(\"Output is empty. Is your data formatted correctly?\");return A},s=($)=>(x)=>{const W=q($),j=z(x),A=W.useTextFile?\"plain\":\"csv\";return new Blob([j],{type:`text/${A};charset=utf8;`})},T$=($)=>(x)=>{if(!window)throw new U(\"Downloading only supported in a browser environment.\");const W=s($)(x),j=q($),A=j.useTextFile?\"txt\":\"csv\",J=`${j.filename}.${A}`,I=document.createElement(\"a\");I.download=J,I.href=URL.createObjectURL(W),I.setAttribute(\"visibility\",\"hidden\"),document.body.appendChild(I),I.click(),document.body.removeChild(I)};export{q as mkConfig,Q$ as generateCsv,T$ as download,l as asString,s as asBlob};\n"],"names":["createSvgIcon","_jsx","d","formatString","val","dataType","NumberFormat","LocalDate","csvConfig","mkConfig","fieldSeparator","decimalSeparator","useKeysAsHeaders","icon","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","_ref","reportId","company","queryFilters","buttons","groupingState","dispColmn","setDispColmn","useState","dataArray","setDataArray","columns","setColumns","filters","setFilters","filteredData","setFilteredData","showData","Object","keys","length","aggregationValues","setAggregationValues","dialogs","setDialogs","aggregations","console","log","useEffect","fetchLink","address","concat","then","data","success","_o$tablesList","_strucre$tables","o","strucre","Report_Type_Id","reportName","Report_Name","tables","tablesList","map","table","_table$columnsList","Table_Id","Table_Name","AliasName","Table_Accronym","isChecked","columnsList","column","Column_Data_Type","Column_Name","IS_Default","IS_Join_Key","Order_By","isVisible","accessColumnName","allColumns","reduce","colArr","catch","e","method","headers","bodyData","filterReq","ReportID","muiColumns","sort","a","b","filter","Boolean","Number","_column$Column_Name","_objectSpread","header","replace","accessorKey","sortable","size","aggregationFn","AggregatedCell","_ref2","cell","className","children","getValue","Cell","_ref3","filterVariant","filterFn","getFun","applyFilters","handleExportData","csv","generateCsv","download","useMaterialReactTable","enableColumnResizing","enableGrouping","enableStickyHeader","enableStickyFooter","enableColumnOrdering","enableRowNumbers","initialState","density","pagination","pageIndex","pageSize","muiToolbarAlertBannerChipProps","color","muiTableContainerProps","sx","maxHeight","minHeight","muiTableProps","caption","captionSide","muiTableHeadCellProps","fontWeight","muiTableBodyCellProps","renderTopToolbarCustomActions","_ref4","_jsxs","Box","display","gap","padding","flexWrap","Button","onClick","startIcon","FileDownload","disabled","getPrePaginationRowModel","rows","rowData","row","original","handleExportRows","pre","SettingsOutlined","FilterAlt","memoizedTableConfig","useMemo","handleFilterChange","value","prevFilters","filtered","type","min","max","item","undefined","start","end","dateValue","Date","Array","isArray","_filters$column$acces","includes","toLowerCase","trim","renderFilter","_filters$accessColumn","_filters$accessColumn2","_filters$accessColumn3","_filters$accessColumn4","_filters$accessColumn5","_filters$accessColumn6","_filters$accessColumn7","_filters$accessColumn9","_filters$accessColumn10","_filters$accessColumn11","placeholder","onChange","target","parseFloat","_filters$accessColumn8","_filters$accessColumn12","distinctValues","Set","_item$accessColumnNam","_item$accessColumnNam2","Autocomplete","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","event","newValue","renderOption","props","_ref5","selected","Checkbox","style","marginRight","checked","isOptionEqualToValue","opt","renderInput","params","TextField","label","_Fragment","MaterialReactTable","Tooltip","title","IconButton","FilterAltOff","overflow","ke","_column$Column_Name2","isEqualNumber","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","_column$Column_Name3","DialogActions","i","_o$Column_Name","_aggregationValues$o$","TabPanel","index","other","_objectWithoutProperties","_excluded","role","hidden","p","Typography","ReportTemplates","_localVariable$search","_localVariable$filter2","_localVariable$filter3","_localVariable$filter4","_localVariable$filter5","_localVariable$filter6","_localVariable$filter7","_localVariable$filter8","_localVariable$filter9","_localVariable$filter10","storage","JSON","parse","localStorage","getItem","templates","setTemplates","localVariable","setLocalVariable","search","openFilterDialog","filterTablesAndColumns","deleteConfirmationDialog","preFilterDialog","contextObj","useContext","MyContext","nav","useNavigate","reload","setReload","selectedTab","setSelectedTab","_filters$Column_Name$","_filters$Column_Name","_filters$Column_Name$2","_filters$Column_Name2","_filters$Column_Name$3","_filters$Column_Name3","_filters$Column_Name4","_filters$Column_Name$4","_filters$Column_Name6","_filters$Column_Name7","_filters$Column_Name$5","_filters$Column_Name9","_filters$Column_Name5","_filters$Column_Name8","String","Actions","anchorEl","setAnchorEl","dataToForward","ReportState","popOverOpen","currentTarget","List","Popover","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemIcon","Visibility","ListItemText","Company_id","toast","warn","state","Edit","Delete","RowComp","_o$tablesList2","backgroundColor","tableInd","_table$columnsList2","React","columnInd","_table$columnsList3","_table$columnsList4","rowSpan","closeDialog","closeDeleteConfirmationDialog","closeFilterDialog","Card","Add_Rights","variant","CardContent","FilterableTable","fil","Field_Name","ColumnHeader","Fied_Data","isCustomCell","_row$tablesList","_row$tablesList2","sum","_item$columnsList","CreatedAt","UTCDateWithTime","_ref6","EnableSerialNumber","isExpendable","expandableComp","_ref7","tableMaxHeight","fullScreen","Close","DynamicMuiTable","ArrowBackIosNewOutlined","deleteTemplate","_localVariable$filter","message","error","finally","Tabs","handleTabChange","Tab","_table$columns","ii","Launch","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardContentRoot","styled","name","overridesResolver","styles","root","paddingBottom","inProps","ref","useDefaultProps","component","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","y","quoteStrings","quoteCharacter","showTitle","filename","showColumnHeaders","useTextFile","useBom","columnHeaders","boolDisplay","true","false","replaceUndefinedWith","q","$","assign","Q","Error","constructor","super","this","T","U","V","X","Z","_","Y","K","N","D","key","h","displayLabel","B","x","E","W","w","m","isFinite","k","toLocaleString","toString","G","indexOf","r","g","Q$","j","A","_len","arguments","_key","P","S","R","O","J","slice","C","I","M","H","v","T$","window","Blob","s","document","createElement","href","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild"],"sourceRoot":""}
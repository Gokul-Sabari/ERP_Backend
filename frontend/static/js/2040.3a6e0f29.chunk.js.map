{"version":3,"file":"static/js/2040.3a6e0f29.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Pages/Tasks/Components/addEditTask.jsx","Pages/Tasks/newTasksPage.jsx","Pages/Tasks/taskParameters.jsx","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/ExpandLess.js","../node_modules/@mui/icons-material/esm/ExpandMore.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","import { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport '../../common.css'\r\nimport { CheckBoxOutlineBlank, CheckBox } from '@mui/icons-material';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Checkbox, TextField, Autocomplete } from '@mui/material';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport { isValidObject } from '../../../Components/functions';\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst TaskMasterMgt = ({ row, children, openAction, reload, onCloseFun, loadingOn, loadingOff, onTaskAdded, onToast }) => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const initialValue = {\r\n        Task_Id: \"\",\r\n        Task_Name: \"\",\r\n        Task_Desc: \"\",\r\n        Task_Group_Id: 0,\r\n        Entry_By: parseData?.UserId,\r\n        Company_id: parseData?.Company_id,\r\n        Entry_Date: \"\",\r\n        Update_By: '',\r\n        Update_Date: \"\",\r\n        Task_Parameters: [],\r\n\r\n    }\r\n    const [dialog, setDialog] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [taskData, setTaskData] = useState([]);\r\n    const [taskGroup, setTaskGroup] = useState([]);\r\n    const [taskParameters, setTaskParameters] = useState([]);\r\n    const [inputValue, setInputValue] = useState(initialValue);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `taskManagement/tasks/dropdown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskData(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/taskType/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskGroup(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `taskManagement/parameters`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskParameters(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setDialog(openAction ? true : false)\r\n    }, [openAction])\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(row)) {\r\n            setInputValue(pre => {\r\n                let inputVAL = { ...pre }\r\n                Object.entries(row).forEach(([key, value]) => {\r\n                    inputVAL[key] = value\r\n                })\r\n                return inputVAL\r\n            });\r\n            setIsEdit(true);\r\n        } else {\r\n            setInputValue(initialValue);\r\n            setIsEdit(false);\r\n        }\r\n    }, [row]);\r\n\r\n    const closeDialog = () => {\r\n        setInputValue(initialValue);\r\n        setDialog(false);\r\n        if (onCloseFun) {\r\n            onCloseFun();\r\n        }\r\n    }\r\n\r\n    const postAndPutTask = async () => {\r\n        const paramArr = inputValue?.Task_Parameters?.map(param => ({\r\n            ...param,\r\n            Param_Id: param?.Paramet_Id\r\n        })) || [];\r\n\r\n        const PostObj = {\r\n            ...inputValue,\r\n            Task_Parameters: paramArr,\r\n        };\r\n\r\n        if (loadingOn) {\r\n            loadingOn();\r\n        }\r\n\r\n\r\n        try {\r\n            const response = await fetchLink({\r\n                address: `taskManagement/tasks`,\r\n                method: isEdit ? 'PUT' : 'POST',\r\n                bodyData: PostObj\r\n            });\r\n\r\n            if (response.success) {\r\n                toast.success(response.message);\r\n                closeDialog();\r\n                if (reload) {\r\n                    reload();\r\n                }\r\n                onTaskAdded();\r\n            } else {\r\n                toast.error(response.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast.error(\"An error occurred while processing your request.\");\r\n        } finally {\r\n            if (loadingOff) {\r\n                loadingOff();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <span onClick={() => setDialog(true)} style={{ cursor: 'pointer' }}>{children}</span>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={closeDialog}>\r\n\r\n                <DialogTitle className=\"bg-primary text-white mb-2 px-3 py-2\">\r\n                    {isEdit ? 'Edit Task' : 'Add Task'}\r\n                </DialogTitle>\r\n\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    postAndPutTask();\r\n                }}>\r\n\r\n                    <DialogContent>\r\n                        <div className=\"row \">\r\n\r\n                            <div className=\"col-md-4 p-2\">\r\n                                <label>Task Name <RequiredStar /></label>\r\n                                <input\r\n                                    maxLength={150}\r\n                                    onChange={e => setInputValue({ ...inputValue, Task_Name: e.target.value })}\r\n                                    required\r\n                                    value={inputValue?.Task_Name}\r\n                                    placeholder=\"ex: File Checking\"\r\n                                    className=\"cus-inpt\" />\r\n                            </div>\r\n\r\n                            <div className=\"col-md-4 p-2\">\r\n                                <label>Task Group <RequiredStar /></label>\r\n                                <select\r\n                                    value={inputValue.Task_Group_Id}\r\n                                    className=\"cus-inpt\"\r\n                                    required\r\n                                    onChange={e => setInputValue({ ...inputValue, Task_Group_Id: e.target.value })}>\r\n                                    <option value={0} disabled>- select -</option>\r\n                                    {taskGroup?.map((o, i) => (\r\n                                        Number(o?.Task_Type_Id) !== 0 &&\r\n                                        <option key={i} value={o?.Task_Type_Id}>\r\n                                            {o?.Task_Type}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-4 p-2\">\r\n                                <label>Base Task</label>\r\n                                <select\r\n                                    value={inputValue.Under_Task_Id}\r\n                                    className=\"cus-inpt\"\r\n                                    onChange={e => setInputValue({ ...inputValue, Under_Task_Id: e.target.value })}>\r\n                                    <option value={0}>Primary</option>\r\n                                    {taskData?.map((o, i) => (\r\n                                        <option key={i} value={o?.Task_Id}>\r\n                                            {o?.Task_Name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-12\">\r\n                                <label>Task Describtion <RequiredStar /></label>\r\n                                <textarea\r\n                                    className=\"cus-inpt\"\r\n                                    value={inputValue.Task_Desc}\r\n                                    rows=\"3\"\r\n                                    onChange={e => setInputValue({ ...inputValue, Task_Desc: e.target.value })} />\r\n                            </div>\r\n\r\n                            <div className=\"col-md-12 p-2\">\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    id=\"checkboxes-tags-demo\"\r\n                                    options={[...taskParameters?.map(o => ({ ...o, Default_Value: '' }))]}\r\n                                    disableCloseOnSelect\r\n                                    getOptionLabel={(option) => option?.Paramet_Name + ' - ' + option?.Paramet_Data_Type}\r\n                                    value={inputValue?.Task_Parameters || []}\r\n                                    onChange={(f, e) => setInputValue({ ...inputValue, Task_Parameters: e })}\r\n                                    renderOption={(props, option, { selected }) => (\r\n                                        <li {...props}>\r\n                                            <Checkbox\r\n                                                icon={icon}\r\n                                                checkedIcon={checkedIcon}\r\n                                                style={{ marginRight: 8 }}\r\n                                                checked={selected}\r\n                                            />\r\n                                            {option?.Paramet_Name + ' - ' + option?.Paramet_Data_Type}\r\n                                        </li>\r\n                                    )}\r\n                                    className=\"pt-2\"\r\n                                    isOptionEqualToValue={(opt, val) => Number(opt?.Paramet_Id) === Number(val?.Paramet_Id)}\r\n                                    renderInput={(params) => (\r\n                                        <TextField {...params} label=\"Task Prarameters\" placeholder=\"Choose Task Parameters\" />\r\n                                    )}\r\n                                />\r\n                            </div>\r\n\r\n                            {inputValue?.Task_Parameters?.map((param, index) => (\r\n                                <div key={index} className=\"col-md-4 p-2\">\r\n                                    <label className=\"mb-2\">{param?.Paramet_Name}</label>\r\n                                    <input\r\n                                        type={param?.Paramet_Data_Type || 'text'}\r\n                                        className=\"cus-inpt\"\r\n                                        onChange={(e) => {\r\n                                            const updatedDetString = [...inputValue.Task_Parameters];\r\n                                            updatedDetString[index] = {\r\n                                                ...updatedDetString[index],\r\n                                                Default_Value: e.target.value,\r\n                                            };\r\n                                            setInputValue({ ...inputValue, Task_Parameters: updatedDetString });\r\n                                        }}\r\n                                        value={param?.Default_Value}\r\n                                        placeholder=\"Default Value\"\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <button\r\n                            className=\"btn btn-light rounded-5 px-3\"\r\n                            type=\"button\"\r\n                            onClick={closeDialog}>\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-primary rounded-5 px-3\"\r\n                            type='submit'>\r\n                            Submit\r\n                        </button>\r\n                    </DialogActions>\r\n\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskMasterMgt;","import { MyContext } from \"../../Components/context/contextProvider\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport '../common.css'\r\nimport { Edit, Delete } from '@mui/icons-material';\r\nimport { IconButton, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\r\nimport DataTable from \"react-data-table-component\";\r\nimport TaskParametersComp from \"./taskParameters\";\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport TaskMasterMgt from \"./Components/addEditTask\";\r\nimport { isEqualNumber, isValidObject } from \"../../Components/functions\";\r\n\r\n\r\nconst TaskMaster = ({ loadingOn, loadingOff }) => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const initialValue = {\r\n        Task_Id: \"\",\r\n        Task_Name: \"\",\r\n        Task_Desc: \"\",\r\n        Task_Group_Id: 0,\r\n        Entry_By: parseData?.UserId,\r\n        Entry_Date: \"\",\r\n        Update_By: '',\r\n        Update_Date: \"\",\r\n        Task_Parameters: [],\r\n    }\r\n    const [taskData, setTaskData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [reload, setReload] = useState(false);\r\n    const { contextObj } = useContext(MyContext);\r\n    const [inputValue, setInputValue] = useState(initialValue);\r\n    const [dialog, setDialog] = useState(false);\r\n    const [filterInput, setFilterInput] = useState('');\r\n    const [rowValue, setRowValue] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `taskManagement/tasks?Company_id=${parseData?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskData(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [reload])\r\n\r\n    useEffect(() => {\r\n        const filteredResults = [...taskData].filter(item => {\r\n            return Object.values(item).some(value =>\r\n                String(value).toLowerCase().includes(filterInput.toLowerCase())\r\n            );\r\n        });\r\n\r\n        setFilteredData(filteredResults);\r\n    }, [filterInput, taskData])\r\n\r\n    const handleDelete = (row) => {\r\n        setInputValue(row);\r\n        setDialog(true);\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setInputValue(initialValue);\r\n        setDialog(false);\r\n    }\r\n\r\n    const tasksColumn = [\r\n        {\r\n            name: 'Task',\r\n            selector: (row) => row?.Task_Name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Task Group',\r\n            selector: (row) => row?.Task_Group,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Task Describtion',\r\n            selector: (row) => row?.Task_Desc,\r\n            sortable: true,\r\n            width: '170px'\r\n        },\r\n        {\r\n            name: 'Created At',\r\n            selector: (row) => new Date(row?.Entry_Date),\r\n            cell: (row) => {\r\n                return new Date(row?.Entry_Date).toLocaleDateString('en-IN', { day: '2-digit', month: '2-digit', year: 'numeric' })\r\n            },\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Actions',\r\n            cell: (row) => (\r\n                <div>\r\n                    {Number(contextObj?.Edit_Rights) === 1 && (\r\n                        <IconButton onClick={() => setRowValue(row)}>\r\n                            <Edit />\r\n                        </IconButton>\r\n                    )}\r\n                    {Number(contextObj?.Delete_Rights) === 1 && (\r\n                        <IconButton onClick={() => handleDelete(row)}>\r\n                            <Delete sx={{ color: '#FF6865' }} />\r\n                        </IconButton>\r\n                    )}\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const deleteTask = async () => {\r\n        if (inputValue?.Task_Id && Number(contextObj.Delete_Rights) === 1) {\r\n            fetchLink({\r\n                address: `taskManagement/tasks`,\r\n                method: 'DELETE',\r\n                bodyData: { Task_Id: inputValue?.Task_Id }\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    toast.success(data.message);\r\n                    setReload(!reload);\r\n                    closeDialog();\r\n                } else {\r\n                    toast.error(data.message);\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }\r\n\r\n    function handleSearchChange(event) {\r\n        const term = event.target.value;\r\n        setFilterInput(term);\r\n    }\r\n\r\n    const resetValues = () => setRowValue({})\r\n\r\n    return (\r\n        <>\r\n            <TaskParametersComp />\r\n\r\n            {isValidObject(rowValue) && (\r\n                <TaskMasterMgt\r\n                    row={rowValue}\r\n                    openAction={true}\r\n                    reload={() => setReload(pre => !pre)}\r\n                    onCloseFun={resetValues}\r\n                    loadingOn={loadingOn}\r\n                    loadingOff={loadingOff}\r\n                />\r\n            )}\r\n\r\n            <div className=\"card\">\r\n\r\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                    <span>Task Master</span>\r\n                    {isEqualNumber(contextObj.Add_Rights, 1) && (\r\n                        <TaskMasterMgt\r\n                            openAction={false}\r\n                            reload={() => setReload(pre => !pre)}\r\n                            onCloseFun={resetValues}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                        >\r\n                            <button\r\n                                className=\"btn btn-primary rounded-5 px-3 py-1 fa-13 shadow\"\r\n                            >\r\n                                {'Create Task'}\r\n                            </button>\r\n                        </TaskMasterMgt>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"card-body p-0 overflow-hidden rounded-bottom-3\">\r\n                    <>\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <div className=\"col-md-4 p-2\">\r\n                                <input\r\n                                    type=\"search\"\r\n                                    value={filterInput}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Search\"\r\n                                    onChange={handleSearchChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <DataTable\r\n                            columns={tasksColumn}\r\n                            data={filterInput ? filteredData : taskData}\r\n                            pagination\r\n                            highlightOnHover={true}\r\n                            fixedHeader={true}\r\n                            fixedHeaderScrollHeight={'68vh'}\r\n                        />\r\n                    </>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={closeDialog}\r\n                aria-labelledby=\"create-dialog-title\"\r\n                aria-describedby=\"create-dialog-description\">\r\n                <DialogTitle className=\"bg-primary text-white mb-2 px-3 py-2\">Confirmation</DialogTitle>\r\n                <DialogContent className=\"p-4\">\r\n                    Do you want to delete the\r\n                    <span className=\"text-primary\">{\" \" + inputValue?.Task_Name + \" \"}</span>\r\n                    Task ?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button\r\n                        className=\"btn btn-light rounded-5 px-3 me-1\"\r\n                        onClick={closeDialog}>\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-primary rounded-5 px-3\"\r\n                        onClick={deleteTask}>\r\n                        Delete\r\n                    </button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskMaster","import { IconButton, Dialog, DialogActions, DialogContent, DialogTitle, Button, Collapse } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport { ExpandLess, ExpandMore } from '@mui/icons-material';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\n\r\nconst TaskParametersComp = ({ isOpened, disableCollapse }) => {\r\n    const initialValue = {\r\n        Paramet_Id: '',\r\n        Paramet_Name: '',\r\n        Paramet_Data_Type: '',\r\n    }\r\n    const [parameters, setParameters] = useState([])\r\n    const [addDialog, setAddDialog] = useState(false);\r\n    const [deleteDialog, setDeleteDialog] = useState(false);\r\n    const [inputValue, setInputValue] = useState(initialValue);\r\n    const [reload, setReload] = useState(false);\r\n    const [open, setOpen] = useState(isOpened ? true : false);\r\n\r\n    const [filterInput, setFilterInput] = useState('');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `taskManagement/parameters`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setParameters(data.data)\r\n            }\r\n        })\r\n            .catch(e => console.error(e))\r\n\r\n    }, [reload])\r\n\r\n    const AddParameter = () => {\r\n        fetchLink({\r\n            address: `taskManagement/parameters`,\r\n            method: 'POST',\r\n            bodyData: inputValue\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        })\r\n            .catch(e => console.error(e))\r\n            .finally(CloseAddDialog)\r\n    }\r\n\r\n    const DeleteParameter = () => {\r\n        fetchLink({\r\n            address: `taskManagement/parameters`,\r\n            method: 'DELETE',\r\n            bodyData: { Paramet_Id: inputValue.Paramet_Id }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        })\r\n            .catch(e => console.error(e))\r\n            .finally(closeDeleteConfirmationDialog)\r\n    }\r\n\r\n    const CloseAddDialog = () => {\r\n        setAddDialog(false);\r\n        setInputValue(initialValue)\r\n    }\r\n\r\n    const closeDeleteConfirmationDialog = () => {\r\n        setInputValue(initialValue);\r\n        setDeleteDialog(false)\r\n    }\r\n\r\n    function handleSearchChange(event) {\r\n        const term = event.target.value;\r\n        setFilterInput(term);\r\n        const filteredResults = parameters.filter(item => {\r\n            return Object.values(item).some(value =>\r\n                String(value).toLowerCase().includes(term.toLowerCase())\r\n            );\r\n        });\r\n        setFilteredData(filteredResults);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card mb-3\">\r\n\r\n                <div className=\"card-header bg-white fw-bold d-flex align-items-center justify-content-between\">\r\n                    <div className=\"flex-grow-1 mb-0\">\r\n                        {!disableCollapse && (\r\n                            <IconButton size='small' onClick={() => setOpen(!open)}>\r\n                                {open ? <ExpandLess style={{ fontSize: '18px', color: 'black' }} /> : <ExpandMore style={{ fontSize: '18px', color: 'black' }} />}\r\n                            </IconButton>\r\n                        )}\r\n                        Task Parameters\r\n                    </div>\r\n                    <button onClick={() => setAddDialog(true)} className=\"btn btn-primary rounded-5 px-3 py-1 fa-13 shadow\">\r\n                        Create Parameter\r\n                    </button>\r\n                </div>\r\n\r\n                <Collapse in={open} unmountOnExit>\r\n\r\n                    <div className=\"card-body\" style={{ maxHeight: !disableCollapse ? '40vh' : 'auto', overflowY: 'auto' }}>\r\n\r\n                        <div className=\"row flex-row-reverse\">\r\n                            <div className=\"col-md-4 pb-2\">\r\n                                <input\r\n                                    type=\"search\"\r\n                                    value={filterInput}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Search\"\r\n                                    onChange={handleSearchChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className='border fa-14'>Sno</th>\r\n                                        <th className='border fa-14'>Parameter</th>\r\n                                        <th className='border fa-14'>Data Type</th>\r\n                                        {/* <th className='border fa-14'>Action</th> */}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {(filteredData.length > 0 ? filteredData : filterInput === '' ? parameters : [])?.map((o, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className='border fa-14'>{i + 1}</td>\r\n                                            <td className='border fa-14'>{o?.Paramet_Name}</td>\r\n                                            <td className='border fa-14'>{o?.Paramet_Data_Type}</td>\r\n                                            {/* <td className='border fa-14'>\r\n                                                <IconButton onClick={() => openDeleteConfirmationDialog(o)}>\r\n                                                    <Delete sx={{color: 'red', fontSize: '16px'}} />\r\n                                                </IconButton>\r\n                                            </td> */}\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                </Collapse>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={addDialog}\r\n                onClose={CloseAddDialog}\r\n                maxWidth='sm' fullWidth>\r\n                <DialogTitle>Create Task Parameters</DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    AddParameter()\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Name</td>\r\n                                        <td className=\"border-0 fa-14\">\r\n                                            <input\r\n                                                className='cus-inpt'\r\n                                                value={inputValue?.Paramet_Name} required\r\n                                                onChange={e => setInputValue({ ...inputValue, Paramet_Name: e.target.value })} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Data Type</td>\r\n                                        <td className=\"border-0 fa-14\">\r\n                                            <select\r\n                                                className='cus-inpt'\r\n                                                value={inputValue?.Paramet_Data_Type} required\r\n                                                onChange={e => setInputValue({ ...inputValue, Paramet_Data_Type: e.target.value })}\r\n                                            >\r\n                                                <option value=\"\" disabled>Select Data Type</option>\r\n                                                <option value='number'>number</option>\r\n                                                <option value='text'>text</option>\r\n                                                <option value='date'>date</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={CloseAddDialog} type='button'>cancel</Button>\r\n                        <Button type='submit'>Create Parameter</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={deleteDialog}\r\n                onClose={closeDeleteConfirmationDialog}\r\n            >\r\n                <DialogTitle>Confirm Delete</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the\r\n                    {inputValue?.Paramet_Name && <span className='text-primary px-1'>{inputValue?.Paramet_Name}</span>}\r\n                    Parameter?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDeleteConfirmationDialog} >Cancel</Button>\r\n                    <Button onClick={DeleteParameter}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskParametersComp;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2m-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckBox');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5zm0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2\"\n}), 'CheckBoxOutlineBlank');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","icon","CheckBoxOutlineBlank","checkedIcon","CheckBox","_ref","_inputValue$Task_Para2","row","openAction","reload","onCloseFun","loadingOn","loadingOff","onTaskAdded","onToast","localData","localStorage","getItem","parseData","JSON","parse","initialValue","Task_Id","Task_Name","Task_Desc","Task_Group_Id","Entry_By","UserId","Company_id","Entry_Date","Update_By","Update_Date","Task_Parameters","dialog","setDialog","useState","isEdit","setIsEdit","taskData","setTaskData","taskGroup","setTaskGroup","taskParameters","setTaskParameters","inputValue","setInputValue","useEffect","fetchLink","address","then","data","success","catch","e","console","error","isValidObject","pre","inputVAL","_objectSpread","Object","entries","forEach","_ref2","key","value","closeDialog","_jsxs","_Fragment","onClick","cursor","Dialog","open","onClose","DialogTitle","className","onSubmit","preventDefault","async","_inputValue$Task_Para","paramArr","map","param","Param_Id","Paramet_Id","PostObj","response","method","bodyData","toast","message","postAndPutTask","DialogContent","maxLength","onChange","target","required","placeholder","disabled","o","i","Number","Task_Type_Id","Task_Type","Under_Task_Id","rows","Autocomplete","multiple","id","options","Default_Value","disableCloseOnSelect","getOptionLabel","option","Paramet_Name","Paramet_Data_Type","f","renderOption","props","_ref3","selected","Checkbox","marginRight","checked","isOptionEqualToValue","opt","val","renderInput","params","TextField","label","index","type","updatedDetString","DialogActions","filteredData","setFilteredData","setReload","contextObj","useContext","MyContext","filterInput","setFilterInput","rowValue","setRowValue","concat","filteredResults","filter","item","values","some","String","toLowerCase","includes","tasksColumn","name","selector","sortable","Task_Group","width","Date","cell","toLocaleDateString","day","month","year","Edit_Rights","IconButton","Edit","Delete_Rights","handleDelete","Delete","sx","resetValues","TaskParametersComp","TaskMasterMgt","isEqualNumber","Add_Rights","event","term","DataTable","columns","pagination","highlightOnHover","fixedHeader","fixedHeaderScrollHeight","isOpened","disableCollapse","parameters","setParameters","addDialog","setAddDialog","deleteDialog","setDeleteDialog","setOpen","CloseAddDialog","closeDeleteConfirmationDialog","size","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","maxHeight","overflowY","length","maxWidth","fullWidth","finally","Button","DeleteParameter","createSvgIcon","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","indeterminate","capitalize","theme","_extends","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","clsx","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","marginLeft","SwitchBaseInput","position","opacity","height","top","left","margin","zIndex","autoFocus","checkedProp","defaultChecked","disabledProp","disableFocusRipple","inputRef","onBlur","onFocus","readOnly","tabIndex","setCheckedState","useControlled","controlled","default","Boolean","state","muiFormControl","useFormControl","hasLabelFor","input","component","centerRipple","focusRipple","role","undefined","nativeEvent","defaultPrevented","newChecked"],"sourceRoot":""}
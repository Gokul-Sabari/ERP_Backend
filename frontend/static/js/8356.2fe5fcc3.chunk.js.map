{"version":3,"file":"static/js/8356.2fe5fcc3.chunk.js","mappings":"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","sources":["Pages/Analytics/dataComparison/variable.js","Pages/Analytics/dataComparison/SalesComparison/salesInvoiceComparison.jsx","Pages/Analytics/dataComparison/SalesComparison/invoiceBasedSalesComparison.jsx","Pages/Analytics/dataComparison/SalesComparison/itemWiseComparison.jsx","Pages/Analytics/dataComparison/SalesComparison/salesTabs.jsx","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js"],"sourcesContent":["export const comparisonColorCode = [\r\n    {\r\n        reason: 'Only in ERP DB',\r\n        color: '#eb4034',\r\n        code: 1,\r\n    },\r\n    {\r\n        reason: 'Only in Tally DB',\r\n        color: '#eb4034',\r\n        code: 2\r\n    },\r\n    {\r\n        reason: 'Alter_Id Mismatch',\r\n        color: '#eba834',\r\n        code: 3\r\n    },\r\n    {\r\n        reason: 'Child Table Mismatch',\r\n        color: '#eb4034',\r\n        code: 4\r\n    },\r\n]\r\n\r\nexport const fieldMap = {\r\n    // Format: fieldLabel: [tallyKey, erpKey]\r\n    \"Invoice No\": [\"invoice_no\", \"Do_Inv_No\"],\r\n    \"Invoice Date\": [\"invoice_date\", \"Do_Date\"],\r\n    \"Tally ID\": [\"tally_id\", \"Tally_Id\"],\r\n    \"Alter ID\": [\"alter_id\", \"Alter_Id\"],\r\n    \"Sales Ledger / Retailer\": [\"sales_party_ledger_id\", \"Retailer_Id\"],\r\n    \"Before Tax\": [\"invoice_value_before_tax\", \"Total_Before_Tax\"],\r\n    \"After Tax\": [\"invoice_value_after_tax\", \"Total_Invoice_value\"],\r\n    \"Round Off\": [\"round_off\", \"Round_off\"],\r\n    \"Narration\": [\"narration\", \"Narration\"],\r\n    \"Cancel Status\": [\"cancel_status\", \"Cancel_status\"],\r\n    \"Created By\": [\"created_by\", \"Created_by\"],\r\n    \"Altered By\": [\"altered_by\", \"Altered_by\"],\r\n    \"Created On\": [\"created_on_date\", \"Created_on\"],\r\n    \"Altered On\": [\"alterd_date\", \"Alterd_on\"]\r\n};\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport { fetchLink } from \"../../../../Components/fetchComponent\";\r\nimport { checkIsNumber, getPreviousDate, isEqualNumber, ISOString, stringCompare, toArray } from \"../../../../Components/functions\";\r\nimport FilterableTable, { createCol } from \"../../../../Components/filterableTable2\";\r\nimport { comparisonColorCode, fieldMap } from \"../variable\";\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { Close, Search, Visibility } from \"@mui/icons-material\";\r\n\r\n\r\nconst ErpAndTallySalesComparison = ({ loadingOn, loadingOff, Fromdate, Todate }) => {\r\n    const [ERPData, setERPData] = useState([]);\r\n    const [TallyData, setTallyData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        erpStatus: '',\r\n        tallyStatus: '',\r\n        comparisonDialog: false,\r\n        erpRow: {},\r\n        tallyRow: {},\r\n        reload: false\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `analytics/dataComparison/salesInvoice/alterBased?Fromdate=${Fromdate}&Todate=${Todate}`,\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const erpData = toArray(data?.others?.ERPDifference);\r\n                const tallyData = toArray(data?.others?.TallyDifference);\r\n\r\n                setERPData(erpData.map(row => {\r\n                    const isAvailableInTally = tallyData.find(comRow => isEqualNumber(\r\n                        comRow?.tally_id, row?.Tally_Id\r\n                    ));\r\n\r\n                    return {\r\n                        ...row,\r\n                        RowStatus: isAvailableInTally ? 'Modified' : 'ONLY IN ERP',\r\n                        statusCode: isAvailableInTally ? 3 : 1\r\n                    }\r\n                }));\r\n\r\n                setTallyData(tallyData.map(row => {\r\n                    const isAvailableInERP = erpData.find(comRow => isEqualNumber(\r\n                        comRow?.Tally_Id, row?.tally_id\r\n                    ));\r\n\r\n                    return {\r\n                        ...row,\r\n                        RowStatus: isAvailableInERP ? 'Modified' : 'ONLY IN Tally',\r\n                        statusCode: isAvailableInERP ? 3 : 2\r\n                    }\r\n                }));\r\n            } else {\r\n                setERPData([]);\r\n                setTallyData([]);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n    }, [Fromdate, Todate])\r\n\r\n    function compareWithFieldMap(tallyObj, erpObj, fieldMap) {\r\n        const result = [];\r\n\r\n        for (const [label, [tallyKey, erpKey]] of Object.entries(fieldMap)) {\r\n            const tallyVal = tallyObj[tallyKey] ?? '';\r\n            const erpVal = erpObj[erpKey] ?? '';\r\n            const status = String(tallyVal) === String(erpVal) ? 'Match' : 'Different';\r\n\r\n            result.push({\r\n                label,\r\n                tallyValue: String(tallyVal),\r\n                erpValue: String(erpVal),\r\n                status,\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    const closeDialg = () => {\r\n        setFilters(pre => ({\r\n            ...pre,\r\n            comparisonDialog: false,\r\n            erpRow: {},\r\n            tallyRow: {}\r\n        }))\r\n    }\r\n\r\n    const rows = useMemo(() => {\r\n        return compareWithFieldMap(filters.tallyRow, filters.erpRow, fieldMap)\r\n    }, [filters.erpRow, filters.tallyRow, fieldMap]);\r\n\r\n    console.log(ERPData, TallyData)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row p-2\">\r\n\r\n                <div className=\"col-lg-6 p-2\">\r\n                    <FilterableTable\r\n                        title=\"ERP Miss-Matched\"\r\n                        headerFontSizePx={12}\r\n                        bodyFontSizePx={12}\r\n                        EnableSerialNumber\r\n                        ButtonArea={\r\n                            <>\r\n                                <select\r\n                                    className=\"cus-inpt p-2 w-auto\"\r\n                                    value={filters.erpStatus}\r\n                                    onChange={e => setFilters(pre => ({ ...pre, erpStatus: e.target.value }))}\r\n                                >\r\n                                    <option value=\"\">All Type</option>\r\n                                    <option value=\"1\">ERP only</option>\r\n                                    <option value=\"3\">Modified</option>\r\n                                    <option value=\"4\">Child</option>\r\n                                </select>\r\n                                <label className=\"me-1\">Error Type:</label>\r\n                            </>\r\n                        }\r\n                        dataArray={\r\n                            (checkIsNumber(filters.erpStatus)\r\n                                ? ERPData.filter(row => isEqualNumber(row.statusCode, filters.erpStatus))\r\n                                : ERPData).sort(\r\n                                    (a, b) => String(a?.Do_Inv_No || '').localeCompare(String(b?.Do_Inv_No || ''))\r\n                                )\r\n                        }\r\n                        columns={[\r\n                            createCol('Do_Inv_No', 'string', 'Voucher Number'),\r\n                            createCol('Do_Date', 'date', 'Date'),\r\n                            createCol('Total_Invoice_value', 'number', 'Invoice Value'),\r\n                            createCol('RowStatus', 'string', 'Reason'),\r\n                            // {\r\n                            //     isVisible: 1,\r\n                            //     ColumnHeader: 'Code',\r\n                            //     isCustomCell: true,\r\n                            //     Cell: ({ row }) => {\r\n                            //         const statusColor = comparisonColorCode.find(\r\n                            //             statusList => stringCompare(statusList.code, row.statusCode)\r\n                            //         ).color;\r\n\r\n                            //         return (\r\n                            //             <div\r\n                            //                 style={{\r\n                            //                     height: '25px',\r\n                            //                     width: '25px',\r\n                            //                     borderRadius: '100%',\r\n                            //                     backgroundColor: statusColor\r\n                            //                 }}\r\n                            //                 className=\"rounded-5\"\r\n                            //             ></div>\r\n                            //         )\r\n                            //     }\r\n                            // },\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Preview Invoice',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => {\r\n                                    const tallyRow = TallyData.find(comRow => isEqualNumber(\r\n                                        comRow?.tally_id, row?.Tally_Id\r\n                                    ));\r\n\r\n                                    return (\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => setFilters(pre => ({\r\n                                                ...pre,\r\n                                                comparisonDialog: true,\r\n                                                erpRow: row,\r\n                                                tallyRow: tallyRow || {}\r\n                                            }))}\r\n                                        ><Visibility /></IconButton>\r\n                                    )\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-lg-6 p-2\">\r\n                    <FilterableTable\r\n                        title=\"Tally Miss-Matched\"\r\n                        headerFontSizePx={12}\r\n                        bodyFontSizePx={12}\r\n                        EnableSerialNumber\r\n                        ButtonArea={\r\n                            <>\r\n                                <select\r\n                                    className=\"cus-inpt p-2 w-auto\"\r\n                                    value={filters.tallyStatus}\r\n                                    onChange={e => setFilters(pre => ({ ...pre, tallyStatus: e.target.value }))}\r\n                                >\r\n                                    <option value=\"\">All Type</option>\r\n                                    <option value=\"2\">Tally only</option>\r\n                                    <option value=\"3\">Modified</option>\r\n                                    <option value=\"4\">Child</option>\r\n                                </select>\r\n                                <label className=\"me-1\">Error Type:</label>\r\n                            </>\r\n                        }\r\n                        dataArray={(\r\n                            checkIsNumber(filters.tallyStatus)\r\n                                ? TallyData.filter(row => isEqualNumber(row.statusCode, filters.tallyStatus))\r\n                                : TallyData\r\n                        ).sort(\r\n                            (a, b) => String(a?.invoice_no || '').localeCompare(String(b?.invoice_no || ''))\r\n                        )}\r\n                        columns={[\r\n                            createCol('invoice_no', 'string', 'Voucher Number'),\r\n                            createCol('invoice_date', 'date', 'Date'),\r\n                            createCol('total_invoice_value', 'number', 'Invoice Value'),\r\n                            createCol('RowStatus', 'string', 'Reason'),\r\n                            // {\r\n                            //     isVisible: 1,\r\n                            //     ColumnHeader: 'Code',\r\n                            //     isCustomCell: true,\r\n                            //     Cell: ({ row }) => {\r\n                            //         const statusColor = comparisonColorCode.find(\r\n                            //             statusList => stringCompare(statusList.code, row.statusCode)\r\n                            //         ).color;\r\n\r\n                            //         return (\r\n                            //             <div\r\n                            //                 style={{\r\n                            //                     height: '25px',\r\n                            //                     width: '25px',\r\n                            //                     borderRadius: '100%',\r\n                            //                     backgroundColor: statusColor\r\n                            //                 }}\r\n                            //                 className=\"rounded-5\"\r\n                            //             ></div>\r\n                            //         )\r\n                            //     }\r\n                            // },\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: 'Preview Invoice',\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => {\r\n                                    const erpRow = ERPData.find(comRow => isEqualNumber(\r\n                                        comRow?.Tally_Id, row?.tally_id\r\n                                    ));\r\n\r\n                                    return (\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => setFilters(pre => ({\r\n                                                ...pre,\r\n                                                comparisonDialog: true,\r\n                                                tallyRow: row,\r\n                                                erpRow: erpRow,\r\n                                            }))}\r\n                                        ><Visibility /></IconButton>\r\n                                    )\r\n                                }\r\n                            }\r\n                        ]}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <Dialog\r\n                open={filters.comparisonDialog}\r\n                onClose={closeDialg} fullWidth maxWidth='md'\r\n            >\r\n                <DialogTitle className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>Invoice Difference</span>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        onClick={closeDialg}\r\n                    ><Close color='error' /></IconButton>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive \">\r\n                        <h2 className=\"text-xl font-bold mb-4\">ERP vs Tally Comparison</h2>\r\n                        <table className=\"table table-bordered border-gray-300\">\r\n                            <thead>\r\n                                <tr className=\"bg-gray-100 text-left\">\r\n                                    <th>Field</th>\r\n                                    <th>Tally DB</th>\r\n                                    <th>ERP DB</th>\r\n                                    <th>Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {rows.map(({ label, tallyValue, erpValue, status }, idx) => (\r\n                                    <tr key={idx} className={status === 'Different' ? 'bg-red-100' : 'bg-white'}>\r\n                                        <td className=\" font-medium\">{label}</td>\r\n                                        <td>{tallyValue}</td>\r\n                                        <td>{erpValue}</td>\r\n                                        <td className={`p-2 border font-semibold ${status === 'Different' ? 'text-red-600' : 'text-green-600'}`}>\r\n                                            {status}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions></DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ErpAndTallySalesComparison;","import { useEffect, useMemo, useState } from \"react\";\r\nimport { fetchLink } from \"../../../../Components/fetchComponent\";\r\nimport { checkIsNumber, getPreviousDate, isEqualNumber, ISOString, stringCompare, toArray } from \"../../../../Components/functions\";\r\nimport FilterableTable, { createCol } from \"../../../../Components/filterableTable2\";\r\nimport { comparisonColorCode, fieldMap } from \"../variable\";\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { Close, Search, Visibility } from \"@mui/icons-material\";\r\n\r\n\r\nconst InvoiceBasedSalesComparison = ({ loadingOn, loadingOff, Fromdate, Todate }) => {\r\n    const [ERPData, setERPData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        comparisonDialog: false,\r\n        excluedeSyced: 1\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `\r\n                analytics/dataComparison/salesInvoice/invoiceBased?\r\n                Fromdate=${Fromdate}&\r\n                Todate=${Todate}&\r\n                excluedeSyced=${filters.excluedeSyced}`,\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const erpData = toArray(data?.data);\r\n                setERPData(erpData)\r\n            } else {\r\n                setERPData([]);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n    }, [Fromdate, Todate, filters.excluedeSyced])\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title=\"Sales unsynced list\"\r\n                headerFontSizePx={12}\r\n                bodyFontSizePx={12}\r\n                EnableSerialNumber\r\n                ButtonArea={\r\n                    <>\r\n                        <select\r\n                            className=\"cus-inpt p-2 w-auto\"\r\n                            value={filters.excluedeSyced}\r\n                            onChange={e => setFilters(pre => ({ ...pre, excluedeSyced: e.target.value }))}\r\n                        >\r\n                            <option value=\"0\">Show Synced</option>\r\n                            <option value=\"1\">Exclude Synced</option>\r\n                        </select>\r\n                        {/* <label className=\"me-1\">Error Type:</label> */}\r\n                    </>\r\n                }\r\n                dataArray={ERPData}\r\n                columns={[\r\n                    createCol('Do_Date', 'date', 'Date'),\r\n                    createCol('Do_Inv_No', 'string', 'Voucher Number'),\r\n                    createCol('Retailer_Name', 'string', 'Ledger'),\r\n                    createCol('Total_Invoice_value', 'number', 'Invoice Value'),\r\n                    createCol('erpChildCount', 'number', 'ERP-Products'),\r\n                    createCol('erpChildQuantity', 'number', 'ERP Bill Quantity'),\r\n                    createCol('tallyChildCount', 'number', 'Tally-Products'),\r\n                    createCol('tallyChildQuantity', 'number', 'Tally Bill Quantity'),\r\n                    createCol('RowStatus', 'string', 'Reason'),\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvoiceBasedSalesComparison;","import { useEffect, useState } from \"react\";\r\nimport { fetchLink } from \"../../../../Components/fetchComponent\";\r\nimport { toArray } from \"../../../../Components/functions\";\r\nimport FilterableTable, { createCol } from \"../../../../Components/filterableTable2\";\r\n\r\nconst ItemWiseSalesComparison = ({ loadingOn, loadingOff, Fromdate, Todate }) => {\r\n    const [ERPData, setERPData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        comparisonDialog: false,\r\n        excluedeSyced: 1\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `\r\n                analytics/dataComparison/salesInvoice/itemWise?\r\n                Fromdate=${Fromdate}&\r\n                Todate=${Todate}&\r\n                excluedeSyced=${filters.excluedeSyced}`,\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const erpData = toArray(data?.data);\r\n                setERPData(erpData)\r\n            } else {\r\n                setERPData([]);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n    }, [Fromdate, Todate, filters.excluedeSyced])\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title=\"Sales unsynced list\"\r\n                headerFontSizePx={12}\r\n                bodyFontSizePx={12}\r\n                EnableSerialNumber\r\n                ExcelPrintOption\r\n                ButtonArea={\r\n                    <>\r\n                        <select\r\n                            className=\"cus-inpt p-2 w-auto\"\r\n                            value={filters.excluedeSyced}\r\n                            onChange={e => setFilters(pre => ({ ...pre, excluedeSyced: e.target.value }))}\r\n                        >\r\n                            <option value=\"0\">Show Synced</option>\r\n                            <option value=\"1\">Exclude Synced</option>\r\n                        </select>\r\n                        {/* <label className=\"me-1\">Error Type:</label> */}\r\n                    </>\r\n                }\r\n                dataArray={ERPData}\r\n                columns={[\r\n                    createCol('transactionDate', 'date', 'Date'),\r\n                    createCol('invoiceNo', 'string', 'Voucher Number'),\r\n                    createCol('VoucherTypeGet', 'string', 'Voucher'),\r\n                    createCol('LedgerName', 'string', 'Ledger'),\r\n                    createCol('ItemName', 'string', 'Item'),\r\n                    createCol('erpQty', 'number', 'E-Qty'),\r\n                    createCol('tallyQty', 'number', 'T-Qty'),\r\n                    createCol('erpRate', 'number', 'E-Rate'),\r\n                    createCol('tallyRate', 'number', 'T-Rate'),\r\n                    createCol('erpAmount', 'number', 'E-Amount'),\r\n                    createCol('tallyAmount', 'number', 'T-Amount'),\r\n                    createCol('Status', 'string', 'Reason'),\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemWiseSalesComparison;","import TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport { Box, IconButton, Tab } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { getPreviousDate, ISOString } from '../../../../Components/functions';\r\nimport { Search } from '@mui/icons-material';\r\nimport ErpAndTallySalesComparison from './salesInvoiceComparison';\r\nimport InvoiceBasedSalesComparison from './invoiceBasedSalesComparison';\r\nimport ItemWiseSalesComparison from './itemWiseComparison';\r\n\r\nconst SalesComparisonTabs = ({ loadingOn, loadingOff }) => {\r\n    const [tabValue, setTabValue] = useState(1);\r\n    const [dateFilter, setDateFilter] = useState({\r\n        Fromdate: getPreviousDate(10),\r\n        Todate: ISOString(),\r\n        FilterFromDate: getPreviousDate(10),\r\n        FilterTodate: ISOString(),\r\n    })\r\n\r\n    const tabData = [\r\n        {\r\n            name: 'Item based',\r\n            component: (\r\n                <ItemWiseSalesComparison\r\n                    loadingOn={loadingOn}\r\n                    loadingOff={loadingOff}\r\n                    Fromdate={dateFilter.Fromdate}\r\n                    Todate={dateFilter.Todate}\r\n                />\r\n            )\r\n        },\r\n        {\r\n            name: 'InvoiceId based',\r\n            component: (\r\n                <InvoiceBasedSalesComparison\r\n                    loadingOn={loadingOn}\r\n                    loadingOff={loadingOff}\r\n                    Fromdate={dateFilter.Fromdate}\r\n                    Todate={dateFilter.Todate}\r\n                />\r\n            )\r\n        },\r\n        {\r\n            name: 'AlterId based',\r\n            component: (\r\n                <ErpAndTallySalesComparison\r\n                    loadingOn={loadingOn}\r\n                    loadingOff={loadingOff}\r\n                    Fromdate={dateFilter.Fromdate}\r\n                    Todate={dateFilter.Todate}\r\n                />\r\n            )\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"d-flex align-items-center flex-wrap mb-3\">\r\n                <label htmlFor=\"from\" className='me-1 fw-bold '>Fromdate: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    id='from'\r\n                    className='cus-inpt p-2 w-auto me-2'\r\n                    value={dateFilter.FilterFromDate}\r\n                    onChange={e => setDateFilter(pre => ({ ...pre, FilterFromDate: e.target.value }))}\r\n                />\r\n                <label htmlFor=\"to\" className='me-1 fw-bold '>Todate: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    id='to'\r\n                    className='cus-inpt p-2 w-auto'\r\n                    value={dateFilter.FilterTodate}\r\n                    onChange={e => setDateFilter(pre => ({ ...pre, FilterTodate: e.target.value }))}\r\n                />\r\n                <IconButton\r\n                    size='small'\r\n                    onClick={() => setDateFilter(pre => ({\r\n                        ...pre,\r\n                        Fromdate: pre.FilterFromDate ? pre.FilterFromDate : pre.Fromdate,\r\n                        Todate: pre.FilterTodate ? pre.FilterTodate : pre.Todate\r\n                    }))}\r\n                ><Search /></IconButton>\r\n            </div>\r\n\r\n            <TabContext value={tabValue}>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <TabList\r\n                        indicatorColor='transparant'\r\n                        onChange={(e, n) => setTabValue(n)}\r\n                        variant='scrollable'\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        {tabData.map(\r\n                            (tab, tabInd) => (\r\n                                <Tab\r\n                                    key={tabInd}\r\n                                    sx={tabValue === (tabInd + 1) ? { backgroundColor: '#c6d7eb' } : {}}\r\n                                    label={tab.name}\r\n                                    value={tabInd + 1}\r\n                                />\r\n                            )\r\n                        )}\r\n                    </TabList>\r\n                </Box>\r\n\r\n                {tabData.map((tab, tabInd) => (\r\n                    <TabPanel value={tabInd + 1} sx={{ p: 0, pt: 2 }} key={tabInd}>\r\n                        {tab.component}\r\n                    </TabPanel>\r\n                ))}\r\n\r\n            </TabContext>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SalesComparisonTabs;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n} : void 0;\n\n/**\n * @returns {unknown}\n */\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-T-${value}`;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n      children: childrenProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n  const {\n      children,\n      className,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props);\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["fieldMap","_ref","loadingOn","loadingOff","Fromdate","Todate","ERPData","setERPData","useState","TallyData","setTallyData","filters","setFilters","erpStatus","tallyStatus","comparisonDialog","erpRow","tallyRow","reload","useEffect","fetchLink","address","concat","then","data","success","_data$others","_data$others2","erpData","toArray","others","ERPDifference","tallyData","TallyDifference","map","row","isAvailableInTally","find","comRow","isEqualNumber","tally_id","Tally_Id","_objectSpread","RowStatus","statusCode","isAvailableInERP","catch","e","console","error","closeDialg","pre","rows","useMemo","tallyObj","erpObj","result","label","tallyKey","erpKey","Object","entries","_tallyObj$tallyKey","_erpObj$erpKey","tallyVal","erpVal","status","String","push","tallyValue","erpValue","compareWithFieldMap","log","_jsxs","_Fragment","children","className","_jsx","FilterableTable","title","headerFontSizePx","bodyFontSizePx","EnableSerialNumber","ButtonArea","value","onChange","target","dataArray","checkIsNumber","filter","sort","a","b","Do_Inv_No","localeCompare","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref2","IconButton","size","onClick","Visibility","invoice_no","_ref3","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","Close","color","DialogContent","_ref4","idx","DialogActions","excluedeSyced","ExcelPrintOption","tabValue","setTabValue","dateFilter","setDateFilter","getPreviousDate","ISOString","FilterFromDate","FilterTodate","tabData","name","component","ItemWiseSalesComparison","InvoiceBasedSalesComparison","ErpAndTallySalesComparison","htmlFor","type","id","Search","TabContext","Box","sx","borderBottom","borderColor","TabList","indicatorColor","n","variant","scrollButtons","tab","tabInd","Tab","backgroundColor","TabPanel","p","pt","createSvgIcon","d","Context","React","props","idPrefix","setId","Math","round","random","useUniquePrefix","context","Provider","useTabContext","getPanelId","getTabId","_excluded","ref","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","child","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabPanelRoot","styled","overridesResolver","styles","root","theme","padding","spacing","inProps","useThemeProps","ownerState","classes","composeClasses","useUtilityClasses","tabId","clsx","hidden","role","defaultTheme","createTheme","createBox","themeId","THEME_ID","defaultClassName","boxClasses","generateClassName","ClassNameGenerator","generate"],"sourceRoot":""}
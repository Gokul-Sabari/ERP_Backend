{"version":3,"file":"static/js/9172.8ed8d450.chunk.js","mappings":"yMAGaA,EAAoB,CAC7BC,MAAO,CACHC,MAAO,CACHC,MAAO,OACPC,gBAAiB,gBAIzBC,KAAM,CACFH,MAAO,CACHE,gBAAiB,gBAGzBE,UAAW,CACPJ,MAAO,CACHE,gBAAiB,YACjBG,MAAO,QACPC,SAAU,UAMTC,EAAqB,CAM9BC,KAAMA,CAACC,EAAUC,KAAK,IACfD,EACHE,OAAQ,OAEZC,WAAYC,IAAI,IAAUA,EAAMF,OAAQ,OACxCG,aAAeD,IAAI,IACZA,EACHX,gBAAiB,UACjBG,MAAO,OACPU,WAAY,OACZT,SAAU,OACVU,QAAS,WACTC,aAAc,iBACdC,cAAe,cAEnBC,OAAQA,CAACN,EAAMH,KAAK,IACbG,EACHX,gBAAiBQ,EAAMU,WACjB,UACAV,EAAMW,UACF,UACA,QACVhB,MAAOK,EAAMU,WAAa,QAAU,OACpCJ,QAAS,eAmBJM,EAAW,CACpB,CACIC,GAAI,EACJC,SAAU,UACVC,QAAS,OACTC,MAAO,OACPzB,MAAO,KAEX,CACIsB,GAAI,EACJC,SAAU,YAEd,CACID,GAAI,EACJC,SAAU,eAEd,CACID,GAAI,EACJC,SAAU,cAEd,CACID,GAAI,EACJC,SAAU,eAEd,CACID,GAAI,EACJC,SAAU,iBAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,WAILG,EAAiB,CAC1B,CACIC,SAAU,EACVC,KAAM,kBACNC,SAAU,8BACVC,QAAS,iGACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,6BACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,eAEV,CACIV,SAAU,EACVC,KAAM,oBACNC,SAAU,GACVC,QAAS,4JACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,eACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,eAEV,CACIV,SAAU,EACVC,KAAM,kBACNC,SAAU,GACVC,QAAS,4HACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,6BACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,gBAIDC,EAAa,CACtB,CAAEV,KAAM,kBACR,CAAEA,KAAM,oBACR,CAAEA,KAAM,cACR,CAAEA,KAAM,gBACR,CAAEA,KAAM,WACR,CAAEA,KAAM,iBACR,CAAEA,KAAM,WACR,CAAEA,KAAM,WACR,CAAEA,KAAM,U,wKCxJZ,MAAMW,EAAU,WAA6C,IAAhCC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAUH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAClD,OADmBA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAElB,KAAK,EACD,OAAOI,EAAAA,EAAAA,IAAYL,GAAUI,EAAa,MAC9C,KAAK,EACD,OAAOC,EAAAA,EAAAA,IAAYL,EAAUA,GAAU,KAAO,IAAMI,KAGxD,QACI,OAAO,EAEnB,EAkeA,EAhe4BE,IAA+F,IAA9F,aAAEC,EAAY,cAAEC,EAAa,SAAEC,EAAQ,WAAEC,EAAU,aAAEC,EAAY,SAAEC,EAAQ,UAAEC,GAAWP,EACjH,MAAMQ,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,UACzCC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1BC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,CAAC,IAC3CG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,CAAC,GAC1CK,GAAWC,EAAAA,EAAAA,QAAO,MAElBC,GAAkBC,EAAAA,EAAAA,IAActB,EAAauB,cAAe,GAC5DC,GAAcF,EAAAA,EAAAA,IAActB,EAAauB,cAAe,GACxDE,GAAmBH,EAAAA,EAAAA,IAActB,EAAauB,cAAe,GAC7DG,GAAUJ,EAAAA,EAAAA,IAActB,EAAa0B,QAAS,IAEpDC,EAAAA,EAAAA,YAAU,MAENC,EAAAA,EAAAA,GAAU,CACN7C,QAAU,8BAAoC,OAAPwB,QAAO,IAAPA,OAAO,EAAPA,EAASsB,eACjDC,MAAKC,IACAA,EAAKC,SACLd,EAAmB,OAAJa,QAAI,IAAJA,GAAAA,EAAMA,KAAK,GAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAK,GAAK,CAAC,EACpD,IACDE,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAEhC,CAAQ,OAAP3B,QAAO,IAAPA,OAAO,EAAPA,EAASsB,cAEbF,EAAAA,EAAAA,YAAU,KACFxB,GACAU,GAAQ,EACZ,GACD,CAACV,KAEJwB,EAAAA,EAAAA,YAAU,KACU,OAAZ3B,QAAY,IAAZA,GAAAA,EAAcqC,cACdT,EAAAA,EAAAA,GAAU,CACN7C,QAAU,sCAAiD,OAAZiB,QAAY,IAAZA,OAAY,EAAZA,EAAcqC,gBAC9DP,MAAKC,IACAA,EAAKC,SACLhB,EAAoB,OAAJe,QAAI,IAAJA,GAAAA,EAAMA,KAAK,GAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAK,GAAK,CAAC,EACrD,IACDE,OAAMC,GAAKC,QAAQC,MAAMF,IAChC,GACD,CAAa,OAAZlC,QAAY,IAAZA,OAAY,EAAZA,EAAcqC,cAElB,MAIMC,EAAcA,KAChBzB,GAAQ,GACJT,GACAA,GACJ,EAGEmC,EAAmBtC,EAAcuC,QAAOC,IAAgBC,EAAAA,EAAAA,IAA2B,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAcE,SAAU,KAE/FC,EAAsB3C,EAAc4C,QAAO,CAACC,EAAKC,KACnD,MAAMC,GAAWlD,EAAAA,EAAAA,IAAgB,OAAJiD,QAAI,IAAJA,OAAI,EAAJA,EAAME,WAC7BC,EAAUC,SAAa,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMJ,WAAa,EAE5C,GAAIlB,EAEA,OADAqB,EAAIM,aAAcC,EAAAA,EAAAA,IAAeH,EAASF,GACnCF,EAGX,MAAMQ,EAAgB5B,EAAc,OAAJqB,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,MAAOC,EAAAA,EAAAA,IAAa,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMU,KAAU,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMW,MAExE,GAAIlC,EAAa,CACb,MAAMmC,EAAUnE,EAAQ,EAAGwD,EAAUM,GAC/BM,GAAYC,EAAAA,EAAAA,IAAWb,EAAUW,GACvCb,EAAIgB,WAAYT,EAAAA,EAAAA,IAAeH,EAASS,GACxCb,EAAIM,aAAcC,EAAAA,EAAAA,IAAeH,EAASU,EAC9C,CACA,GAAIvC,EAAiB,CACjB,MAAMsC,EAAUnE,EAAQ,EAAGwD,EAAUM,GACrCR,EAAIgB,WAAYT,EAAAA,EAAAA,IAAeH,EAASS,GACxCb,EAAIM,aAAcC,EAAAA,EAAAA,IAAeH,EAASF,EAC9C,CAEA,OAAOF,CAAG,GACX,CACCM,WAAY,EACZU,SAAU,IAGRC,GAAcC,EAAAA,EAAAA,iBAAgB,CAChCC,QAASA,IAAM9C,EAAS+C,UAGtBC,EAAe,CACjB,CACIC,SAAU,aACVC,QAAqB,OAAZrE,QAAY,IAAZA,OAAY,EAAZA,EAAcsE,MACvBC,SAAU,QACVC,SAASC,EAAAA,EAAAA,IAAsB,OAAZzE,QAAY,IAAZA,OAAY,EAAZA,EAAc0E,UAErC,CACIN,SAAU,gBACVC,QAAS,GACTE,SAAU,wBACVC,QAAS,IAEb,CACIJ,SAAU,uBACVC,QAAS,GACTE,SAAU,mBACVC,QAAS,IAEb,CACIJ,SAAU,mBACVC,QAAS,GACTE,SAAU,QACVC,QAAS,IAEb,CACIJ,SAAU,kBACVC,QAAS,GACTE,SAAU,qBACVC,QAAS,IAEb,CACIJ,SAAU,qBACVC,QAAS,GACTE,SAAU,cACVC,QAAS,IAEb,CACIJ,SAAU,0BACVC,QAAS,GACTE,SAAU,mBACVC,QAAS,KAIXG,EAAuB,OAAb1E,QAAa,IAAbA,OAAa,EAAbA,EAAe4C,QAAO,CAACd,EAAMgB,KACzC,MAAM6B,EAAW7C,EAAK8C,WAAUC,GAAOA,EAAIC,SAAWhC,EAAKiC,YAErD,eACFC,EAAc,SAAEC,EAAQ,SAAEC,EAAQ,SAAEC,EAAQ,SAAEJ,EAAQ,KACtDtB,EAAI,KAAED,EAAI,KAAEF,GACZR,EAEJ,IAAkB,IAAd6B,EAAiB,CACjB,MAAMS,EAAOtD,EAAK6C,GACZU,EAAW,IACVD,EACHE,aAAcF,EAAKE,aAAeN,EAClCO,MAAMhC,EAAAA,EAAAA,IAAS6B,EAAKG,KAAMN,GAC1BO,MAAMjC,EAAAA,EAAAA,IAAS6B,EAAKI,KAAMN,GAC1BO,MAAMlC,EAAAA,EAAAA,IAAS6B,EAAKK,KAAMN,GAC1BO,SAAUN,EAAKM,SAAWC,OAAO5F,EAAa0B,QAAU0D,GAAW5B,EAAAA,EAAAA,IAAS0B,EAAUC,KAI1F,OADApD,EAAK6C,GAAYU,EACVvD,CACX,CAEA,MAAM8D,EAAW,CACbd,QAASC,EACTO,aAAcN,EACdO,KAAMN,EACNY,eAAgBpC,EAChB+B,KAAMN,EACNY,eAAgBtC,EAChBiC,KAAMN,EACNY,eAAgBzC,EAChBoC,SAAU3F,EAAa0B,QAAUkE,OAAOR,IAAY5B,EAAAA,EAAAA,IAAS0B,EAAUC,IAG3E,MAAO,IAAIpD,EAAM8D,EAAS,GAC3B,IAEH,OACII,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA7F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,QAAMC,QAnIKC,KACfxF,GAAQ,EAAK,EAkIiBR,SAAEA,KAE5B4F,EAAAA,EAAAA,MAACK,EAAAA,EAAM,CAAC1F,KAAMA,EAAM2F,QAASjE,EAAakE,WAAS,EAACC,SAAS,KAAIpG,SAAA,EAE7D8F,EAAAA,EAAAA,KAACO,EAAAA,EAAW,CAAArG,SAAC,mBAEb4F,EAAAA,EAAAA,MAACU,EAAAA,EAAa,CAACC,IAAKzF,EAASd,SAAA,EACzB8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,mBAAkBxG,SAAW,OAATC,QAAS,IAATA,EAAAA,EAAa,qBAG/C2F,EAAAA,EAAAA,MAAA,OAAKY,UAAU,MAAKxG,SAAA,EAChB4F,EAAAA,EAAAA,MAAA,OAAKY,UAAU,gDAA+CxG,SAAA,CAAC,KAC3D4F,EAAAA,EAAAA,MAAA,OAAKY,UAAU,oBAAmBxG,SAAA,EAC9B8F,EAAAA,EAAAA,KAAA,KAAGU,UAAU,YAAWxG,SAAa,OAAXY,QAAW,IAAXA,OAAW,EAAXA,EAAa6F,gBACvCb,EAAAA,EAAAA,MAAA,KAAGY,UAAU,YAAWxG,SAAA,CAAC,YAAqB,OAAXY,QAAW,IAAXA,OAAW,EAAXA,EAAa8F,oBAEhDd,EAAAA,EAAAA,MAAA,KAAGY,UAAU,YAAWxG,SAAA,CAAC,SAAkB,OAAXY,QAAW,IAAXA,OAAW,EAAXA,EAAa+F,OAAO,MAAe,OAAX/F,QAAW,IAAXA,OAAW,EAAXA,EAAagG,YACrEhB,EAAAA,EAAAA,MAAA,KAAGY,UAAU,YAAWxG,SAAA,CAAC,gBAAyB,OAAXY,QAAW,IAAXA,OAAW,EAAXA,EAAaiG,eACpDjB,EAAAA,EAAAA,MAAA,KAAGY,UAAU,YAAWxG,SAAA,CAAC,UAAmB,OAAXY,QAAW,IAAXA,OAAW,EAAXA,EAAakG,UAC9ChB,EAAAA,EAAAA,KAAA,KAAGU,UAAU,YAAWxG,SAAC,eAE7B4F,EAAAA,EAAAA,MAAA,OAAKY,UAAU,MAAKxG,SAAA,CAAC,KACjB8F,EAAAA,EAAAA,KAAA,KAAGU,UAAU,YAAWxG,SAAC,qBACzB8F,EAAAA,EAAAA,KAAA,KAAGU,UAAU,YAAWxG,SAAc,OAAZU,QAAY,IAAZA,OAAY,EAAZA,EAAcqG,iBACxCjB,EAAAA,EAAAA,KAAA,KAAGU,UAAU,YAAWxG,UAAc,OAAZU,QAAY,IAAZA,OAAY,EAAZA,EAAcsG,WAAY,OAAoB,OAAZtG,QAAY,IAAZA,OAAY,EAAZA,EAAcuG,sBAC1ErB,EAAAA,EAAAA,MAAA,KAAGY,UAAU,YAAWxG,SAAA,CAAc,OAAZU,QAAY,IAAZA,OAAY,EAAZA,EAAcwG,eAAe,MAAgB,OAAZxG,QAAY,IAAZA,OAAY,EAAZA,EAAcyG,YACzEvB,EAAAA,EAAAA,MAAA,KAAGY,UAAU,YAAWxG,SAAA,CAAC,gBAAyB,OAAXY,QAAW,IAAXA,OAAW,EAAXA,EAAawG,UACpDxB,EAAAA,EAAAA,MAAA,KAAGY,UAAU,YAAWxG,SAAA,CAAC,eAAwB,OAAXY,QAAW,IAAXA,OAAW,EAAXA,EAAayG,aACnDvB,EAAAA,EAAAA,KAAA,KAAGU,UAAU,YAAWxG,SAAC,kBAGjC8F,EAAAA,EAAAA,KAAA,OAAKU,UAAU,mCAAkCxG,UAC7C8F,EAAAA,EAAAA,KAAA,SAAOU,UAAU,YAAWxG,UACxB4F,EAAAA,EAAAA,MAAA,SAAA5F,SAAA,CACK8D,EAAawD,KAAI,CAACC,EAAQC,KACvB5B,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACI4F,EAAAA,EAAAA,MAAA,MAAIY,UAAU,4BAA2BxG,SAAA,EACrC8F,EAAAA,EAAAA,KAAA,KAAGU,UAAU,MAAKxG,SAAEuH,EAAOxD,YAC3B6B,EAAAA,EAAAA,MAAA,KAAGY,UAAU,MAAKxG,SAAA,CAAC,SAAOuH,EAAOvD,eAErC4B,EAAAA,EAAAA,MAAA,MAAIY,UAAU,iBAAgBxG,SAAA,EAC1B8F,EAAAA,EAAAA,KAAA,KAAGU,UAAU,MAAKxG,SAAEuH,EAAOrD,YAC3B0B,EAAAA,EAAAA,MAAA,KAAGY,UAAU,MAAKxG,SAAA,CAAC,SAAOuH,EAAOpD,gBAPhCqD,MAWb1B,EAAAA,EAAAA,KAAA,MAAA9F,UACI4F,EAAAA,EAAAA,MAAA,MAAI6B,QAAS,EAAGjB,UAAU,qBAAoBxG,SAAA,EAC1C8F,EAAAA,EAAAA,KAAA,KAAGU,UAAU,MAAKxG,SAAC,uBACnB8F,EAAAA,EAAAA,KAAA,KAAGU,UAAU,SACbV,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,yBASxBA,EAAAA,EAAAA,KAAA,OAAKU,UAAU,MAAKxG,UAChB8F,EAAAA,EAAAA,KAAA,OAAKU,UAAU,aAAYxG,UACvB4F,EAAAA,EAAAA,MAAA,SAAOY,UAAU,YAAWxG,SAAA,EACxB8F,EAAAA,EAAAA,KAAA,SAAA9F,UACI4F,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,SAAC,SACtC8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,SAAC,aACtC8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,SAAC,aACtC8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,iCAAgCxG,SAAC,cAC/C8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,iCAAgCxG,SAAC,UAC/C4F,EAAAA,EAAAA,MAAA,MAAIY,UAAU,iCAAgCxG,SAAA,EAC1C8F,EAAAA,EAAAA,KAAA,KAAGU,UAAU,OAAMxG,SAAC,UACpB4F,EAAAA,EAAAA,MAAA,KAAGY,UAAU,OAAMxG,SAAA,EACdiB,EAAAA,EAAAA,IAActB,EAAauB,cAAe,IAAM,kBAChDD,EAAAA,EAAAA,IAActB,EAAauB,cAAe,IAAM,wBAChDD,EAAAA,EAAAA,IAActB,EAAauB,cAAe,IAAM,wBAGzD4E,EAAAA,EAAAA,KAAA,MAAIU,UAAU,iCAAgCxG,SAAC,iBAIvD4F,EAAAA,EAAAA,MAAA,SAAA5F,SAAA,CAEKkC,EAAiBoF,KAAI,CAACI,EAAGC,KAAO,IAADC,EAC5B,MAAMpI,EAAqD,QAA3CoI,EAAIvG,EAAW,OAADqG,QAAC,IAADA,OAAC,EAADA,EAAGG,QAAU,OAADH,QAAC,IAADA,OAAC,EAADA,EAAGrE,OAAQ,OAADqE,QAAC,IAADA,OAAC,EAADA,EAAGtE,aAAI,IAAAwE,EAAAA,EAAK,EAC1DE,EAAWvC,QAAQ,OAADmC,QAAC,IAADA,OAAC,EAADA,EAAGpF,WAAY,GACjCM,EAAY2C,QAAQ,OAADmC,QAAC,IAADA,OAAC,EAADA,EAAG9E,YAAa,GACnCU,EAAUnE,EAAQQ,EAAauB,cAAe0B,EAAWpD,GAC/D,OACIoG,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,eAAcxG,SAAE2H,EAAI,KAClC7B,EAAAA,EAAAA,KAAA,MAAIU,UAAU,eAAcxG,SAAG,OAAD0H,QAAC,IAADA,OAAC,EAADA,EAAGK,gBACjCjC,EAAAA,EAAAA,KAAA,MAAIU,UAAU,eAAcxG,SAAG,OAAD0H,QAAC,IAADA,OAAC,EAADA,EAAG/C,YAEjCiB,EAAAA,EAAAA,MAAA,MAAIY,UAAU,wBAAuBxG,SAAA,EAChCgI,EAAAA,EAAAA,IAAaF,IACZ,OAADJ,QAAC,IAADA,OAAC,EAADA,EAAGO,MAAO,MAAQ,OAADP,QAAC,IAADA,OAAC,EAADA,EAAGO,KAAM,SAG/BrC,EAAAA,EAAAA,MAAA,MAAIY,UAAU,wBAAuBxG,SAAA,CAAC,KACjCgI,EAAAA,EAAAA,KAAa/G,EAAAA,EAAAA,IACVtB,EAAauB,cAAe,GAC3B0B,EAAYU,EAAWV,OAGhCgD,EAAAA,EAAAA,MAAA,MAAIY,UAAU,wBAAuBxG,SAAA,CAAC,KACjCgI,EAAAA,EAAAA,KAAa/G,EAAAA,EAAAA,IACVtB,EAAauB,cAAe,GAC5B0B,EAAaA,EAAYU,OAGjCsC,EAAAA,EAAAA,MAAA,MAAIY,UAAU,wBAAuBxG,SAAA,CAAC,KACjCgI,EAAAA,EAAAA,IAAc,OAADN,QAAC,IAADA,OAAC,EAADA,EAAG9C,qBAvBhB+C,EA0BJ,KAIb/B,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACI4F,EAAAA,EAAAA,MAAA,MACIY,UAAU,aACV0B,QAAS7G,EAAU,EAAI,EACvBoG,QAAS,EAAEzH,SAAA,EAEX8F,EAAAA,EAAAA,KAAA,KAAGU,UAAU,MAAKxG,SAAC,mCACnB4F,EAAAA,EAAAA,MAAA,KAAGY,UAAU,MAAKxG,SAAA,CAAC,eAAYmI,EAAAA,EAAAA,IAAcrF,SAAqB,OAAZnD,QAAY,IAAZA,OAAY,EAAZA,EAAcyI,sBAAsB,gBAE9FtC,EAAAA,EAAAA,KAAA,MAAIU,UAAU,mBAAmBiB,QAAS,EAAEzH,SAAC,0BAC7C8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,4BAA2BxG,UACpCgI,EAAAA,EAAAA,IAAazF,EAAoBQ,iBAIxC1B,GAgBEuE,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,mBAAmBiB,QAAS,EAAEzH,SAAC,UAC7C8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,4BAA2BxG,UACpCgI,EAAAA,EAAAA,IAAarI,EAAa0I,kBAlBnCzC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA7F,SAAA,EACI4F,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,mBAAmBiB,QAAS,EAAEzH,SAAC,UAC7C8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,4BAA2BxG,UACpCgI,EAAAA,EAAAA,IAAyB,OAAZrI,QAAY,IAAZA,OAAY,EAAZA,EAAc2I,kBAGpC1C,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,mBAAmBiB,QAAS,EAAEzH,SAAC,UAC7C8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,4BAA2BxG,UACpCgI,EAAAA,EAAAA,IAAyB,OAAZrI,QAAY,IAAZA,OAAY,EAAZA,EAAc4I,qBAa5C3C,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,mBAAmBiB,QAAS,EAAEzH,SAAC,eAC7C8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,4BAA2BxG,UACpCgI,EAAAA,EAAAA,IAAyB,OAAZrI,QAAY,IAAZA,OAAY,EAAZA,EAAc6I,iBAIpC5C,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,mBAAmBiB,QAAS,EAAEzH,SAAC,WAC7C8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAmCxG,UAC5CgI,EAAAA,EAAAA,IAAyB,OAAZrI,QAAY,IAAZA,OAAY,EAAZA,EAAcyI,qCAUpDxC,EAAAA,EAAAA,MAAA,SAAOY,UAAU,QAAOxG,SAAA,EACpB4F,EAAAA,EAAAA,MAAA,SAAA5F,SAAA,EACI4F,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAoC0B,QAAS,EAAGvL,MAAO,CAAE8L,cAAe,UAAWzI,SAAC,eAClG8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAoC0B,QAAS,EAAGvL,MAAO,CAAE8L,cAAe,UAAWzI,SAAC,mBACjGiB,EAAAA,EAAAA,IAActB,EAAa0B,QAAS,IACjCyE,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAoCiB,QAAS,EAAEzH,SAAC,cAE9D4F,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA7F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAoCiB,QAAS,EAAEzH,SAAC,iBAC9D8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAoCiB,QAAS,EAAEzH,SAAC,kBAGtE8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAmCxG,SAAC,cAEtD4F,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACKiB,EAAAA,EAAAA,IAActB,EAAa0B,QAAS,IACjCuE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA7F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAmCxG,SAAC,UAClD8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAmCxG,SAAC,eAGtD4F,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA7F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAmCxG,SAAC,UAClD8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAmCxG,SAAC,YAClD8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAmCxG,SAAC,UAClD8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAmCxG,SAAC,eAG1D8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,oCAAmCxG,SAAC,sBAG1D4F,EAAAA,EAAAA,MAAA,SAAA5F,SAAA,CACKsE,EAAQgD,KAAI,CAACI,EAAGC,KAET/B,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,SAAG,OAAD0H,QAAC,IAADA,OAAC,EAADA,EAAGhD,WAC1CoB,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,UAAEgI,EAAAA,EAAAA,IAAc,OAADN,QAAC,IAADA,OAAC,EAADA,EAAGxC,gBACtDvF,EAAa0B,SACVuE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA7F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,UAAEgI,EAAAA,EAAAA,IAAc,OAADN,QAAC,IAADA,OAAC,EAADA,EAAG/B,mBACvDG,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,UAAEgI,EAAAA,EAAAA,IAAc,OAADN,QAAC,IAADA,OAAC,EAADA,EAAGrC,YAG3DO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA7F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,UAAEgI,EAAAA,EAAAA,IAAc,OAADN,QAAC,IAADA,OAAC,EAADA,EAAGjC,mBACvDK,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,UAAEgI,EAAAA,EAAAA,IAAc,OAADN,QAAC,IAADA,OAAC,EAADA,EAAGvC,SACvDW,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,UAAEgI,EAAAA,EAAAA,IAAc,OAADN,QAAC,IAADA,OAAC,EAADA,EAAGhC,mBACvDI,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,UAAEgI,EAAAA,EAAAA,IAAc,OAADN,QAAC,IAADA,OAAC,EAADA,EAAGtC,YAG/DU,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,UAChCgI,EAAAA,EAAAA,IAAc,OAADN,QAAC,IAADA,OAAC,EAADA,EAAGpC,cAjBhBqC,MAsBjB/B,EAAAA,EAAAA,MAAA,MAAA5F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,wBAAuBxG,SAAC,WACtC8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,gCAA+BxG,UACxCgI,EAAAA,EAAAA,IAAa1D,EAAQ9B,QAAO,CAACkG,EAAKhG,IAASgG,EAAOnD,OAAO7C,EAAKwC,eAAe,MAGjFvF,EAAa0B,SACVuE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA7F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,2BACdV,EAAAA,EAAAA,KAAA,MAAIU,UAAU,gCAA+BxG,UACxCgI,EAAAA,EAAAA,IAAa1D,EAAQ9B,QAAO,CAACkG,EAAKhG,IAASgG,EAAOnD,OAAO7C,EAAK2C,OAAO,UAI9EO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA7F,SAAA,EACI8F,EAAAA,EAAAA,KAAA,MAAIU,UAAU,2BACdV,EAAAA,EAAAA,KAAA,MAAIU,UAAU,gCAA+BxG,UACxCgI,EAAAA,EAAAA,IAAa1D,EAAQ9B,QAAO,CAACkG,EAAKhG,IAASgG,EAAOnD,OAAO7C,EAAKyC,OAAO,OAE1EW,EAAAA,EAAAA,KAAA,MAAIU,UAAU,2BACdV,EAAAA,EAAAA,KAAA,MAAIU,UAAU,gCAA+BxG,UACxCgI,EAAAA,EAAAA,IAAa1D,EAAQ9B,QAAO,CAACkG,EAAKhG,IAASgG,EAAOnD,OAAO7C,EAAK0C,OAAO,UAKlFU,EAAAA,EAAAA,KAAA,MAAIU,UAAU,gCAA+BxG,UACxCgI,EAAAA,EAAAA,IAAa1D,EAAQ9B,QAAO,CAACkG,EAAKhG,IAASgG,EAAOnD,OAAO7C,EAAK4C,WAAW,UAGlFQ,EAAAA,EAAAA,KAAA,MAAA9F,UACI4F,EAAAA,EAAAA,MAAA,MACI6B,SAASxG,EAAAA,EAAAA,IAActB,EAAa0B,QAAS,GAAK,EAAI,EACtDmF,UAAU,uBAAsBxG,SAAA,CACnC,oCAEImI,EAAAA,EAAAA,IACGrF,SACIwB,EAAQ9B,QAAO,CAACkG,EAAKhG,IAASgG,EAAOnD,OAAO7C,EAAK4C,WAAW,KAElE,qBAKlBQ,EAAAA,EAAAA,KAAA,OAAKU,UAAU,qBAAoBxG,UAC/B8F,EAAAA,EAAAA,KAAA,KAAA9F,SAAG,+CAKX4F,EAAAA,EAAAA,MAAC+C,EAAAA,EAAa,CAAA3I,SAAA,EACV8F,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,CAACC,WAAW/C,EAAAA,EAAAA,KAACgD,EAAAA,EAAK,IAAK1K,QAAQ,WAAWpB,MAAM,QAAQ+I,QAAS9D,EAAYjC,SAAC,UAGpFH,IACGiG,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,CACHC,WAAW/C,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,IACpB3K,QAAQ,WACR2H,QAASrC,EAAY1D,SACxB,qBAOd,C","sources":["Components/tablecolumn.js","Pages/Sales/SalesReportComponent/newInvoiceTemplate.jsx"],"sourcesContent":["\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE ORDER' },\r\n    { name: 'PURCHASE INVOICE' },\r\n    { name: 'SALE ORDER' },\r\n    { name: 'SALE INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle, Button, DialogActions } from '@mui/material';\r\nimport { Close, Download } from '@mui/icons-material';\r\nimport { isEqualNumber, isGraterNumber, LocalDate, NumberFormat, numberToWords, Multiplication, Subraction, Addition, RoundNumber } from '../../../Components/functions';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\n\r\n\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst InvoiceBillTemplate = ({ orderDetails, orderProducts, download, actionOpen, clearDetails, children, TitleText }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [open, setOpen] = useState(false);\r\n    const [retailerInfo, setRetailerInfo] = useState({});\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const printRef = useRef(null);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    useEffect(() => {\r\n        if (actionOpen) {\r\n            setOpen(true);\r\n        }\r\n    }, [actionOpen])\r\n\r\n    useEffect(() => {\r\n        if (orderDetails?.Retailer_Id) {\r\n            fetchLink({\r\n                address: `masters/retailers/info?Retailer_Id=${orderDetails?.Retailer_Id}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setRetailerInfo(data?.data[0] ? data?.data[0] : {})\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [orderDetails?.Retailer_Id])\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        if (clearDetails) {\r\n            clearDetails();\r\n        }\r\n    };\r\n\r\n    const includedProducts = orderProducts.filter(orderProduct => isGraterNumber(orderProduct?.Bill_Qty, 0));\r\n\r\n    const totalValueBeforeTax = orderProducts.reduce((acc, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty) || 0;\r\n\r\n        if (isNotTaxableBill) {\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n            return acc;\r\n        }\r\n\r\n        const gstPercentage = IS_IGST ? item?.Igst : Addition(item?.Sgst, item?.Cgst);\r\n\r\n        if (isInclusive) {\r\n            const itemTax = taxCalc(1, itemRate, gstPercentage);\r\n            const basePrice = Subraction(itemRate, itemTax);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, basePrice);\r\n        }\r\n        if (isExclusiveBill) {\r\n            const itemTax = taxCalc(0, itemRate, gstPercentage);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n        }\r\n\r\n        return acc;\r\n    }, {\r\n        TotalValue: 0,\r\n        TotalTax: 0\r\n    });\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n    });\r\n\r\n    const extraDetails = [\r\n        {\r\n            labelOne: 'Invoice No',\r\n            dataOne: orderDetails?.So_Id,\r\n            labelTwo: 'Dated',\r\n            dataTwo: LocalDate(orderDetails?.So_Date),\r\n        },\r\n        {\r\n            labelOne: 'Delivery Note',\r\n            dataOne: '',\r\n            labelTwo: 'Mode/Terms of Payment',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Reference No. & Date',\r\n            dataOne: '',\r\n            labelTwo: 'Other References',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Buyer\\'s Order No',\r\n            dataOne: '',\r\n            labelTwo: 'Dated',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Dispatch Doc No',\r\n            dataOne: '',\r\n            labelTwo: 'Delivery Note Date',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Dispatched through',\r\n            dataOne: '',\r\n            labelTwo: 'Destination',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Bill of Lading/LR-RR No',\r\n            dataOne: '',\r\n            labelTwo: 'Motor Vehicle No',\r\n            dataTwo: '',\r\n        },\r\n    ]\r\n\r\n    const TaxData = orderProducts?.reduce((data, item) => {\r\n        const HSNindex = data.findIndex(obj => obj.hsnCode == item.HSN_Code);\r\n\r\n        const {\r\n            Taxable_Amount, Cgst_Amo, Sgst_Amo, Igst_Amo, HSN_Code,\r\n            Cgst, Sgst, Igst,\r\n        } = item;\r\n\r\n        if (HSNindex !== -1) {\r\n            const prev = data[HSNindex];\r\n            const newValue = {\r\n                ...prev,\r\n                taxableValue: prev.taxableValue + Taxable_Amount,\r\n                cgst: Addition(prev.cgst, Cgst_Amo),\r\n                sgst: Addition(prev.sgst, Sgst_Amo),\r\n                igst: Addition(prev.igst, Igst_Amo),\r\n                totalTax: prev.totalTax + Number(orderDetails.IS_IGST ? Igst_Amo : Addition(Cgst_Amo, Sgst_Amo)),\r\n            };\r\n\r\n            data[HSNindex] = newValue;\r\n            return data;\r\n        }\r\n\r\n        const newEntry = {\r\n            hsnCode: HSN_Code,\r\n            taxableValue: Taxable_Amount,\r\n            cgst: Cgst_Amo,\r\n            cgstPercentage: Cgst,\r\n            sgst: Sgst_Amo,\r\n            sgstPercentage: Sgst,\r\n            igst: Igst_Amo,\r\n            igstPercentage: Igst,\r\n            totalTax: orderDetails.IS_IGST ? Number(Igst_Amo) : Addition(Cgst_Amo, Sgst_Amo),\r\n        };\r\n\r\n        return [...data, newEntry];\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <span onClick={handleOpen}>{children}</span>\r\n\r\n            <Dialog open={open} onClose={handleClose} fullWidth maxWidth='lg'>\r\n\r\n                <DialogTitle>Order Preview</DialogTitle>\r\n\r\n                <DialogContent ref={printRef}>\r\n                    <h3 className='text-center mb-2'>{TitleText ?? 'Invoice Details'}</h3>\r\n\r\n                    {/* General Info */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 p-0 border border-bottom-0 border-end-0\"> {/* Company Info */}\r\n                            <div className=\"border-bottom p-2\">\r\n                                <p className='m-0 fa-17'>{companyInfo?.Company_Name}</p>\r\n                                <p className='m-0 fa-14'>Address: {companyInfo?.Company_Address}</p>\r\n                                {/* <p className='m-0 fa-14'></p> */}\r\n                                <p className='m-0 fa-14'>City: {companyInfo?.Region} - {companyInfo?.Pincode}</p>\r\n                                <p className='m-0 fa-14'>GSTIN / UIN: {companyInfo?.Gst_Number}</p>\r\n                                <p className='m-0 fa-14'>State: {companyInfo?.State}</p>\r\n                                <p className='m-0 fa-14'>Code: </p>\r\n                            </div>\r\n                            <div className=\"p-2\"> {/* buyer info */}\r\n                                <p className='m-0 fa-12'>Buyer (Bill to)</p>\r\n                                <p className='m-0 fa-15'>{retailerInfo?.Retailer_Name}</p>\r\n                                <p className='m-0 fa-14'>{retailerInfo?.Mobile_No + ' - ' + retailerInfo?.Reatailer_Address}</p>\r\n                                <p className='m-0 fa-14'>{retailerInfo?.Reatailer_City} - {retailerInfo?.PinCode}</p>\r\n                                <p className='m-0 fa-14'>GSTIN / UIN: {companyInfo?.Gstno}</p>\r\n                                <p className='m-0 fa-14'>State Name: {companyInfo?.StateGet}</p>\r\n                                <p className='m-0 fa-14'>Code: </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6 p-0 border border-bottom-0\">\r\n                            <table className=\"table m-0\">\r\n                                <tbody>\r\n                                    {extraDetails.map((detail, index) => (\r\n                                        <tr key={index}>\r\n                                            <td className=\"border-end fa-12 p-0 px-1\">\r\n                                                <p className=\"m-0\">{detail.labelOne}</p>\r\n                                                <p className=\"m-0\">&emsp;{detail.dataOne}</p>\r\n                                            </td>\r\n                                            <td className='fa-12 p-0 px-1'>\r\n                                                <p className=\"m-0\">{detail.labelTwo}</p>\r\n                                                <p className=\"m-0\">&emsp;{detail.dataTwo}</p>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                    <tr>\r\n                                        <td colSpan={2} className='border-0 fa-12 p-0'>\r\n                                            <p className=\"m-0\">Terms of Delivery</p>\r\n                                            <p className=\"m-0\"></p>\r\n                                            <br />\r\n                                            <br />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Product Info */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 p-0\">\r\n                            <table className=\"table m-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td className='border bg-light fa-14'>Sno</td>\r\n                                        <td className='border bg-light fa-14'>Product</td>\r\n                                        <td className='border bg-light fa-14'>HSN/SAC</td>\r\n                                        <td className='border bg-light fa-14 text-end'>Quantity</td>\r\n                                        <td className='border bg-light fa-14 text-end'>Rate</td>\r\n                                        <td className='border bg-light fa-14 text-end'>\r\n                                            <p className='m-2 '>Rate</p>\r\n                                            <p className='m-0 '>\r\n                                                {isEqualNumber(orderDetails.GST_Inclusive, 1) && '(Incl. of Tax)'}\r\n                                                {isEqualNumber(orderDetails.GST_Inclusive, 2) && '(Tax not applicable)'}\r\n                                                {isEqualNumber(orderDetails.GST_Inclusive, 0) && '(Excl. of Tax)'}\r\n                                            </p>\r\n                                        </td>\r\n                                        <td className='border bg-light fa-14 text-end'>Amount</td>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n\r\n                                    {includedProducts.map((o, i) => {\r\n                                        const percentage = (IS_IGST ? o?.Igst_P : o?.Cgst + o?.Sgst) ?? 0;\r\n                                        const quantity = Number(o?.Bill_Qty || 0);\r\n                                        const Item_Rate = Number(o?.Item_Rate || 0);\r\n                                        const itemTax = taxCalc(orderDetails.GST_Inclusive, Item_Rate, percentage)\r\n                                        return (\r\n                                            <tr key={i}>\r\n                                                <td className='border fa-13'>{i + 1}</td>\r\n                                                <td className='border fa-13'>{o?.Product_Name}</td>\r\n                                                <td className='border fa-13'>{o?.HSN_Code}</td>\r\n\r\n                                                <td className='border fa-13 text-end'>\r\n                                                    {NumberFormat(quantity)}\r\n                                                    {o?.UOM && ' (' + o?.UOM + ') '}\r\n                                                </td>\r\n\r\n                                                <td className='border fa-13 text-end'> {/* taxable item value */}\r\n                                                    {NumberFormat(isEqualNumber(\r\n                                                        orderDetails.GST_Inclusive, 1\r\n                                                    ) ? (Item_Rate - itemTax) : Item_Rate)}\r\n                                                </td>\r\n\r\n                                                <td className='border fa-13 text-end'> {/* rate per item */}\r\n                                                    {NumberFormat(isEqualNumber(\r\n                                                        orderDetails.GST_Inclusive, 1\r\n                                                    ) ? Item_Rate : (Item_Rate + itemTax))}\r\n                                                </td>\r\n\r\n                                                <td className='border fa-13 text-end'> {/* taxable amount (qty * rate) */}\r\n                                                    {NumberFormat(o?.Taxable_Amount)}\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n\r\n                                    <tr>\r\n                                        <td\r\n                                            className=\"border p-2\"\r\n                                            rowSpan={IS_IGST ? 4 : 5}\r\n                                            colSpan={4}\r\n                                        >\r\n                                            <p className='m-0'>Amount Chargeable (in words):</p>\r\n                                            <p className='m-0'>&emsp; INR {numberToWords(parseInt(orderDetails?.Total_Invoice_value))} Only.</p>\r\n                                        </td>\r\n                                        <td className=\"border p-2 fa-14\" colSpan={2}>Total Taxable Amount</td>\r\n                                        <td className=\"border p-2 text-end fa-14\">\r\n                                            {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    {!IS_IGST ? (\r\n                                        <>\r\n                                            <tr>\r\n                                                <td className=\"border p-2 fa-14\" colSpan={2}>CGST</td>\r\n                                                <td className=\"border p-2 text-end fa-14\">\r\n                                                    {NumberFormat(orderDetails?.CSGT_Total)}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"border p-2 fa-14\" colSpan={2}>SGST</td>\r\n                                                <td className=\"border p-2 fa-14 text-end\">\r\n                                                    {NumberFormat(orderDetails?.SGST_Total)}\r\n                                                </td>\r\n                                            </tr>\r\n                                        </>\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td className=\"border p-2 fa-14\" colSpan={2}>IGST</td>\r\n                                            <td className=\"border p-2 fa-14 text-end\">\r\n                                                {NumberFormat(orderDetails.IGST_Total)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n\r\n                                    <tr>\r\n                                        <td className=\"border p-2 fa-14\" colSpan={2}>Round Off</td>\r\n                                        <td className=\"border p-2 fa-14 text-end\">\r\n                                            {NumberFormat(orderDetails?.Round_off)}\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td className=\"border p-2 fa-14\" colSpan={2}>Total</td>\r\n                                        <td className=\"border p-2 fa-14 text-end fw-bold\">\r\n                                            {NumberFormat(orderDetails?.Total_Invoice_value)}\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Tax Calculations */}\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td className=\"border bg-light fa-14 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>HSN / SAC</td>\r\n                                <td className=\"border bg-light fa-14 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>Taxable Value</td>\r\n                                {isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                    <td className=\"border bg-light fa-14 text-center\" colSpan={2}>IGST Tax</td>\r\n                                ) : (\r\n                                    <>\r\n                                        <td className=\"border bg-light fa-14 text-center\" colSpan={2}>Central Tax</td>\r\n                                        <td className=\"border bg-light fa-14 text-center\" colSpan={2}>State Tax</td>\r\n                                    </>\r\n                                )}\r\n                                <td className=\"border bg-light fa-14 text-center\">Total</td>\r\n                            </tr>\r\n                            <tr>\r\n                                {isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                    <>\r\n                                        <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                        <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                        <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                        <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                        <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                    </>\r\n                                )}\r\n                                <td className=\"border bg-light fa-14 text-center\">Tax Amount</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {TaxData.map((o, i) => {\r\n                                return (\r\n                                    <tr key={i}>\r\n                                        <td className=\"border fa-13 text-end\">{o?.hsnCode}</td>\r\n                                        <td className=\"border fa-13 text-end\">{NumberFormat(o?.taxableValue)}</td>\r\n                                        {orderDetails.IS_IGST ? (\r\n                                            <>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.igstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.igst)}</td>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.cgstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.cgst)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.sgstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.sgst)}</td>\r\n                                            </>\r\n                                        )}\r\n                                        <td className=\"border fa-13 text-end\">\r\n                                            {NumberFormat(o?.totalTax)}\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                            <tr>\r\n                                <td className=\"border fa-13 text-end\">Total</td>\r\n                                <td className=\"border fa-13 text-end fw-bold\">\r\n                                    {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.taxableValue), 0))}\r\n                                </td>\r\n\r\n                                {orderDetails.IS_IGST ? (\r\n                                    <>\r\n                                        <td className=\"border fa-13 text-end\"></td>\r\n                                        <td className=\"border fa-13 text-end fw-bold\">\r\n                                            {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.igst), 0))}\r\n                                        </td>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <td className=\"border fa-13 text-end\"></td>\r\n                                        <td className=\"border fa-13 text-end fw-bold\">\r\n                                            {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.cgst), 0))}\r\n                                        </td>\r\n                                        <td className=\"border fa-13 text-end\"></td>\r\n                                        <td className=\"border fa-13 text-end fw-bold\">\r\n                                            {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.sgst), 0))}\r\n                                        </td>\r\n                                    </>\r\n                                )}\r\n\r\n                                <td className=\"border fa-13 text-end fw-bold\">\r\n                                    {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0))}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td\r\n                                    colSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 5 : 7}\r\n                                    className='border fa-13 fw-bold'\r\n                                >\r\n                                    Tax Amount (in words) : INR &nbsp;\r\n                                    {numberToWords(\r\n                                        parseInt(\r\n                                            TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0)\r\n                                        )\r\n                                    )} only.\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"col-12 text-center\">\r\n                        <p>This is a Computer Generated Invoice</p>\r\n                    </div>\r\n\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button startIcon={<Close />} variant='outlined' color='error' onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    {download && (\r\n                        <Button\r\n                            startIcon={<Download />}\r\n                            variant='outlined'\r\n                            onClick={handlePrint}\r\n                        >\r\n                            Download\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n\r\n            </Dialog >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvoiceBillTemplate;"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","menu","provided","state","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","taxCalc","amount","arguments","length","undefined","percentage","RoundNumber","_ref","orderDetails","orderProducts","download","actionOpen","clearDetails","children","TitleText","storage","JSON","parse","localStorage","getItem","open","setOpen","useState","retailerInfo","setRetailerInfo","companyInfo","setCompanyInfo","printRef","useRef","isExclusiveBill","isEqualNumber","GST_Inclusive","isInclusive","isNotTaxableBill","IS_IGST","useEffect","fetchLink","Company_id","then","data","success","catch","e","console","error","Retailer_Id","handleClose","includedProducts","filter","orderProduct","isGraterNumber","Bill_Qty","totalValueBeforeTax","reduce","acc","item","itemRate","Item_Rate","billQty","parseInt","TotalValue","Multiplication","gstPercentage","Igst","Addition","Sgst","Cgst","itemTax","basePrice","Subraction","TotalTax","handlePrint","useReactToPrint","content","current","extraDetails","labelOne","dataOne","So_Id","labelTwo","dataTwo","LocalDate","So_Date","TaxData","HSNindex","findIndex","obj","hsnCode","HSN_Code","Taxable_Amount","Cgst_Amo","Sgst_Amo","Igst_Amo","prev","newValue","taxableValue","cgst","sgst","igst","totalTax","Number","newEntry","cgstPercentage","sgstPercentage","igstPercentage","_jsxs","_Fragment","_jsx","onClick","handleOpen","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","ref","className","Company_Name","Company_Address","Region","Pincode","Gst_Number","State","Retailer_Name","Mobile_No","Reatailer_Address","Reatailer_City","PinCode","Gstno","StateGet","map","detail","index","colSpan","o","i","_ref2","Igst_P","quantity","Product_Name","NumberFormat","UOM","rowSpan","numberToWords","Total_Invoice_value","IGST_Total","CSGT_Total","SGST_Total","Round_off","verticalAlign","sum","DialogActions","Button","startIcon","Close","Download"],"sourceRoot":""}
{"version":3,"file":"static/js/3280.55a1d96e.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","Pages/CurrentProjects/projectInfo.jsx","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/ExpandLess.js","../node_modules/@mui/icons-material/esm/ExpandMore.js","../node_modules/@mui/icons-material/esm/KeyboardArrowLeft.js","../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE ORDER' },\r\n    { name: 'PURCHASE INVOICE' },\r\n    { name: 'SALE ORDER' },\r\n    { name: 'SALE INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import React, { useEffect, useRef, useState, Fragment } from \"react\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, MenuItem, Autocomplete, TextField, Checkbox, IconButton, Collapse } from '@mui/material';\r\nimport { Add, Delete, Edit, ExpandLess, ExpandMore, KeyboardArrowLeft, Launch } from \"@mui/icons-material\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport { ISOString, LocalDate } from '../../Components/functions'\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\n\r\nconst ProjectDetails = () => {\r\n    const localData = localStorage.getItem(\"user\");\r\n    const parseData = JSON.parse(localData);\r\n    const location = useLocation();\r\n    const projectData = location.state?.project;\r\n    const rights = location.state?.rights;\r\n    const nav = useNavigate()\r\n\r\n    const scheduleInitialValue = {\r\n        Sch_Id: '',\r\n        Sch_Date: new Date().toISOString().split('T')[0],\r\n        Project_Id: projectData?.Project_Id,\r\n        Sch_By: parseData.UserId,\r\n        Sch_Type_Id: 1,\r\n        Sch_Est_Start_Date: new Date().toISOString().split('T')[0],\r\n        Sch_Est_End_Date: '',\r\n        Sch_Status: 1,\r\n        Entry_By: parseData.UserId,\r\n        Entry_Date: new Date()\r\n    }\r\n\r\n    const scheduleTaskInitalValue = {\r\n        Sch_Project_Id: projectData?.Project_Id,\r\n        Sch_Id: '',\r\n        Task_Levl_Id: '',\r\n        Task_Id: '',\r\n        Type_Task_Id: 1,\r\n        Task_Sch_Duaration: '01:00',\r\n        Task_Start_Time: '10:00',\r\n        Task_End_Time: '11:00',\r\n        Task_Est_Start_Date: new Date().toISOString().split('T')[0],\r\n        Task_Est_End_Date: new Date().toISOString().split('T')[0],\r\n        Task_Sch_Status: 1,\r\n        Levl_Id: '',\r\n        Task_Depend_Level_Id: '',\r\n        TasksGet: '- Select Task -'\r\n    }\r\n\r\n    const [userDropdown, setUsersDropdown] = useState([]);\r\n    const [scheduleType, setScheleType] = useState([]);\r\n    const [workStatus, setWorkStatus] = useState([]);\r\n    const [projectSchedule, setProjectSchedule] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [taskType, setTaskType] = useState([]);\r\n\r\n    const [dependancyTasks, setDependencyTasks] = useState([]);\r\n    const [selectedDependencyTasks, setSelectedDependencyTasks] = useState([])\r\n\r\n    const [scheduleInput, setScheduleInput] = useState(scheduleInitialValue);\r\n    const [taskScheduleInput, setTaskScheduleInput] = useState(scheduleTaskInitalValue);\r\n\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [reload, setReload] = useState(false);\r\n\r\n    const [dialog, setDialog] = useState({\r\n        scheduleCreate: false,\r\n        scheduleDelete: false,\r\n        taskSchedule: false,\r\n        taskDelete: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `taskManagement/project/schedule?Project_Id=${projectData?.Project_Id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProjectSchedule(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [reload, projectData?.Project_Id])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/user/dropDown?Company_id=${parseData?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setUsersDropdown(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `taskManagement/project/schedule/scheduleType`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setScheleType(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `taskManagement/statusList`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                data.data.sort((a, b) => a.Status_Id - b.Status_Id)\r\n                setWorkStatus(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `taskManagement/tasks/dropdown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTasks(data.data)\r\n            }\r\n        }).catch(e => console.error(e))    \r\n\r\n        fetchLink({\r\n            address: `masters/taskType`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setTaskType(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [parseData?.BranchId])\r\n\r\n    useEffect(() => {\r\n        const getScheduleDates = scheduleType.find(obj => Number(obj?.Sch_Type_Id) === Number(scheduleInput?.Sch_Type_Id));\r\n        const findEndDate = new Date();\r\n        const getDay = findEndDate.getDate();\r\n        findEndDate.setDate(getDay + Number(getScheduleDates?.Sch_Days) || 0);\r\n        const changeFormat = findEndDate.toISOString().split('T')[0]\r\n        setScheduleInput(opt => ({ ...opt, Sch_Est_End_Date: changeFormat }))\r\n    }, [scheduleInput?.Sch_Est_Start_Date, scheduleInput?.Sch_Type_Id, scheduleType])\r\n\r\n    useEffect(() => {\r\n        const [hours1, minutes1] = taskScheduleInput?.Task_Start_Time.split(':').map(Number);\r\n        const [hours2, minutes2] = taskScheduleInput?.Task_End_Time.split(':').map(Number);\r\n\r\n        const date1 = new Date(0, 0, 0, hours1, minutes1);\r\n        const date2 = new Date(0, 0, 0, hours2, minutes2);\r\n\r\n        if (date2 > date1) {\r\n            let difference = Math.abs(date2 - date1);\r\n\r\n            const hours = Math.floor(difference / (1000 * 60 * 60));\r\n            difference %= (1000 * 60 * 60);\r\n            const minutes = Math.floor(difference / (1000 * 60));\r\n\r\n            const formattedHours = String(hours).padStart(2, '0');\r\n            const formattedMinutes = String(minutes).padStart(2, '0');\r\n\r\n            setTaskScheduleInput(opt => ({ ...opt, Task_Sch_Duaration: `${formattedHours}:${formattedMinutes}` }));\r\n        }\r\n\r\n    }, [taskScheduleInput?.Task_Start_Time, taskScheduleInput?.Task_End_Time, taskScheduleInput?.Task_Id])\r\n\r\n    useEffect(() => {\r\n        if (selectedDependencyTasks.length > 0) {\r\n            const numStr = selectedDependencyTasks.map(obj => obj?.Task_Levl_Id).join(',');\r\n            setTaskScheduleInput(opt => ({ ...opt, Task_Depend_Level_Id: numStr }));\r\n        } else {\r\n            setTaskScheduleInput(opt => ({ ...opt, Task_Depend_Level_Id: '' }));\r\n        }\r\n    }, [selectedDependencyTasks]);\r\n\r\n    useEffect(() => {\r\n        if (!projectData || !rights) {\r\n            nav('/taskManagement/projectActivity')\r\n        }\r\n    }, [projectData, rights, nav]);\r\n\r\n    const scheduleDialogSwitch = (val) => {\r\n        if (val) {\r\n            setScheduleInput(val);\r\n            setIsEdit(true)\r\n        }\r\n\r\n        if (!val && dialog.scheduleCreate === true) {\r\n            setScheduleInput(scheduleInitialValue)\r\n            setIsEdit(false)\r\n        }\r\n\r\n        setDialog({ ...dialog, scheduleCreate: !dialog.scheduleCreate });\r\n    }\r\n\r\n    const taskDialogSwitch = (bool, val) => {\r\n        if (val && !bool) {\r\n            setTaskScheduleInput(val);\r\n            setIsEdit(true)\r\n        }\r\n\r\n        if (!val && dialog.taskSchedule === true && bool === true) {\r\n            setTaskScheduleInput(scheduleTaskInitalValue);\r\n            setDependencyTasks([])\r\n            setSelectedDependencyTasks([])\r\n            setIsEdit(false)\r\n        }\r\n\r\n        setDialog({ ...dialog, taskSchedule: !dialog.taskSchedule });\r\n    }\r\n\r\n    const switchScheduleDeleteDialog = (val) => {\r\n        if (val) {\r\n            setScheduleInput(val)\r\n        } else {\r\n            setScheduleInput(scheduleInitialValue)\r\n        }\r\n\r\n        setDialog({ ...dialog, scheduleDelete: !dialog.scheduleDelete });\r\n    }\r\n\r\n    const switchTaskDeleteDialog = (val) => {\r\n        if (val) {\r\n            setTaskScheduleInput(val)\r\n        } else {\r\n            setTaskScheduleInput(scheduleTaskInitalValue)\r\n        }\r\n\r\n        setDialog({ ...dialog, taskDelete: !dialog.taskDelete });\r\n    }\r\n\r\n    const postAndPutScheduleFun = () => {\r\n        fetchLink({\r\n            address: `taskManagement/project/schedule`,\r\n            method: isEdit ? 'PUT' : 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            bodyData: scheduleInput\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.error)\r\n        .finally(() => scheduleDialogSwitch())\r\n    }\r\n\r\n    const deleteScheduleFun = () => {\r\n        fetchLink({\r\n            address: `taskManagement/project/schedule`,\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            bodyData: scheduleInput\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.error)\r\n        .finally(() => switchScheduleDeleteDialog()) \r\n    }\r\n\r\n    const postAndPutTaskFun = () => {\r\n        if (taskScheduleInput.Task_Id) {\r\n            if (Number(taskScheduleInput?.Levl_Id) !== 1 && taskScheduleInput.Task_Depend_Level_Id === '') {\r\n                return toast.warn('Select Dependency Tasks')\r\n            }\r\n\r\n            fetchLink({\r\n                address: `taskManagement/project/schedule/scheduleTask`,\r\n                method: isEdit ? 'PUT' : 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                bodyData: taskScheduleInput\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    toast.success(data.message);\r\n                    taskDialogSwitch(true);\r\n                    setReload(!reload)\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n            }).catch(e => console.error(e))\r\n        } else {\r\n            toast.warn('Select Task')\r\n        }\r\n    }\r\n\r\n    const deleteTaskFun = () => {\r\n        fetchLink({\r\n            address: `taskManagement/project/schedule/scheduleTask`,\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            bodyData: taskScheduleInput\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                setReload(!reload)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.error(e))\r\n        .finally(() => switchTaskDeleteDialog())\r\n    }\r\n\r\n    const getSignal = (status) => {\r\n        const numStatus = Number(status);\r\n        const color = ['', 'bg-primary', 'bg-warning', 'bg-success', 'bg-danger']\r\n\r\n        return color[numStatus]\r\n    }\r\n\r\n    const ScheduleComp = ({ obj, SNo }) => {\r\n        const myDivRef = useRef(null);\r\n        const [height, setHeight] = useState(0)\r\n\r\n        useEffect(() => {\r\n            if (myDivRef.current) {\r\n                setHeight(myDivRef.current.offsetHeight);\r\n            }\r\n        }, []);\r\n\r\n        const findNum = (arr, num) => {\r\n            const index = arr.findIndex((o) => Number(o.Task_Levl_Id) === Number(num));\r\n            return index >= 0 ? (index + 1) + '. ' : '';\r\n        }\r\n\r\n        const LevelOneGroup = ({ gobj }) => {\r\n            const [open, setOpen] = useState(false);\r\n\r\n            return (\r\n                <Fragment>\r\n                    <h5 className=\"mt-2 mb-3\">\r\n                        <IconButton onClick={() => setOpen(!open)}>\r\n                            {open \r\n                                ? <ExpandLess sx={{ fontSize: '20px', color: 'black' }} /> \r\n                                : <ExpandMore sx={{ fontSize: '20px', color: 'black' }} />}\r\n                        </IconButton>\r\n                        <span onClick={() => setOpen(!open)}>{gobj?.Task_Type ? gobj?.Task_Type : 'Not Grouped'}</span>\r\n                    </h5>\r\n\r\n                    <Collapse in={open} unmountOnExit>\r\n                        {gobj?.TaskGroup?.map((o, i) => (\r\n                            <div key={i} className=\"rounded-4 bg-light p-2 px-3 d-flex align-items-center mt-2\">\r\n                                <span className=\"flex-grow-1 fw-bold\">{(i + 1) + '. '}{o?.TaskNameGet}</span>\r\n                                <span className=\"fa-14 d-flex align-items-center\">\r\n\r\n                                    {LocalDate(o?.Task_Est_Start_Date)}\r\n\r\n                                    <span className={`rounded-5 ms-2 ${getSignal(o?.Task_Sch_Status)}`} style={{ padding: '5.2px' }} />\r\n\r\n                                    <span>\r\n                                        <Dropdown>\r\n                                            <Dropdown.Toggle\r\n                                                variant=\"success\"\r\n                                                id=\"actions\"\r\n                                                className=\"rounded-5 bg-transparent text-dark border-0 btn\"\r\n                                            >\r\n                                            </Dropdown.Toggle>\r\n                                            <Dropdown.Menu>\r\n                                                {Number(rights?.edit) === 1 && (\r\n                                                    <MenuItem\r\n                                                        onClick={() => {\r\n                                                            taskDialogSwitch(false, {\r\n                                                                Sch_Project_Id: projectData?.Project_Id,\r\n                                                                Sch_Id: obj?.Sch_Id,\r\n                                                                Task_Levl_Id: o?.Task_Levl_Id,\r\n                                                                Task_Id: o?.Task_Id,\r\n                                                                Type_Task_Id: o?.Type_Task_Id,\r\n                                                                Task_Sch_Duaration: o?.Task_Sch_Duaration,\r\n                                                                Task_Start_Time: o?.Task_Start_Time,\r\n                                                                Task_End_Time: o?.Task_End_Time,\r\n                                                                Task_Est_Start_Date: new Date(o?.Task_Est_Start_Date).toISOString().split('T')[0],\r\n                                                                Task_Est_End_Date: new Date(o?.Task_Est_End_Date).toISOString().split('T')[0],\r\n                                                                Task_Sch_Status: o?.Task_Sch_Status,\r\n                                                                Levl_Id: 1,\r\n                                                                Task_Depend_Level_Id: '',\r\n                                                                TasksGet: o?.TaskNameGet,\r\n                                                            })\r\n                                                        }}>\r\n                                                        <Edit className=\"fa-in me-2 text-primary\" />\r\n                                                        Edit\r\n                                                    </MenuItem>\r\n                                                )}\r\n                                                {Number(rights?.delete) === 1 && (<MenuItem onClick={() => {\r\n                                                    switchTaskDeleteDialog({ ...taskScheduleInput, Task_Levl_Id: o?.Task_Levl_Id })\r\n                                                }}>\r\n                                                    <Delete className=\"fa-in me-2 text-danger \" />\r\n                                                    Delete\r\n                                                </MenuItem>)}\r\n                                                <MenuItem onClick={\r\n                                                    () => nav('taskActivity',\r\n                                                        {\r\n                                                            state: {\r\n                                                                taskDetails: {\r\n                                                                    ...o,\r\n                                                                    Project_Id: projectData?.Project_Id,\r\n                                                                    Sch_Id: obj?.Sch_Id,\r\n                                                                },\r\n                                                                rights: location.state?.rights,\r\n                                                                retObj: location.state\r\n                                                            }\r\n                                                        }\r\n                                                    )\r\n                                                }>\r\n                                                    <Launch className=\"fa-in me-2 text-primary \" />\r\n                                                    Open Task\r\n                                                </MenuItem>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </Collapse>\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        const LevelTwoGrouped = ({ gobjlvl2 }) => {\r\n            const [open, setOpen] = useState(false);\r\n\r\n            return (\r\n                <Fragment>\r\n                    <h5 className=\"mt-2 mb-3\">\r\n                        <IconButton onClick={() => setOpen(!open)}>\r\n                            {open ? <ExpandLess sx={{ fontSize: '20px', color: 'black' }} /> : <ExpandMore sx={{ fontSize: '20px', color: 'black' }} />}\r\n                        </IconButton>\r\n                        <span onClick={() => setOpen(!open)}>{gobjlvl2?.Task_Type ? gobjlvl2?.Task_Type : 'Not Grouped'}</span>\r\n                    </h5>\r\n\r\n                    <Collapse in={open} unmountOnExit>\r\n                        {gobjlvl2?.TaskGroup?.map((o, i) => (\r\n                            <div className=\"rounded-4 bg-light py-2 px-3 mt-2\" key={i}>\r\n                                <div className=\"mb-0 d-flex align-items-center\">\r\n                                    <span className=\"flex-grow-1 fw-bold\">{(i + 1) + '. '}{o?.TaskNameGet}</span>\r\n                                    <span className=\"fa-14 d-flex align-items-center\">\r\n\r\n                                        {LocalDate(o?.Task_Est_Start_Date)}\r\n\r\n                                        <span className={`rounded-5 ms-2 ${getSignal(o?.Task_Sch_Status)}`} style={{ padding: '5.2px' }} />\r\n\r\n                                        {/* new code */}\r\n                                        <span>\r\n                                            <Dropdown>\r\n                                                <Dropdown.Toggle\r\n                                                    variant=\"success\"\r\n                                                    id=\"actions\"\r\n                                                    className=\"rounded-5 bg-transparent text-dark border-0 btn\"\r\n                                                >\r\n                                                </Dropdown.Toggle>\r\n                                                <Dropdown.Menu>\r\n                                                    {Number(rights?.edit) === 1 && (\r\n                                                        <MenuItem\r\n                                                            onClick={() => {\r\n                                                                taskDialogSwitch(false, {\r\n                                                                    Sch_Project_Id: projectData?.Project_Id,\r\n                                                                    Sch_Id: obj?.Sch_Id,\r\n                                                                    Task_Levl_Id: o?.Task_Levl_Id,\r\n                                                                    Task_Id: o?.Task_Id,\r\n                                                                    Type_Task_Id: o?.Type_Task_Id,\r\n                                                                    Task_Sch_Duaration: o?.Task_Sch_Duaration,\r\n                                                                    Task_Start_Time: o?.Task_Start_Time,\r\n                                                                    Task_End_Time: o?.Task_End_Time,\r\n                                                                    Task_Est_Start_Date: ISOString(o?.Task_Est_Start_Date),\r\n                                                                    Task_Est_End_Date: ISOString(o?.Task_Est_End_Date),\r\n                                                                    Task_Sch_Status: o?.Task_Sch_Status,\r\n                                                                    Levl_Id: 2,\r\n                                                                    Task_Depend_Level_Id: '',\r\n                                                                    TasksGet: o?.TaskNameGet,\r\n                                                                })\r\n                                                                setSelectedDependencyTasks([...o?.DependancyTasks?.map(depObj => ({\r\n                                                                    Task_Levl_Id: depObj?.Task_Depend_Level_Id,\r\n                                                                    TaskNameGet: depObj?.TaskNameGet\r\n                                                                }))])\r\n                                                                setDependencyTasks(obj?.LevelOneTasks.flatMap(item => item?.TaskGroup))\r\n                                                            }}>\r\n                                                            <Edit className=\"fa-in me-2 text-primary\" />\r\n                                                            Edit\r\n                                                        </MenuItem>\r\n                                                    )}\r\n                                                    {Number(rights?.delete) === 1 && (<MenuItem onClick={() => {\r\n                                                        switchTaskDeleteDialog({ ...taskScheduleInput, Task_Levl_Id: o?.Task_Levl_Id })\r\n                                                    }}>\r\n                                                        <Delete className=\"fa-in me-2 text-danger \" />\r\n                                                        Delete\r\n                                                    </MenuItem>)}\r\n                                                    <MenuItem onClick={\r\n                                                        () => nav('taskActivity',\r\n                                                            {\r\n                                                                state: {\r\n                                                                    taskDetails: {\r\n                                                                        ...o,\r\n                                                                        Project_Id: projectData?.Project_Id,\r\n                                                                        Sch_Id: obj?.Sch_Id,\r\n                                                                    },\r\n                                                                    rights: location.state?.rights,\r\n                                                                    retObj: location.state\r\n                                                                }\r\n                                                            }\r\n                                                        )\r\n                                                    }>\r\n                                                        <Launch className=\"fa-in me-2 text-primary \" />\r\n                                                        Open Task\r\n                                                    </MenuItem>\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <hr className=\"mt-0 mb-2\" />\r\n                                {o?.DependancyTasks?.length > 0 && <p className=\"mb-1 text-primary\">Dependency Tasks ({o?.DependancyTasks?.length})</p>}\r\n\r\n                                <div className=\"d-flex overflow-auto\">\r\n                                    {o?.DependancyTasks?.map((depobj, depindex) => (\r\n                                        <span key={depindex} className=\"rounded-4 mt-2 me-2 px-3 py-1 fa-13 fw-bold\" style={{ backgroundColor: '#E7C8DD' }}>\r\n                                            {findNum(obj?.LevelOneTasks.flatMap(item => item?.TaskGroup), depobj.Task_Depend_Level_Id)}\r\n                                            {depobj?.TaskNameGet}\r\n                                        </span>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </Collapse>\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        const LevelThreeGrouped = ({ gobjlvl3 }) => {\r\n            const [open, setOpen] = useState(false);\r\n\r\n            return (\r\n                <Fragment>\r\n                    <h5 className=\"mt-2 mb-3\">\r\n                        <IconButton onClick={() => setOpen(!open)}>\r\n                            {open ? <ExpandLess sx={{ fontSize: '20px', color: 'black' }} /> : <ExpandMore sx={{ fontSize: '20px', color: 'black' }} />}\r\n                        </IconButton>\r\n                        <span onClick={() => setOpen(!open)}>{gobjlvl3?.Task_Type ? gobjlvl3?.Task_Type : 'Not Grouped'}</span>\r\n                    </h5>\r\n\r\n                    <Collapse in={open} unmountOnExit>\r\n                        {gobjlvl3?.TaskGroup?.map((o, i) => (\r\n                            <div className=\"rounded-4 bg-light py-2 px-3 mt-2\" key={i}>\r\n                                <div className=\"mb-0 d-flex align-items-center\">\r\n                                    <span className=\"flex-grow-1 fw-bold\">{(i + 1) + '. '}{o?.TaskNameGet}</span>\r\n                                    <span className=\"fa-14 d-flex align-items-center\">\r\n\r\n                                        {LocalDate(o?.Task_Est_Start_Date)}\r\n\r\n                                        <span className={`rounded-5 ms-2 ${getSignal(o?.Task_Sch_Status)}`} style={{ padding: '5.2px' }} />\r\n\r\n                                        {/* new code */}\r\n                                        <span>\r\n                                            <Dropdown>\r\n                                                <Dropdown.Toggle\r\n                                                    variant=\"success\"\r\n                                                    id=\"actions\"\r\n                                                    className=\"rounded-5 bg-transparent text-dark border-0 btn\"\r\n                                                >\r\n                                                </Dropdown.Toggle>\r\n                                                <Dropdown.Menu>\r\n                                                    {Number(rights?.edit) === 1 && (\r\n                                                        <MenuItem\r\n                                                            onClick={() => {\r\n                                                                taskDialogSwitch(false, {\r\n                                                                    Sch_Project_Id: projectData?.Project_Id,\r\n                                                                    Sch_Id: obj?.Sch_Id,\r\n                                                                    Task_Levl_Id: o?.Task_Levl_Id,\r\n                                                                    Task_Id: o?.Task_Id,\r\n                                                                    Type_Task_Id: o?.Type_Task_Id,\r\n                                                                    Task_Sch_Duaration: o?.Task_Sch_Duaration,\r\n                                                                    Task_Start_Time: o?.Task_Start_Time,\r\n                                                                    Task_End_Time: o?.Task_End_Time,\r\n                                                                    Task_Est_Start_Date: ISOString(o?.Task_Est_Start_Date),\r\n                                                                    Task_Est_End_Date: ISOString(o?.Task_Est_End_Date),\r\n                                                                    Task_Sch_Status: o?.Task_Sch_Status,\r\n                                                                    Levl_Id: 3,\r\n                                                                    Task_Depend_Level_Id: '',\r\n                                                                    TasksGet: o?.TaskNameGet,\r\n                                                                })\r\n                                                                setSelectedDependencyTasks([...o?.DependancyTasks?.map(depObj => ({\r\n                                                                    Task_Levl_Id: depObj?.Task_Depend_Level_Id,\r\n                                                                    TaskNameGet: depObj?.TaskNameGet\r\n                                                                }))])\r\n                                                                setDependencyTasks(obj?.LevelTwoTasks.flatMap(item => item?.TaskGroup))\r\n                                                            }}>\r\n                                                            <Edit className=\"fa-in me-2 text-primary\" />\r\n                                                            Edit\r\n                                                        </MenuItem>\r\n                                                    )}\r\n                                                    {Number(rights?.delete) === 1 && (<MenuItem onClick={() => {\r\n                                                        switchTaskDeleteDialog({ ...taskScheduleInput, Task_Levl_Id: o?.Task_Levl_Id })\r\n                                                    }}>\r\n                                                        <Delete className=\"fa-in me-2 text-danger \" />\r\n                                                        Delete\r\n                                                    </MenuItem>)}\r\n                                                    <MenuItem onClick={\r\n                                                        () => nav('taskActivity',\r\n                                                            {\r\n                                                                state: {\r\n                                                                    taskDetails: {\r\n                                                                        ...o,\r\n                                                                        Project_Id: projectData?.Project_Id,\r\n                                                                        Sch_Id: obj?.Sch_Id,\r\n                                                                    },\r\n                                                                    rights: location.state?.rights,\r\n                                                                    retObj: location.state\r\n                                                                }\r\n                                                            }\r\n                                                        )\r\n                                                    }>\r\n                                                        <Launch className=\"fa-in me-2 text-primary \" />\r\n                                                        Open Task\r\n                                                    </MenuItem>\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <hr className=\"mt-0 mb-2\" />\r\n                                {o?.DependancyTasks?.length > 0 && <p className=\"mb-1 text-primary\">Dependency Tasks ({o?.DependancyTasks?.length})</p>}\r\n\r\n                                <div className=\"d-flex overflow-auto\">\r\n                                    {o?.DependancyTasks?.map((depobj, depindex) => (\r\n                                        <span key={depindex} className=\"rounded-4 mt-2 me-2 px-3 py-1 fa-13 fw-bold\" style={{ backgroundColor: '#E2E4F6' }}>\r\n                                            {findNum(obj?.LevelTwoTasks.flatMap(item => item?.TaskGroup), depobj.Task_Depend_Level_Id)}\r\n                                            {depobj?.TaskNameGet}\r\n                                        </span>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </Collapse>\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className=\"cus-card p-2\">\r\n                    <h5 className=\"mb-0 d-flex px-3 py-2 align-items-center\">\r\n                        <span className=\"flex-grow-1\">\r\n                            Schedule: {SNo + ' '}\r\n                            <br />\r\n                            <span className=\"fa-12\">\r\n                                By: {obj?.SchByGet}\r\n                            </span>\r\n                        </span>\r\n                        <span className=\" d-flex fa-14\">\r\n                            <span>\r\n                                {obj?.SchTypGet + ' (' + obj?.SchDays + ') '}\r\n                                <br />\r\n                                <span className=\"fa-12\">(\r\n                                    {LocalDate(obj?.Sch_Est_Start_Date)}\r\n                                    {' - '}\r\n                                    {LocalDate(obj?.Sch_Est_End_Date)}\r\n                                    )\r\n                                </span>\r\n                            </span>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle\r\n                                    variant=\"success\"\r\n                                    id=\"actions\"\r\n                                    className=\"rounded-5 bg-transparent text-dark border-0 btn\"\r\n                                >\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n\r\n                                    {Number(rights?.edit) === 1 && (\r\n                                        <MenuItem onClick={() => {\r\n                                            scheduleDialogSwitch({\r\n                                                Sch_Id: obj?.Sch_Id,\r\n                                                Sch_Date: ISOString(obj?.Sch_Date),\r\n                                                Project_Id: projectData?.Project_Id,\r\n                                                Sch_By: obj?.Sch_By,\r\n                                                Sch_Type_Id: obj?.Sch_Type_Id,\r\n                                                Sch_Est_Start_Date: ISOString(obj?.Sch_Est_Start_Date),\r\n                                                Sch_Est_End_Date: ISOString(obj?.Sch_Est_End_Date),\r\n                                                Sch_Status: obj?.Sch_Status,\r\n                                                Entry_By: obj?.Entry_By,\r\n                                                Entry_Date: ISOString(obj?.Entry_Date),\r\n                                            });\r\n                                        }}>\r\n                                            <Edit className=\"fa-in me-2 text-primary\" />\r\n                                            Edit\r\n                                        </MenuItem>\r\n                                    )}\r\n\r\n                                    {Number(rights?.delete) === 1 && (\r\n                                        <MenuItem onClick={() => switchScheduleDeleteDialog({ ...taskScheduleInput, Sch_Id: obj?.Sch_Id })}>\r\n                                            <Delete className=\"fa-in me-2 text-danger \" />\r\n                                            Delete\r\n                                        </MenuItem>\r\n                                    )}\r\n\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </span>\r\n                    </h5>\r\n\r\n                    <hr className=\"mt-0\" />\r\n\r\n                    <div className=\"d-flex flex-nowrap overflow-scroll\" style={{ paddingBottom: '4.6em' }}>\r\n\r\n                        {/* LevelOneTasks */}\r\n                        <div className=\"res-width px-3 py-2\">\r\n                            <div className=\"rounded-4 p-3\" style={{ backgroundColor: '#E7C8DD' }} ref={myDivRef}>\r\n\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <span className=\"flex-grow-1 ps-2 fw-bold\">Level 1</span>\r\n                                    {Number(rights?.add) === 1 && (\r\n                                        <button\r\n                                            className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center\"\r\n                                            onClick={() => {\r\n                                                taskDialogSwitch(false);\r\n                                                setTaskScheduleInput({ ...taskScheduleInput, Sch_Id: obj?.Sch_Id, Levl_Id: 1 });\r\n                                                setDependencyTasks([])\r\n                                            }}>\r\n                                            Assign Task\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {obj?.LevelOneTasks?.map((gobj, indobj) => (\r\n                                    (gobj?.TaskGroup?.length > 0) &&\r\n                                    <LevelOneGroup key={indobj} gobj={gobj} />\r\n                                ))}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* LevelTwoTasks */}\r\n                        <div className=\"res-width px-3 py-2\">\r\n                            <div className=\"rounded-4 p-3\" style={{ backgroundColor: '#E2E4F6', minHeight: height, overflow: 'auto' }}>\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <span className=\"flex-grow-1 ps-2 fw-bold \">Level 2</span>\r\n                                    {Number(rights?.add) === 1 && (\r\n                                        <button\r\n                                            className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center\"\r\n                                            disabled={obj?.LevelOneTasks.flatMap(item => item?.TaskGroup).length === 0}\r\n                                            onClick={() => {\r\n                                                taskDialogSwitch(false);\r\n                                                setTaskScheduleInput({ ...taskScheduleInput, Sch_Id: obj?.Sch_Id, Levl_Id: 2 });\r\n                                                setDependencyTasks(obj?.LevelOneTasks.flatMap(item => item?.TaskGroup))\r\n                                            }}>\r\n                                            Assign Task\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {obj?.LevelTwoTasks.map((gobjlvl2, indexobj) => (\r\n                                    (gobjlvl2?.TaskGroup?.length > 0) && (\r\n                                        <LevelTwoGrouped key={indexobj} gobjlvl2={gobjlvl2} />\r\n                                    )\r\n                                ))}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {/* LevelThreeTasks */}\r\n                        <div className=\"res-width px-3 py-2\">\r\n                            <div className=\"rounded-4 p-3\" style={{ backgroundColor: '#B4D2E7', minHeight: height, overflow: 'auto' }}>\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <span className=\"flex-grow-1 ps-2 fw-bold \">Level 3</span>\r\n                                    {Number(rights?.add) === 1 && (\r\n                                        <button\r\n                                            className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center\"\r\n                                            disabled={obj?.LevelTwoTasks.flatMap(item => item?.TaskGroup).length === 0}\r\n                                            onClick={() => {\r\n                                                taskDialogSwitch(false);\r\n                                                setTaskScheduleInput({ ...taskScheduleInput, Sch_Id: obj?.Sch_Id, Levl_Id: 3 });\r\n                                                setDependencyTasks(obj?.LevelTwoTasks.flatMap(item => item?.TaskGroup))\r\n                                            }}>\r\n                                            Assign Task\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {obj.LevelThreeTasks.map((gobjlvl3, indexobj) => (\r\n                                    (gobjlvl3?.TaskGroup?.length > 0) && (\r\n                                        <LevelThreeGrouped key={indexobj} gobjlvl3={gobjlvl3} />\r\n                                    )\r\n                                ))}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    return Number(rights?.read) === 1 && (\r\n        <>\r\n            <div className=\"cus-card p-3\">\r\n\r\n                <div className=\"d-flex align-items-center\">\r\n                    <h5 className=\" flex-grow-1 mb-0 text-muted fa-16 ps-2\">Create New Schedule</h5>\r\n                    {Number(rights?.add) === 1 && (\r\n                        <button className=\"btn btn-primary rounded-5 px-3 fa-13 shadow d-flex align-items-center me-2\" onClick={() => scheduleDialogSwitch()}>\r\n                            <Add className=\"fa-in me-2\" /> Add\r\n                        </button>\r\n                    )}\r\n                    <button className=\"btn btn-secondary rounded-5 px-3 fa-13 shadow d-flex align-items-center\" onClick={() => nav('/taskManagement/projectActivity')}>\r\n                        <KeyboardArrowLeft className=\"fa-in me-2\" /> Back\r\n                    </button>\r\n                </div>\r\n\r\n                <h6 className=\"my-2 d-flex align-items-center\">\r\n                    <span className={`rounded-5 mx-2 ${getSignal(1)}`} style={{ padding: '5.2px' }} />\r\n                    New\r\n                    <span className={`rounded-5 mx-2 ${getSignal(2)}`} style={{ padding: '5.2px' }} />\r\n                    Progress\r\n                    <span className={`rounded-5 mx-2 ${getSignal(3)}`} style={{ padding: '5.2px' }} />\r\n                    Completed\r\n                    <span className={`rounded-5 mx-2 ${getSignal(4)}`} style={{ padding: '5.2px' }} />\r\n                    Canceled\r\n                </h6>\r\n\r\n            </div>\r\n\r\n            {projectSchedule.map((o, i) => <ScheduleComp key={i} obj={o} SNo={i + 1} />)}\r\n\r\n            <Dialog\r\n                open={dialog.scheduleCreate}\r\n                onClose={() => scheduleDialogSwitch()}\r\n                maxWidth='sm' fullWidth>\r\n                <DialogTitle className=\"fa-18\">{isEdit ? \"Change Schedule\" : 'Create Schedule'}</DialogTitle>\r\n                <DialogContent>\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n                            {(Number(parseData?.UserTypeId) === 0 || Number(parseData?.UserTypeId) === 1) && <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Scheduled By</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <select\r\n                                        className=\"cus-inpt\"\r\n                                        value={scheduleInput.Sch_By}\r\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_By: e.target.value })}>\r\n                                        {userDropdown.map((o, i) => (\r\n                                            <option key={i} value={o?.UserId}>{o?.Name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>}\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}> Date</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <input\r\n                                        type='date'\r\n                                        className=\"cus-inpt\"\r\n                                        value={scheduleInput.Sch_Date}\r\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_Date: e.target.value })} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Type</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <select\r\n                                        className=\"cus-inpt\"\r\n                                        value={scheduleInput.Sch_Type_Id}\r\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_Type_Id: e.target.value })}>\r\n                                        {scheduleType.map((o, i) => (\r\n                                            <option key={i} value={o?.Sch_Type_Id}>{o?.Sch_Type + \" (\" + o?.Sch_Days + \" Day)\"}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Status</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <select\r\n                                        className=\"cus-inpt\"\r\n                                        value={scheduleInput.Sch_Status}\r\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_Status: e.target.value })}>\r\n                                        {workStatus.map((o, i) => (\r\n                                            <option key={i} value={o?.Status_Id}>{o?.Status}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Date</td>\r\n                                <td className=\"border-bottom-0 fa-15\">\r\n                                    <input\r\n                                        type='date'\r\n                                        className=\"cus-inpt\"\r\n                                        value={scheduleInput.Sch_Est_Start_Date}\r\n                                        onChange={e => setScheduleInput({ ...scheduleInput, Sch_Est_Start_Date: e.target.value })} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => scheduleDialogSwitch()}>cancel</Button>\r\n                    <Button onClick={postAndPutScheduleFun} >{isEdit ? 'Update' : 'Create'}</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog?.taskSchedule}\r\n                onClose={() => taskDialogSwitch(true)}\r\n                maxWidth='sm' fullWidth>\r\n                <DialogTitle>{isEdit ? 'Manage Task' : 'Assign Task'}</DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    postAndPutTaskFun()\r\n                }}>\r\n                    <DialogContent>\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Task</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <Select\r\n                                            value={{ value: taskScheduleInput?.Task_Id, label: taskScheduleInput?.TasksGet }}\r\n                                            onChange={(e) => setTaskScheduleInput({ ...taskScheduleInput, Task_Id: e.value, TasksGet: e.label })}\r\n                                            options={[...tasks.map(obj => ({ value: obj.Task_Id, label: obj.Task_Name }))]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true} required\r\n                                            placeholder={\"Select Task\"} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Task Type</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <select\r\n                                            className=\"cus-inpt\"\r\n                                            value={taskScheduleInput?.Type_Task_Id} required\r\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Type_Task_Id: e.target.value })}>\r\n                                            {taskType.map((o, i) => <option key={i} value={o?.Task_Type_Id}>{o?.Task_Type}</option>)}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Date</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='date'\r\n                                            className=\"cus-inpt\" required\r\n                                            value={taskScheduleInput?.Task_Est_Start_Date && new Date(taskScheduleInput?.Task_Est_Start_Date).toISOString().split('T')[0]}\r\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_Est_Start_Date: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>End Date</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='date'\r\n                                            className=\"cus-inpt\" required min={taskScheduleInput?.Task_Est_Start_Date}\r\n                                            value={taskScheduleInput?.Task_Est_End_Date && new Date(taskScheduleInput?.Task_Est_End_Date).toISOString().split('T')[0]}\r\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_Est_End_Date: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Start Time</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='time'\r\n                                            className=\"cus-inpt\"\r\n                                            value={taskScheduleInput?.Task_Start_Time} required\r\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_Start_Time: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>End Time</td>\r\n                                    <td className=\"border-bottom-0 fa-15\">\r\n                                        <input\r\n                                            type='time'\r\n                                            className=\"cus-inpt\" required min={taskScheduleInput?.Task_Start_Time}\r\n                                            value={taskScheduleInput?.Task_End_Time}\r\n                                            onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_End_Time: e.target.value })} />\r\n                                    </td>\r\n                                </tr>\r\n                                {isEdit && (\r\n                                    <tr>\r\n                                        <td className=\"border-bottom-0 fa-15\" style={{ verticalAlign: 'middle' }}>Status</td>\r\n                                        <td className=\"border-bottom-0 fa-15\">\r\n                                            <select\r\n                                                className=\"cus-inpt\"\r\n                                                value={taskScheduleInput.Task_Sch_Status} required\r\n                                                onChange={e => setTaskScheduleInput({ ...taskScheduleInput, Task_Sch_Status: e.target.value })}>\r\n                                                {workStatus.map((o, i) => (\r\n                                                    <option key={i} value={o?.Status_Id}>{o?.Status}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        {Number(taskScheduleInput?.Levl_Id) !== 1 && (\r\n                            <>\r\n                                <label className=\"mb-2\">Select Dependency Tasks</label>\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    id=\"checkboxes-tags-demo\"\r\n                                    options={dependancyTasks}\r\n                                    disableCloseOnSelect\r\n                                    getOptionLabel={(option) => option?.TaskNameGet}\r\n                                    value={selectedDependencyTasks}\r\n                                    onChange={(f, e) => setSelectedDependencyTasks(e)}\r\n                                    renderOption={(props, option, { selected }) => (\r\n                                        <li {...props}>\r\n                                            <Checkbox\r\n                                                icon={icon}\r\n                                                checkedIcon={checkedIcon}\r\n                                                style={{ marginRight: 8 }}\r\n                                                checked={selected}\r\n                                            />\r\n                                            {option?.TaskNameGet}\r\n                                        </li>\r\n                                    )}\r\n                                    style={{ width: '100%' }}\r\n                                    isOptionEqualToValue={(opt, val) => Number(opt?.Task_Levl_Id) === Number(val?.Task_Levl_Id)}\r\n                                    renderInput={(params) => (\r\n                                        <TextField {...params} label=\"Tasks\" placeholder=\"Select Dependency Tasks\" />\r\n                                    )}\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button type='button' onClick={() => taskDialogSwitch(true)}>close</Button>\r\n                        <Button type='submit'>\r\n                            {isEdit ? 'Update' : 'Assign Task'}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog?.scheduleDelete}\r\n                onClose={() => switchScheduleDeleteDialog()}>\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the Schedule?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => switchScheduleDeleteDialog()}>cancel</Button>\r\n                    <Button onClick={deleteScheduleFun} >Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog?.taskDelete}\r\n                onClose={() => switchTaskDeleteDialog()}>\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the Task?\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => switchTaskDeleteDialog()}>cancel</Button>\r\n                    <Button onClick={deleteTaskFun} >Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProjectDetails;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","menu","provided","state","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","icon","_jsx","CheckBoxOutlineBlankIcon","checkedIcon","CheckBoxIcon","ProjectDetails","_location$state","_location$state2","localData","localStorage","getItem","parseData","JSON","parse","location","useLocation","projectData","project","rights","nav","useNavigate","scheduleInitialValue","Sch_Id","Sch_Date","Date","toISOString","split","Project_Id","Sch_By","UserId","Sch_Type_Id","Sch_Est_Start_Date","Sch_Est_End_Date","Sch_Status","Entry_By","Entry_Date","scheduleTaskInitalValue","Sch_Project_Id","Task_Levl_Id","Task_Id","Type_Task_Id","Task_Sch_Duaration","Task_Start_Time","Task_End_Time","Task_Est_Start_Date","Task_Est_End_Date","Task_Sch_Status","Levl_Id","Task_Depend_Level_Id","TasksGet","userDropdown","setUsersDropdown","useState","scheduleType","setScheleType","workStatus","setWorkStatus","projectSchedule","setProjectSchedule","tasks","setTasks","taskType","setTaskType","dependancyTasks","setDependencyTasks","selectedDependencyTasks","setSelectedDependencyTasks","scheduleInput","setScheduleInput","taskScheduleInput","setTaskScheduleInput","isEdit","setIsEdit","reload","setReload","dialog","setDialog","scheduleCreate","scheduleDelete","taskSchedule","taskDelete","useEffect","fetchLink","then","data","success","catch","e","console","error","Company_id","sort","a","b","Status_Id","BranchId","getScheduleDates","find","obj","Number","findEndDate","getDay","getDate","setDate","Sch_Days","changeFormat","opt","hours1","minutes1","map","hours2","minutes2","date1","date2","difference","Math","abs","hours","floor","minutes","formattedHours","String","padStart","formattedMinutes","length","numStr","join","scheduleDialogSwitch","val","taskDialogSwitch","bool","switchScheduleDeleteDialog","switchTaskDeleteDialog","getSignal","status","ScheduleComp","_ref","_obj$LevelOneTasks","SNo","myDivRef","useRef","height","setHeight","current","offsetHeight","findNum","arr","num","index","findIndex","o","LevelOneGroup","_ref2","_gobj$TaskGroup","gobj","open","setOpen","_jsxs","Fragment","children","className","IconButton","onClick","ExpandLess","sx","ExpandMore","Task_Type","Collapse","in","unmountOnExit","TaskGroup","i","TaskNameGet","LocalDate","Dropdown","Toggle","Menu","edit","MenuItem","Edit","delete","Delete","_location$state3","taskDetails","retObj","Launch","LevelTwoGrouped","_ref3","_gobjlvl2$TaskGroup","gobjlvl2","_o$DependancyTasks2","_o$DependancyTasks3","_o$DependancyTasks4","_o$DependancyTasks","ISOString","DependancyTasks","depObj","LevelOneTasks","flatMap","item","_location$state4","depobj","depindex","LevelThreeGrouped","_ref4","_gobjlvl3$TaskGroup","gobjlvl3","_o$DependancyTasks6","_o$DependancyTasks7","_o$DependancyTasks8","_o$DependancyTasks5","LevelTwoTasks","_location$state5","_Fragment","SchByGet","SchTypGet","SchDays","paddingBottom","ref","add","indobj","_gobj$TaskGroup2","minHeight","overflow","disabled","indexobj","_gobjlvl2$TaskGroup2","LevelThreeTasks","_gobjlvl3$TaskGroup2","read","Add","KeyboardArrowLeft","Dialog","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","UserTypeId","verticalAlign","value","onChange","target","Name","type","Sch_Type","Status","DialogActions","Button","postAndPutScheduleFun","method","headers","bodyData","toast","message","finally","onSubmit","preventDefault","postAndPutTaskFun","warn","Select","label","options","Task_Name","styles","isSearchable","required","placeholder","Task_Type_Id","min","Autocomplete","multiple","disableCloseOnSelect","getOptionLabel","f","renderOption","props","_ref5","selected","Checkbox","marginRight","checked","isOptionEqualToValue","renderInput","params","TextField","deleteScheduleFun","deleteTaskFun","createSvgIcon","d","_typeof","Symbol","iterator","constructor","prototype"],"sourceRoot":""}
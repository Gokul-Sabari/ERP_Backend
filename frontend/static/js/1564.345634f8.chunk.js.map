{"version":3,"file":"static/js/1564.345634f8.chunk.js","mappings":"2HAAA,MAIA,EAJqBA,KACjBC,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAAEC,MAAO,MAAOC,WAAY,OAAQC,SAAU,OAAQC,SAAC,M,sICE3DC,EAAoB,CAC7BC,MAAO,CACHN,MAAO,CACHO,MAAO,OACPC,gBAAiB,gBAIzBC,KAAM,CACFT,MAAO,CACHQ,gBAAiB,gBAGzBE,UAAW,CACPV,MAAO,CACHQ,gBAAiB,YACjBP,MAAO,QACPE,SAAU,UAMTQ,EAAqB,CAC9BC,QAASA,CAACC,EAAUC,KAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClBF,GAAQ,IACXG,OAAQ,OACRC,WAAY,+BAEhBC,KAAMA,CAACL,EAAUC,KAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfF,GAAQ,IACXM,OAAQ,OAEZC,WAAYC,IAAIN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUM,GAAI,IAAEF,OAAQ,OACxCG,aAAeD,IAAIN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZM,GAAI,IACPb,gBAAiB,UACjBP,MAAO,OACPC,WAAY,OACZC,SAAU,OACVoB,QAAS,WACTC,aAAc,iBACdC,cAAe,cAEnBC,OAAQA,CAACL,EAAMP,KAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbM,GAAI,IACPb,gBAAiBM,EAAMa,WACjB,UACAb,EAAMc,UACN,UACA,QACN3B,MAAOa,EAAMa,WAAa,QAAU,OACpCJ,QAAS,eAmBJM,EAAW,CACpB,CACIC,GAAI,EACJC,SAAU,UACVC,QAAS,OACTC,MAAO,OACP1B,MAAO,KAEX,CACIuB,GAAI,EACJC,SAAU,YAEd,CACID,GAAI,EACJC,SAAU,eAEd,CACID,GAAI,EACJC,SAAU,cAEd,CACID,GAAI,EACJC,SAAU,eAEd,CACID,GAAI,EACJC,SAAU,iBAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,WAILG,EAAiB,CAC1B,CACIC,SAAU,EACVC,KAAM,kBACNC,SAAU,8BACVC,QAAS,iGACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,6BACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,eAEV,CACIV,SAAU,EACVC,KAAM,oBACNC,SAAU,GACVC,QAAS,4JACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,eACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,eAEV,CACIV,SAAU,EACVC,KAAM,kBACNC,SAAU,GACVC,QAAS,4HACTC,KAAMC,EACNC,MAAO,kBACPC,MAAO,6BACPC,MAAO,iBACPC,YAAa,qBACbC,KAAM,e,gDC1IP,MAAMC,EAAsB,SAACC,EAAQC,GAA2B,IAAlBC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAExD,MAAMG,GAAkBC,EAAAA,EAAAA,IAASP,GAC3BQ,GAAmBD,EAAAA,EAAAA,IAASN,GAE5BQ,EAAcD,EAAmB,EACvC,IAAIE,EAAYC,EAAWC,EAASC,EAEpC,GAAa,YAATX,EACAQ,EAAaJ,EACbK,EAAY,EACZC,EAAUN,EACVO,EAAaP,OACV,GAAa,QAATJ,EACPS,EAAaL,EAAkBE,EAAoB,IACnDE,EAAaJ,EACbM,EAAUN,EAAkBK,EAC5BE,EAAaP,MACV,IAAa,WAATJ,EAMP,MAAM,IAAIY,MAAM,oDALhBJ,EAAaJ,GAAmB,EAAIE,EAAmB,KACvDG,EAAYL,EAAkBI,EAC9BE,EAAUN,EACVO,EAAaH,CAGjB,CAEA,MAAMK,GAAcJ,EAAY,GAAGK,QAAQ,GACrCC,GAAcN,EAAY,GAAGK,QAAQ,GACrCE,EAAaP,EAAUK,QAAQ,GAErC,MAAO,CACHG,YAAaC,OAAOV,GAAYM,QAAQ,GACxCK,SAAUD,OAAOR,GAASI,QAAQ,GAClCM,YAAaF,OAAOP,GAAYG,QAAQ,GACxCO,QAASH,OAAOZ,GAChBgB,WAAYJ,OAAOT,GAAWK,QAAQ,GACtCS,SAAUL,OAAOX,GACjBiB,YAAaN,OAAOL,GACpBY,SAAUP,OAAOX,GACjBmB,YAAaR,OAAOH,GACpBY,SAAUT,OAAOZ,GACjBsB,YAAaV,OAAOF,GACpBhB,OAER,C,iNC3CA,MA2XA,EA3X+B6B,IAexB,IAADC,EAAAC,EAAA,IAf0B,SAC5B5E,EAAQ,cACR6E,EAAgB,GAAE,iBAClBC,EAAgB,KAChBC,GAAO,EAAK,QACZC,EAAO,SACPC,EAAW,GAAE,OACbC,EAAS,GAAE,IACXC,EAAM,GAAE,QACRC,EAAU,GAAE,cACZC,EAAa,QACbC,EAAO,WACPC,EAAa,KAAI,aACjBC,EAAe,CAAC,EAAC,cACjBC,EAAgB,IACnBf,EAEG,MAAOgB,EAAgBC,IAAqBC,EAAAA,EAAAA,UAASJ,GAE/CK,GAAcC,EAAAA,EAAAA,IAAcT,EAAe,GAC3CU,GAAmBD,EAAAA,EAAAA,IAAcT,EAAe,IAEtDW,EAAAA,EAAAA,YAAU,MACFC,EAAAA,EAAAA,IAAcV,IAAeR,GAC7BY,GAAkBO,GACdC,OAAOC,YACHD,OAAOE,QAAQH,GAAKI,KAAIC,IAAA,IAAEC,EAAKC,GAAMF,EAAA,MAAK,CAACC,EAAKjB,EAAWiB,GAAOjB,EAAWiB,GAAOC,EAAM,MAGtG,GACD,CAAClB,IAEJ,MAAMmB,EAAsBC,IAAS,IAAAC,EAAA,OAAqE,QAArEA,EAAa,OAAR3B,QAAQ,IAARA,OAAQ,EAARA,EAAU4B,MAAKC,IAAOhB,EAAAA,EAAAA,IAAiB,OAAHgB,QAAG,IAAHA,OAAG,EAAHA,EAAKC,WAAYJ,YAAW,IAAAC,EAAAA,EAAI,CAAC,CAAC,EAE1GI,EAAcA,KAChBrB,EAAkBH,GAClBR,GAAS,EAmDb,OACIiC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAlH,SAAA,CACKA,GAEDiH,EAAAA,EAAAA,MAACE,EAAAA,EAAM,CACHpC,KAAMA,EACNC,QAASgC,EACTI,SAAS,KAAKC,WAAS,EAAArH,SAAA,EAEvBL,EAAAA,EAAAA,KAAC2H,EAAAA,EAAW,CAACC,UAAU,gBAAevH,UAClCL,EAAAA,EAAAA,KAAA,QAAAK,SAAM,4BAEViH,EAAAA,EAAAA,MAAA,QAAMO,SAAUC,IACZA,EAAEC,iBACEhC,EAAeiC,SA5D/B7C,GAAiBoB,GAwCN,IAvCkBA,EAAI0B,QAAOC,KAAY/B,EAAAA,EAAAA,IAAc+B,EAAQF,QAASjC,EAAeiC,WAEhExB,OAAOC,YACjCD,OAAOE,QAAQb,GAAcc,KAAIwB,IAAmB,IAAjBtB,EAAKC,GAAMqB,EAC1C,MAAMC,EAAgBrB,EAAmBhB,EAAeiC,SAClDK,EAAgB1C,EAAUyC,EAAcE,OAASF,EAAcG,MAC/DC,EAAYH,EAAgB,GAE5B,SAAEI,EAAQ,UAAEC,EAAS,OAAEC,GAAW5C,EAElC6C,EAAUxC,EAAmB,UAAYF,EAAc,SAAW,MAClE2C,GAAc9F,EAAAA,EAAAA,GAAoB2F,EAAWL,EAAeO,GAC5DE,GAAU/F,EAAAA,EAAAA,GAAoB4F,EAAQN,EAAeO,GAErDG,EAAWpD,EAA6B,EAAnBmD,EAAQnE,SAC7BqE,EAAUrD,EAAUmD,EAAQjE,SAAW,EACvCoE,EAAYtD,EAAgC,EAAtBmD,EAAQlE,YAC9BsE,EAAWvD,EAAUmD,EAAQhE,YAAc,EAEjD,OAAQ+B,GACJ,IAAK,YAAa,MAAO,CAACA,EAAKuB,EAAce,cAC7C,IAAK,eAAgB,MAAO,CAACtC,EAAKgC,EAAY1E,aAC9C,IAAK,YAAa,MAAO,CAAC0C,EAAK4B,GAC/B,IAAK,SAAU,MAAO,CAAC5B,EAAK2B,EAAY,EAAI,GAC5C,IAAK,iBAAkB,MAAO,CAAC3B,EAAKiC,EAAQ3E,aAC5C,IAAK,WAAY,MAAO,CAAC0C,EAAKwB,GAC9B,IAAK,OACL,IAAK,OAAQ,MAAO,CAACxB,EAAY,OAAPkC,QAAO,IAAPA,EAAAA,EAAW,GACrC,IAAK,WACL,IAAK,WAAY,MAAO,CAAClC,EAAKT,EAAmB,EAAI6C,GACrD,IAAK,OAAQ,MAAO,CAACpC,EAAY,OAAPmC,QAAO,IAAPA,EAAAA,EAAW,GACrC,IAAK,WAAY,MAAO,CAACnC,EAAKT,EAAmB,EAAI8C,GACrD,IAAK,YAAa,MAAO,CAACrC,EAAKiC,EAAQzE,UAEvC,QAAS,MAAO,CAACwC,EAAKd,EAAec,IAAQC,GACjD,QAOZO,KAoBgB+B,EAAAA,GAAMC,KAAK,iBACf,EACFhJ,SAAA,EACEL,EAAAA,EAAAA,KAACsJ,EAAAA,EAAa,CAAAjJ,UACViH,EAAAA,EAAAA,MAAA,OAAKM,UAAU,WAAUvH,SAAA,EAGrBiH,EAAAA,EAAAA,MAAA,OAAKM,UAAU,YAAWvH,SAAA,EACtBL,EAAAA,EAAAA,KAAA,SAAAK,SAAO,WACPL,EAAAA,EAAAA,KAACuJ,EAAAA,GAAM,CACHzC,MAAO,CAAEA,MAAOf,EAAeyD,QAASC,MAAO1D,EAAe2D,OAC9DC,SAAW7B,GAAM9B,GAAkBO,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUuF,GAAG,IAAEiD,QAAS1B,EAAEhB,MAAO4C,MAAO5B,EAAE2B,UAChFG,QAAS,CACL,CAAE9C,MAAO,GAAI2C,MAAO,SAAUI,YAAY,GAC1CtE,EAAOoB,KAAIQ,IAAG,CAAOL,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAKuC,MAAOD,MAAU,OAAHtC,QAAG,IAAHA,OAAG,EAAHA,EAAK2C,gBAExDC,OAAQnJ,EAAAA,GACRoJ,iBAAkBC,SAASC,KAC3BC,cAAc,EACdC,YAAa,eACbC,cAAe,UAKvB/C,EAAAA,EAAAA,MAAA,OAAKM,UAAU,YAAWvH,SAAA,EACtBL,EAAAA,EAAAA,KAAA,SAAAK,SAAO,WACPL,EAAAA,EAAAA,KAACuJ,EAAAA,GAAM,CACHzC,MAAO,CAAEA,MAAOf,EAAeuE,QAASb,MAAO1D,EAAewE,OAC9DZ,SAAW7B,GACP9B,GAAmBO,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWuF,GAAG,IAAE+D,QAASxC,EAAEhB,MAAOyD,MAAOzC,EAAE2B,UAErEG,QAAS,CACL,CAAE9C,MAAO,GAAI2C,MAAO,SAAUI,YAAY,GAC1CvE,EACK2C,QACIuC,IACGzE,EAAeyD,UACTrD,EAAAA,EAAAA,IAAcqE,EAAId,MAAO3D,EAAeyD,WAGrDiB,QAAO,CAACC,EAAKF,KAELE,EAAIC,MAAMC,GAAQA,EAAI9D,QAAU0D,EAAIK,iBAErCH,EAAII,KAAK,CACLhE,MAAO0D,EAAIK,cACXpB,MAAOe,EAAIO,YAGZL,IACR,KAEXX,OAAQnJ,EAAAA,GACRoJ,iBAAkBC,SAASC,KAC3BC,cAAc,EACdC,YAAa,eACbC,cAAe,UAKvB/C,EAAAA,EAAAA,MAAA,OAAKM,UAAU,aAAYvH,SAAA,EACvBiH,EAAAA,EAAAA,MAAA,SAAAjH,SAAA,CAAO,cAAUL,EAAAA,EAAAA,KAACD,EAAAA,EAAY,QAC9BC,EAAAA,EAAAA,KAACuJ,EAAAA,GAAM,CACHzC,MAAO,CACHA,MAAOf,EAAeiC,QACtByB,MAC8C,QADzCzE,EACD+B,EAAmBhB,EAAeiC,gBAAQ,IAAAhD,OAAA,EAA1CA,EAA4CmE,cAGpDU,YAAYmB,EAAAA,EAAAA,IAAcjF,EAAekF,QACzCjB,iBAAkBC,SAASC,KAC3BP,SAAU7B,IACN,MAAMoD,EAAcnE,EAAmBe,EAAEhB,OACzCd,GAAkBO,IAAG,IAAA4E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACduF,GAAG,IAENgE,MAA4B,QAAvBY,EAAED,EAAYH,iBAAS,IAAAI,EAAAA,EAAI5E,EAAIgE,MACpCD,QAAkC,QAA3Bc,EAAEF,EAAYL,qBAAa,IAAAO,EAAAA,EAAI7E,EAAI+D,QAC1CZ,MAA6B,QAAxB2B,EAAEH,EAAYpB,kBAAU,IAAAuB,EAAAA,EAAI9E,EAAImD,MACrCF,QAA0B,QAAnB8B,EAAEJ,EAAYxB,aAAK,IAAA4B,EAAAA,EAAI/E,EAAIiD,QAElCxB,QAASF,EAAEhB,MACX4B,UAAgC,QAAvB6C,EAAEL,EAAYxC,iBAAS,IAAA6C,EAAAA,EAAI,EACpC9C,SAAU,EACVE,OAAQ,EACR+C,QAA2B,QAApBF,EAAEN,EAAYS,cAAM,IAAAH,EAAAA,EAAIjF,EAAImF,QACnCE,UAA4B,QAAnBH,EAAEP,EAAYW,aAAK,IAAAJ,EAAAA,EAAIlF,EAAIqF,UACpCE,SAAqB,OAAXZ,QAAW,IAAXA,OAAW,EAAXA,EAAaY,UAAQ,GAChC,EAEPlC,QAAS,CACL,CAAE9C,MAAO,GAAI2C,MAAO,SAAUI,YAAY,MACvC,IACIvE,EACE2C,QAAOuC,IAAOzE,EAAeyD,UAAUrD,EAAAA,EAAAA,IAAcqE,EAAId,MAAO3D,EAAeyD,WAC/EvB,QAAOuC,IAAOzE,EAAeuE,UAAUnE,EAAAA,EAAAA,IAAcqE,EAAIK,cAAe9E,EAAeuE,YAC9F3D,KAAIQ,IAAG,CACLL,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAKC,WACZqC,MAAU,OAAHtC,QAAG,IAAHA,OAAG,EAAHA,EAAKgC,aACZU,YAIO,IAHH3E,EAAc6G,WAAUC,IAAO7F,EAAAA,EAAAA,IACxB,OAAH6F,QAAG,IAAHA,OAAG,EAAHA,EAAKhE,QAAY,OAAHb,QAAG,IAAHA,OAAG,EAAHA,EAAKC,mBAKnC2C,OAAQnJ,EAAAA,GACRuJ,cAAc,EACd8B,UAAQ,EACR7B,YAAa,iBACbC,cAAe,UAKvB/C,EAAAA,EAAAA,MAAA,OAAKM,UAAU,wBAAuBvH,SAAA,EAClCiH,EAAAA,EAAAA,MAAA,SAAAjH,SAAA,CAAO,aAASL,EAAAA,EAAAA,KAACD,EAAAA,EAAY,QAC7BC,EAAAA,EAAAA,KAAA,SACIiM,UAAQ,EACRnF,MAAOf,EAAe0C,SAAW1C,EAAe0C,SAAW,GAC3DyD,QAASC,EAAAA,GACTC,WAAWpB,EAAAA,EAAAA,IAAcjF,EAAeiC,SACxC2B,SAAU7B,IACF/B,EAAe2C,UACf1C,GAAkBO,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACduF,GAAG,IACNoC,QAAQ0D,EAAAA,EAAAA,IAAetG,EAAe2C,UAAWZ,EAAEwE,OAAOxF,OAC1D2B,SAAUX,EAAEwE,OAAOxF,UAEhBf,EAAe4C,OACtB3C,GAAkBO,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACduF,GAAG,IACNmC,WAAW6D,EAAAA,EAAAA,IAAShG,EAAIoC,OAAQb,EAAEwE,OAAOxF,OACzC2B,SAAUX,EAAEwE,OAAOxF,UAGvBd,GAAkBO,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACduF,GAAG,IACNkC,SAAUX,EAAEwE,OAAOxF,SAE3B,EAEJc,UAAU,WACV4E,IAAK,QAKblF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,wBAAuBvH,SAAA,EAClCL,EAAAA,EAAAA,KAAA,SAAAK,SAAO,WACPL,EAAAA,EAAAA,KAAA,SACI8G,MAAOf,EAAe2C,UAAY3C,EAAe2C,UAAY,GAC7DwD,QAASC,EAAAA,GACTC,WAAWpB,EAAAA,EAAAA,IAAcjF,EAAeiC,SACxC2B,SAAU7B,GAAK9B,GAAkBO,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7BuF,GAAG,IACNmC,UAAWZ,EAAEwE,OAAOxF,MACpB6B,OAAQpC,EAAIkC,UAAW4D,EAAAA,EAAAA,IAAevE,EAAEwE,OAAOxF,MAAOP,EAAIkC,UAAYlC,EAAIoC,WAE9EsD,UAAQ,EACRrE,UAAU,iBAKlBN,EAAAA,EAAAA,MAAA,OAAKM,UAAU,wBAAuBvH,SAAA,EAClCL,EAAAA,EAAAA,KAAA,SAAAK,SAAO,SACPiH,EAAAA,EAAAA,MAAA,UACIR,MAAOf,EAAe0G,IACtB9C,SAAU7B,IACN,MAAM4E,EAAgB5E,EAAEwE,OAAOI,cACzBjD,EAAQ3B,EAAEwE,OAAO1C,QAAQ8C,GAAeC,KACxC7F,EAAQgB,EAAEwE,OAAOxF,MACvBd,GAAkBO,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUuF,GAAG,IAAEkG,IAAK3F,EAAO+E,MAAOpC,KAAS,EAEpE7B,UAAU,WACVwE,WAAWpB,EAAAA,EAAAA,IAAcjF,EAAeiC,SAAS3H,SAAA,EAEjDL,EAAAA,EAAAA,KAAA,UAAQ8G,MAAM,GAAGsF,UAAQ,EAAA/L,SAAC,WACzBmF,EAAImB,KAAI,CAACiG,EAAGC,KACT7M,EAAAA,EAAAA,KAAA,UAAQ8G,MAAO8F,EAAElB,QAAQrL,SAAWuM,EAAEf,OAAPgB,YAM3CvF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,eAAcvH,SAAA,EACzBL,EAAAA,EAAAA,KAAA,SAAAK,SAAO,YACPL,EAAAA,EAAAA,KAAA,SACIiM,UAAQ,EACRnF,MAAOf,EAAe4C,OAAS5C,EAAe4C,OAAS,GACvDuD,QAASC,EAAAA,GACTC,WAAWpB,EAAAA,EAAAA,IAAcjF,EAAeiC,SACxC2B,SAAU7B,GAAK9B,GAAkBO,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7BuF,GAAG,IACNoC,OAAQb,EAAEwE,OAAOxF,MACjB4B,UAAWnC,EAAIkC,UAAW8D,EAAAA,EAAAA,IAASzE,EAAEwE,OAAOxF,MAAOP,EAAIkC,UAAYlC,EAAImC,cAE3Ed,UAAU,WACV4E,IAAK,OAIZhG,OAAOsG,OAAO/G,EAAgB,eAC3BuB,EAAAA,EAAAA,MAAA,OAAKM,UAAU,eAAcvH,SAAA,EACzBL,EAAAA,EAAAA,KAAA,SAAAK,SAAO,YACPL,EAAAA,EAAAA,KAACuJ,EAAAA,GAAM,CACHzC,MAAO,CACHA,MAAqB,OAAdf,QAAc,IAAdA,OAAc,EAAdA,EAAgBgH,UACvBtD,OAA+E,QAAxExE,EAAAQ,EAAQyB,MAAK8F,IAAK7G,EAAAA,EAAAA,IAAc6G,EAAEC,UAAyB,OAAdlH,QAAc,IAAdA,OAAc,EAAdA,EAAgBgH,oBAAW,IAAA9H,OAAA,EAAxEA,EAA0EiI,cAAe,IAEpGvD,SAAW7B,GAAM9B,GAAkBO,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUuF,GAAG,IAAEwG,UAAWjF,EAAEhB,UAClE8C,QAAS,CACL,CAAE9C,MAAO,GAAI2C,MAAO,SAAUI,YAAY,GAC1C,CACIJ,MAAO,0BACPG,SAASuD,EAAAA,EAAAA,IAAQ1H,GAASwC,QACtBmF,IACID,EAAAA,EAAAA,IAAQrH,GAAe6E,MACnB0C,IACIlH,EAAAA,EAAAA,IAAiB,OAAHkH,QAAG,IAAHA,OAAG,EAAHA,EAAKJ,UAAc,OAAHG,QAAG,IAAHA,OAAG,EAAHA,EAAKH,aAChC9G,EAAAA,EAAAA,IAA4B,OAAdJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBiC,QAAY,OAAHqF,QAAG,IAAHA,OAAG,EAAHA,EAAKjG,gBAI7DT,KAAIQ,IAAG,CACLL,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAK8F,UACZxD,OAAU,OAAHtC,QAAG,IAAHA,OAAG,EAAHA,EAAK+F,aACN,WACAI,EAAAA,EAAAA,GAA8B,OAAdvH,QAAc,IAAdA,OAAc,EAAdA,EAAgBiC,QAAY,OAAHb,QAAG,IAAHA,OAAG,EAAHA,EAAK8F,UAAWnH,GACzD,SAGd,CACI2D,MAAO,gBACPG,SAASuD,EAAAA,EAAAA,IAAQ1H,GAASwC,QACtBmF,IACID,EAAAA,EAAAA,IAAQrH,GAAe6E,MACnB0C,MACIlH,EAAAA,EAAAA,IAAiB,OAAHkH,QAAG,IAAHA,OAAG,EAAHA,EAAKJ,UAAc,OAAHG,QAAG,IAAHA,OAAG,EAAHA,EAAKH,aAChC9G,EAAAA,EAAAA,IAA4B,OAAdJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBiC,QAAY,OAAHqF,QAAG,IAAHA,OAAG,EAAHA,EAAKjG,iBAI7DT,KAAIQ,IAAG,CAAOL,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAK8F,UAAWxD,MAAU,OAAHtC,QAAG,IAAHA,OAAG,EAAHA,EAAK+F,kBAG3DnD,OAAQnJ,EAAAA,GACRiJ,aAAamB,EAAAA,EAAAA,IAA4B,OAAdjF,QAAc,IAAdA,OAAc,EAAdA,EAAgBiC,SAC3CgC,iBAAkBC,SAASC,KAC3BC,cAAc,EACdC,YAAa,gBACbC,cAAe,eAQnC/C,EAAAA,EAAAA,MAACiG,EAAAA,EAAa,CAAC3F,UAAU,oDAAmDvH,SAAA,EACxEL,EAAAA,EAAAA,KAACwN,EAAAA,EAAM,CAACC,QAASA,IAAMzH,EAAkBH,GAAe3C,KAAK,SAASwK,WAAW1N,EAAAA,EAAAA,KAAC2N,EAAAA,EAAQ,IAAItN,SAAC,WAC/FiH,EAAAA,EAAAA,MAAA,QAAAjH,SAAA,EACIL,EAAAA,EAAAA,KAACwN,EAAAA,EAAM,CAACtK,KAAK,SAASuK,QAASpG,EAAYhH,SAAC,YAC5CL,EAAAA,EAAAA,KAACwN,EAAAA,EAAM,CAACtK,KAAK,SAASjB,QAAQ,WAAU5B,SAAC,sBAK1D,C,mMCxXX,MAAMiN,EAAkBA,CAACtF,EAASiF,EAAWnH,KAAmB,IAAD8H,EAC3D,MAAMC,EAKL,QALqBD,GAAGT,EAAAA,EAAAA,IAAQrH,GAAeoB,MAC5C4G,IACI3H,EAAAA,EAAAA,IAAwB,OAAV2H,QAAU,IAAVA,OAAU,EAAVA,EAAY1G,WAAYY,KACtC7B,EAAAA,EAAAA,IAAwB,OAAV2H,QAAU,IAAVA,OAAU,EAAVA,EAAYb,UAAWA,YAE5C,IAAAW,OAAA,EALwBA,EAKtBG,QAEH,OACyB,OAArBF,QACqBxK,IAArBwK,GACAzJ,OAAO4J,MAAMH,IACO,GAApBA,EAEO,EAGJA,CAAgB,EA6X3B,EA1XkC9I,IAgB3B,IAhB4B,UAC/BkJ,EAAS,WACTC,EAAU,KACV9I,EAAI,QACJC,EAAO,SACP8I,EAAQ,SACR9N,EAAQ,cACR+N,EAAa,iBACbC,EAAgB,SAChB/I,EAAW,GAAE,cACbI,EAAa,QACbC,EAAO,YACP2I,EAAc,CAAC,EAAC,eAChBC,EAAc,QACd9I,EAAU,GAAE,cACZK,EAAgB,IACnBf,EAEG,MAAMmB,GAAcC,EAAAA,EAAAA,IAAcT,EAAe,GAC3CU,GAAmBD,EAAAA,EAAAA,IAAcT,EAAe,IAI/C8I,EAAYC,IAAiBxI,EAAAA,EAAAA,UAAS,KACtCyI,EAASC,IAAc1I,EAAAA,EAAAA,UAAS,CACnC2I,UAAUC,EAAAA,EAAAA,MACVC,QAAQD,EAAAA,EAAAA,MACRE,QAAQ,EACRC,OAAQ,CAAElI,MAAO,GAAI2C,MAAO,sCAGhCpD,EAAAA,EAAAA,YAAU,KACN,IAAI2E,EAAAA,EAAAA,IAAcmD,IAAa/I,EAAM,CACjC,MAAM,SAAEwJ,EAAQ,OAAEE,GAAWJ,EACzBT,GAAWA,KACfgB,EAAAA,EAAAA,GAAU,CACN1M,QAAQ,4BAAD2M,OAA8BN,EAAQ,YAAAM,OAAWJ,EAAM,iBAAAI,OAAgBf,KAC/EgB,MAAKC,IACAA,EAAKC,QAASZ,EAAcW,EAAKA,MAChCX,EAAc,GAAG,IACvBa,OAAMxH,GAAKyH,QAAQC,MAAM1H,KAAI2H,SAAQ,KAChCvB,GAAYA,GAAY,GAEpC,IACD,CAACQ,EAAQK,SAEZ,MAAMW,EAAsB,SAACC,GAA+C,IAAnCC,EAAazM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEtD,GAFkEA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAK9D,OAFAkL,GAAehI,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUuF,GAAG,IAAEsJ,MAAO,YACxCxB,EAAiB,IAIrBE,GAAehI,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUuF,GAAG,IAAEsJ,MAAOzL,OAAiB,OAAVuL,QAAU,IAAVA,OAAU,EAAVA,EAAYG,WAE3DzB,GAAiB9H,IACb,MAAMwJ,EAAU,IAAIxJ,GACpB,OAAO4G,EAAAA,EAAAA,IAAkB,OAAVwC,QAAU,IAAVA,OAAU,EAAVA,EAAYK,eAAerJ,KAAI,CAACsJ,EAAKC,IAChD1J,OAAOC,YACHD,OAAOE,QAAQyJ,EAAAA,IAAyBxJ,KAAIC,IAAmB,IAADuB,EAAAiI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAhB7J,EAAKC,GAAMF,EAErD,MAAMwB,EAzCEpB,KAAS,IAAAC,EAAA,OAAqE,QAArEA,EAAa,OAAR3B,QAAQ,IAARA,OAAQ,EAARA,EAAU4B,MAAKC,IAAOhB,EAAAA,EAAAA,IAAiB,OAAHgB,QAAG,IAAHA,OAAG,EAAHA,EAAKC,WAAYJ,YAAW,IAAAC,EAAAA,EAAI,CAAC,CAAC,EAyCtEF,CAAmBkJ,EAAIjI,SACvCK,EAAgB1C,EAAUyC,EAAcE,OAASF,EAAcG,MAC/DC,EAAYH,EAAgB,GAE5B,UAAEK,EAAS,SAAED,EAAQ,OAAEE,GAAWsH,EAElCrH,EAAUxC,EAAmB,UAAYF,EAAc,SAAW,MAClE2C,GAAc9F,EAAAA,EAAAA,GAAoB2F,EAAWL,EAAeO,GAC5DE,GAAU/F,EAAAA,EAAAA,GAAoB4F,EAAQN,EAAeO,GAErDG,EAAWpD,EAA6B,EAAnBmD,EAAQnE,SAC7BqE,EAAUrD,EAAUmD,EAAQjE,SAAW,EACvCoE,EAAYtD,EAAgC,EAAtBmD,EAAQlE,YAC9BsE,EAAWvD,EAAUmD,EAAQhE,YAAc,EAEjD,OAAQ+B,GACJ,IAAK,OAAQ,MAAO,CAACA,EAAiB,QAAdsB,EAAE+H,EAAW,SAAC,IAAA/H,EAAAA,EAAIrB,GAC1C,IAAK,UAAW,MAAO,CAACD,EAAmB,QAAhBuJ,EAAEH,EAAa,eAAC,IAAAG,EAAAA,EAAItJ,GAC/C,IAAK,YAAa,MAAO,CAACD,EAAgC,QAA7BwJ,EAAe,OAAbjI,QAAa,IAAbA,OAAa,EAAbA,EAAee,oBAAY,IAAAkH,EAAAA,EAAIvJ,GAC9D,IAAK,YAAa,MAAO,CAACD,GAAKtD,EAAAA,EAAAA,IAASmF,IAExC,IAAK,WACL,IAAK,UACL,IAAK,cAyBL,IAAK,YAAa,MAAO,CAAC7B,GAAKtD,EAAAA,EAAAA,IAASkF,IAvBxC,IAAK,SAAU,MAAO,CAAC5B,EAAK8B,GAC5B,IAAK,WAAY,MAAO,CAAC9B,EAA2B,QAAxByJ,EAAElI,EAAc0D,gBAAQ,IAAAwE,EAAAA,EAAIxJ,GAExD,IAAK,UAAW,MAAO,CAACD,EAAmB,QAAhB0J,EAAEN,EAAa,eAAC,IAAAM,EAAAA,EAAIzJ,GAC/C,IAAK,cAAe,MAAO,CAACD,EAAmB,QAAhB2J,EAAEP,EAAa,eAAC,IAAAO,EAAAA,EAAI1J,GACnD,IAAK,kBAAmB,MAAO,CAACD,EAAmB,QAAhB4J,EAAER,EAAa,eAAC,IAAAQ,EAAAA,EAAI3J,GACvD,IAAK,YAAa,MAAO,CAACD,EAAiB,QAAd6J,EAAET,EAAW,aAAC,IAAAS,EAAAA,EAAI5J,GAC/C,IAAK,YAAa,CAAC,IAAD6J,EACd,MAAMC,GAAgB5F,EAAAA,EAAAA,IAA2B,OAAb4E,QAAa,IAAbA,OAAa,EAAbA,EAAe3C,WAC7C4D,GAAc7F,EAAAA,EAAAA,IAA2B,OAAb4E,QAAa,IAAbA,OAAa,EAAbA,EAAe5H,SAC3C8I,GAAa3K,EAAAA,EAAAA,IAAiB,OAAH8J,QAAG,IAAHA,OAAG,EAAHA,EAAKjI,QAAsB,OAAb4H,QAAa,IAAbA,OAAa,EAAbA,EAAe5H,SACxD+I,EAEL,QAFcJ,EAAGZ,EAAQ7I,MACtB8J,IAAU7K,EAAAA,EAAAA,IAAc6K,EAAOhJ,QAAY,OAAHiI,QAAG,IAAHA,OAAG,EAAHA,EAAKjI,kBAChD,IAAA2I,OAAA,EAFiBA,EAEf5D,UAMH,MAAO,CAAClG,EAJU+J,GAAiBC,GAAeC,EAC5ClB,EAAc3C,WACdjC,EAAAA,EAAAA,IAAc+F,GAAaA,EAAYjK,EAGjD,CAEA,IAAK,eAAgB,MAAO,CAACD,EAAKgC,EAAY1E,aAE9C,IAAK,SAAU,MAAO,CAAC0C,EAAK2B,EAAY,EAAI,GAC5C,IAAK,iBAAkB,MAAO,CAAC3B,EAAKiC,EAAQ3E,aAC5C,IAAK,WAAY,MAAO,CAAC0C,EAAKwB,GAC9B,IAAK,OACL,IAAK,OAAQ,MAAO,CAACxB,EAAY,OAAPkC,QAAO,IAAPA,EAAAA,EAAW,GACrC,IAAK,WACL,IAAK,WAAY,MAAO,CAAClC,EAAKT,EAAmB,EAAI6C,GACrD,IAAK,OAAQ,MAAO,CAACpC,EAAY,OAAPmC,QAAO,IAAPA,EAAAA,EAAW,GACrC,IAAK,WAAY,MAAO,CAACnC,EAAKT,EAAmB,EAAI8C,GACrD,IAAK,YAAa,MAAO,CAACrC,EAAKiC,EAAQzE,UAEvC,QAAS,MAAO,CAACwC,EAAKC,GAC1B,MAGV,GAIV,EAEMO,EAAcA,KACZhC,GAASA,IACboJ,EAAc,GAAG,EAGrB,OACInH,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAlH,SAAA,CACKA,GAEDiH,EAAAA,EAAAA,MAACE,EAAAA,EAAM,CACHpC,KAAMA,EACNC,QAASgC,EACT4J,YAAU,EAAA5Q,SAAA,EAEVL,EAAAA,EAAAA,KAAC2H,EAAAA,EAAW,CAAAtH,UACRiH,EAAAA,EAAAA,MAAA,OAAKM,UAAU,uCAAsCvH,SAAA,EACjDL,EAAAA,EAAAA,KAAA,QAAM4H,UAAU,cAAavH,SAAC,uBAC9BL,EAAAA,EAAAA,KAACkR,EAAAA,EAAU,CACPzD,QAASpG,EACTnH,MAAM,UAASG,UAEfL,EAAAA,EAAAA,KAACmR,EAAAA,EAAI,CAACvJ,UAAU,kBAI5BN,EAAAA,EAAAA,MAACgC,EAAAA,EAAa,CAAAjJ,SAAA,EAEViH,EAAAA,EAAAA,MAAA,OAAKM,UAAU,mCAAkCvH,SAAA,EAC7CiH,EAAAA,EAAAA,MAAA,OAAKM,UAAU,MAAKvH,SAAA,EAChBL,EAAAA,EAAAA,KAAA,SAAO4H,UAAU,eAAcvH,SAAC,eAChCL,EAAAA,EAAAA,KAAA,SACI4H,UAAU,sBACV1E,KAAK,OACL4D,MAAc,OAAP4H,QAAO,IAAPA,OAAO,EAAPA,EAASE,SAChBjF,SAAU7B,GAAK6G,GAAWpI,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUuF,GAAG,IAAEqI,SAAU9G,EAAEwE,OAAOxF,UAC/DmF,UAAQ,QAGhB3E,EAAAA,EAAAA,MAAA,OAAKM,UAAU,MAAKvH,SAAA,EAChBL,EAAAA,EAAAA,KAAA,SAAO4H,UAAU,eAAcvH,SAAC,aAChCL,EAAAA,EAAAA,KAAA,SACI4H,UAAU,sBACV1E,KAAK,OACLsJ,IAAKkC,EAAQE,SACb9H,MAAc,OAAP4H,QAAO,IAAPA,OAAO,EAAPA,EAASI,OAChBnF,SAAU7B,GAAK6G,GAAWpI,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUuF,GAAG,IAAEuI,OAAQhH,EAAEwE,OAAOxF,UAC7DmF,UAAQ,QAmBhBjM,EAAAA,EAAAA,KAAA,OAAK4H,UAAU,MAAKvH,UAChBL,EAAAA,EAAAA,KAACwN,EAAAA,EAAM,CACHvL,QAAQ,WACRiB,KAAK,SACLuK,QAASA,IAAMkB,GAAWpI,IAAGvF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUuF,GAAG,IAAEwI,QAASxI,EAAIwI,WAAW1O,SACvE,iBAITL,EAAAA,EAAAA,KAAA,SAECwO,EAAW7H,KAAI,CAACyK,EAASpF,KACtB,MAAM,UACFqF,EAAS,QAAEC,EAAO,eAAEC,EAAc,YAAEC,EAAW,kBAC/CC,EAAiB,UAAEC,EAAS,oBAAEC,EAAmB,cAAE3B,GACnDoB,EAEEQ,GAAYzL,EAAAA,EAAAA,IAAyB,OAAXmI,QAAW,IAAXA,OAAW,EAAXA,EAAauB,MAAOuB,EAAQtB,OAE5D,OACI9P,EAAAA,EAAAA,KAAA,OAAK4H,UAAU,kBAAiBvH,UAC5BiH,EAAAA,EAAAA,MAAA,OACIM,UAAS,gJAAAsH,OAEH0C,EAAY,mBAAqB,GAAE,8CAExCvR,SAAA,EAGDiH,EAAAA,EAAAA,MAAA,MAAIM,UAAU,sCAAqCvH,SAAA,EAC/CL,EAAAA,EAAAA,KAAA,QAAM4H,UAAU,OAAMvH,UAClBL,EAAAA,EAAAA,KAAA,SACI4H,UAAU,uCACV3H,MAAO,CAAEuB,QAAS,SAClB0B,KAAK,WACL2O,QAASD,EACTjI,SAAUA,KACS+F,EAAoB0B,EAAS,OAAxCQ,EAC0C,OAI1DtK,EAAAA,EAAAA,MAAA,QAAAjH,SAAA,CAAM,gBAAYL,EAAAA,EAAAA,KAAA,QAAM4H,UAAU,eAAcvH,SAAEgR,WAEtD/J,EAAAA,EAAAA,MAAA,OAAKM,UAAU,kFAAiFvH,SAAA,EAC5FiH,EAAAA,EAAAA,MAAA,OAAAjH,SAAA,EACIiH,EAAAA,EAAAA,MAAA,OAAAjH,SAAA,EAAKL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,kBAAsB,KAAEyR,EAAAA,EAAAA,IAAUR,OAC/ChK,EAAAA,EAAAA,MAAA,OAAAjH,SAAA,EAAKL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,kBAAsB,IAAEkR,MACrCjK,EAAAA,EAAAA,MAAA,OAAAjH,SAAA,EAAKL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,YAAgB,IAAEmR,SAEnClK,EAAAA,EAAAA,MAAA,OAAKM,UAAU,WAAUvH,SAAA,EACrBiH,EAAAA,EAAAA,MAAA,MAAIM,UAAU,OAAMvH,SAAA,EAACL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,mBAAuB,UAAGsR,MAEvDrK,EAAAA,EAAAA,MAAA,OAAAjH,SAAA,EAAKL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,SAAa,UAAGqR,MAE7BpK,EAAAA,EAAAA,MAAA,OAAAjH,SAAA,EAAKL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,iBAAqB,IAAEoR,YAK5CzR,EAAAA,EAAAA,KAAA,OAAK4H,UAAU,mBAAkBvH,UAC7BiH,EAAAA,EAAAA,MAAA,SAAOM,UAAU,mDAAkDvH,SAAA,EAC/DL,EAAAA,EAAAA,KAAA,SAAO4H,UAAU,cAAavH,UAC1BL,EAAAA,EAAAA,KAAA,MAAAK,SACK,CAAC,IAAK,UAAW,MAAO,OAAQ,SAAU,QAAS,eAAgB,UAAUsG,KAC1E,CAACiG,EAAGC,KACA7M,EAAAA,EAAAA,KAAA,MAEIC,MAAO,CACH8R,SAAU,QACVtK,SAAU,SACZpH,SACJuM,GALOC,UAUzB7M,EAAAA,EAAAA,KAAA,SAAAK,SACK2P,EAAcrJ,KAAI,CAACqL,EAAMC,KAAK,IAAAC,EAAA,OAC3B5K,EAAAA,EAAAA,MAAA,MAAAjH,SAAA,EACIL,EAAAA,EAAAA,KAAA,MAAAK,SAAK4R,EAAQ,KACbjS,EAAAA,EAAAA,KAAA,MAAAK,SAAK2R,EAAK7I,gBACV7B,EAAAA,EAAAA,MAAA,MAAAjH,SAAA,CACK2R,EAAKvJ,UACLuC,EAAAA,EAAAA,IAAc0D,EAAQM,OAAOlI,QAC1B,UAAYwG,EAAgB0E,EAAKhK,QAAS0G,EAAQM,OAAOlI,MAAOhB,GAAiB,SAGzFwB,EAAAA,EAAAA,MAAA,MAAAjH,SAAA,CAAI,SAAE2R,EAAKtJ,cACXpB,EAAAA,EAAAA,MAAA,MAAAjH,SAAA,CAAI,SAAE2R,EAAKrJ,WACXrB,EAAAA,EAAAA,MAAA,MAAAjH,SAAA,CAAK2R,EAAKG,SAAS,QACnB7K,EAAAA,EAAAA,MAAA,MAAAjH,SAAA,CAAI,SAAE2R,EAAKI,cACXpS,EAAAA,EAAAA,KAAA,MAAAK,UACIiH,EAAAA,EAAAA,MAAA,UACI8E,UAAWwF,EACXhK,UAAU,eACVd,MASK,QATAoL,GACD/E,EAAAA,EAAAA,IAAQ1H,GAASyB,MACbmL,IAAUlF,EAAAA,EAAAA,IAAQiB,GAAelH,MAC7BmG,IACIlH,EAAAA,EAAAA,IAAckH,EAAIrF,QAAa,OAAJgK,QAAI,IAAJA,OAAI,EAAJA,EAAMhK,UAC9B4J,IACAzL,EAAAA,EAAAA,IAAoB,OAANkM,QAAM,IAANA,OAAM,EAANA,EAAQpF,UAAc,OAAHI,QAAG,IAAHA,OAAG,EAAHA,EAAKN,sBAGpD,IAAAmF,OAAA,EARDA,EAQGjF,UAEPtD,SAAU7B,GAAK4H,EACX0B,EACA,CACInE,UAAWnF,EAAEwE,OAAOxF,MACpBkB,QAAa,OAAJgK,QAAI,IAAJA,OAAI,EAAJA,EAAMhK,UAEnB,GACF3H,SAAA,EAEFL,EAAAA,EAAAA,KAAA,UAAQ8G,MAAM,GAAGsF,UAAQ,EAAA/L,SAAC,YAC1BL,EAAAA,EAAAA,KAAA,YAAUyJ,MAAM,yBAAwBpJ,UAEhC8M,EAAAA,EAAAA,IAAQ1H,GAASwC,QACbmF,IACID,EAAAA,EAAAA,IAAQrH,GAAe6E,MACnB0C,IACIlH,EAAAA,EAAAA,IAAiB,OAAHkH,QAAG,IAAHA,OAAG,EAAHA,EAAKJ,UAAc,OAAHG,QAAG,IAAHA,OAAG,EAAHA,EAAKH,aAChC9G,EAAAA,EAAAA,IAAkB,OAAJ6L,QAAI,IAAJA,OAAI,EAAJA,EAAMhK,QAAY,OAAHqF,QAAG,IAAHA,OAAG,EAAHA,EAAKjG,gBAInDT,KAAI,CAACQ,EAAKmL,KACRtS,EAAAA,EAAAA,KAAA,UACI8G,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAK8F,UAAU5M,UAGlB,OAAH8G,QAAG,IAAHA,OAAG,EAAHA,EAAK+F,aACA,UACAI,EAAoB,OAAJ0E,QAAI,IAAJA,OAAI,EAAJA,EAAMhK,QAAY,OAAHb,QAAG,IAAHA,OAAG,EAAHA,EAAK8F,UAAWnH,GAC/C,KALDwM,QAWrBtS,EAAAA,EAAAA,KAAA,YAAUyJ,MAAM,eAAcpJ,UAEtB8M,EAAAA,EAAAA,IAAQ1H,GAASwC,QACbmF,KACID,EAAAA,EAAAA,IAAQrH,GAAe6E,MACnB0C,IACIlH,EAAAA,EAAAA,IAAiB,OAAHkH,QAAG,IAAHA,OAAG,EAAHA,EAAKJ,UAAc,OAAHG,QAAG,IAAHA,OAAG,EAAHA,EAAKH,aAChC9G,EAAAA,EAAAA,IAAkB,OAAJ6L,QAAI,IAAJA,OAAI,EAAJA,EAAMhK,QAAY,OAAHqF,QAAG,IAAHA,OAAG,EAAHA,EAAKjG,gBAInDT,KAAI,CAACQ,EAAKmL,KACRtS,EAAAA,EAAAA,KAAA,UAAQ8G,MAAU,OAAHK,QAAG,IAAHA,OAAG,EAAHA,EAAK8F,UAAU5M,SAAkB,OAAH8G,QAAG,IAAHA,OAAG,EAAHA,EAAK+F,aAAdoF,cA3EnDN,EAAKO,SAiFT,YAOrBvS,EAAAA,EAAAA,KAAA,OAAK4H,UAAU,sDAnJeoE,EAuJhC,YAMvB,C,8EClZX,MAAMwG,GAAUC,EAAAA,EAAAA,MAAiBC,KAEpBC,EAA0B,CACnCC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTC,UAAW,GAEXC,aAAc,GACdC,SAASpE,EAAAA,EAAAA,MACTqE,YAAa,GACbC,cAAe,GACfC,mBAAoB,GACpBC,UAAW,GACX3N,cAAe,EACfC,QAAS,EACT2N,UAAW,GACXC,cAAe,EACf1D,MAAO,GACP2D,WAAY,GAEZC,WAAY,GACZC,WAAY,GACZC,WAAY,GACZC,eAAgB,GAChBC,UAAW,GACXC,iBAAkB,GAClBpC,UAAW,GACXC,oBAAqB,GAarBoC,SAAU,GACVC,WAAmB,OAAPxB,QAAO,IAAPA,OAAO,EAAPA,EAASyB,OACrBC,WAAmB,OAAP1B,QAAO,IAAPA,OAAO,EAAPA,EAASyB,OACrBE,WAAY,GACZC,UAAW,IAIFjE,EAA0B,CACnCkE,SAAU,GACVpB,QAAS,GACTqB,kBAAmB,GAEnBvH,UAAW,GACXwH,KAAM,GACNvM,QAAS,GACTwM,UAAW,GACX1I,SAAU,GACV2I,OAAQ,GAERhM,SAAU,GACViM,QAAS,GACTC,YAAa,GACbC,SAAU,GACVC,UAAW,GAEXnM,UAAW,GACXoM,aAAc,GACdnM,OAAQ,GAER+C,QAAS,GACTE,UAAW,GACXmJ,YAAa,GACbC,gBAAiB,GAEjBC,eAAgB,GAChB9C,SAAU,GAEV+C,KAAM,GACNC,KAAM,GACNC,KAAM,GACNnM,SAAU,GACVoM,SAAU,GACVnM,SAAU,GAEVkJ,UAAW,GACX+B,WAAY,IAIHmB,EAA2B,CACpCC,GAAI,GACJ3C,MAAO,GACP4C,IAAK,GACLC,WAAY,GACZP,KAAM,EACNjM,SAAU,EACVkM,KAAM,EACNE,SAAU,EACVD,KAAM,EACNlM,SAAU,EACVwM,cAAe,GAINC,EAAwB,CACjCJ,GAAI,GACJ3C,MAAO,GACPgD,OAAQ,GACRC,SAAU,GACVC,YAAa,G,6DC7GjB,SAAeC,EAAAA,EAAAA,IAA4B/V,EAAAA,EAAAA,KAAK,OAAQ,CACtDgW,EAAG,sCACD,M,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4B/V,EAAAA,EAAAA,KAAK,OAAQ,CACtDgW,EAAG,6CACD,W,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4B/V,EAAAA,EAAAA,KAAK,OAAQ,CACtDgW,EAAG,6EACD,S,6DCFJ,SAAeD,EAAAA,EAAAA,IAA4B/V,EAAAA,EAAAA,KAAK,OAAQ,CACtDgW,EAAG,gDACD,O,4DCFJ,SAAeD,EAAAA,EAAAA,IAA4B/V,EAAAA,EAAAA,KAAK,OAAQ,CACtDgW,EAAG,uIACD,O,0ICJG,SAASC,EAA2BC,GACzC,OAAOC,EAAAA,EAAAA,IAAqB,iBAAkBD,EAChD,EAC2BE,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,S,eCDrE,MAAMC,EAAY,CAAC,YAAa,aAkB1BC,GAAkBC,EAAAA,EAAAA,IAAO,MAAO,CACpClU,KAAM,iBACN6T,KAAM,OACNM,kBAAmBA,CAACC,EAAO1M,IAAWA,EAAO2M,MAHvBH,EAIrB,KACM,CACL/U,QAAS,GACT,eAAgB,CACdmV,cAAe,QAoDrB,EAhDiCC,EAAAA,YAAiB,SAAqBC,EAASC,GAC9E,MAAML,GAAQM,EAAAA,EAAAA,GAAgB,CAC5BN,MAAOI,EACPxU,KAAM,oBAEF,UACFuF,EAAS,UACToP,EAAY,OACVP,EACJQ,GAAQC,EAAAA,EAAAA,GAA8BT,EAAOJ,GACzCc,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGX,EAAO,CACrCO,cAEIK,EAlCkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,EAAAA,EAAAA,GAHO,CACZZ,KAAM,CAAC,SAEoBT,EAA4BoB,EAAQ,EA2BjDE,CAAkBJ,GAClC,OAAoBnX,EAAAA,EAAAA,KAAKsW,GAAiBc,EAAAA,EAAAA,GAAS,CACjDI,GAAIR,EACJpP,WAAW6P,EAAAA,EAAAA,GAAKJ,EAAQX,KAAM9O,GAC9BuP,WAAYA,EACZL,IAAKA,GACJG,GACL,G","sources":["Components/requiredStar.jsx","Components/tablecolumn.js","Components/taxCalculator.js","Pages/Sales/SaleOrder/addItemToCart.jsx","Pages/Sales/SalesInvoice/importFromSaleOrder.jsx","Pages/Sales/SalesInvoice/variable.js","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/ClearAll.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Done.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: '45px',\r\n        background: 'rgba(255, 255, 255, 0.322)'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n            ? '#E2ECF9'\r\n            : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","/**\r\n * @param {number} amount \r\n * @param {number} gstRate \r\n * @param {string} type 3 Types add, remove, zerotax\r\n * @returns {object} \r\n */\r\n\r\nimport { toNumber } from \"./functions\";\r\n\r\nexport const calculateGSTDetails = (amount, gstRate, type = 'add') => {\r\n\r\n    const validatedAmount = toNumber(amount);\r\n    const validatedGstRate = toNumber(gstRate);\r\n\r\n    const halfGstRate = validatedGstRate / 2;\r\n    let baseAmount, taxAmount, withTax, withoutTax;\r\n\r\n    if (type === 'zerotax') {\r\n        baseAmount = validatedAmount; // No tax applied\r\n        taxAmount = 0;\r\n        withTax = validatedAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'add') {\r\n        taxAmount = (validatedAmount * validatedGstRate) / 100;\r\n        baseAmount = validatedAmount;\r\n        withTax = validatedAmount + taxAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'remove') {\r\n        baseAmount = validatedAmount / (1 + validatedGstRate / 100);\r\n        taxAmount = validatedAmount - baseAmount;\r\n        withTax = validatedAmount;\r\n        withoutTax = baseAmount;\r\n    } else {\r\n        throw new Error(\"Invalid type. Use 'add', 'remove', or 'zerotax'.\");\r\n    }\r\n\r\n    const sgstAmount = (taxAmount / 2).toFixed(2);\r\n    const cgstAmount = (taxAmount / 2).toFixed(2);\r\n    const igstAmount = taxAmount.toFixed(2);\r\n\r\n    return {\r\n        base_amount: Number(baseAmount).toFixed(2),\r\n        with_tax: Number(withTax).toFixed(2),\r\n        without_tax: Number(withoutTax).toFixed(2),\r\n        tax_per: Number(validatedGstRate),\r\n        tax_amount: Number(taxAmount).toFixed(2),\r\n        sgst_per: Number(halfGstRate),\r\n        sgst_amount: Number(sgstAmount),\r\n        cgst_per: Number(halfGstRate),\r\n        cgst_amount: Number(cgstAmount),\r\n        igst_per: Number(validatedGstRate),\r\n        igst_amount: Number(igstAmount),\r\n        type,\r\n    };\r\n};","import { useEffect, useState } from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { checkIsNumber, Division, isEqualNumber, isValidObject, Multiplication, onlynum, RoundNumber, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { ClearAll } from \"@mui/icons-material\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from \"react-toastify\";\r\nimport { validStockValue } from \"../SalesInvoice/importFromSaleOrder\";\r\n\r\nconst AddItemToSaleOrderCart = ({\r\n    children,\r\n    orderProducts = [],\r\n    setOrderProducts,\r\n    open = false,\r\n    onClose,\r\n    products = [],\r\n    brands = [],\r\n    uom = [],\r\n    godowns = [],\r\n    GST_Inclusive,\r\n    IS_IGST,\r\n    editValues = null,\r\n    initialValue = {},\r\n    stockInGodown = [],\r\n}) => {\r\n\r\n    const [productDetails, setProductDetails] = useState(initialValue);\r\n\r\n    const isInclusive = isEqualNumber(GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(GST_Inclusive, 2);\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(editValues) && open) {\r\n            setProductDetails(pre => (\r\n                Object.fromEntries(\r\n                    Object.entries(pre).map(([key, value]) => [key, editValues[key] ? editValues[key] : value])\r\n                )\r\n            ))\r\n        }\r\n    }, [editValues])\r\n\r\n    const findProductDetails = (productid) => products?.find(obj => isEqualNumber(obj?.Product_Id, productid)) ?? {};\r\n\r\n    const closeDialog = () => {\r\n        setProductDetails(initialValue);\r\n        onClose();\r\n    }\r\n\r\n    const handleProductInputChange = () => {\r\n\r\n        setOrderProducts(pre => {\r\n            const existingProducts = pre.filter(ordered => !isEqualNumber(ordered.Item_Id, productDetails.Item_Id));\r\n\r\n            const currentProductDetails = Object.fromEntries(\r\n                Object.entries(initialValue).map(([key, value]) => {\r\n                    const productMaster = findProductDetails(productDetails.Item_Id);\r\n                    const gstPercentage = IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n                    const isTaxable = gstPercentage > 0;\r\n\r\n                    const { Bill_Qty, Item_Rate, Amount } = productDetails;\r\n\r\n                    const taxType = isNotTaxableBill ? 'zerotax' : isInclusive ? 'remove' : 'add';\r\n                    const itemRateGst = calculateGSTDetails(Item_Rate, gstPercentage, taxType);\r\n                    const gstInfo = calculateGSTDetails(Amount, gstPercentage, taxType);\r\n\r\n                    const cgstPer = !IS_IGST ? gstInfo.cgst_per : 0;\r\n                    const igstPer = IS_IGST ? gstInfo.igst_per : 0;\r\n                    const Cgst_Amo = !IS_IGST ? gstInfo.cgst_amount : 0;\r\n                    const Igst_Amo = IS_IGST ? gstInfo.igst_amount : 0;\r\n\r\n                    switch (key) {\r\n                        case 'Item_Name': return [key, productMaster.Product_Name]\r\n                        case 'Taxable_Rate': return [key, itemRateGst.base_amount]\r\n                        case 'Total_Qty': return [key, Bill_Qty]\r\n                        case 'Taxble': return [key, isTaxable ? 1 : 0]\r\n                        case 'Taxable_Amount': return [key, gstInfo.base_amount]\r\n                        case 'Tax_Rate': return [key, gstPercentage]\r\n                        case 'Cgst':\r\n                        case 'Sgst': return [key, cgstPer ?? 0]\r\n                        case 'Cgst_Amo':\r\n                        case 'Sgst_Amo': return [key, isNotTaxableBill ? 0 : Cgst_Amo]\r\n                        case 'Igst': return [key, igstPer ?? 0]\r\n                        case 'Igst_Amo': return [key, isNotTaxableBill ? 0 : Igst_Amo]\r\n                        case 'Final_Amo': return [key, gstInfo.with_tax]\r\n\r\n                        default: return [key, productDetails[key] || value]\r\n                    }\r\n                })\r\n            );\r\n\r\n            return [...existingProducts, currentProductDetails];\r\n        });\r\n\r\n        closeDialog();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeDialog}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (productDetails.Item_Id) {\r\n                        handleProductInputChange();\r\n                    } else {\r\n                        toast.warn('Select Product');\r\n                    }\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n\r\n                            {/* brand */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.BrandID, label: productDetails.Brand }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, BrandID: e.value, Brand: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        brands.map(obj => ({ value: obj?.Brand, label: obj?.Brand_Name }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    menuPortalTarget={document.body}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* group */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({ ...pre, GroupID: e.value, Group: e.label }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        products\r\n                                            .filter(\r\n                                                (pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    menuPortalTarget={document.body}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* item name */}\r\n                            <div className=\"col-12 p-2\">\r\n                                <label>Item Name <RequiredStar /></label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.Item_Id,\r\n                                        label: (\r\n                                            findProductDetails(productDetails.Item_Id)?.Product_Name\r\n                                        )\r\n                                    }}\r\n                                    isDisabled={checkIsNumber(productDetails.Pre_Id)}\r\n                                    menuPortalTarget={document.body}\r\n                                    onChange={e => {\r\n                                        const productInfo = findProductDetails(e.value);\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n\r\n                                            Item_Id: e.value,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Bill_Qty: 0,\r\n                                            Amount: 0,\r\n                                            Unit_Id: productInfo.UOM_Id ?? pre.Unit_Id,\r\n                                            Unit_Name: productInfo.Units ?? pre.Unit_Name,\r\n                                            HSN_Code: productInfo?.HSN_Code\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter(pro => productDetails.BrandID ? isEqualNumber(pro.Brand, productDetails.BrandID) : true)\r\n                                                .filter(pro => productDetails.GroupID ? isEqualNumber(pro.Product_Group, productDetails.GroupID) : true)\r\n                                        ].map(obj => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled: (\r\n                                                orderProducts.findIndex(ind => isEqualNumber(\r\n                                                    ind?.Item_Id, obj?.Product_Id\r\n                                                ))\r\n                                            ) === -1 ? false : true\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* quantity */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Quantity <RequiredStar /></label>\r\n                                <input\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : ''}\r\n                                    onInput={onlynum}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(productDetails.Item_Rate, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else if (productDetails.Amount) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(pre.Amount, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Rate */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Rate </label>\r\n                                <input\r\n                                    value={productDetails.Item_Rate ? productDetails.Item_Rate : ''}\r\n                                    onInput={onlynum}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Item_Rate: e.target.value,\r\n                                        Amount: pre.Bill_Qty ? Multiplication(e.target.value, pre.Bill_Qty) : pre.Amount\r\n                                    }))}\r\n                                    required\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* UOM */}\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <select\r\n                                    value={productDetails.UOM}\r\n                                    onChange={e => {\r\n                                        const selectedIndex = e.target.selectedIndex;\r\n                                        const label = e.target.options[selectedIndex].text;\r\n                                        const value = e.target.value;\r\n                                        setProductDetails(pre => ({ ...pre, UOM: value, Units: label }));\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                >\r\n                                    <option value=\"\" disabled>select</option>\r\n                                    {uom.map((o, i) => (\r\n                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            {/* Amount */}\r\n                            <div className=\"col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    required\r\n                                    value={productDetails.Amount ? productDetails.Amount : ''}\r\n                                    onInput={onlynum}\r\n                                    disabled={!checkIsNumber(productDetails.Item_Id)}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Amount: e.target.value,\r\n                                        Item_Rate: pre.Bill_Qty ? Division(e.target.value, pre.Bill_Qty) : pre.Item_Rate\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n\r\n                            {Object.hasOwn(productDetails, 'GoDown_Id') && (\r\n                                <div className=\"col-md-6 p-2\">\r\n                                    <label>Godown</label>\r\n                                    <Select\r\n                                        value={{\r\n                                            value: productDetails?.GoDown_Id,\r\n                                            label: godowns.find(g => isEqualNumber(g.Godown_Id, productDetails?.GoDown_Id))?.Godown_Name || ''\r\n                                        }}\r\n                                        onChange={(e) => setProductDetails(pre => ({ ...pre, GoDown_Id: e.value }))}\r\n                                        options={[\r\n                                            { value: '', label: 'select', isDisabled: true },\r\n                                            {\r\n                                                label: 'Stock-Available-Godowns',\r\n                                                options: toArray(godowns).filter(\r\n                                                    fil => (\r\n                                                        toArray(stockInGodown).some(\r\n                                                            fnd => (\r\n                                                                isEqualNumber(fnd?.Godown_Id, fil?.Godown_Id)\r\n                                                                && isEqualNumber(productDetails?.Item_Id, fnd?.Product_Id)\r\n                                                            )\r\n                                                        )\r\n                                                    )\r\n                                                ).map(obj => ({\r\n                                                    value: obj?.Godown_Id,\r\n                                                    label: obj?.Godown_Name\r\n                                                        + \" (Bal: \"\r\n                                                        + validStockValue(productDetails?.Item_Id, obj?.Godown_Id, stockInGodown)\r\n                                                        + \")\"\r\n                                                }))\r\n                                            },\r\n                                            {\r\n                                                label: 'Other Godowns',\r\n                                                options: toArray(godowns).filter(\r\n                                                    fil => (\r\n                                                        toArray(stockInGodown).some(\r\n                                                            fnd => !(\r\n                                                                isEqualNumber(fnd?.Godown_Id, fil?.Godown_Id)\r\n                                                                && isEqualNumber(productDetails?.Item_Id, fnd?.Product_Id)\r\n                                                            )\r\n                                                        )\r\n                                                    )\r\n                                                ).map(obj => ({ value: obj?.Godown_Id, label: obj?.Godown_Name }))\r\n                                            }\r\n                                        ]}\r\n                                        styles={customSelectStyles}\r\n                                        isDisabled={!checkIsNumber(productDetails?.Item_Id)}\r\n                                        menuPortalTarget={document.body}\r\n                                        isSearchable={true}\r\n                                        placeholder={\"Select Godown\"}\r\n                                        maxMenuHeight={200}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n\r\n                        </div>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions className=\"d-flex justify-content-between align-items-center\">\r\n                        <Button onClick={() => setProductDetails(initialValue)} type='button' startIcon={<ClearAll />}>Clear</Button>\r\n                        <span>\r\n                            <Button type=\"button\" onClick={closeDialog}>cancel</Button>\r\n                            <Button type='submit' variant=\"outlined\">Add</Button>\r\n                        </span>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddItemToSaleOrderCart;","import { useEffect, useState } from \"react\";\r\nimport { checkIsNumber, isEqualNumber, ISOString, LocalDate, toArray, toNumber } from \"../../../Components/functions\";\r\nimport { Button, Dialog, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { Done } from \"@mui/icons-material\";\r\nimport { salesInvoiceDetailsInfo } from \"./variable\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\n\r\nconst validStockValue = (Item_Id, Godown_Id, stockInGodown) => {\r\n    const godownStockValue = toArray(stockInGodown).find(\r\n        godownItem => (\r\n            isEqualNumber(godownItem?.Product_Id, Item_Id) &&\r\n            isEqualNumber(godownItem?.Godown_Id, Godown_Id)\r\n        )\r\n    )?.Bal_Qty;\r\n\r\n    if (\r\n        godownStockValue === null ||\r\n        godownStockValue === undefined ||\r\n        Number.isNaN(godownStockValue) ||\r\n        godownStockValue == 0\r\n    ) {\r\n        return 0;\r\n    }\r\n\r\n    return godownStockValue;\r\n};\r\n\r\nconst AddProductsInSalesInvoice = ({\r\n    loadingOn,\r\n    loadingOff,\r\n    open,\r\n    onClose,\r\n    retailer,\r\n    children,\r\n    selectedItems,\r\n    setSelectedItems,\r\n    products = [],\r\n    GST_Inclusive,\r\n    IS_IGST,\r\n    invoiceInfo = {},\r\n    setInvoiceInfo,\r\n    godowns = [],\r\n    stockInGodown = [],\r\n}) => {\r\n\r\n    const isInclusive = isEqualNumber(GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(GST_Inclusive, 2);\r\n\r\n    const findProductDetails = (productid) => products?.find(obj => isEqualNumber(obj?.Product_Id, productid)) ?? {};\r\n\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        search: false,\r\n        Godown: { value: '', label: 'Select Godown For Stock Details' }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (checkIsNumber(retailer) && open) {\r\n            const { Fromdate, Todate } = filters;\r\n            if (loadingOn) loadingOn();\r\n            fetchLink({\r\n                address: `sales/saleOrder?Fromdate=${Fromdate}&Todate=${Todate}&Retailer_Id=${retailer}`\r\n            }).then(data => {\r\n                if (data.success) setSaleOrders(data.data);\r\n                else setSaleOrders([]);\r\n            }).catch(e => console.error(e)).finally(() => {\r\n                if (loadingOff) loadingOff();\r\n            })\r\n        }\r\n    }, [filters.search])\r\n\r\n    const changeSelectedItems = (itemDetail, godownDetails = {}, deleteRow) => {\r\n\r\n        if (deleteRow) {\r\n            setInvoiceInfo(pre => ({ ...pre, So_No: '' }));\r\n            setSelectedItems([])\r\n            return;\r\n        }\r\n\r\n        setInvoiceInfo(pre => ({ ...pre, So_No: Number(itemDetail?.So_Id) }));\r\n\r\n        setSelectedItems(pre => {\r\n            const oldData = [...pre];\r\n            return toArray(itemDetail?.Products_List).map((cur, curIndex) => (\r\n                Object.fromEntries(\r\n                    Object.entries(salesInvoiceDetailsInfo).map(([key, value]) => {\r\n\r\n                        const productMaster = findProductDetails(cur.Item_Id);\r\n                        const gstPercentage = IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n                        const isTaxable = gstPercentage > 0;\r\n\r\n                        const { Item_Rate, Bill_Qty, Amount } = cur;\r\n\r\n                        const taxType = isNotTaxableBill ? 'zerotax' : isInclusive ? 'remove' : 'add';\r\n                        const itemRateGst = calculateGSTDetails(Item_Rate, gstPercentage, taxType);\r\n                        const gstInfo = calculateGSTDetails(Amount, gstPercentage, taxType);\r\n\r\n                        const cgstPer = !IS_IGST ? gstInfo.cgst_per : 0;\r\n                        const igstPer = IS_IGST ? gstInfo.igst_per : 0;\r\n                        const Cgst_Amo = !IS_IGST ? gstInfo.cgst_amount : 0;\r\n                        const Igst_Amo = IS_IGST ? gstInfo.igst_amount : 0;\r\n\r\n                        switch (key) {\r\n                            case 'S_No': return [key, curIndex + 1 ?? value];\r\n                            case 'Item_Id': return [key, cur['Item_Id'] ?? value];\r\n                            case 'Item_Name': return [key, productMaster?.Product_Name ?? value];\r\n                            case 'Item_Rate': return [key, toNumber(Item_Rate)];\r\n\r\n                            case 'Bill_Qty': return [key, toNumber(Bill_Qty)];\r\n                            case 'Act_Qty': return [key, toNumber(Bill_Qty)];\r\n                            case 'Alt_Act_Qty': return [key, toNumber(Bill_Qty)];\r\n\r\n                            case 'Amount': return [key, Amount];\r\n                            case 'HSN_Code': return [key, productMaster.HSN_Code ?? value];\r\n\r\n                            case 'Unit_Id': return [key, cur['Unit_Id'] ?? value];\r\n                            case 'Act_unit_Id': return [key, cur['Unit_Id'] ?? value];\r\n                            case 'Alt_Act_Unit_Id': return [key, cur['Unit_Id'] ?? value];\r\n                            case 'Unit_Name': return [key, cur['Units'] ?? value];\r\n                            case 'GoDown_Id': {\r\n                                const isValidGodown = checkIsNumber(godownDetails?.Godown_Id);\r\n                                const isValidItem = checkIsNumber(godownDetails?.Item_Id);\r\n                                const isSameItem = isEqualNumber(cur?.Item_Id, godownDetails?.Item_Id);\r\n                                const oldGodown = oldData.find(\r\n                                    fndOld => isEqualNumber(fndOld.Item_Id, cur?.Item_Id)\r\n                                )?.GoDown_Id\r\n\r\n                                const newValue = (isValidGodown && isValidItem && isSameItem)\r\n                                    ? godownDetails.Godown_Id \r\n                                    : checkIsNumber(oldGodown) ? oldGodown : value;\r\n\r\n                                return [key, newValue];\r\n                            }\r\n\r\n                            case 'Taxable_Rate': return [key, itemRateGst.base_amount]\r\n                            case 'Total_Qty': return [key, toNumber(Bill_Qty)]\r\n                            case 'Taxble': return [key, isTaxable ? 1 : 0]\r\n                            case 'Taxable_Amount': return [key, gstInfo.base_amount]\r\n                            case 'Tax_Rate': return [key, gstPercentage]\r\n                            case 'Cgst':\r\n                            case 'Sgst': return [key, cgstPer ?? 0]\r\n                            case 'Cgst_Amo':\r\n                            case 'Sgst_Amo': return [key, isNotTaxableBill ? 0 : Cgst_Amo]\r\n                            case 'Igst': return [key, igstPer ?? 0]\r\n                            case 'Igst_Amo': return [key, isNotTaxableBill ? 0 : Igst_Amo]\r\n                            case 'Final_Amo': return [key, gstInfo.with_tax]\r\n\r\n                            default: return [key, value]\r\n                        }\r\n                    })\r\n                )\r\n            ))\r\n        });\r\n\r\n        // closeDialog();\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        if (onClose) onClose();\r\n        setSaleOrders([]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeDialog}\r\n                fullScreen\r\n            >\r\n                <DialogTitle>\r\n                    <div className=\"d-flex flex-wrap align-items-center \">\r\n                        <span className=\"flex-grow-1\">Select Sale Order</span>\r\n                        <IconButton\r\n                            onClick={closeDialog}\r\n                            color='success'\r\n                        >\r\n                            <Done className=\"fa-20\" />\r\n                        </IconButton>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"d-flex flex-wrap align-items-end\">\r\n                        <div className=\"p-2\">\r\n                            <label className='d-block ms-2'>From Date</label>\r\n                            <input\r\n                                className=\"cus-inpt p-2 w-auto\"\r\n                                type=\"date\"\r\n                                value={filters?.Fromdate}\r\n                                onChange={e => setFilters(pre => ({ ...pre, Fromdate: e.target.value }))}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                            <label className='d-block ms-2'>To Date</label>\r\n                            <input\r\n                                className=\"cus-inpt p-2 w-auto\"\r\n                                type=\"date\"\r\n                                min={filters.Fromdate}\r\n                                value={filters?.Todate}\r\n                                onChange={e => setFilters(pre => ({ ...pre, Todate: e.target.value }))}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        {/* <div style={{ minWidth: '170px', maxWidth: '100%' }} className=\"p-2\">\r\n                            <label className='d-block ms-2'>Godown</label>\r\n                            <Select\r\n                                value={filters.Godown}\r\n                                onChange={e => setFilters(pre => ({ ...pre, Godown: e }))}\r\n                                options={[\r\n                                    { value: '', label: 'select', isDisabled: true },\r\n                                    ...toArray(godowns).map(obj => ({ value: obj?.Godown_Id, label: obj?.Godown_Name }))\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                menuPortalTarget={document.body}\r\n                                isSearchable={true}\r\n                                placeholder={\"Select Godown\"}\r\n                                maxMenuHeight={200}\r\n                            />\r\n                        </div> */}\r\n                        <div className=\"p-2\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                type=\"button\"\r\n                                onClick={() => setFilters(pre => ({ ...pre, search: !pre.search }))}\r\n                            >search</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    {saleOrders.map((invoice, ind) => {\r\n                        const {\r\n                            So_Inv_No, So_Date, VoucherTypeGet, Branch_Name,\r\n                            Sales_Person_Name, Total_Tax, Total_Invoice_value, Products_List\r\n                        } = invoice;\r\n\r\n                        const isChecked = isEqualNumber(invoiceInfo?.So_No, invoice.So_Id)\r\n\r\n                        return (\r\n                            <div className=\"container-fluid\" key={ind} >\r\n                                <div\r\n                                    className={`\r\n                                        invoice-card bg-white p-4 shadow-sm mb-4 border rounded  \r\n                                        ${isChecked ? ' border-primary ' : ''}\r\n                                        `\r\n                                    }\r\n                                >\r\n                                    {/* Header */}\r\n                                    <h5 className=\"d-flex align-items-center flex-wrap\">\r\n                                        <span className=\"me-2\">\r\n                                            <input\r\n                                                className=\"form-check-input shadow-none pointer\"\r\n                                                style={{ padding: '0.7em' }}\r\n                                                type=\"checkbox\"\r\n                                                checked={isChecked}\r\n                                                onChange={() => {\r\n                                                    if (isChecked) changeSelectedItems(invoice, null, true)\r\n                                                    else changeSelectedItems(invoice, null, false)\r\n                                                }}\r\n                                            />\r\n                                        </span>\r\n                                        <span>Invoice No: <span className=\"text-primary\">{So_Inv_No}</span></span>\r\n                                    </h5>\r\n                                    <div className=\"invoice-header d-flex justify-content-between flex-wrap border-bottom pb-3 mb-3\">\r\n                                        <div>\r\n                                            <div><strong>Invoice Date:</strong> {LocalDate(So_Date)}</div>\r\n                                            <div><strong>Voucher Type:</strong> {VoucherTypeGet}</div>\r\n                                            <div><strong>Branch:</strong> {Branch_Name}</div>\r\n                                        </div>\r\n                                        <div className=\"text-end\">\r\n                                            <h5 className=\"mt-2\"><strong>Total Invoice:</strong> ₹{Total_Invoice_value}</h5>\r\n                                            {/* <div><strong>Subtotal:</strong> ₹{Total_Before_Tax}</div> */}\r\n                                            <div><strong>Tax:</strong> ₹{Total_Tax}</div>\r\n                                            {/* <div><strong>Round Off:</strong> ₹{Round_off}</div> */}\r\n                                            <div><strong>Salesperson:</strong> {Sales_Person_Name}</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Product Table */}\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered table-striped product-table\">\r\n                                            <thead className=\"table-light\">\r\n                                                <tr>\r\n                                                    {['#', 'Product', 'Qty', 'Rate', 'Amount', 'Tax %', 'Final Amount', 'Godown'].map(\r\n                                                        (o, i) => (\r\n                                                            <th\r\n                                                                key={i}\r\n                                                                style={{\r\n                                                                    minWidth: '150px',\r\n                                                                    maxWidth: '160px'\r\n                                                                }}\r\n                                                            >{o}</th>\r\n                                                        )\r\n                                                    )}\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {Products_List.map((item, index) => (\r\n                                                    <tr key={item.SO_St_Id}>\r\n                                                        <td>{index + 1}</td>\r\n                                                        <td>{item.Product_Name}</td>\r\n                                                        <td>\r\n                                                            {item.Bill_Qty}\r\n                                                            {checkIsNumber(filters.Godown.value) && (\r\n                                                                ' (Bal: ' + validStockValue(item.Item_Id, filters.Godown.value, stockInGodown) + ') '\r\n                                                            )}\r\n                                                        </td>\r\n                                                        <td>₹{item.Item_Rate}</td>\r\n                                                        <td>₹{item.Amount}</td>\r\n                                                        <td>{item.Tax_Rate}%</td>\r\n                                                        <td>₹{item.Final_Amo}</td>\r\n                                                        <td>\r\n                                                            <select\r\n                                                                disabled={!isChecked}\r\n                                                                className=\"cus-inpt p-2\"\r\n                                                                value={\r\n                                                                    toArray(godowns).find(\r\n                                                                        godFnd => toArray(selectedItems).find(\r\n                                                                            fnd => (\r\n                                                                                isEqualNumber(fnd.Item_Id, item?.Item_Id)\r\n                                                                                && isChecked\r\n                                                                                && isEqualNumber(godFnd?.Godown_Id, fnd?.GoDown_Id)\r\n                                                                            )\r\n                                                                        )\r\n                                                                    )?.Godown_Id\r\n                                                                }\r\n                                                                onChange={e => changeSelectedItems(\r\n                                                                    invoice,\r\n                                                                    {\r\n                                                                        Godown_Id: e.target.value,\r\n                                                                        Item_Id: item?.Item_Id\r\n                                                                    },\r\n                                                                    false\r\n                                                                )}\r\n                                                            >\r\n                                                                <option value=\"\" disabled>Select</option>\r\n                                                                <optgroup label=\"Stock-Available-Godown\">\r\n                                                                    {\r\n                                                                        toArray(godowns).filter(\r\n                                                                            fil => (\r\n                                                                                toArray(stockInGodown).some(\r\n                                                                                    fnd => (\r\n                                                                                        isEqualNumber(fnd?.Godown_Id, fil?.Godown_Id)\r\n                                                                                        && isEqualNumber(item?.Item_Id, fnd?.Product_Id)\r\n                                                                                    )\r\n                                                                                )\r\n                                                                            )\r\n                                                                        ).map((obj, objInd) => (\r\n                                                                            <option\r\n                                                                                value={obj?.Godown_Id}\r\n                                                                                key={objInd}\r\n                                                                            >\r\n                                                                                {obj?.Godown_Name\r\n                                                                                    + ' (Bal: '\r\n                                                                                    + validStockValue(item?.Item_Id, obj?.Godown_Id, stockInGodown)\r\n                                                                                    + ')'\r\n                                                                                }\r\n                                                                            </option>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </optgroup>\r\n                                                                <optgroup label=\"Other-Godown\">\r\n                                                                    {\r\n                                                                        toArray(godowns).filter(\r\n                                                                            fil => !(\r\n                                                                                toArray(stockInGodown).some(\r\n                                                                                    fnd => (\r\n                                                                                        isEqualNumber(fnd?.Godown_Id, fil?.Godown_Id)\r\n                                                                                        && isEqualNumber(item?.Item_Id, fnd?.Product_Id)\r\n                                                                                    )\r\n                                                                                )\r\n                                                                            )\r\n                                                                        ).map((obj, objInd) => (\r\n                                                                            <option value={obj?.Godown_Id} key={objInd}>{obj?.Godown_Name}</option>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </optgroup>\r\n                                                            </select>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n\r\n                                    {/* Summary */}\r\n                                    <div className=\"invoice-summary border-top pt-3 mt-3 text-end\">\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddProductsInSalesInvoice;\r\nexport {\r\n    validStockValue,\r\n}","import { getSessionUser, ISOString } from \"../../../Components/functions\";\r\n\r\nconst storage = getSessionUser().user;\r\n\r\nexport const salesInvoiceGeneralInfo = {\r\n    Do_Id: '',\r\n    Do_No: '',\r\n    Do_Year: '',\r\n    Do_Inv_No: '',\r\n    \r\n    Voucher_Type: '',\r\n    Do_Date: ISOString(),\r\n    Retailer_Id: '',\r\n    Retailer_Name: '',      // for Front-end purpose\r\n    Delivery_Person_Id: '', // not used in sales invoice\r\n    Branch_Id: '',\r\n    GST_Inclusive: 2,\r\n    IS_IGST: 0,\r\n    Narration: '',\r\n    Cancel_status: 1,\r\n    So_No: '',              // SALE ORDER ID (ONE TO MANY INVOICE MAPPING)\r\n    Trans_Type: '',\r\n\r\n    CSGT_Total: '',\r\n    SGST_Total: '',\r\n    IGST_Total: '',\r\n    Total_Expences: '',\r\n    Round_off: '',\r\n    Total_Before_Tax: '',\r\n    Total_Tax: '',\r\n    Total_Invoice_value: '',\r\n\r\n    // Delivery_Status: '',\r\n    // Delivery_Time: '',\r\n    // Delivery_Location: '',\r\n    // Delivery_Latitude: '',\r\n    // Delivery_Longitude: '',\r\n    // Collected_By: '',\r\n    // Collected_Status: '',\r\n    // Payment_Mode: '',\r\n    // Payment_Ref_No: '',\r\n    // Payment_Status: '',\r\n\r\n    Alter_Id: '',\r\n    Created_by: storage?.UserId,\r\n    Altered_by: storage?.UserId,\r\n    Created_on: '',\r\n    Alterd_on: '',\r\n}\r\n\r\n\r\nexport const salesInvoiceDetailsInfo = {\r\n    DO_St_Id: '',\r\n    Do_Date: '',\r\n    Delivery_Order_Id: '',\r\n\r\n    GoDown_Id: '',\r\n    S_No: '',\r\n    Item_Id: '',                // From front-end\r\n    Item_Name: '',\r\n    HSN_Code: '',\r\n    Taxble: '',\r\n\r\n    Bill_Qty: '',               // From front-end\r\n    Act_Qty: '',\r\n    Alt_Act_Qty: '',\r\n    Free_Qty: '',\r\n    Total_Qty: '',\r\n\r\n    Item_Rate: '',              // From front-end\r\n    Taxable_Rate: '',\r\n    Amount: '',                 // From front-end\r\n    \r\n    Unit_Id: '',                // From front-end\r\n    Unit_Name: '',\r\n    Act_unit_Id: '',\r\n    Alt_Act_Unit_Id: '',\r\n    \r\n    Taxable_Amount: '',\r\n    Tax_Rate: '',\r\n\r\n    Cgst: '',\r\n    Sgst: '',\r\n    Igst: '',\r\n    Cgst_Amo: '',\r\n    Sgst_Amo: '',\r\n    Igst_Amo: '',\r\n\r\n    Final_Amo: '',\r\n    Created_on: '',\r\n}\r\n\r\n\r\nexport const salesInvoiceExpencesInfo = {\r\n    Id: '',\r\n    Do_Id: '',\r\n    Sno: '',\r\n    Expense_Id: '',\r\n    Cgst: 0,\r\n    Cgst_Amo: 0,\r\n    Sgst: 0,\r\n    Sgst_Amo: 0,\r\n    Igst: 0,\r\n    Igst_Amo: 0,\r\n    Expence_Value: 0\r\n}\r\n\r\n\r\nexport const salesInvoiceStaffInfo = {\r\n    Id: '',\r\n    Do_Id: '',\r\n    Emp_Id: '',\r\n    Emp_Name: '',       // for Front-end purpose\r\n    Emp_Type_Id: '',\r\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAll');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4z\"\n}), 'Done');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","customTableStyles","table","width","backgroundColor","rows","headCells","customSelectStyles","control","provided","state","_objectSpread","height","background","menu","zIndex","menuPortal","base","groupHeading","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","calculateGSTDetails","amount","gstRate","type","arguments","length","undefined","validatedAmount","toNumber","validatedGstRate","halfGstRate","baseAmount","taxAmount","withTax","withoutTax","Error","sgstAmount","toFixed","cgstAmount","igstAmount","base_amount","Number","with_tax","without_tax","tax_per","tax_amount","sgst_per","sgst_amount","cgst_per","cgst_amount","igst_per","igst_amount","_ref","_findProductDetails","_godowns$find","orderProducts","setOrderProducts","open","onClose","products","brands","uom","godowns","GST_Inclusive","IS_IGST","editValues","initialValue","stockInGodown","productDetails","setProductDetails","useState","isInclusive","isEqualNumber","isNotTaxableBill","useEffect","isValidObject","pre","Object","fromEntries","entries","map","_ref2","key","value","findProductDetails","productid","_products$find","find","obj","Product_Id","closeDialog","_jsxs","_Fragment","Dialog","maxWidth","fullWidth","DialogTitle","className","onSubmit","e","preventDefault","Item_Id","filter","ordered","_ref3","productMaster","gstPercentage","Igst_P","Gst_P","isTaxable","Bill_Qty","Item_Rate","Amount","taxType","itemRateGst","gstInfo","cgstPer","igstPer","Cgst_Amo","Igst_Amo","Product_Name","toast","warn","DialogContent","Select","BrandID","label","Brand","onChange","options","isDisabled","Brand_Name","styles","menuPortalTarget","document","body","isSearchable","placeholder","maxMenuHeight","GroupID","Group","pro","reduce","acc","some","grp","Product_Group","push","Pro_Group","checkIsNumber","Pre_Id","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$Item_Rat","_productInfo$UOM_Id","_productInfo$Units","Unit_Id","UOM_Id","Unit_Name","Units","HSN_Code","findIndex","ind","required","onInput","onlynum","disabled","Multiplication","target","Division","min","UOM","selectedIndex","text","o","i","hasOwn","GoDown_Id","g","Godown_Id","Godown_Name","toArray","fil","fnd","validStockValue","DialogActions","Button","onClick","startIcon","ClearAll","_toArray$find","godownStockValue","godownItem","Bal_Qty","isNaN","loadingOn","loadingOff","retailer","selectedItems","setSelectedItems","invoiceInfo","setInvoiceInfo","saleOrders","setSaleOrders","filters","setFilters","Fromdate","ISOString","Todate","search","Godown","fetchLink","concat","then","data","success","catch","console","error","finally","changeSelectedItems","itemDetail","godownDetails","So_No","So_Id","oldData","Products_List","cur","curIndex","salesInvoiceDetailsInfo","_cur$Item_Id","_productMaster$Produc","_productMaster$HSN_Co","_cur$Unit_Id","_cur$Unit_Id2","_cur$Unit_Id3","_cur$Units","_oldData$find","isValidGodown","isValidItem","isSameItem","oldGodown","fndOld","fullScreen","IconButton","Done","invoice","So_Inv_No","So_Date","VoucherTypeGet","Branch_Name","Sales_Person_Name","Total_Tax","Total_Invoice_value","isChecked","checked","LocalDate","minWidth","item","index","_toArray$find2","Tax_Rate","Final_Amo","godFnd","objInd","SO_St_Id","storage","getSessionUser","user","salesInvoiceGeneralInfo","Do_Id","Do_No","Do_Year","Do_Inv_No","Voucher_Type","Do_Date","Retailer_Id","Retailer_Name","Delivery_Person_Id","Branch_Id","Narration","Cancel_status","Trans_Type","CSGT_Total","SGST_Total","IGST_Total","Total_Expences","Round_off","Total_Before_Tax","Alter_Id","Created_by","UserId","Altered_by","Created_on","Alterd_on","DO_St_Id","Delivery_Order_Id","S_No","Item_Name","Taxble","Act_Qty","Alt_Act_Qty","Free_Qty","Total_Qty","Taxable_Rate","Act_unit_Id","Alt_Act_Unit_Id","Taxable_Amount","Cgst","Sgst","Igst","Sgst_Amo","salesInvoiceExpencesInfo","Id","Sno","Expense_Id","Expence_Value","salesInvoiceStaffInfo","Emp_Id","Emp_Name","Emp_Type_Id","createSvgIcon","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","root","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}
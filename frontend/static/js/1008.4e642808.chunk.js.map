{"version":3,"file":"static/js/1008.4e642808.chunk.js","mappings":"2JAKA,MAoHA,EApHqBA,IAAqB,IAApB,WAAEC,GAAYD,EAChC,MAAOE,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,OACpCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,OAC5CG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,OAE3CK,EAAAA,EAAAA,YAAU,KACN,GAAIR,EAAWS,OAAS,EAAG,CACvB,MAAMC,EAAgBV,EAAWW,QAAO,CAACC,EAAKC,KAC1C,MAAMC,EAAQ,IAAIC,MAAK,IAAIA,MAAOC,cAAcC,MAAM,KAAK,GAAK,IAAMJ,EAAKK,YAE3E,OAAON,GADK,IAAIG,MAAK,IAAIA,MAAOC,cAAcC,MAAM,KAAK,GAAK,IAAMJ,EAAKM,UACrDL,EAAM,GAC3B,GAEGM,EAAiB,IAAIL,MAAK,IAAIA,MAAOC,cAAcC,MAAM,KAAK,GAAK,IAAMjB,EAAW,GAAGkB,YAEvFZ,EADc,IAAIS,MAAK,IAAIA,MAAOC,cAAcC,MAAM,KAAK,GAAK,IAAMjB,EAAWA,EAAWS,OAAS,GAAGU,UAC9EC,EAC1BC,EAAWf,EAAYI,EAEvBY,EAAeC,KAAKC,MAAMlB,EAAY,KACtCmB,EAAQF,KAAKC,MAAMF,EAAe,MAClCI,EAAUH,KAAKC,MAAOF,EAAe,KAAQ,IAC7CK,EAAUL,EAAe,GAC/Bf,EAAa,GAADqB,OAAIC,OAAOJ,GAAOK,SAAS,EAAG,KAAI,KAAAF,OAAIC,OAAOH,GAASI,SAAS,EAAG,KAAI,KAAAF,OAAIC,OAAOF,GAASG,SAAS,EAAG,OAElH,MAAMC,EAAW/B,EAAWgC,KAAInB,IAC5B,MAAMC,EAAQ,IAAIC,MAAK,IAAIA,MAAOC,cAAcC,MAAM,KAAK,GAAK,IAAMJ,EAAKK,YAErEe,EADM,IAAIlB,MAAK,IAAIA,MAAOC,cAAcC,MAAM,KAAK,GAAK,IAAMJ,EAAKM,UAClDL,EACvB,MAAO,CACHoB,MAAM,GAADN,OAAKf,EAAKsB,UAAS,MAAAP,OAAKf,EAAKK,WAAU,OAAAU,OAAMf,EAAKM,SAAQ,KAC/Dc,WACAG,gBAAiBC,IACpB,IAGCpC,EAAY,CACdqC,OAAQP,EAASC,KAAInB,GAAQA,EAAKqB,QAClCK,SAAU,CAAC,CACPC,KAAMT,EAASC,KAAInB,GAAQA,EAAKoB,WAChCG,gBAAiBL,EAASC,KAAInB,GAAQA,EAAKuB,kBAC3CK,YAAa,yBACbC,YAAa,KAIrBzC,EAAUqC,OAAOK,KAAK,aACtB1C,EAAUsC,SAAS,GAAGC,KAAKG,KAAKtB,GAChCpB,EAAUsC,SAAS,GAAGH,gBAAgBO,KAAK,WAE3CzC,EAAaD,EACjB,IACD,CAACD,KAEJQ,EAAAA,EAAAA,YAAU,KACN,GAAIP,EAAW,CACPG,GACAA,EAAcwC,UAGlB,MAAMC,EAAMC,SAASC,eAAe,eAC9BC,EAAmB,IAAIC,EAAAA,GAAMJ,EAAK,CACpCK,KAAM,MACNV,KAAMvC,EACNkD,QAAS,CACLC,YAAY,EACZC,QAAS,CACLC,QAAS,CACLC,UAAW,CACPrB,MAAO,SAAUsB,GAEb,MAAMC,EAAQD,EAAQE,QAAU,EAC1BC,EAAQH,EAAQI,QAAQpB,KAAK7B,QAAO,CAACC,EAAKiD,IAASjD,EAAMiD,GAAM,GAC/DC,EAAavC,KAAKwC,MAAON,EAAQE,EAAS,KAC1CjC,EAAUH,KAAKwC,MAAMN,EAAK,KAChC,MAAM,GAAN7B,OAAUF,EAAO,cAAAE,OAAakC,EAAU,KAC5C,IAGRE,WAAY,CACRC,MAAO,OACPC,UAAWA,CAACT,EAAOD,KACf,MAAMtB,EAAQsB,EAAQW,MAAM3B,KAAKF,OAAOkB,EAAQY,WAC1CC,EAASb,EAAQE,QAAU,EAC3BC,EAAQH,EAAQI,QAAQpB,KAAK7B,QAAO,CAACC,EAAKiD,IAASjD,EAAMiD,GAAM,GAC/DC,EAAavC,KAAKwC,MAAOM,EAASV,EAAS,KACjD,MAAM,GAAN/B,OAAUM,EAAK,MAAAN,OAAK6B,EAAK,MAAA7B,OAAKkC,EAAU,YAO5DzD,EAAiB2C,EACrB,IACD,CAAC/C,IAGJ,MAAMoC,EAAiBA,KAEnB,IAAI4B,EAAQ,IACZ,IAAK,IAAIK,EAAI,EAAGA,EAAI,EAAGA,IACnBL,GAHY,mBAGK1C,KAAKC,MAAsB,GAAhBD,KAAKgD,WAErC,OAAON,CAAK,EAGhB,OAAOjE,EAAWS,OAAS,GACvB+D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA6CC,MAAO,CAAEC,UAAW,SAAUC,SAAA,CACrFtE,IAAakE,EAAAA,EAAAA,MAAA,KAAGC,UAAU,OAAMG,SAAA,CAAC,eAAatE,MAC/CuE,EAAAA,EAAAA,KAAA,UAAQC,GAAG,cAAcC,MAAM,MAAMC,OAAO,YAGhDH,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,mBAAkBG,SAAC,yBACpC,C,uYC7GL,MA8YA,EA9YgBK,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAClB,MAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,UAC3CC,EAAYC,IAAiB/F,EAAAA,EAAAA,WAAS,IACtCgG,EAAWC,IAAgBjG,EAAAA,EAAAA,UAAS,IACrCkG,EAAkB,OAATT,QAAS,IAATA,OAAS,EAATA,EAAWS,QAEnB1C,EAAO2C,IAAYnG,EAAAA,EAAAA,UAAS,IAC5BoG,EAAQC,IAAarG,EAAAA,EAAAA,WAAS,IAC9BsG,EAAKC,IAAUvG,EAAAA,EAAAA,UAAS,KACxBwG,EAAYC,IAAiBzG,EAAAA,EAAAA,UAAS,CAAC,GACxC0G,EAAQ,IAAI9F,KACZ+F,EAAkB,IAAI/F,KAAK8F,EAAME,cAAeF,EAAMG,WAAY,IAEjEC,EAAeC,IAAoB/G,EAAAA,EAAAA,UAAS,CAC/CgH,KAAML,EAAgB9F,cAAcC,MAAM,KAAK,GAC/CmG,IAAI,IAAIrG,MAAOC,cAAcC,MAAM,KAAK,KAGtCoG,EAAcC,GACbC,EAAgBC,IAAqBrH,EAAAA,EAAAA,UAAS,CAAEsH,MAAO,EAAGC,OAAQ,IACnEC,GAAWC,EAAAA,EAAAA,WAEjBpH,EAAAA,EAAAA,YAAU,MACNqH,EAAAA,EAAAA,GAAU,CACNC,QAAQ,yCAADlG,OAA2CyE,KACnD0B,MAAKvF,IACJ,GAAoB,YAAhBA,EAAKwF,OAAsB,CAAC,IAADC,EAC3B7B,EAAa5D,EAAKA,MAClB,IAAI0F,EAAO,EACF,QAATD,EAAAzF,EAAKA,YAAI,IAAAyF,GAATA,EAAWE,SAAQC,IACfF,GAAQG,OAAOD,EAAIE,WAAW,IAElChC,EAAS4B,EACb,CACQ,OAAJ1F,QAAI,IAAJA,GAAAA,EAAMyD,WACNC,GAAc,GAEdA,GAAc,EAClB,IACDqC,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAChC,IAEH,MAAMG,EAAUA,CAACC,EAAMC,KAAU,IAADC,EAAAC,EAAAC,EAC5B,IAAIC,EAEAA,EADAJ,GAAiB,IAATA,EACElC,EAEAiC,EAEdhC,EAAcqC,GACdzC,GAAU,IACVqB,EAAAA,EAAAA,GAAU,CACNC,QAAQ,kDAADlG,OAA2D,QAA3DkH,EAAoDG,SAAO,IAAAH,OAAA,EAAPA,EAASI,QAAO,YAAAtH,OAAkB,QAAlBmH,EAAWE,SAAO,IAAAF,OAAA,EAAPA,EAASI,SAAQ,gBAAAvH,OAAsB,QAAtBoH,EAAeC,SAAO,IAAAD,OAAA,EAAPA,EAASI,WAAU,cAAAxH,OAA0B,OAAbqF,QAAa,IAAbA,OAAa,EAAbA,EAAeE,KAAI,YAAAvF,OAAwB,OAAbqF,QAAa,IAAbA,OAAa,EAAbA,EAAeG,MACpMW,MAAKvF,IAAS,IAAD6G,EACZ3C,EAAOlE,EAAKA,MACZ,IAAI8G,EAAM,CAAE7B,MAAO,EAAGC,OAAQ,GAC1B,OAAJlF,QAAI,IAAJA,GAAU,QAAN6G,EAAJ7G,EAAMA,YAAI,IAAA6G,GAAVA,EAAYlB,SAAQC,IAChBkB,EAAI7B,OAASY,OAAOD,EAAImB,WACxBD,EAAI5B,QAAUW,OAAOD,EAAIoB,WAAW,IAExChC,EAAkB8B,EAAI,IACvBf,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,EAG7BiB,EAAcA,KAChBjD,GAAU,GACVE,EAAO,IACPE,EAAc,CAAC,GACfM,EAAiB,CACbC,KAAML,EAAgB9F,cAAcC,MAAM,KAAK,GAC/CmG,IAAI,IAAIrG,MAAOC,cAAcC,MAAM,KAAK,IAC1C,EAGAyI,GAAcC,EAAAA,EAAAA,iBAAgB,CAChCC,QAASA,IAAMjC,EAASkC,UAiB5B,OAAO5D,GACHzB,EAAAA,EAAAA,MAAAsF,EAAAA,SAAA,CAAAlF,SAAA,EACIJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMG,SAAA,EACjBC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,4BAA2BG,UACtCJ,EAAAA,EAAAA,MAAA,KAAGC,UAAU,eAAcG,SAAA,EACvBJ,EAAAA,EAAAA,MAAA,QAAAI,SAAA,CAAM,cAAqB,OAATgB,QAAS,IAATA,OAAS,EAATA,EAAWmE,SAC7BvF,EAAAA,EAAAA,MAAA,QAAMC,UAAWd,EAAQ,EAAI,eAAiB,cAAciB,SAAA,CAAC,UAAUjB,EAAMqG,eAAe,UAAYrG,EAAQ,EAAI,MAAQ,OAAO,cAG3IkB,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,iCAAgCG,UAC3CJ,EAAAA,EAAAA,MAAA,SAAOC,UAAU,QAAOG,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAD,UACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEuF,SAAU,QAASrF,SAAC,UACjCC,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEuF,SAAU,QAASrF,SAAC,SACjCC,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEuF,SAAU,QAASrF,SAAC,aACjCC,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEuF,SAAU,QAASrF,SAAC,YACjCC,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEuF,SAAU,QAASrF,SAAC,aACjCC,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEuF,SAAU,QAASrF,SAAC,gBAGzCC,EAAAA,EAAAA,KAAA,SAAAD,SACKuB,EAAUnE,KAAI,CAACkI,EAAG5F,KAAC,IAAA6F,EAAA,OAChB3F,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEuF,SAAU,QAASrF,SAAEN,EAAI,KACtCO,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEuF,SAAU,QAASrF,UAC5BC,EAAAA,EAAAA,KAAA,UACIJ,UAAU,WACV2F,QAASA,KAAQzB,EAAQuB,EAAE,EAAGtF,UAC9BC,EAAAA,EAAAA,KAACwF,EAAAA,EAAc,CAACC,GAAI,CAAEL,SAAU,kBAGxCpF,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEuF,SAAU,QAASrF,SAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAGK,gBACrC1F,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEuF,SAAU,QAASrF,SAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAGM,eACrC3F,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEuF,SAAU,QAASrF,SAAG,OAADsF,QAAC,IAADA,GAAa,QAAZC,EAADD,EAAG5B,kBAAU,IAAA6B,OAAZ,EAADA,EAAeH,eAAe,YAChEnF,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAEuF,SAAU,QAASrF,SAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAGO,UAZhCnG,EAaJ,eAOzBE,EAAAA,EAAAA,MAACkG,EAAAA,EAAM,CACHC,KAAMpE,EACNqE,QAASnB,EACToB,YAAU,EACVC,WAAS,EAAAlG,SAAA,EACTJ,EAAAA,EAAAA,MAACuG,EAAAA,EAAW,CAACtG,UAAU,6DAA4DG,SAAA,EAC/EJ,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAaG,SAAA,CAAC,yBAAiC,OAAV+B,QAAU,IAAVA,OAAU,EAAVA,EAAYqE,kBACjEnG,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,CACHxG,UAAU,UACV2F,QAASV,EAAY9E,SAAE,SAG3BC,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,CACHxG,UAAU,eACV2F,QAASA,KAvEN5H,KACnB,MAAM0I,EAAYC,EAAAA,GAAUC,cAAc5I,GACpC6I,EAAWF,EAAAA,GAAUG,WAC3BH,EAAAA,GAAUI,kBAAkBF,EAAUH,EAAW,WACjDM,EAAAA,EAAAA,IAAUH,EAAS,cAADzJ,QAAgB,IAAIb,MAAO0K,mBAAmB,QAAS,CACrEC,IAAK,UACLC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,OAAQ,YACV,SAAQ,EA4EUC,CAfwBvF,EAAIzE,KAAI,CAACkI,EAAG5F,KAAC,CACjC2H,IAAK3H,EAAI,EACTvD,KAAM,IAAIA,KAAM,OAADmJ,QAAC,IAADA,OAAC,EAADA,EAAGgC,aAAaT,mBAAmB,QAAS,CACvDC,IAAK,UACLC,MAAO,UACPC,KAAM,YAEVO,WAAa,OAADjC,QAAC,IAADA,OAAC,EAADA,EAAGkC,YACfC,UAAY,OAADnC,QAAC,IAADA,OAAC,EAADA,EAAGoC,WACdC,MAAOC,QAAQnE,OAAO6B,EAAEX,YAAcW,EAAEX,UAAUS,eAAe,SAAW,GAC5EyC,OAAQD,QAAQnE,OAAO6B,EAAEV,aAAeU,EAAEV,WAAWQ,eAAe,SAAW,GAC/E0C,QAAU,OAADxC,QAAC,IAADA,OAAC,EAADA,EAAGK,aACZoC,OAAS,OAADzC,QAAC,IAADA,OAAC,EAADA,EAAG0C,YACXC,cAAgB,OAAD3C,QAAC,IAADA,OAAC,EAADA,EAAG4C,cAEQ,EAChClI,SACL,cAILJ,EAAAA,EAAAA,MAACuI,EAAAA,EAAa,CAACtI,UAAU,gCAA+BG,SAAA,EACpDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BG,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,WAAUG,UACrBC,EAAAA,EAAAA,KAAA,OAAKmI,IAAK3F,EAAa4F,IAAI,eAAexI,UAAU,eAExDI,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,oBAAmBG,UAC9BC,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,iBAAgBG,UAC7BJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,SAAC,aACzBC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,SAAY,OAAV+B,QAAU,IAAVA,OAAU,EAAVA,EAAY4D,mBAE1C/F,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,SAAC,iBACzBC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,SAAY,OAAV+B,QAAU,IAAVA,OAAU,EAAVA,EAAY6D,kBAE1ChG,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,SAAC,oBACzBC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,SAAQ,QAARM,EAAEuB,EAAI,UAAE,IAAAvB,OAAA,EAANA,EAAQgI,qBAEtC1I,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,SAAC,YACzBC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,SAAQ,QAARO,EAAEsB,EAAI,UAAE,IAAAtB,OAAA,EAANA,EAAQ2H,uBAMlDjI,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,eAAcG,UACzBC,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,QAAOG,UACpBJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,SAAC,oBACzBC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,wBAAuBG,UAC3B,QAANQ,EAAAqB,EAAI,UAAE,IAAArB,OAAA,EAANA,EAAQmE,WAAY,GACR,QAANlE,EAAAoB,EAAI,UAAE,IAAApB,OAAA,EAANA,EAAQkE,UAAUS,eAAe,UAAW,OACtC,QAAN1E,EAAAmB,EAAI,UAAE,IAAAnB,OAAA,EAANA,EAAQkE,WAAWQ,eAAe,UAAW,YAI3DxF,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,SAAC,qBACzBC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,wBAAuBG,UAClB,OAAd2C,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,QAAsB,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,QAAU,IAC9B,OAAdH,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,QAAsB,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,SAAQsC,eAAe,SAAW,QAC5D,OAAdzC,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,QAAsB,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,SAAQsC,eAAe,SAAW,mBAOrGnF,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,eAAcG,UACzBC,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,iBAAgBG,UAC7BJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,SAAC,YACzBC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,UACxBC,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLuB,UAAU,2BACV0I,SAAW3E,GAAMtB,GAAgBkG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAInG,GAAa,IAAEE,KAAMqB,EAAE6E,OAAO5J,SACrEA,MAAOwD,EAAcE,aAGjC3C,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,SAAC,UACzBC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,UACxBC,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLuB,UAAU,2BACV0I,SAAW3E,IACHvB,EAAcE,MAAQF,EAAcE,MAAQqB,EAAE6E,OAAO5J,MACrDyD,GAAgBkG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAInG,GAAa,IAAEG,GAAIoB,EAAE6E,OAAO5J,SAElD6J,OAAOC,MAAM,oBACjB,EAEJ9J,MAAOwD,EAAcG,GACrBoG,UAAWvG,EAAcE,aAGrC3C,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,cACdI,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,WAAUG,UACpBC,EAAAA,EAAAA,KAAA,UACIJ,UAAU,iBACVC,MAAO,CAAEtC,gBAAiB,oBAC1BgI,QAASA,KAAQzB,EAAQ,GAAI,EAAE,EAAG/D,SAAC,2BAQ/DC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,uBAAsBG,UACjCJ,EAAAA,EAAAA,MAAA,SAAOC,UAAU,QAAOG,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAD,UACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAC,OACrCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAC,UACrCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAC,iBACrCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAC,gBACrCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAC,QACrCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAC,aAG7CC,EAAAA,EAAAA,KAAA,SAAAD,SACK6B,EAAIzE,KAAI,CAACkI,EAAG5F,KACTE,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAEN,EAAI,KACpCO,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SACzB,IAAI7D,KAAM,OAADmJ,QAAC,IAADA,OAAC,EAADA,EAAGgC,aAAaT,mBAAmB,QAAS,CAClDC,IAAK,UACLC,MAAO,UACPC,KAAM,eAGd/G,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAEsF,EAAEkC,eAClCvH,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,QAAOG,SAAEsF,EAAEoC,cACzBzH,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,QAAOG,SAAEsF,EAAEX,UAAUS,eAAe,YAClDnF,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAEsF,EAAEV,WAAWQ,eAAe,aAZvD1F,aAoBzBO,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,SAAQG,UACnBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAoBgJ,IAAK9F,EAAS/C,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,OAAKmI,IAAK3F,EAAa4F,IAAI,UAAUxI,UAAU,aAC/CI,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,QAAOG,UACpBJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAC,aAC/BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,yBAAwBG,SAAY,OAAV+B,QAAU,IAAVA,OAAU,EAAVA,EAAY4D,mBAExD/F,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAC,iBAC/BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,yBAAwBG,SAAY,OAAV+B,QAAU,IAAVA,OAAU,EAAVA,EAAY6D,kBAExDhG,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAC,oBAC/BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,yBAAwBG,SAAQ,QAARW,EAAEkB,EAAI,UAAE,IAAAlB,OAAA,EAANA,EAAQ2H,qBAEpD1I,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAC,YAC/BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,yBAAwBG,SAAQ,QAARY,EAAEiB,EAAI,UAAE,IAAAjB,OAAA,EAANA,EAAQsH,gBAEpDtI,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAC,UAC/BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,yBAAwBG,SAAEqC,EAAcE,WAE1D3C,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAC,QAC/BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,yBAAwBG,SAAEqC,EAAcG,SAE1D5C,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAC,qBAC/BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,yBAAwBG,UAExB,QAANa,EAAAgB,EAAI,UAAE,IAAAhB,OAAA,EAANA,EAAQ8D,WAAY,GACR,QAAN7D,EAAAe,EAAI,UAAE,IAAAf,OAAA,EAANA,EAAQ6D,UAAUS,eAAe,UAAW,OACtC,QAANrE,EAAAc,EAAI,UAAE,IAAAd,OAAA,EAANA,EAAQ6D,WAAWQ,eAAe,UAAW,YAI/DxF,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAC,qBAC/BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,yBAAwBG,UAEf,OAAd2C,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,QAAsB,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,QAAU,IAC9B,OAAdH,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,QAAsB,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,SAAQsC,eAAe,SAAW,QAC5D,OAAdzC,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,QAAsB,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,SAAQsC,eAAe,SAAW,iBAMrGnF,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,uBAAsBG,UACjCJ,EAAAA,EAAAA,MAAA,SAAOC,UAAU,QAAOG,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAD,UACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAC,OACrCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAC,UACrCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAC,iBACrCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAC,gBACrCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAC,QACrCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uBAAsBG,SAAC,aAG7CC,EAAAA,EAAAA,KAAA,SAAAD,SACK6B,EAAIzE,KAAI,CAACkI,EAAG5F,KACTE,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAEN,EAAI,KACpCO,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SACzB,IAAI7D,KAAM,OAADmJ,QAAC,IAADA,OAAC,EAADA,EAAGgC,aAAaT,mBAAmB,QAAS,CAClDC,IAAK,UACLC,MAAO,UACPC,KAAM,eAGd/G,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAEsF,EAAEkC,eAClCvH,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,QAAOG,SAAEsF,EAAEoC,cACzBzH,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,QAAOG,SAAE4H,QAAQnE,OAAO6B,EAAEX,aAAeW,EAAEX,UAAUS,eAAe,YAClFnF,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAE4H,QAAQnE,OAAO6B,EAAEV,cAAgBU,EAAEV,WAAWQ,eAAe,aAZxF1F,qBAsBrCO,EAAAA,EAAAA,KAAC6I,EAAAA,EAAa,CAAA9I,UACVC,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,CAACb,QAASX,EAAakE,QAAQ,YAAY1J,MAAM,QAAOW,SAAC,mBAM5EC,EAAAA,EAAAA,KAAAiF,EAAAA,SAAA,GAAK,E,0BC9Yb,MAmLA,EAnLuB8D,KACnB,MAAMC,EAAUhI,KAAKC,MAAMC,aAAaC,QAAQ,SAC1C8H,EAAe,CACjBC,SAAU,KACVC,UAAW,KACXtF,MAAO,KACPrC,OAAQwH,EAAQxH,OAChB4H,YAAa,GACb1H,QAAQ,IAEL2H,EAAgBC,IAAqBhO,EAAAA,EAAAA,UAAS,CAAC,IAC/CiO,EAAQC,IAAalO,EAAAA,EAAAA,WAAS,IAC9BmO,EAAYC,IAAiBpO,EAAAA,EAAAA,UAAS2N,IAE7CtN,EAAAA,EAAAA,YAAU,KACN2N,EAAkB,CAAC,IACnBtG,EAAAA,EAAAA,GAAU,CACNC,QAAQ,mCAADlG,OAA4C,OAAPiM,QAAO,IAAPA,OAAO,EAAPA,EAASxH,UACtD0B,MAAKvF,IAAS,IAADyF,EACJ,OAAJzF,QAAI,IAAJA,GAAAA,EAAMgM,UAAe,OAAJhM,QAAI,IAAJA,GAAU,QAANyF,EAAJzF,EAAMA,YAAI,IAAAyF,OAAN,EAAJA,EAAYxH,QAAS,GACtC0N,EAAsB,OAAJ3L,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAK,GACjC,IACD+F,OAAMC,GAAKC,QAAQC,MAAMF,IAAG,GAChC,CAAQ,OAAPqF,QAAO,IAAPA,OAAO,EAAPA,EAASxH,OAAQ+H,IAErB,MA0FMK,EAAcA,KAChBF,EAAcT,EAAa,EAG/B,OACItJ,EAAAA,EAAAA,MAAAsF,EAAAA,SAAA,CAAAlF,SAAA,EACIJ,EAAAA,EAAAA,MAACkK,EAAAA,EAAI,CAACjK,UAAU,gCAA+BG,SAAA,EAC3CJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sEAAqEG,SAAA,EAChFC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,OAAMG,SAAC,gBACrBC,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,CACH0C,QAAQ,WACRvD,QA3DHuE,KA1CGC,WAEhB,IAEI,MAAMC,QAAiB,IAAIC,SAAQ,CAACC,EAASC,KACzCC,UAAUC,YAAYC,mBAAmBJ,EAASC,EAAO,KAGvD,SAAEI,EAAQ,UAAEC,GAAcR,EAASS,OASzC,OAPAf,GAAcgB,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACVmC,GAAG,IACNxB,SAAUqB,EACVpB,UAAWqB,EACX3G,MAAO,UAGJ,CAEX,CAAE,MAAOA,GAmBL,OAlBIA,EAAM8G,OAAS9G,EAAM+G,mBACrBlB,GAAcgB,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACVmC,GAAG,IACNxB,SAAU,KACVC,UAAW,KACXtF,MAAO,6BAGXgH,EAAAA,GAAMC,KAAK,0BAEXpB,GAAcgB,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACVmC,GAAG,IACNxB,SAAU,KACVC,UAAW,KACXtF,MAAOA,EAAMkH,aAId,CACX,GAIAC,GAAc9H,MAAK+H,IACXA,EACc,OAAVxB,QAAU,IAAVA,GAAAA,EAAYP,UAAsB,OAAVO,QAAU,IAAVA,GAAAA,EAAYN,WACpCnG,EAAAA,EAAAA,GAAU,CACNC,QAAQ,2BACRiI,OAAQ,OACRC,SAAU,CACN3J,OAAkB,OAAViI,QAAU,IAAVA,OAAU,EAAVA,EAAYjI,OACpB0H,SAAoB,OAAVO,QAAU,IAAVA,OAAU,EAAVA,EAAYP,SACtBC,UAAqB,OAAVM,QAAU,IAAVA,OAAU,EAAVA,EAAYN,aAE5BjG,MAAKvF,IACJ6L,GAAWD,GACP5L,EAAKgM,QACLkB,EAAAA,GAAMlB,QAAQhM,EAAKoN,SAEnBF,EAAAA,GAAMhH,MAAMlG,EAAKoN,QACrB,IAGJF,EAAAA,GAAMC,KAAK,gBAGfD,EAAAA,GAAMhH,MAAM,qCAChB,GACF,EAkCc8E,SAAUhB,QAAsB,OAAd0B,QAAc,IAAdA,OAAc,EAAdA,EAAgB+B,eAAerL,SACpD,iBAIJ4H,QAAsB,OAAd0B,QAAc,IAAdA,OAAc,EAAdA,EAAgB+B,iBACrBzL,EAAAA,EAAAA,MAAAsF,EAAAA,SAAA,CAAAlF,SAAA,EACIC,EAAAA,EAAAA,KAACqL,EAAAA,EAAW,CAAAtL,UACRJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBG,SAAA,EAC/BJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCG,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,gBAAiBC,EAAAA,EAAAA,KAAA,UACvBA,EAAAA,EAAAA,KAAA,QAAAD,SAAqB,OAAdsJ,QAAc,IAAdA,GAAAA,EAAgBiC,YAAaC,EAAAA,EAAAA,IAAwB,OAAdlC,QAAc,IAAdA,OAAc,EAAdA,EAAgBiC,YAAc,mBAEhF3L,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCG,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aACNC,EAAAA,EAAAA,KAAA,QAAAD,SAAqB,OAAdsJ,QAAc,IAAdA,GAAAA,EAAgBiC,YAAaE,EAAAA,EAAAA,IAAwB,OAAdnC,QAAc,IAAdA,OAAc,EAAdA,EAAgBiC,YAAc,wBAIxFtL,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,4CAA2CG,UACtDC,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,CAAC0C,QAAQ,WAAWvD,QAASA,IAAMmE,GAAcgB,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUmC,GAAG,IAAEhJ,QAAQ,MAAS3B,SAAC,qBAM5GJ,EAAAA,EAAAA,MAACkG,EAAAA,EAAM,CACHC,KAAgB,OAAV2D,QAAU,IAAVA,OAAU,EAAVA,EAAY/H,OAClBqE,QAAS6D,EACT3D,WAAS,EAACwF,SAAS,KAAI1L,SAAA,EAEvBC,EAAAA,EAAAA,KAACkG,EAAAA,EAAW,CAAAnG,SAAC,uBACbJ,EAAAA,EAAAA,MAACuI,EAAAA,EAAa,CAAAnI,SAAA,EACVC,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,OAAMG,SAAC,kBACxBC,EAAAA,EAAAA,KAAA,YACIpB,MAAiB,OAAV6K,QAAU,IAAVA,OAAU,EAAVA,EAAYL,YACnBxJ,UAAU,WACV8L,KAAM,EACNpD,SAAU3E,GAAK+F,GAAcgB,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUmC,GAAG,IAAEtB,YAAazF,EAAE6E,OAAO5J,UACrE+M,YAAY,yCAGpBhM,EAAAA,EAAAA,MAACkJ,EAAAA,EAAa,CAAA9I,SAAA,EACVC,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,CAACb,QAASqE,EAAY7J,SAAC,YAC9BC,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,CAAC0C,QAAQ,WAAWvD,QA3E5BqG,MACX5I,EAAAA,EAAAA,GAAU,CACNC,QAAQ,2BACRiI,OAAQ,MACRC,SAAU,CACNU,GAAkB,OAAdxC,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,GACpBzC,YAAuB,OAAVK,QAAU,IAAVA,OAAU,EAAVA,EAAYL,eAE9BlG,MAAKvF,IACAA,EAAKgM,SACLH,GAAWD,GACXsB,EAAAA,GAAMlB,QAAQhM,EAAKoN,SACnBnB,KAEAiB,EAAAA,GAAMhH,MAAMlG,EAAKoN,QACrB,GACF,EA2DqDhL,SAAC,oBAGrD,E,uGCtKX,MAAM+L,EAAYC,IAAS,IAADC,EAgCtB,OAAuC,QAAhCA,EA/BS,CACZ,CACID,IAAK,QACLE,MAAMjM,EAAAA,EAAAA,KAACkM,EAAAA,IAAmB,CAACrM,MAAO,CAAEuF,SAAU,WAElD,CACI2G,IAAK,WACLE,MAAMjM,EAAAA,EAAAA,KAACmM,EAAAA,EAAY,CAACtM,MAAO,CAAEuF,SAAU,WAE3C,CACI2G,IAAK,UACLE,MAAMjM,EAAAA,EAAAA,KAACoM,EAAAA,GAAgB,CAACvM,MAAO,CAAEuF,SAAU,WAE/C,CACI2G,IAAK,UACLE,MAAMjM,EAAAA,EAAAA,KAACqM,EAAAA,IAAsB,CAACxM,MAAO,CAAEuF,SAAU,WAErD,CACI2G,IAAK,WACLE,MAAMjM,EAAAA,EAAAA,KAACsM,EAAAA,IAAe,CAACzM,MAAO,CAAEuF,SAAU,WAE9C,CACI2G,IAAK,iBACLE,MAAMjM,EAAAA,EAAAA,KAACuM,EAAAA,IAAU,CAAC1M,MAAO,CAAEuF,SAAU,WAEzC,CACI2G,IAAK,cACLE,MAAMjM,EAAAA,EAAAA,KAACwM,EAAAA,IAAc,CAAC3M,MAAO,CAAEuF,SAAU,YAIlCqH,MAAKpH,GAAK0G,IAAQ1G,EAAE0G,aAAI,IAAAC,OAAA,EAAhCA,EAAkCC,QAAQjM,EAAAA,EAAAA,KAAAiF,EAAAA,SAAA,GAAK,EAGpDyH,EAAWxR,IAAgE,IAA/D,MAAEyR,EAAK,KAAEV,EAAI,SAAEW,EAAQ,UAAEC,EAAS,WAAEC,EAAU,QAAEvH,GAASrK,EACvE,OACI8E,EAAAA,EAAAA,KAAAiF,EAAAA,SAAA,CAAAlF,UACIC,EAAAA,EAAAA,KAAA,OAAKJ,UAAS,4CAA8CG,UACxDJ,EAAAA,EAAAA,MAAA,OAAK4F,QAASA,EAAS3F,UAAW,wEAA0EkN,EAAW/M,SAAA,EACnHJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBG,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAM4M,KACNhN,EAAAA,EAAAA,MAAA,MAAIC,UAAU,sBAAqBG,SAAA,EAC/BJ,EAAAA,EAAAA,MAAA,QAAME,MAAO,CAAEuF,SAAU,QAASrF,SAAA,CAAE6M,GAAsB,EAAE,OAC3DC,GAAa,IAAMA,EAAY,UAGvCZ,QAGV,EA+SX,EA3S4Bc,IAAgC,IAADC,EAAA,IAA9B,UAAEC,EAAS,WAAEC,GAAYH,EAClD,MAAM/D,EAAUhI,KAAKC,MAAMC,aAAaC,QAAQ,SAC1CgM,EAA6C,IAAhC3J,OAAc,OAAPwF,QAAO,IAAPA,OAAO,EAAPA,EAASoE,aAAqD,IAAhC5J,OAAc,OAAPwF,QAAO,IAAPA,OAAO,EAAPA,EAASoE,aAAqD,IAAhC5J,OAAc,OAAPwF,QAAO,IAAPA,OAAO,EAAPA,EAASoE,aAEtGC,EAAiBC,IAAsBhS,EAAAA,EAAAA,UAAS,KAChDiS,EAAQC,IAAalS,EAAAA,EAAAA,UAAS,KAC9BmS,EAAWC,IAAgBpS,EAAAA,EAAAA,UAAS,KAEpCqS,EAAcC,IAAmBtS,EAAAA,EAAAA,UAAS,CAC7CuS,aAAc,GACdC,iBAAkB,EAClBC,kBAAmB,EACnBC,mBAAoB,EACpBC,oBAAqB,EACrBC,iBAAkB,MAGfC,EAAcC,IAAmB9S,EAAAA,EAAAA,UAAS,CAC7CuS,cAAc,EACdQ,iBAAiB,EACjBC,qBAAqB,KAGlBC,EAAQC,IAAalT,EAAAA,EAAAA,UAAS,CACjCmT,MAAMC,EAAAA,EAAAA,SAGV/S,EAAAA,EAAAA,YAAU,KACFwR,GAAcnE,EAAQ2F,aACtB3L,EAAAA,EAAAA,GAAU,CACNC,QAAQ,wCAADlG,OAAgD,OAANwR,QAAM,IAANA,OAAM,EAANA,EAAQE,KAAI,gBAAA1R,OAAeiM,EAAQ2F,cAEnFzL,MAAKvF,IACEA,EAAKgM,UACL2D,EAAuB,OAAJ3P,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAK,IAC9B6P,EAAc,OAAJ7P,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAK,IACrB+P,EAAiB,OAAJ/P,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAK,IAC5B,IAEH+F,OAAMC,GAAKC,QAAQC,MAAMF,IAClC,GACD,CAACwJ,EAAYoB,EAAOE,QAEvB9S,EAAAA,EAAAA,YAAU,KACFwR,KACAnK,EAAAA,EAAAA,GAAU,CACNC,QAAQ,gCAADlG,OAAwC,OAANwR,QAAM,IAANA,OAAM,EAANA,EAAQE,KAAI,YAAA1R,OAAiB,OAANwR,QAAM,IAANA,OAAM,EAANA,EAAQE,MACxEG,QAAS,CACL,GAAa,OAAP5F,QAAO,IAAPA,OAAO,EAAPA,EAAS2F,cAEpBzL,MAAKvF,IACAA,EAAKgM,QACLiE,GAAgBlD,IAAG,IAAAtH,EAAA,OAAAmF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZmC,GAAG,IACNmD,aAAuB,QAAXzK,EAAEzF,EAAKA,YAAI,IAAAyF,EAAAA,EAAI,IAAE,IAGjCwK,GAAgBlD,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUmC,GAAG,IAAEmD,aAAc,MACpD,IACDnK,OAAMC,GAAKC,QAAQC,MAAMF,MAE5BX,EAAAA,EAAAA,GAAU,CACNC,QAAQ,mCAADlG,OAA2C,OAANwR,QAAM,IAANA,OAAM,EAANA,EAAQE,KAAI,YAAA1R,OAAiB,OAANwR,QAAM,IAANA,OAAM,EAANA,EAAQE,MAC3EvD,OAAQ,QACThI,MAAKvF,IACJ,GAAIA,EAAKgM,QAAS,CACd,MAAMkF,EAAYlR,EAAKA,KAAK,GAAG,IAAM,CAAC,EAChCmR,EAAUnR,EAAKA,KAAK,GAAG,IAAM,CAAC,EACpCiQ,GAAgBlD,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZmC,GAAG,IACNoD,kBAAkBiB,EAAAA,EAAAA,IAAqB,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAASE,gBAAyB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASE,eAAiB,EACrFjB,mBAAmBgB,EAAAA,EAAAA,IAAqB,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAASG,iBAA0B,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASG,gBAAkB,EACxFjB,oBAAoBe,EAAAA,EAAAA,IAAuB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWK,sBAAiC,OAATL,QAAS,IAATA,OAAS,EAATA,EAAWK,qBAAuB,EACvGjB,qBAAqBc,EAAAA,EAAAA,IAAuB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWM,uBAAkC,OAATN,QAAS,IAATA,OAAS,EAATA,EAAWM,sBAAwB,KAElH,KACDzL,OAAMC,GAAKC,QAAQC,MAAMF,KAChC,GACD,CAAC4K,EAAOE,OAEX,MAAMW,EAAcA,KAChBhB,GAAgB1D,GAAO2E,OAAOC,YAC1BD,OAAOE,QAAQ7E,GAAKvN,KAAIqS,IAAA,IAAEC,EAAK7Q,GAAM4Q,EAAA,MAAK,CAACC,GAAK,EAAM,OAE1D7B,GAAgBlD,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUmC,GAAG,IAAEwD,iBAAkB,MAAM,EAoBxDwB,GAAsBC,EAAAA,EAAAA,IAAsB,OAAZhC,QAAY,IAAZA,OAAY,EAAZA,EAAcE,aAAc,eAElE,OACIlO,EAAAA,EAAAA,MAAAsF,EAAAA,SAAA,CAAAlF,SAAA,EACIJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8DAA6DG,SAAA,EAC5EC,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLuB,UAAU,sBACVhB,MAAO2P,EAAOE,KACdnG,SAAU3E,GAAK6K,GAAU9D,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUmC,GAAG,IAAE+D,KAAM9K,EAAE6E,OAAO5J,aAE9DoB,EAAAA,EAAAA,KAAC4P,EAAAA,EAAa,QAGdjQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASG,SAAA,CACV,OAAT0N,QAAS,IAATA,OAAS,EAATA,EAAWtQ,KAAI,CAACkI,EAAG5F,KAChBO,EAAAA,EAAAA,KAAC0M,EAAQ,CAELT,KAAMH,EAAS,eACfa,MAAO,cACPG,WAAY,GACZF,SAAW,OAADvH,QAAC,IAADA,GAAAA,EAAGwK,aAAcC,EAAAA,EAAAA,IAAaC,SAAU,OAAD1K,QAAC,IAADA,OAAC,EAADA,EAAGwK,cAAgB,GAJ/DpQ,KAOG,OAAf4N,QAAe,IAAfA,OAAe,EAAfA,EAAiBlQ,KAAI,CAACkI,EAAG5F,KACtBO,EAAAA,EAAAA,KAAC0M,EAAQ,CAELC,MAAQ,OAADtH,QAAC,IAADA,OAAC,EAADA,EAAG2K,WACVzK,QAASA,KACL,OAAS,OAADF,QAAC,IAADA,OAAC,EAADA,EAAG2K,YACP,IAAK,QACD5B,GAAgB1D,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUmC,GAAG,IAAEmD,cAAc,MAChD,MACJ,IAAK,WACDO,GAAgB1D,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUmC,GAAG,IAAE2D,iBAAiB,MAI3D,EAEJpC,KAAO,OAAD5G,QAAC,IAADA,GAAAA,EAAG2K,WAAalE,EAAU,OAADzG,QAAC,IAADA,OAAC,EAADA,EAAG2K,iBAAcC,EAChDnD,WAAYrN,EAAI,EAChBmN,SAAW,OAADvH,QAAC,IAADA,GAAAA,EAAG6K,cAAeJ,EAAAA,EAAAA,IAAaC,SAAU,OAAD1K,QAAC,IAADA,OAAC,EAADA,EAAG6K,eAAiB,EACtErD,UAAY,OAADxH,QAAC,IAADA,GAAAA,EAAG8K,aAAcL,EAAAA,EAAAA,IAAc,OAADzK,QAAC,IAADA,OAAC,EAADA,EAAG8K,aAAe,GAjBtD1Q,KAoBN,OAAN8N,QAAM,IAANA,OAAM,EAANA,EAAQpQ,KAAI,CAACkI,EAAG5F,KACbO,EAAAA,EAAAA,KAAC0M,EAAQ,CAELC,MAAO,WACPV,KAAMH,EAAS,YACfgB,WAAY,GACZF,SAAW,OAADvH,QAAC,IAADA,GAAAA,EAAG+K,kBAAmBN,EAAAA,EAAAA,IAAc,OAADzK,QAAC,IAADA,OAAC,EAADA,EAAG+K,kBAAoB,GAJ/D3Q,SASjBE,EAAAA,EAAAA,MAACkG,EAAAA,EAAM,CACHC,KAAMqI,EAAaN,aACnB9H,QAASqJ,EACTnJ,WAAS,EAACwF,SAAS,KAAI1L,SAAA,EAEvBC,EAAAA,EAAAA,KAACkG,EAAAA,EAAW,CAAAnG,UACRC,EAAAA,EAAAA,KAAA,QAAAD,UACIJ,EAAAA,EAAAA,MAAA,MAAIC,UAAU,2CAA0CG,SAAA,EACpDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mBACNC,EAAAA,EAAAA,KAAA,QAAAD,UACK+P,EAAAA,EAAAA,IACe,OAAZnC,QAAY,IAAZA,GAA0B,QAAdX,EAAZW,EAAcE,oBAAY,IAAAb,OAAd,EAAZA,EAA4BlR,QAAO,CAACuU,EAAKC,IAASD,EAAO7M,OAAW,OAAJ8M,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAAS,cAMnGvQ,EAAAA,EAAAA,KAACkI,EAAAA,EAAa,CAAAnI,UACVC,EAAAA,EAAAA,KAACwQ,EAAAA,GAAe,CACZlP,UAAWoO,EACXe,QAAS,CACL,CACIC,WAAY,cACZC,UAAW,SACXC,UAAW,GAEf,CACIC,cAAc,EACdC,aAAc,eACdC,KAAMC,IAAA,IAAAC,EAAA,IAAC,IAAEC,GAAKF,EAAA,OAAKlB,EAAAA,EAAAA,IAAgB,OAAHoB,QAAG,IAAHA,GAAgB,QAAbD,EAAHC,EAAKC,mBAAW,IAAAF,OAAb,EAAHA,EAAkBnV,QAAO,CAACC,EAAKuU,IAASvU,EAAMyH,OAAW,OAAJ8M,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAAS,GAAG,EACvGK,UAAW,IAGnBQ,mBAAmB,EACnBC,oBAAkB,EAClBC,cAAc,EACdC,eAAgBC,IAAA,IAAAC,EAAA,IAAC,IAAEP,GAAKM,EAAA,OACpBxR,EAAAA,EAAAA,KAACwQ,EAAAA,GAAe,CACZlP,UAA2B,QAAlBmQ,EAAK,OAAHP,QAAG,IAAHA,OAAG,EAAHA,EAAKC,mBAAW,IAAAM,EAAAA,EAAI,GAC/BhB,QAAS,CACL,CACIC,WAAY,eACZC,UAAW,SACXC,UAAW,GAEf,CACIF,WAAY,SACZC,UAAW,SACXC,UAAW,IAGnBQ,mBAAmB,GACrB,OAKdpR,EAAAA,EAAAA,KAAC6I,EAAAA,EAAa,CAAA9I,UACVC,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,CAACb,QAASA,IAAM6I,GAAgB1D,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUmC,GAAG,IAAEmD,cAAc,cAI/ElO,EAAAA,EAAAA,MAACkG,EAAAA,EAAM,CACHC,KAAMqI,EAAaE,gBACnBtI,QAASqJ,EACTnJ,WAAS,EAACwF,SAAS,KAAI1L,SAAA,EAEvBC,EAAAA,EAAAA,KAACkG,EAAAA,EAAW,CAAAnG,UACRC,EAAAA,EAAAA,KAAA,QAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,mBAAkBG,UAC5BC,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,cAAaG,SAAC,4BAI1CC,EAAAA,EAAAA,KAACkI,EAAAA,EAAa,CAAAnI,UACVC,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,QAAOG,UACpBJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uCAAuC8R,QAAS,EAAE3R,SAAC,WAErEJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,oBAAmBG,SAAC,WAClCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,oBAAmBG,UAAE+P,EAAAA,EAAAA,IAAanC,EAAaG,wBAEjEnO,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,oBAAmBG,SAAC,YAClCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,oBAAmBG,UAAE+P,EAAAA,EAAAA,IAAanC,EAAaI,yBAEjE/N,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,uCAAuC8R,QAAS,EAAE3R,SAAC,aAErEJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,oBAAmBG,SAAC,WAClCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,oBAAmBG,UAAE+P,EAAAA,EAAAA,IAAanC,EAAaK,0BAEjErO,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,oBAAmBG,SAAC,YAClCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,oBAAmBG,UAAE+P,EAAAA,EAAAA,IAAanC,EAAaM,kCAK7EtO,EAAAA,EAAAA,MAACkJ,EAAAA,EAAa,CAAA9I,SAAA,EACVC,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,CAACb,QAAS6J,EAAYrP,SAAC,WAC9BC,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,CACH0C,QAAQ,WACRvD,QApLaoM,KACzB1E,GAAWA,KACfjK,EAAAA,EAAAA,GAAU,CACNC,QAAQ,4CAADlG,OAAoD,OAANwR,QAAM,IAANA,OAAM,EAANA,EAAQE,KAAI,YAAA1R,OAAiB,OAANwR,QAAM,IAANA,OAAM,EAANA,EAAQE,QACrFvL,MAAKvF,IACAA,EAAKgM,UACLiE,GAAgBlD,IAAG,IAAAlG,EAAA,OAAA+D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZmC,GAAG,IACNwD,iBAA2B,QAAX1J,EAAE7G,EAAKA,YAAI,IAAA6G,EAAAA,EAAI,IAAE,IAErC4J,GAAgB1D,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUmC,GAAG,IAAE4D,qBAAqB,MAC3D,IACD5K,OAAMC,GAAKC,QAAQC,MAAMF,KAAIiO,SAAQ,KAChC1E,GAAYA,GAAY,GAC9B,EAsKgDnN,SACrC,qBAITJ,EAAAA,EAAAA,MAACkG,EAAAA,EAAM,CACHC,KAAMqI,EAAaG,oBACnBvI,QAASqJ,EACTnJ,WAAS,EAACwF,SAAS,KAAI1L,SAAA,EAEvBC,EAAAA,EAAAA,KAACkI,EAAAA,EAAa,CAAAnI,UACVC,EAAAA,EAAAA,KAACwQ,EAAAA,GAAe,CACZlP,WAAuB,OAAZqM,QAAY,IAAZA,OAAY,EAAZA,EAAcO,mBAAoB,GAC7CvB,MAAM,mBACN8D,QAAS,EACLoB,EAAAA,EAAAA,IAAU,aAAc,SAAU,eAClCA,EAAAA,EAAAA,IAAU,eAAgB,SAAU,WACpCA,EAAAA,EAAAA,IAAU,eAAgB,OAAQ,SAClCA,EAAAA,EAAAA,IAAU,cAAe,SAAU,gBACnCA,EAAAA,EAAAA,IAAU,eAAgB,SAAU,iBACpCA,EAAAA,EAAAA,IAAU,sBAAuB,SAAU,uBAIvD7R,EAAAA,EAAAA,KAAC6I,EAAAA,EAAa,CAAA9I,UACVC,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,CAACb,QAAS6J,EAAYrP,SAAC,iBAGvC,ECxRX,EA9EuC7E,IAAuD,IAAtD,UAAE+R,EAAS,WAAEC,EAAU,QAAE4E,GAAUpD,EAAAA,EAAAA,OAAaxT,EACpF,MAAM,KAAE6W,IAASC,EAAAA,EAAAA,OACVC,EAAWC,IAAgB5W,EAAAA,EAAAA,UAAS,KACpC6W,EAASC,IAAc9W,EAAAA,EAAAA,UAAS,CACnC+W,aAAcP,IAmBlB,OAhBAnW,EAAAA,EAAAA,YAAU,MACF2W,EAAAA,EAAAA,IAAYH,EAAQE,gBAAiBtD,EAAAA,EAAAA,IAAcgD,EAAKvQ,UACxD0Q,EAAa,IACTjF,GAAWA,KACfjK,EAAAA,EAAAA,GAAU,CACNC,QAAQ,+CAADlG,OAAiDgV,EAAKvQ,OAAM,aAAAzE,OAAYoV,EAAQE,gBACxFnP,MAAKvF,IACAA,EAAKgM,SACLuI,EAAavU,EAAKA,KACtB,IACD+F,OAAMC,GAAKC,QAAQC,MAAMF,KAAIiO,SAAQ,KAChC1E,GAAYA,GAAY,IAEpC,GACD,CAACiF,EAAQE,aAAcN,EAAKvQ,UAG3BxB,EAAAA,EAAAA,KAAAiF,EAAAA,SAAA,CAAAlF,UACIJ,EAAAA,EAAAA,MAACkK,EAAAA,EAAI,CAAA9J,SAAA,EACDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8DAA6DG,SAAA,EACxEC,EAAAA,EAAAA,KAAA,QAAMJ,UAAU,oBAAmBG,SAAC,kBACpCC,EAAAA,EAAAA,KAAA,SACI3B,KAAK,OACLO,MAAOuT,EAAQE,aACf/J,SAAU3E,GAAKyO,GAAW1H,IAAGnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUmC,GAAG,IAAE2H,aAAc1O,EAAE6E,OAAO5J,UACnEgB,UAAU,4BAGlBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sDAAqDG,SAAA,EAEhEC,EAAAA,EAAAA,KAAC6J,EAAAA,EAAI,CAACjK,UAAU,OAAOC,MAAO,CAAE0S,SAAU,KAAKxS,UAC3CJ,EAAAA,EAAAA,MAAC0L,EAAAA,EAAW,CAACzL,UAAU,wCAAuCG,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,MAAAD,SACKkS,EAAUnW,QAAO,CAAC0W,EAAOC,KAAUC,EAAAA,EAAAA,IAASF,EAAOC,EAAME,oBAAoB,MAElF3S,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BAIZC,EAAAA,EAAAA,KAAC6J,EAAAA,EAAI,CAACjK,UAAU,OAAOC,MAAO,CAAE0S,SAAU,KAAKxS,UAC3CJ,EAAAA,EAAAA,MAAC0L,EAAAA,EAAW,CAACzL,UAAU,wCAAuCG,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,MAAAD,SACKkS,EAAUnW,QAAO,CAAC0W,EAAOC,KAAK,IAAAG,EAAA,OAAKF,EAAAA,EAAAA,IAASF,EAAY,OAALC,QAAK,IAALA,GAAqB,QAAhBG,EAALH,EAAOI,sBAAc,IAAAD,OAAhB,EAALA,EAAuBhX,OAAO,GAAE,MAExFoE,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BAIZC,EAAAA,EAAAA,KAAC6J,EAAAA,EAAI,CAACjK,UAAU,OAAOC,MAAO,CAAE0S,SAAU,KAAKxS,UAC3CJ,EAAAA,EAAAA,MAAC0L,EAAAA,EAAW,CAACzL,UAAU,wCAAuCG,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,MAAAD,SACKkS,EAAUnW,QAAO,CAAC0W,EAAOC,KAAUC,EAAAA,EAAAA,IAASF,EAAOC,EAAMK,iBAAiB,MAE/E9S,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBAIZC,EAAAA,EAAAA,KAAC6J,EAAAA,EAAI,CAACjK,UAAU,OAAOC,MAAO,CAAE0S,SAAU,KAAKxS,UAC3CJ,EAAAA,EAAAA,MAAC0L,EAAAA,EAAW,CAACzL,UAAU,wCAAuCG,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,MAAAD,SACKkS,EAAUnW,QAAO,CAAC0W,EAAOC,KAAK,IAAAM,EAAA,OAAKL,EAAAA,EAAAA,IAASF,EAAY,OAALC,QAAK,IAALA,GAAiB,QAAZM,EAALN,EAAOO,kBAAU,IAAAD,OAAZ,EAALA,EAAmBnX,OAAO,GAAE,MAEpFoE,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BAKrB,EC0OX,EAzSwB7E,IAAgC,IAA/B,UAAE+R,EAAS,WAAEC,GAAYhS,EAC9C,MAAM6F,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,UAC3C8R,EAAeC,IAAoB5X,EAAAA,EAAAA,UAAS,CAAC,IAC7C6X,EAAcC,IAAmB9X,EAAAA,EAAAA,UAAS,KAC1C+X,EAASC,IAAchY,EAAAA,EAAAA,UAAS,KAChCiY,EAAcC,IAAmBlY,EAAAA,EAAAA,UAAS,IAC3CmY,EAA4C,IAAlCjQ,OAAgB,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWqM,aAAuD,IAAlC5J,OAAgB,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWqM,YACnEsG,EAAgD,IAAlClQ,OAAgB,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWqM,YAChCuG,EAA0C,IAAlCnQ,OAAgB,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWqM,aAAuD,IAAlC5J,OAAgB,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWqM,YACjEhM,EAA+C,IAAlCoC,OAAgB,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWqM,aAAuD,IAAlC5J,OAAgB,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWqM,aACrEwG,EAAUC,IAAevY,EAAAA,EAAAA,WAAS,IAEzCK,EAAAA,EAAAA,YAAU,MACF8X,GAAWE,GAASD,KACpB1Q,EAAAA,EAAAA,GAAU,CACNC,QAAQ,oCAADlG,OAA+C,OAATgE,QAAS,IAATA,OAAS,EAATA,EAAWqM,WAAU,YAAArQ,OAAoB,OAATgE,QAAS,IAATA,OAAS,EAATA,EAAWS,UAEvF0B,MAAKvF,IACEA,EAAKgM,QACLuJ,EAAiBvV,EAAKA,KAAK,IAE3BuV,EAAiB,CAAC,EACtB,IAEHxP,OAAMC,IACHC,QAAQC,MAAMF,EAAE,GAE5B,GACD,CAAU,OAAT5C,QAAS,IAATA,OAAS,EAATA,EAAWS,OAAiB,OAATT,QAAS,IAATA,OAAS,EAATA,EAAWqM,WAAYqG,EAASC,EAAaC,KAEpEhY,EAAAA,EAAAA,YAAU,KACFgY,IACA3Q,EAAAA,EAAAA,GAAU,CACNC,QAAQ,iCAADlG,OAA4C,OAATgE,QAAS,IAATA,OAAS,EAATA,EAAWS,UACtD0B,MAAKvF,IACAA,EAAKgM,QACL6J,EAAgB7V,EAAKA,MAErB6V,EAAgB,GACpB,IACD9P,OAAMC,GAAKC,QAAQC,MAAMF,IAChC,GACD,CAACgQ,KAEJhY,EAAAA,EAAAA,YAAU,KACFgY,KACA3Q,EAAAA,EAAAA,GAAU,CACNC,QAAQ,mCAADlG,OAA8C,OAATgE,QAAS,IAATA,OAAS,EAATA,EAAWS,OAAM,UAAAzE,QAAS2R,EAAAA,EAAAA,MAAW,QAAA3R,QAAO2R,EAAAA,EAAAA,SACzFxL,MAAKvF,IACAA,EAAKgM,QACLyJ,EAAgBzV,EAAKA,MAErB6V,EAAgB,GACpB,IACD9P,OAAMC,GAAKC,QAAQC,MAAMF,MAE5BX,EAAAA,EAAAA,GAAU,CACNC,QAAQ,uCAADlG,OAAkD,OAATgE,QAAS,IAATA,OAAS,EAATA,EAAWS,OAAM,aAAAzE,QAAY2R,EAAAA,EAAAA,SAC9ExL,MAAKvF,IACAA,EAAKgM,SACLhM,EAAKA,KAAKmW,MAAK,CAACC,EAAGC,KACf,MAAOC,EAAQC,GAAa,OAADH,QAAC,IAADA,OAAC,EAADA,EAAGI,SAAS/X,MAAM,KAAKe,IAAIqG,SAC/C4Q,EAAQC,GAAa,OAADL,QAAC,IAADA,OAAC,EAADA,EAAGG,SAAS/X,MAAM,KAAKe,IAAIqG,QACtD,OAAIyQ,IAAWG,EACJH,EAASG,EAEbF,EAAWG,CAAQ,IAE9Bf,EAAW3V,EAAKA,OAEhB2V,EAAW,GACf,IACD5P,OAAMC,GAAKC,QAAQC,MAAMF,KAChC,GACD,CAACgQ,EAAgB,OAAT5S,QAAS,IAATA,OAAS,EAATA,EAAWS,SAEtB,MAAMkL,EAAWK,IAAuD,IAAtD,MAAEJ,EAAK,KAAEV,EAAI,SAAEW,EAAQ,UAAEC,EAAS,WAAEC,GAAYC,EAC9D,OACI/M,EAAAA,EAAAA,KAAAiF,EAAAA,SAAA,CAAAlF,UACIC,EAAAA,EAAAA,KAAA,OAAKJ,UAAS,GAAA7C,QAAM0W,GAAWC,IAAgB,YAAW,oCAAmC3T,UACzFJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,wEAA0EkN,EAAW/M,SAAA,EACjGJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBG,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,iBAAgBG,SAAE4M,KAChChN,EAAAA,EAAAA,MAAA,MAAIC,UAAU,sBAAqBG,SAAA,EAC/BJ,EAAAA,EAAAA,MAAA,QAAME,MAAO,CAAEuF,SAAU,QAASrF,SAAA,CAAE6M,GAAsB,EAAE,OAC3DC,GAAa,IAAMA,QAG3BZ,QAGV,EAILqI,EAAaC,IACf,MAAMvN,EAAOtK,KAAKC,MAAM6G,OAAO+Q,GAAO,IAChC1X,EAAU2G,OAAO+Q,GAAO,GACxBC,EAAaxN,EAAO,GAAK,IAAMA,EAAOA,EACtCyN,EAAe5X,EAAU,GAAK,IAAMA,EAAUA,EAEpD,OAAQ2X,GAAcC,EAAgBD,EAAa,IAAMC,EAAe,OAAO,EAG7EC,EAAezU,GAEH,CAAC,UAAW,UAAW,aAAc,aAAc,aADnDuD,OAAOvD,IAKzB,OACIN,EAAAA,EAAAA,MAAAsF,EAAAA,SAAA,CAAAlF,SAAA,CACKqB,IAAcpB,EAAAA,EAAAA,KAACI,EAAO,KAErBsT,GAAeD,KAAYzT,EAAAA,EAAAA,KAAC2U,EAAmB,KAE/ClB,GAAWC,KACT1T,EAAAA,EAAAA,KAAC4U,EAAAA,EAAgB,CACbC,SACI7U,EAAAA,EAAAA,KAAC8U,EAAAA,EAAM,CACHC,QAASnB,EACTtL,SAAU3E,GAAKkQ,EAAYlQ,EAAE6E,OAAOuM,WAG5C1X,MAAM,uBACNuC,UAAU,2BAIlBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMG,SAAA,EACd0T,GAAWC,IAAgBE,IAC1BjU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKG,SAAA,EAChBC,EAAAA,EAAAA,KAAC0M,EAAQ,CACLC,MAAO,WACPV,MAAMjM,EAAAA,EAAAA,KAACgV,EAAAA,IAAa,CAACnV,MAAO,CAAEuF,SAAU,UACxCwH,SAAuB,OAAbqG,QAAa,IAAbA,OAAa,EAAbA,EAAegC,eACzBpI,UAAwB,OAAboG,QAAa,IAAbA,OAAa,EAAbA,EAAeiC,YAC1BpI,WAAY,OAEhB9M,EAAAA,EAAAA,KAAC0M,EAAQ,CACLC,MAAO,WACPV,MAAMjM,EAAAA,EAAAA,KAACmV,EAAAA,GAAc,CAACtV,MAAO,CAAEuF,SAAU,UACzCwH,SAAuB,OAAbqG,QAAa,IAAbA,OAAa,EAAbA,EAAemC,eACzBvI,UAAwB,OAAboG,QAAa,IAAbA,OAAa,EAAbA,EAAeoC,YAC1BvI,WAAY,OAEhB9M,EAAAA,EAAAA,KAAC0M,EAAQ,CACLC,MAAO,kBACPV,MAAMjM,EAAAA,EAAAA,KAACsV,EAAAA,IAAM,CAACzV,MAAO,CAAEuF,SAAU,UACjCwH,SAAuB,OAAbqG,QAAa,IAAbA,OAAa,EAAbA,EAAesC,cAEzBzI,WAAY,OAEhB9M,EAAAA,EAAAA,KAAC0M,EAAQ,CACLC,MAAO,WACPV,MAAMjM,EAAAA,EAAAA,KAACwV,EAAAA,IAAO,CAAC3V,MAAO,CAAEuF,SAAU,UAClCwH,SAAuB,OAAbqG,QAAa,IAAbA,OAAa,EAAbA,EAAewC,eACzB5I,UAAWrJ,OAAoB,OAAbyP,QAAa,IAAbA,OAAa,EAAbA,EAAewC,iBAA+B,OAAbxC,QAAa,IAAbA,OAAa,EAAbA,EAAeyC,YAClE5I,WAAY,OAEhB9M,EAAAA,EAAAA,KAAC0M,EAAQ,CACLC,MAAO,eACPV,MAAMjM,EAAAA,EAAAA,KAAC2V,EAAAA,IAAU,CAAC9V,MAAO,CAAEuF,SAAU,UACrCwH,SAAU0H,EAAuB,OAAbrB,QAAa,IAAbA,OAAa,EAAbA,EAAe2C,cACnC9I,WAAY,OAEhB9M,EAAAA,EAAAA,KAAC0M,EAAQ,CACLC,MAAO,cACPV,MAAMjM,EAAAA,EAAAA,KAAC6V,EAAAA,IAAW,CAAChW,MAAO,CAAEuF,SAAU,UACtCwH,SAAuB,OAAbqG,QAAa,IAAbA,OAAa,EAAbA,EAAe6C,mBACzBjJ,UAAwB,OAAboG,QAAa,IAAbA,OAAa,EAAbA,EAAe8C,WAC1BjJ,WAAY,SAIvB6G,IACGhU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKG,SAAA,EAChBC,EAAAA,EAAAA,KAAC0M,EAAQ,CACLC,MAAO,kBACPC,SAAuB,OAAbqG,QAAa,IAAbA,OAAa,EAAbA,EAAesC,cACzB1I,UAAwB,OAAboG,QAAa,IAAbA,OAAa,EAAbA,EAAe+C,WAC1B/J,MAAMjM,EAAAA,EAAAA,KAACsV,EAAAA,IAAM,CAACzV,MAAO,CAAEuF,SAAU,UACjC0H,WAAY,OAChB9M,EAAAA,EAAAA,KAAC0M,EAAQ,CACLC,MAAO,cACPC,SAAuB,OAAbqG,QAAa,IAAbA,OAAa,EAAbA,EAAe6C,mBACzBjJ,UAAwB,OAAboG,QAAa,IAAbA,OAAa,EAAbA,EAAe8C,WAC1B9J,MAAMjM,EAAAA,EAAAA,KAAC6V,EAAAA,IAAW,CAAChW,MAAO,CAAEuF,SAAU,UACtC0H,WAAY,OAChB9M,EAAAA,EAAAA,KAAC0M,EAAQ,CACLC,MAAO,mBACPC,SAAU0H,EAAuB,OAAbrB,QAAa,IAAbA,OAAa,EAAbA,EAAegD,eACnChK,MAAMjM,EAAAA,EAAAA,KAAC6V,EAAAA,IAAW,CAAChW,MAAO,CAAEuF,SAAU,UACtC0H,WAAY,aAK5B9M,EAAAA,EAAAA,KAAA,SAEC2T,IAAS3T,EAAAA,EAAAA,KAAC+I,EAAc,KAEzB/I,EAAAA,EAAAA,KAAA,SAEE2T,GAASR,EAAavX,OAAS,IAC7B+D,EAAAA,EAAAA,MAAAsF,EAAAA,SAAA,CAAAlF,SAAA,EACIC,EAAAA,EAAAA,KAAC6J,EAAAA,EAAI,CAAA9J,UACDJ,EAAAA,EAAAA,MAAC0L,EAAAA,EAAW,CAAC5F,GAAI,CAAEyQ,GAAI,GAAInW,SAAA,EACvBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAACmW,EAAAA,EAAY,CAAChb,WAAYgY,KAC1BnT,EAAAA,EAAAA,KAAA,eAGRA,EAAAA,EAAAA,KAAA,aAIRA,EAAAA,EAAAA,KAACoW,EAA8B,CAACnJ,UAAWA,EAAWC,WAAYA,IAEhEyG,GAASN,EAAQzX,OAAS,IACxB+D,EAAAA,EAAAA,MAACkK,EAAAA,EAAI,CAAA9J,SAAA,EACDC,EAAAA,EAAAA,KAACqW,EAAAA,EAAU,CAAC1J,MAAO,eAAiB0G,EAAQzX,OAAQ6J,GAAI,CAAEyQ,GAAI,MAC9DlW,EAAAA,EAAAA,KAACqL,EAAAA,EAAW,CAAAtL,UAERC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,mBAAkBG,UAC7BJ,EAAAA,EAAAA,MAAA,SAAOC,UAAU,cAAaG,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAAD,UACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAC,SAC7BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAC,UAC7BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAC,iBAC7BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAC,cAC7BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAC,cAC7BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAC,iBAGrCC,EAAAA,EAAAA,KAAA,SAAAD,SACKsT,EAAQlW,KAAI,CAACkI,EAAG5F,KACbE,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAEN,EAAI,KAClCO,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAG/H,aACjC0C,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,2BAA0BG,UACpCC,EAAAA,EAAAA,KAAA,QAAMJ,UAAS,2CAAA7C,OAA6C2X,EAAuC,IAA3BlR,OAAQ,OAAD6B,QAAC,IAADA,OAAC,EAADA,EAAGiR,aAAqB,EAAI,IAAKvW,SAChF,IAA3ByD,OAAQ,OAAD6B,QAAC,IAADA,OAAC,EAADA,EAAGiR,aAAqB,MAAQ,UAGhD3W,EAAAA,EAAAA,MAAA,MAAIC,UAAU,2BAA0BG,SAAA,CAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAG8O,SAAS,MAAK,OAAD9O,QAAC,IAADA,OAAC,EAADA,EAAGkR,YAC7DvW,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,2BAA0BG,SAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAGmR,cAC7CxW,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,2BAA0BG,UACpCC,EAAAA,EAAAA,KAAA,QAAMJ,UAAS,2CAAA7C,OAA6C2X,EAAa,OAADrP,QAAC,IAADA,GAAAA,EAAGoR,QAAU,EAAI,IAAK1W,SACxF,OAADsF,QAAC,IAADA,GAAAA,EAAGoR,QAAU,YAAc,gBAZ/BhX,kBAwBrCO,EAAAA,EAAAA,KAAA,SAEE2T,IAAqB,OAAZJ,QAAY,IAAZA,OAAY,EAAZA,EAAc3X,QAAS,IAC9B+D,EAAAA,EAAAA,MAACkK,EAAAA,EAAI,CAAC6M,UAAWC,EAAAA,EAAM5W,SAAA,EACnBC,EAAAA,EAAAA,KAACqW,EAAAA,EAAU,CAAC1J,MAAM,gBAAgBlH,GAAI,CAAEyQ,GAAI,MAC5ClW,EAAAA,EAAAA,KAACqL,EAAAA,EAAW,CAAAtL,UACRC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,mBAAkBG,UAC7BJ,EAAAA,EAAAA,MAAA,SAAOC,UAAU,QAAOG,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAD,UACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAC,SAC7BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAC,iBAC7BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAC,gBAGrCC,EAAAA,EAAAA,KAAA,SAAAD,SACiB,OAAZwT,QAAY,IAAZA,OAAY,EAAZA,EAAcpW,KAAI,CAACkI,EAAG5F,KACnBE,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAEN,EAAI,KAClCO,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAGuR,eACjC5W,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,eAAcG,SAAG,OAADsF,QAAC,IAADA,OAAC,EAADA,EAAGwR,gBAH5BpX,mBAatC,C,kFChTX,MA+DA,EA/DsBmQ,KAClB,MAAM7O,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,SAC5CsS,EAA4C,IAAlCjQ,OAAgB,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWqM,aAAuD,IAAlC5J,OAAgB,OAATzC,QAAS,IAATA,OAAS,EAATA,EAAWqM,aAClE0J,EAAgBC,IAAoBzb,EAAAA,EAAAA,UAAS,CAChD0b,oBAAqB,KACrBC,cAAe,OAuBnB,OApBAtb,EAAAA,EAAAA,YAAU,KACF8X,IACAzQ,EAAAA,EAAAA,GAAU,CACNC,QAAQ,2BACR2L,QAAS,CACL,GAAe,OAAT7N,QAAS,IAATA,OAAS,EAATA,EAAW4N,cAEtBzL,MAAKvF,IACJ,GAAIA,EAAKgM,QAAS,CAAC,IAADuN,EAAAC,EAAAC,EAAAC,EACd,MAAMC,EAAY,OAAJ3Z,QAAI,IAAJA,GAAa,QAATuZ,EAAJvZ,EAAMA,KAAK,UAAE,IAAAuZ,GAAbA,EAAeF,oBAAsB,IAAI9a,KAAS,OAAJyB,QAAI,IAAJA,GAAa,QAATwZ,EAAJxZ,EAAMA,KAAK,UAAE,IAAAwZ,OAAT,EAAJA,EAAeH,qBAAuB,KAC5FO,EAAY,OAAJ5Z,QAAI,IAAJA,GAAa,QAATyZ,EAAJzZ,EAAMA,KAAK,UAAE,IAAAyZ,GAAbA,EAAeH,cAAgB,IAAI/a,KAAS,OAAJyB,QAAI,IAAJA,GAAa,QAAT0Z,EAAJ1Z,EAAMA,KAAK,UAAE,IAAA0Z,OAAT,EAAJA,EAAeJ,eAAiB,KACtFF,EAAiB,CACbC,oBAAqBM,EACrBL,cAAeM,GAEvB,IAER,GACD,CAAC9D,EAAkB,OAAT1S,QAAS,IAATA,OAAS,EAATA,EAAW4N,cAGpB3O,EAAAA,EAAAA,KAAAiF,EAAAA,SAAA,CAAAlF,UAEIC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,SAAQG,UACnBC,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,uCAAsCG,UACjDC,EAAAA,EAAAA,KAAA,SAAOJ,UAAU,2CAA0CG,UACvDJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACIJ,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,0BAAyBG,SAAC,gBACxCC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,0BAAyBG,SACnC+W,EAAeE,qBACTzL,EAAAA,EAAAA,KAAUiM,EAAAA,EAAAA,IAAgBV,EAAeE,sBACzC,MACAS,EAAAA,EAAAA,IAAQX,EAAeE,qBACvB,UAGdrX,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,YAAWG,SAAC,gBAC1BC,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,YAAWG,SACrB+W,EAAeG,eACT1L,EAAAA,EAAAA,KAAUiM,EAAAA,EAAAA,IAAgBV,EAAeG,gBACzC,MACAQ,EAAAA,EAAAA,IAAQX,EAAeG,eACvB,mBAO/B,C","sources":["Pages/Dashboard/chartComp.jsx","Pages/Dashboard/erp/SOA.jsx","Pages/Attendance/attendanceComp.jsx","Pages/Dashboard/managementDashboard.jsx","Pages/Dashboard/staffInvolvedCostCenter.jsx","Pages/Dashboard/commonDashboard.jsx","Pages/Dashboard/tallyLastSyncedTime.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport 'chartjs-plugin-datalabels';\r\n\r\n\r\nconst PieChartComp = ({ TasksArray }) => {\r\n    const [chartData, setChartData] = useState(null);\r\n    const [chartInstance, setChartInstance] = useState(null);\r\n    const [totalTime, setTotalTime] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (TasksArray.length > 0) {\r\n            const totalDuration = TasksArray.reduce((acc, task) => {\r\n                const start = new Date(new Date().toISOString().split('T')[0] + 'T' + task.Start_Time);\r\n                const end = new Date(new Date().toISOString().split('T')[0] + 'T' + task.End_Time);\r\n                return acc + (end - start);\r\n            }, 0);\r\n\r\n            const firstTaskStart = new Date(new Date().toISOString().split('T')[0] + 'T' + TasksArray[0].Start_Time);\r\n            const lastTaskEnd = new Date(new Date().toISOString().split('T')[0] + 'T' + TasksArray[TasksArray.length - 1].End_Time);\r\n            const totalTime = lastTaskEnd - firstTaskStart;\r\n            const freeTime = totalTime - totalDuration;\r\n\r\n            const totalSeconds = Math.floor(totalTime / 1000);\r\n            const hours = Math.floor(totalSeconds / 3600);\r\n            const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n            const seconds = totalSeconds % 60;\r\n            setTotalTime(`${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`);\r\n\r\n            const taskData = TasksArray.map(task => {\r\n                const start = new Date(new Date().toISOString().split('T')[0] + 'T' + task.Start_Time);\r\n                const end = new Date(new Date().toISOString().split('T')[0] + 'T' + task.End_Time);\r\n                const duration = end - start;\r\n                return {\r\n                    label: `${task.Task_Name} (${task.Start_Time} - ${task.End_Time})`,\r\n                    duration,\r\n                    backgroundColor: getRandomColor()\r\n                };\r\n            });\r\n\r\n            const chartData = {\r\n                labels: taskData.map(task => task.label),\r\n                datasets: [{\r\n                    data: taskData.map(task => task.duration),\r\n                    backgroundColor: taskData.map(task => task.backgroundColor),\r\n                    borderColor: 'rgba(255, 255, 255, 1)',\r\n                    borderWidth: 1\r\n                }]\r\n            };\r\n\r\n            chartData.labels.push('Free Time');\r\n            chartData.datasets[0].data.push(freeTime);\r\n            chartData.datasets[0].backgroundColor.push('#ADD8E6');\r\n\r\n            setChartData(chartData);\r\n        }\r\n    }, [TasksArray]);\r\n\r\n    useEffect(() => {\r\n        if (chartData) {\r\n            if (chartInstance) {\r\n                chartInstance.destroy();\r\n            }\r\n\r\n            const ctx = document.getElementById('empWokHours');\r\n            const newChartInstance = new Chart(ctx, {\r\n                type: 'pie',\r\n                data: chartData,\r\n                options: {\r\n                    responsive: true,\r\n                    plugins: {\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: function (context) {\r\n                                    // const label = context.label || '';\r\n                                    const value = context.parsed || 0;\r\n                                    const total = context.dataset.data.reduce((acc, curr) => acc + curr, 0);\r\n                                    const percentage = Math.round((value / total) * 100);\r\n                                    const minutes = Math.round(value / (1000 * 60));\r\n                                    return `${minutes} minutes (${percentage}%)`;\r\n                                }\r\n                            }\r\n                        },\r\n                        datalabels: {\r\n                            color: '#fff',\r\n                            formatter: (value, context) => {\r\n                                const label = context.chart.data.labels[context.dataIndex];\r\n                                const value1 = context.parsed || 0;\r\n                                const total = context.dataset.data.reduce((acc, curr) => acc + curr, 0);\r\n                                const percentage = Math.round((value1 / total) * 100);\r\n                                return `${label}: ${value} (${percentage}%)`;\r\n                            }\r\n                        }                        \r\n                    }\r\n                }\r\n            });\r\n\r\n            setChartInstance(newChartInstance);\r\n        }\r\n    }, [chartData]);\r\n\r\n    // for Dynamic background colors\r\n    const getRandomColor = () => {\r\n        const letters = '0123456789ABCDEF';\r\n        let color = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    };\r\n\r\n    return TasksArray.length > 0 ? (\r\n        <div className='d-flex flex-column align-items-center my-3' style={{ maxHeight: '500px' }}>\r\n            {totalTime && <p className='my-2'>Total Time: {totalTime}</p>}\r\n            <canvas id=\"empWokHours\" width=\"400\" height=\"100\"></canvas>\r\n        </div>\r\n    ) : (\r\n        <h5 className=\"text-center my-5\">No Data For PieChart!</h5>\r\n    )\r\n};\r\n\r\nexport default PieChartComp;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { LaunchOutlined } from '@mui/icons-material'\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Button } from \"@mui/material\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { utils as XLSXUtils, writeFile as writeXLSX } from 'xlsx';\r\nimport logo from '../ic_launcher.png';\r\nimport { fetchLink } from '../../../Components/fetchComponent'\r\n\r\n\r\nconst SOAComp = () => {\r\n    const parseData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [isCustomer, setIsCustomer] = useState(false)\r\n    const [dataArray, setDataArray] = useState([]);\r\n    const UserId = parseData?.UserId;\r\n    // const token = parseData?.Autheticate_Id;\r\n    const [total, setTotal] = useState(0)\r\n    const [dialog, setDialog] = useState(false)\r\n    const [SOA, setSOA] = useState([])\r\n    const [clickedRow, setClickedRow] = useState({})\r\n    const today = new Date();\r\n    const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 2);\r\n\r\n    const [selectedRange, setSelectedRange] = useState({\r\n        from: firstDayOfMonth.toISOString().split('T')[0],\r\n        to: new Date().toISOString().split('T')[0],\r\n    });\r\n\r\n    const imageSource = logo\r\n    const [closingBalance, setClosingBalance] = useState({ debit: 0, credit: 0 });\r\n    const printRef = useRef()\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `userModule/customer/getBalance?UserId=${UserId}`\r\n        }).then(data => {\r\n            if (data.status === 'Success') {\r\n                setDataArray(data.data)\r\n                let temp = 0;\r\n                data.data?.forEach(obj => {\r\n                    temp += Number(obj.Bal_Amount)\r\n                })\r\n                setTotal(temp)\r\n            }\r\n            if (data?.isCustomer) {\r\n                setIsCustomer(true)\r\n            } else {\r\n                setIsCustomer(false)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [])\r\n\r\n    const getInfo = (prop, mode) => {\r\n        let rowData;\r\n        if (mode && mode === 1) {\r\n            rowData = clickedRow;\r\n        } else {\r\n            rowData = prop\r\n        }\r\n        setClickedRow(rowData)\r\n        setDialog(true);\r\n        fetchLink({\r\n            address: `userModule/customer/StatementOfAccound?Cust_Id=${rowData?.Cust_Id}&Acc_Id=${rowData?.tally_id}&Company_Id=${rowData?.Company_Id}&Fromdate=${selectedRange?.from}&Todate=${selectedRange?.to}`\r\n        }).then(data => {\r\n            setSOA(data.data)\r\n            let bal = { debit: 0, credit: 0 }\r\n            data?.data?.forEach(obj => {\r\n                bal.debit += Number(obj.Debit_Amt)\r\n                bal.credit += Number(obj.Credit_Amt)\r\n            })\r\n            setClosingBalance(bal)\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setDialog(false);\r\n        setSOA([]);\r\n        setClickedRow({});\r\n        setSelectedRange({\r\n            from: firstDayOfMonth.toISOString().split('T')[0],\r\n            to: new Date().toISOString().split('T')[0],\r\n        })\r\n    }\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n    });\r\n\r\n    const generateExcel = (data) => {\r\n        const worksheet = XLSXUtils.json_to_sheet(data);\r\n        const workbook = XLSXUtils.book_new();\r\n        XLSXUtils.book_append_sheet(workbook, worksheet, 'Sheet1');\r\n        writeXLSX(workbook, `erpsmt_SOA_${new Date().toLocaleDateString('en-IN', {\r\n            day: '2-digit',\r\n            month: '2-digit',\r\n            year: 'numeric',\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n            second: '2-digit'\r\n        })}.xlsx`);\r\n    }\r\n\r\n    return isCustomer ? (\r\n        <>\r\n            <div className=\"card\">\r\n                <div className=\"card-header py-3 bg-white\" >\r\n                    <p className=\"mb-0 fw-bold\" >\r\n                        <span>Balance of {parseData?.Name}</span>\r\n                        <span className={total > 0 ? 'text-primary' : 'text-danger'}> &nbsp;( {total.toLocaleString('en-IN') + (total < 0 ? ' CR' : ' DR')} )</span>\r\n                    </p>\r\n                </div>\r\n                <div className=\"card-body p-0 table-responsive\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ fontSize: '13px' }}>S.No</th>\r\n                                <th style={{ fontSize: '13px' }}> - </th>\r\n                                <th style={{ fontSize: '13px' }}>Company</th>\r\n                                <th style={{ fontSize: '13px' }}>Ledger</th>\r\n                                <th style={{ fontSize: '13px' }}>Balance</th>\r\n                                <th style={{ fontSize: '13px' }}>Dr/Cr</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {dataArray.map((o, i) => (\r\n                                <tr key={i}>\r\n                                    <td style={{ fontSize: '13px' }}>{i + 1}</td>\r\n                                    <td style={{ fontSize: '13px' }}>\r\n                                        <button\r\n                                            className=\"icon-btn\"\r\n                                            onClick={() => { getInfo(o) }}>\r\n                                            <LaunchOutlined sx={{ fontSize: 'inherit' }} />\r\n                                        </button>\r\n                                    </td>\r\n                                    <td style={{ fontSize: '13px' }}>{o?.Company_Name}</td>\r\n                                    <td style={{ fontSize: '13px' }}>{o?.ledger_name}</td>\r\n                                    <td style={{ fontSize: '13px' }}>{o?.Bal_Amount?.toLocaleString('en-IN')}</td>\r\n                                    <td style={{ fontSize: '13px' }}>{o?.CR_DR}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={handleClose}\r\n                fullScreen\r\n                fullWidth>\r\n                <DialogTitle className=\"border-bottom text-primary d-flex align-items-center fa-18\">\r\n                    <span className=\"flex-grow-1\">Transaction Report of {clickedRow?.Customer_name}</span>\r\n                    <Button\r\n                        className=\"fw-bold\"\r\n                        onClick={handlePrint} >\r\n                        PDF\r\n                    </Button>\r\n                    <Button\r\n                        className=\"ms-1 fw-bold\"\r\n                        onClick={() => {\r\n                            const transformedData = SOA.map((o, i) => ({\r\n                                Sno: i + 1,\r\n                                Date: new Date(o?.Ledger_Date).toLocaleDateString('en-IN', {\r\n                                    day: '2-digit',\r\n                                    month: '2-digit',\r\n                                    year: 'numeric',\r\n                                }),\r\n                                Purticular: o?.Ledger_Desc,\r\n                                InvoiceNo: o?.invoice_no,\r\n                                Debit: Boolean(Number(o.Debit_Amt)) ? o.Debit_Amt.toLocaleString('en-IN') : '',\r\n                                Credit: Boolean(Number(o.Credit_Amt)) ? o.Credit_Amt.toLocaleString('en-IN') : '',\r\n                                Company: o?.Company_Name,\r\n                                Ledger: o?.Ledger_Name,\r\n                                Mobile_Number: o?.Mobile_no\r\n                            }));\r\n                            generateExcel(transformedData);\r\n                        }}\r\n                    >\r\n                        excel\r\n                    </Button>\r\n                </DialogTitle>\r\n                <DialogContent className=\"rounded-2 shadow m-4 mb-2 p-0\" >\r\n                    <div className=\"row align-content-center\">\r\n                        <div className=\"col-lg-1\">\r\n                            <img src={imageSource} alt=\"Company Logo\" className=\"smtlogo\" />\r\n                        </div>\r\n                        <div className=\"col-lg-4 p-2 ps-3\">\r\n                            <table className=\"table border-0\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">Company</td>\r\n                                        <td className=\"border-0\">{clickedRow?.Company_Name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">Ledger Name</td>\r\n                                        <td className=\"border-0\">{clickedRow?.ledger_name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">Contact Person</td>\r\n                                        <td className=\"border-0\">{SOA[0]?.Contact_Person}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">Mobile</td>\r\n                                        <td className=\"border-0\">{SOA[0]?.Mobile_no}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                        <div className=\"col-lg-4 p-2\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">Opening Balnce</td>\r\n                                        <td className=\"border-0 text-primary\">{\r\n                                            SOA[0]?.Debit_Amt > 0\r\n                                                ? SOA[0]?.Debit_Amt.toLocaleString('en-IN') + ' DR'\r\n                                                : SOA[0]?.Credit_Amt.toLocaleString('en-IN') + ' CR'\r\n                                        }\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">Closing Balance</td>\r\n                                        <td className=\"border-0 text-primary\">{\r\n                                            (closingBalance?.debit - closingBalance?.credit) < 0\r\n                                                ? (closingBalance?.debit - closingBalance?.credit).toLocaleString('en-IN') + \" CR\"\r\n                                                : (closingBalance?.debit - closingBalance?.credit).toLocaleString('en-IN') + ' DR'\r\n                                        }\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-lg-3 p-2\">\r\n                            <table className=\"table border-0\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">From :</td>\r\n                                        <td className=\"p-0 border-0\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"form-control w-auto ms-2\"\r\n                                                onChange={(e) => setSelectedRange({ ...selectedRange, from: e.target.value })}\r\n                                                value={selectedRange.from} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0\">To :</td>\r\n                                        <td className=\"p-0 border-0\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"form-control w-auto ms-2\"\r\n                                                onChange={(e) => {\r\n                                                    if (selectedRange.from && selectedRange.from <= e.target.value) {\r\n                                                        setSelectedRange({ ...selectedRange, to: e.target.value });\r\n                                                    } else {\r\n                                                        window.alert('Invald Date Range')\r\n                                                    }\r\n                                                }}\r\n                                                value={selectedRange.to}\r\n                                                disabled={!selectedRange.from} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0\"></td>\r\n                                        <td className=\"border-0\">\r\n                                            <button\r\n                                                className=\"btn text-white\"\r\n                                                style={{ backgroundColor: 'rgb(66, 34, 225)' }}\r\n                                                onClick={() => { getInfo('', 1) }}>Search</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-2 table-responsive\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"fa-13 tble-hed-stick\">-</th>\r\n                                    <th className=\"fa-13 tble-hed-stick\">Date</th>\r\n                                    <th className=\"fa-13 tble-hed-stick\">Particulars</th>\r\n                                    <th className=\"fa-13 tble-hed-stick\">Invoice No</th>\r\n                                    <th className=\"fa-13 tble-hed-stick\">Dr</th>\r\n                                    <th className=\"fa-13 tble-hed-stick\">Cr</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {SOA.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className=\"fa-13 bg-light\">{i + 1}</td>\r\n                                        <td className=\"fa-13 bg-light\">\r\n                                            {new Date(o?.Ledger_Date).toLocaleDateString('en-IN', {\r\n                                                day: '2-digit',\r\n                                                month: '2-digit',\r\n                                                year: 'numeric',\r\n                                            })}\r\n                                        </td>\r\n                                        <td className=\"fa-13 bg-light\">{o.Ledger_Desc}</td>\r\n                                        <td className=\"fa-13\">{o.invoice_no}</td>\r\n                                        <td className=\"fa-13\">{o.Debit_Amt.toLocaleString('en-IN')}</td>\r\n                                        <td className=\"fa-13 bg-light\">{o.Credit_Amt.toLocaleString('en-IN')}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    {/* printable div */}\r\n                    <div className=\"d-none\">\r\n                        <div className=\"d-block px-5 py-2\" ref={printRef}>\r\n                            <img src={imageSource} alt=\"smtlogo\" className=\"smtlogo\" />\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Company</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">{clickedRow?.Company_Name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Ledger Name</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">{clickedRow?.ledger_name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Contact Person</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">{SOA[0]?.Contact_Person}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Mobile</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">{SOA[0]?.Mobile_no}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">From</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">{selectedRange.from}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">To</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">{selectedRange.to}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Opening Balance</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">\r\n                                            {\r\n                                                SOA[0]?.Debit_Amt > 0\r\n                                                    ? SOA[0]?.Debit_Amt.toLocaleString('en-IN') + ' DR'\r\n                                                    : SOA[0]?.Credit_Amt.toLocaleString('en-IN') + ' CR'\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 fa-14\">Closing Balance</td>\r\n                                        <td className=\"border-0 fa-14 fw-bold\">\r\n                                            {\r\n                                                (closingBalance?.debit - closingBalance?.credit) < 0\r\n                                                    ? (closingBalance?.debit - closingBalance?.credit).toLocaleString('en-IN') + \" CR\"\r\n                                                    : (closingBalance?.debit - closingBalance?.credit).toLocaleString('en-IN') + ' DR'\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div className=\"p-2 table-responsive\">\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"fa-13 tble-hed-stick\">-</th>\r\n                                            <th className=\"fa-13 tble-hed-stick\">Date</th>\r\n                                            <th className=\"fa-13 tble-hed-stick\">Particulars</th>\r\n                                            <th className=\"fa-13 tble-hed-stick\">Invoice No</th>\r\n                                            <th className=\"fa-13 tble-hed-stick\">Dr</th>\r\n                                            <th className=\"fa-13 tble-hed-stick\">Cr</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {SOA.map((o, i) => (\r\n                                            <tr key={i}>\r\n                                                <td className=\"fa-13 bg-light\">{i + 1}</td>\r\n                                                <td className=\"fa-13 bg-light\">\r\n                                                    {new Date(o?.Ledger_Date).toLocaleDateString('en-IN', {\r\n                                                        day: '2-digit',\r\n                                                        month: '2-digit',\r\n                                                        year: 'numeric',\r\n                                                    })}\r\n                                                </td>\r\n                                                <td className=\"fa-13 bg-light\">{o.Ledger_Desc}</td>\r\n                                                <td className=\"fa-13\">{o.invoice_no}</td>\r\n                                                <td className=\"fa-13\">{Boolean(Number(o.Debit_Amt)) && o.Debit_Amt.toLocaleString('en-IN')}</td>\r\n                                                <td className=\"fa-13 bg-light\">{Boolean(Number(o.Credit_Amt)) && o.Credit_Amt.toLocaleString('en-IN')}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} variant='contained' color='error'>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n        </>\r\n    ) : <></>\r\n}\r\n\r\nexport default SOAComp;","import { Button, Card, CardContent, Dialog, DialogContent, DialogTitle, DialogActions } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { LocalDate, LocalTime } from \"../../Components/functions\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchLink } from '../../Components/fetchComponent'\r\n\r\nconst AttendanceComp = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const initialValue = {\r\n        Latitude: null,\r\n        Longitude: null,\r\n        error: null,\r\n        UserId: storage.UserId,\r\n        Description: '',\r\n        dialog: false\r\n    }\r\n    const [lastAttendance, setLastAttendance] = useState({});\r\n    const [reload, setReload] = useState(false);\r\n    const [inputValue, setInputValue] = useState(initialValue);\r\n\r\n    useEffect(() => {\r\n        setLastAttendance({})\r\n        fetchLink({\r\n            address: `empAttendance/attendance?UserId=${storage?.UserId}`,\r\n        }).then(data => {\r\n            if (data?.success && data?.data?.length > 0) {\r\n                setLastAttendance(data?.data[0])\r\n            }\r\n        }).catch(e => console.error(e))            \r\n    }, [storage?.UserId, reload])\r\n\r\n    const getLocation = async () => {\r\n\r\n        try {\r\n\r\n            const position = await new Promise((resolve, reject) => {\r\n                navigator.geolocation.getCurrentPosition(resolve, reject);\r\n            });\r\n\r\n            const { latitude, longitude } = position.coords;\r\n\r\n            setInputValue(pre => ({\r\n                ...pre,\r\n                Latitude: latitude,\r\n                Longitude: longitude,\r\n                error: null\r\n            }));\r\n\r\n            return true;\r\n\r\n        } catch (error) {\r\n            if (error.code === error.PERMISSION_DENIED) {\r\n                setInputValue(pre => ({\r\n                    ...pre,\r\n                    Latitude: null,\r\n                    Longitude: null,\r\n                    error: 'Location access denied'\r\n                }));\r\n\r\n                toast.warn('Allow Location Access');\r\n            } else {\r\n                setInputValue(pre => ({\r\n                    ...pre,\r\n                    Latitude: null,\r\n                    Longitude: null,\r\n                    error: error.message\r\n                }));\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const StartDay = () => {\r\n        getLocation().then(hasLocationAccess => {\r\n            if (hasLocationAccess) {\r\n                if (inputValue?.Latitude && inputValue?.Longitude) {\r\n                    fetchLink({\r\n                        address: `empAttendance/attendance`,\r\n                        method: 'POST',\r\n                        bodyData: {\r\n                            UserId: inputValue?.UserId,\r\n                            Latitude: inputValue?.Latitude,\r\n                            Longitude: inputValue?.Longitude\r\n                        }\r\n                    }).then(data => {\r\n                        setReload(!reload)\r\n                        if (data.success) {\r\n                            toast.success(data.message)\r\n                        } else {\r\n                            toast.error(data.message)\r\n                        }\r\n                    })\r\n                } else {\r\n                    toast.warn('Please Retry')\r\n                }\r\n            } else {\r\n                toast.error('There is a problem in get location')\r\n            }\r\n        });\r\n    };\r\n\r\n    const EndDay = () => {\r\n        fetchLink({\r\n            address: `empAttendance/attendance`,\r\n            method: 'PUT',\r\n            bodyData: {\r\n                Id: lastAttendance?.Id,\r\n                Description: inputValue?.Description\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setReload(!reload)\r\n                toast.success(data.message);\r\n                resetValues()\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    const resetValues = () => {\r\n        setInputValue(initialValue)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"col-xl-4    col-lg-6 col-md-6\">\r\n                <div className=\"d-flex justify-content-between align-items-center p-3 border-bottom\">\r\n                    <h5 className=\"mb-0\">Attendance</h5>\r\n                    <Button\r\n                        variant='outlined'\r\n                        onClick={StartDay}\r\n                        disabled={Boolean(lastAttendance?.Active_Status)}\r\n                    >\r\n                        START Day\r\n                    </Button>\r\n                </div>\r\n                {Boolean(lastAttendance?.Active_Status) && (\r\n                    <>\r\n                        <CardContent >\r\n                            <div className=\"fw-bold text-muted\">\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <span>Start Date</span><br />\r\n                                    <span>{lastAttendance?.Start_Date ? LocalDate(lastAttendance?.Start_Date) : ' --:--:-- '}</span>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <span>In Time</span>\r\n                                    <span>{lastAttendance?.Start_Date ? LocalTime(lastAttendance?.Start_Date) : ' --:--:-- '}</span>\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                        <div className=\"border-top p-3 d-flex justify-content-end\">\r\n                            <Button variant='outlined' onClick={() => setInputValue(pre => ({ ...pre, dialog: true }))}>End Day</Button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={inputValue?.dialog}\r\n                onClose={resetValues}\r\n                fullWidth maxWidth='md'\r\n            >\r\n                <DialogTitle>Cloase Attendance</DialogTitle>\r\n                <DialogContent>\r\n                    <label className=\"mb-3\">Work Summary</label>\r\n                    <textarea \r\n                        value={inputValue?.Description}\r\n                        className=\"cus-inpt\"\r\n                        rows={5}\r\n                        onChange={e => setInputValue(pre => ({ ...pre, Description: e.target.value}))}\r\n                        placeholder=\"Narrate the today's work summary\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={resetValues}>Cancel</Button>\r\n                    <Button variant='outlined' onClick={EndDay}>Confirm</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AttendanceComp;","import { useEffect, useState } from \"react\"\r\nimport { checkIsNumber, groupData, ISOString, NumberFormat } from \"../../Components/functions\";\r\nimport { ShoppingCart } from \"@mui/icons-material\";\r\nimport { LuArrowUpWideNarrow } from \"react-icons/lu\";\r\nimport { HiOutlineCurrencyRupee } from \"react-icons/hi\";\r\nimport { IoReceiptOutline } from \"react-icons/io5\";\r\nimport { BsCartPlus } from \"react-icons/bs\";\r\nimport { PiHandCoinsFill } from \"react-icons/pi\";\r\nimport { FaCubesStacked } from \"react-icons/fa6\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport FilterableTable, { createCol } from '../../Components/filterableTable2';\r\nimport LastSynedTime from \"./tallyLastSyncedTime\";\r\n\r\nconst getIcons = (str) => {\r\n    const iconArr = [\r\n        {\r\n            str: 'SALES',\r\n            icon: <LuArrowUpWideNarrow style={{ fontSize: '80px' }} />,\r\n        },\r\n        {\r\n            str: 'PURCHASE',\r\n            icon: <ShoppingCart style={{ fontSize: '80px' }} />,\r\n        },\r\n        {\r\n            str: 'RECEIPT',\r\n            icon: <IoReceiptOutline style={{ fontSize: '80px' }} />,\r\n        },\r\n        {\r\n            str: 'PAYMENT',\r\n            icon: <HiOutlineCurrencyRupee style={{ fontSize: '80px' }} />,\r\n        },\r\n        {\r\n            str: 'EXPENCES',\r\n            icon: <PiHandCoinsFill style={{ fontSize: '80px' }} />\r\n        },\r\n        {\r\n            str: 'PURCHASE ORDER',\r\n            icon: <BsCartPlus style={{ fontSize: '80px' }} />,\r\n        },\r\n        {\r\n            str: 'STOCK VALUE',\r\n            icon: <FaCubesStacked style={{ fontSize: '70px' }} />,\r\n        },\r\n    ]\r\n\r\n    return iconArr.find(o => str === o.str)?.icon || <></>\r\n}\r\n\r\nconst CardComp = ({ title, icon, firstVal, secondVal, classCount, onClick }) => {\r\n    return (\r\n        <>\r\n            <div className={`col-xxl-3 col-lg-4 col-md-6 col-sm-12 p-2`}>\r\n                <div onClick={onClick} className={\"coloredDiv d-flex align-items-center text-light cus-shadow coloredDiv\" + classCount}>\r\n                    <div className=\"flex-grow-1 p-3\">\r\n                        <h5 >{title}</h5>\r\n                        <h3 className=\"fa-16 text-end pe-3\">\r\n                            <span style={{ fontSize: '30px' }}>{firstVal ? firstVal : 0} </span>\r\n                            {secondVal && '(' + secondVal + ')'}\r\n                        </h3>\r\n                    </div>\r\n                    {icon}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ManagementDashboard = ({ loadingOn, loadingOff }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const UserAccess = Number(storage?.UserTypeId) === 2 || Number(storage?.UserTypeId) === 0 || Number(storage?.UserTypeId) === 1;\r\n\r\n    const [mangementReport, setMangementReport] = useState([]);\r\n    const [secRow, setSecRow] = useState([]);\r\n    const [theredRow, setTheredRow] = useState([]);\r\n\r\n    const [popUpDetails, setPopUpDetails] = useState({\r\n        salesDetails: [],\r\n        erpPurchaseCount: 0,\r\n        erpPurchaseAmount: 0,\r\n        tallyPurchaseCount: 0,\r\n        tallyPurchaseAmount: 0,\r\n        morePurchaseInfo: [],\r\n    });\r\n\r\n    const [popUpDialogs, setPopUpDialogs] = useState({\r\n        salesDetails: false,\r\n        purchaseDetails: false,\r\n        purchaseMoreDetails: false,\r\n    })\r\n\r\n    const [filter, setFilter] = useState({\r\n        date: ISOString(),\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (UserAccess && storage.Company_id) {\r\n            fetchLink({\r\n                address: `dashboard/erp/dashboardData?Fromdate=${filter?.date}&Company_Id=${storage.Company_id}`\r\n            })\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        setMangementReport(data?.data[0])\r\n                        setSecRow(data?.data[1])\r\n                        setTheredRow(data?.data[2]);\r\n                    }\r\n                })\r\n                .catch(e => console.error(e))\r\n        }\r\n    }, [UserAccess, filter.date]);\r\n\r\n    useEffect(() => {\r\n        if (UserAccess) {\r\n            fetchLink({\r\n                address: `dashboard/salesInfo?Fromdate=${filter?.date}&Todate=${filter?.date}`,\r\n                headers: {\r\n                    'Db': storage?.Company_id\r\n                }\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setPopUpDetails(pre => ({\r\n                        ...pre,\r\n                        salesDetails: data.data ?? []\r\n                    }));\r\n                } else {\r\n                    setPopUpDetails(pre => ({ ...pre, salesDetails: [] }));\r\n                }\r\n            }).catch(e => console.error(e))\r\n\r\n            fetchLink({\r\n                address: `dashboard/purchaseInfo?Fromdate=${filter?.date}&Todate=${filter?.date}`,\r\n                method: 'GET',\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    const tallyInfo = data.data[0][0] || {};\r\n                    const erpInfo = data.data[1][0] || {};\r\n                    setPopUpDetails(pre => ({\r\n                        ...pre,\r\n                        erpPurchaseCount: checkIsNumber(erpInfo?.Purchase_Count) ? erpInfo?.Purchase_Count : 0,\r\n                        erpPurchaseAmount: checkIsNumber(erpInfo?.Purchase_Amount) ? erpInfo?.Purchase_Amount : 0,\r\n                        tallyPurchaseCount: checkIsNumber(tallyInfo?.Tally_Purchase_Count) ? tallyInfo?.Tally_Purchase_Count : 0,\r\n                        tallyPurchaseAmount: checkIsNumber(tallyInfo?.Tally_Purchase_Amount) ? tallyInfo?.Tally_Purchase_Amount : 0,\r\n                    }));\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [filter.date]);\r\n\r\n    const closeDialog = () => {\r\n        setPopUpDialogs(pre => Object.fromEntries(\r\n            Object.entries(pre).map(([key, value]) => [key, false])\r\n        ));\r\n        setPopUpDetails(pre => ({ ...pre, morePurchaseInfo: [] }))\r\n    }\r\n\r\n    const fetchMorePurchaseDetails = () => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: `dashboard/purchaseInfo/moreInfo?Fromdate=${filter?.date}&Todate=${filter?.date}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setPopUpDetails(pre => ({\r\n                    ...pre,\r\n                    morePurchaseInfo: data.data ?? []\r\n                }));\r\n                setPopUpDialogs(pre => ({ ...pre, purchaseMoreDetails: true }));\r\n            }\r\n        }).catch(e => console.error(e)).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        })\r\n    }\r\n\r\n    const salesDetailsGrouped = groupData(popUpDetails?.salesDetails, 'Party_Group');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex align-items-center flex-wrap justify-content-between\">\r\n            <input\r\n                type=\"date\"\r\n                className=\"cus-inpt w-auto m-1\"\r\n                value={filter.date}\r\n                onChange={e => setFilter(pre => ({ ...pre, date: e.target.value }))}\r\n            />\r\n            <LastSynedTime />\r\n            </div>\r\n\r\n            <div className=\"p-1 row\">\r\n                {theredRow?.map((o, i) => (\r\n                    <CardComp\r\n                        key={i}\r\n                        icon={getIcons('STOCK VALUE')}\r\n                        title={'STOCK VALUE'}\r\n                        classCount={16}\r\n                        firstVal={o?.Stock_Value ? NumberFormat(parseInt(o?.Stock_Value)) : 0}\r\n                    />\r\n                ))}\r\n                {mangementReport?.map((o, i) => (\r\n                    <CardComp\r\n                        key={i}\r\n                        title={o?.Trans_Type}\r\n                        onClick={() => {\r\n                            switch (o?.Trans_Type) {\r\n                                case 'SALES':\r\n                                    setPopUpDialogs(pre => ({ ...pre, salesDetails: true }));\r\n                                    break;\r\n                                case 'PURCHASE':\r\n                                    setPopUpDialogs(pre => ({ ...pre, purchaseDetails: true }));\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        }}\r\n                        icon={o?.Trans_Type ? getIcons(o?.Trans_Type) : undefined}\r\n                        classCount={i + 7}\r\n                        firstVal={o?.Trans_Amount ? NumberFormat(parseInt(o?.Trans_Amount)) : 0}\r\n                        secondVal={o?.Trans_Count ? NumberFormat(o?.Trans_Count) : 0}\r\n                    />\r\n                ))}\r\n                {secRow?.map((o, i) => (\r\n                    <CardComp\r\n                        key={i}\r\n                        title={'EXPENCES'}\r\n                        icon={getIcons('EXPENCES')}\r\n                        classCount={19}\r\n                        firstVal={o?.Total_Cost_Vlaue ? NumberFormat(o?.Total_Cost_Vlaue) : 0}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            <Dialog\r\n                open={popUpDialogs.salesDetails}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>\r\n                    <span>\r\n                        <h4 className='d-flex justify-content-between flex-wrap'>\r\n                            <span>Sales Details</span>\r\n                            <span>\r\n                                {NumberFormat(\r\n                                    popUpDetails?.salesDetails?.reduce((sum, item) => sum += Number(item?.Amount), 0)\r\n                                )}\r\n                            </span>\r\n                        </h4>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <FilterableTable\r\n                        dataArray={salesDetailsGrouped}\r\n                        columns={[\r\n                            {\r\n                                Field_Name: 'Party_Group',\r\n                                Fied_Data: 'string',\r\n                                isVisible: 1,\r\n                            },\r\n                            {\r\n                                isCustomCell: true,\r\n                                ColumnHeader: 'Total Amount',\r\n                                Cell: ({ row }) => NumberFormat(row?.groupedData?.reduce((acc, item) => acc + Number(item?.Amount), 0)),\r\n                                isVisible: 1,\r\n                            },\r\n                        ]}\r\n                        disablePagination={true}\r\n                        EnableSerialNumber\r\n                        isExpendable={true}\r\n                        expandableComp={({ row }) => (\r\n                            <FilterableTable\r\n                                dataArray={row?.groupedData ?? []}\r\n                                columns={[\r\n                                    {\r\n                                        Field_Name: 'Payment_Mode',\r\n                                        Fied_Data: 'string',\r\n                                        isVisible: 1,\r\n                                    },\r\n                                    {\r\n                                        Field_Name: 'Amount',\r\n                                        Fied_Data: 'number',\r\n                                        isVisible: 1,\r\n                                    },\r\n                                ]}\r\n                                disablePagination={true}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setPopUpDialogs(pre => ({ ...pre, salesDetails: false }))}></Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={popUpDialogs.purchaseDetails}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>\r\n                    <span>\r\n                        <h4 className='d-flex flex-wrap'>\r\n                            <span className=\"flex-grow-1\">Purchase Details</span>\r\n                        </h4>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"fa-14 border p-2 text-center fw-bold\" colSpan={2}>ERP</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"fa-14 border p-2 \">Count</td>\r\n                                <td className=\"fa-14 border p-2 \">{NumberFormat(popUpDetails.erpPurchaseCount)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"fa-14 border p-2 \">Amount</td>\r\n                                <td className=\"fa-14 border p-2 \">{NumberFormat(popUpDetails.erpPurchaseAmount)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"fa-14 border p-2 text-center fw-bold\" colSpan={2}>Tally</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"fa-14 border p-2 \">Count</td>\r\n                                <td className=\"fa-14 border p-2 \">{NumberFormat(popUpDetails.tallyPurchaseCount)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"fa-14 border p-2 \">Amount</td>\r\n                                <td className=\"fa-14 border p-2 \">{NumberFormat(popUpDetails.tallyPurchaseAmount)}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={fetchMorePurchaseDetails}\r\n                    >View More</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={popUpDialogs.purchaseMoreDetails}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='lg'\r\n            >\r\n                <DialogContent>\r\n                    <FilterableTable \r\n                        dataArray={popUpDetails?.morePurchaseInfo || []}\r\n                        title=\"Purchase Details\"\r\n                        columns={[\r\n                            createCol('invoice_no', 'string', 'Invoice No'),\r\n                            createCol('reference_no', 'string', 'Ref No'),\r\n                            createCol('invoice_date', 'date', 'Date'),\r\n                            createCol('ledger_name', 'string', 'Ledger Name'),\r\n                            createCol('voucher_name', 'string', 'Voucher Name'),\r\n                            createCol('total_invoice_value', 'number', 'Invoice Value'),\r\n                        ]}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ManagementDashboard;","import { Addition, checkIsNumber, getSessionUser, ISOString, isValidDate } from \"../../Components/functions\";\r\nimport { useState, useEffect } from 'react'\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { Card, CardContent } from \"@mui/material\";\r\n\r\nconst StaffInvolvedCostCenterDetails = ({ loadingOn, loadingOff, reqDate = ISOString() }) => {\r\n    const { user } = getSessionUser()\r\n    const [staffData, setStaffData] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        fetchReqDate: reqDate\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isValidDate(filters.fetchReqDate) && checkIsNumber(user.UserId)) {\r\n            setStaffData([])\r\n            if (loadingOn) loadingOn();\r\n            fetchLink({\r\n                address: `dataEntry/costCenter/report/employee?userid=${user.UserId}&reqDate=${filters.fetchReqDate}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setStaffData(data.data)\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => {\r\n                if (loadingOff) loadingOff();\r\n            })\r\n        }\r\n    }, [filters.fetchReqDate, user.UserId])\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"d-flex flex-wrap align-items-center border-bottom px-3 py-2\">\r\n                    <span className=\"flex-grow-1 fa-16\">ERP Activity</span>\r\n                    <input\r\n                        type=\"date\"\r\n                        value={filters.fetchReqDate}\r\n                        onChange={e => setFilters(pre => ({ ...pre, fetchReqDate: e.target.value }))}\r\n                        className=\"cus-inpt w-auto p-2\"\r\n                    />\r\n                </div>\r\n                <div className=\"d-flex flex-wrap align-items-center px-3 py-2 fa-15\">\r\n\r\n                    <Card className=\"mx-2\" style={{ minWidth: 200}}>\r\n                        <CardContent className=\"d-flex flex-column align-items-center\">\r\n                            <h4>\r\n                                {staffData.reduce((sTacc, staff) => Addition(sTacc, staff.StockJournalTotal), 0)}\r\n                            </h4>\r\n                            <h6>Stock Handled KGs</h6>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"mx-2\" style={{ minWidth: 200}}>\r\n                        <CardContent className=\"d-flex flex-column align-items-center\">\r\n                            <h4>\r\n                                {staffData.reduce((sTacc, staff) => Addition(sTacc, staff?.Stock_Journals?.length), 0)}\r\n                            </h4>\r\n                            <h6>Movement Activity</h6>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"mx-2\" style={{ minWidth: 200}}>\r\n                        <CardContent className=\"d-flex flex-column align-items-center\">\r\n                            <h4>\r\n                                {staffData.reduce((sTacc, staff) => Addition(sTacc, staff.TripSheetTotal), 0)}\r\n                            </h4>\r\n                            <h6>Trip Sheet KGs</h6>\r\n                        </CardContent>\r\n                    </Card>\r\n                    \r\n                    <Card className=\"mx-2\" style={{ minWidth: 200}}>\r\n                        <CardContent className=\"d-flex flex-column align-items-center\">\r\n                            <h4>\r\n                                {staffData.reduce((sTacc, staff) => Addition(sTacc, staff?.Trip_Sheet?.length), 0)}\r\n                            </h4>\r\n                            <h6>Total Trips</h6>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StaffInvolvedCostCenterDetails;","import { useEffect, useState } from \"react\"\r\nimport { CiCalendarDate } from \"react-icons/ci\";\r\nimport { CgSandClock } from \"react-icons/cg\";\r\nimport { HiUsers } from \"react-icons/hi2\";\r\nimport { RxLapTimer } from \"react-icons/rx\";\r\nimport { TbTargetArrow } from \"react-icons/tb\";\r\nimport { BiTask } from \"react-icons/bi\";\r\nimport PieChartComp from \"./chartComp\";\r\nimport { Card, CardHeader, CardContent, Paper, FormControlLabel, Switch } from '@mui/material'\r\nimport SOAComp from \"./erp/SOA\";\r\nimport AttendanceComp from \"../Attendance/attendanceComp\";\r\nimport ManagementDashboard from \"./managementDashboard\";\r\nimport { fetchLink } from '../../Components/fetchComponent'\r\nimport { ISOString } from \"../../Components/functions\";\r\nimport StaffInvolvedCostCenterDetails from \"./staffInvolvedCostCenter\";\r\n\r\nconst CommonDashboard = ({ loadingOn, loadingOff }) => {\r\n    const parseData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [dashboardData, setDashboardData] = useState({});\r\n    const [workedDetais, setWorkedDetais] = useState([]);\r\n    const [myTasks, setMyTasks] = useState([]);\r\n    const [tallyDetails, setTallyDetails] = useState([]);\r\n    const isAdmin = Number(parseData?.UserTypeId) === 0 || Number(parseData?.UserTypeId) === 1\r\n    const isMangement = Number(parseData?.UserTypeId) === 2\r\n    const isEmp = Number(parseData?.UserTypeId) === 6 || Number(parseData?.UserTypeId) === 3;\r\n    const isCustomer = Number(parseData?.UserTypeId) === 4 || Number(parseData?.UserTypeId) === 5;\r\n    const [dispTask, setDispTask] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (isAdmin || isEmp || isMangement) {\r\n            fetchLink({\r\n                address: `dashboard/dashboardData?UserType=${parseData?.UserTypeId}&Emp_Id=${parseData?.UserId}`\r\n            })\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        setDashboardData(data.data[0]);\r\n                    } else {\r\n                        setDashboardData({});\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.error(e);\r\n                });\r\n        }\r\n    }, [parseData?.UserId, parseData?.UserTypeId, isAdmin, isMangement, isEmp]);\r\n\r\n    useEffect(() => {\r\n        if (isEmp) {\r\n            fetchLink({\r\n                address: `dashboard/getTallyData?UserId=${parseData?.UserId}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setTallyDetails(data.data);\r\n                } else {\r\n                    setTallyDetails([])\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [isEmp])\r\n\r\n    useEffect(() => {\r\n        if (isEmp) {\r\n            fetchLink({\r\n                address: `taskManagement/task/work?Emp_Id=${parseData?.UserId}&from=${ISOString()}&to=${ISOString()}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setWorkedDetais(data.data);\r\n                } else {\r\n                    setTallyDetails([])\r\n                }\r\n            }).catch(e => console.error(e))\r\n\r\n            fetchLink({\r\n                address: `taskManagement/tasks/myTasks?Emp_Id=${parseData?.UserId}&reqDate=${ISOString()}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    data.data.sort((a, b) => {\r\n                        const [aHours, aMinutes] = a?.Sch_Time.split(':').map(Number);\r\n                        const [bHours, bMinutes] = b?.Sch_Time.split(':').map(Number);\r\n                        if (aHours !== bHours) {\r\n                            return aHours - bHours;\r\n                        }\r\n                        return aMinutes - bMinutes;\r\n                    });\r\n                    setMyTasks(data.data);\r\n                } else {\r\n                    setMyTasks([])\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [isEmp, parseData?.UserId])\r\n\r\n    const CardComp = ({ title, icon, firstVal, secondVal, classCount }) => {\r\n        return (\r\n            <>\r\n                <div className={`${(isAdmin || isMangement) && 'col-xxl-3'} col-lg-4 col-md-6 col-sm-12 p-2`}>\r\n                    <div className={\"coloredDiv d-flex align-items-center text-light cus-shadow coloredDiv\" + classCount}>\r\n                        <div className=\"flex-grow-1 p-3\">\r\n                            <h5 className=\"text-uppercase\">{title}</h5>\r\n                            <h3 className=\"fa-16 text-end pe-3\">\r\n                                <span style={{ fontSize: '30px' }}>{firstVal ? firstVal : 0} </span>\r\n                                {secondVal && '/' + secondVal}\r\n                            </h3>\r\n                        </div>\r\n                        {icon}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const minFormat = (val) => {\r\n        const hour = Math.floor(Number(val) / 60);\r\n        const minutes = Number(val) % 60;\r\n        const formatHour = hour < 10 ? '0' + hour : hour;\r\n        const formatMinute = minutes < 10 ? '0' + minutes : minutes;\r\n\r\n        return (formatHour && formatMinute) ? formatHour + ':' + formatMinute : '00:00';\r\n    }\r\n\r\n    const statusColor = (id) => {\r\n        const numId = Number(id);\r\n        const color = ['bg-dark', 'bg-info', 'bg-warning', 'bg-success', 'bg-danger'];\r\n        return color[numId]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isCustomer && <SOAComp />}\r\n\r\n            {(isMangement || isAdmin) && <ManagementDashboard />}\r\n\r\n            {(isAdmin || isMangement) && (\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={dispTask}\r\n                            onChange={e => setDispTask(e.target.checked)}\r\n                        />\r\n                    }\r\n                    label=\"Show Task Management\"\r\n                    className=\" fw-bold text-primary\"\r\n                />\r\n            )}\r\n\r\n            <div className=\"px-1\">\r\n                {((isAdmin || isMangement) && dispTask) && (\r\n                    <div className=\"row\">\r\n                        <CardComp\r\n                            title={'Projects'}\r\n                            icon={<TbTargetArrow style={{ fontSize: '80px' }} />}\r\n                            firstVal={dashboardData?.ActiveProjects}\r\n                            secondVal={dashboardData?.AllProjects}\r\n                            classCount={'1'}\r\n                        />\r\n                        <CardComp\r\n                            title={'Schedule'}\r\n                            icon={<CiCalendarDate style={{ fontSize: '80px' }} />}\r\n                            firstVal={dashboardData?.ActiveSchedule}\r\n                            secondVal={dashboardData?.AllSchedule}\r\n                            classCount={'2'}\r\n                        />\r\n                        <CardComp\r\n                            title={'Completed Tasks'}\r\n                            icon={<BiTask style={{ fontSize: '80px' }} />}\r\n                            firstVal={dashboardData?.TaskCompleted}\r\n                            // secondVal={dashboardData?.TaskAssigned}\r\n                            classCount={'3'}\r\n                        />\r\n                        <CardComp\r\n                            title={'Employee'}\r\n                            icon={<HiUsers style={{ fontSize: '80px' }} />}\r\n                            firstVal={dashboardData?.EmployeeCounts}\r\n                            secondVal={Number(dashboardData?.EmployeeCounts) + dashboardData?.OtherUsers}\r\n                            classCount={'4'}\r\n                        />\r\n                        <CardComp\r\n                            title={'Worked Hours'}\r\n                            icon={<RxLapTimer style={{ fontSize: '80px' }} />}\r\n                            firstVal={minFormat(dashboardData?.TotalMinutes)}\r\n                            classCount={'5'}\r\n                        />\r\n                        <CardComp\r\n                            title={'Today Tasks'}\r\n                            icon={<CgSandClock style={{ fontSize: '80px' }} />}\r\n                            firstVal={dashboardData?.TodayTaskCompleted}\r\n                            secondVal={dashboardData?.TodayTasks}\r\n                            classCount={'6'}\r\n                        />\r\n                    </div>\r\n                )}\r\n                {isEmp && (\r\n                    <div className=\"row\">\r\n                        <CardComp\r\n                            title={'Completed Tasks'}\r\n                            firstVal={dashboardData?.TaskCompleted}\r\n                            secondVal={dashboardData?.TotalTasks}\r\n                            icon={<BiTask style={{ fontSize: '80px' }} />}\r\n                            classCount={'1'} />\r\n                        <CardComp\r\n                            title={'Today Tasks'}\r\n                            firstVal={dashboardData?.TodayTaskCompleted}\r\n                            secondVal={dashboardData?.TodayTasks}\r\n                            icon={<CgSandClock style={{ fontSize: '80px' }} />}\r\n                            classCount={'2'} />\r\n                        <CardComp\r\n                            title={'Total Work Hours'}\r\n                            firstVal={minFormat(dashboardData?.WorkedMinutes)}\r\n                            icon={<CgSandClock style={{ fontSize: '80px' }} />}\r\n                            classCount={'3'} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <br />\r\n\r\n            {isEmp && <AttendanceComp />}\r\n\r\n            <br />\r\n\r\n            {(isEmp && workedDetais.length > 0) && (\r\n                <>\r\n                    <Card>\r\n                        <CardContent sx={{ pb: 2 }}>\r\n                            <h5>Today Activity</h5>\r\n                            <PieChartComp TasksArray={workedDetais} />\r\n                            <br />\r\n                        </CardContent>\r\n                    </Card>\r\n                    <br />\r\n                </>\r\n            )}\r\n\r\n            <StaffInvolvedCostCenterDetails loadingOn={loadingOn} loadingOff={loadingOff} />\r\n\r\n            {(isEmp && myTasks.length > 0) && (\r\n                <Card>\r\n                    <CardHeader title={'Today Tasks:' + myTasks.length} sx={{ pb: 0 }} />\r\n                    <CardContent>\r\n\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table mb-1 \">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"fa-13 border\">SNo</th>\r\n                                        <th className=\"fa-13 border\">Task</th>\r\n                                        <th className=\"fa-13 border\">Timer Based</th>\r\n                                        <th className=\"fa-13 border\">Schedule</th>\r\n                                        <th className=\"fa-13 border\">Duration</th>\r\n                                        <th className=\"fa-13 border\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {myTasks.map((o, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className=\"fa-13 border\">{i + 1}</td>\r\n                                            <td className=\"fa-13 border\">{o?.Task_Name}</td>\r\n                                            <td className=\"fa-13 border text-center\">\r\n                                                <span className={`badge rounded-4 px-3 fw-bold text-white ${statusColor(Number(o?.Timer_Based) === 1 ? 3 : 1)}`}>\r\n                                                    {Number(o?.Timer_Based) === 1 ? 'Yes' : 'No'}\r\n                                                </span>\r\n                                            </td>\r\n                                            <td className=\"fa-13 border text-center\">{o?.Sch_Time} - {o?.EN_Time}</td>\r\n                                            <td className=\"fa-13 border text-center\">{o?.Sch_Period}</td>\r\n                                            <td className=\"fa-13 border text-center\">\r\n                                                <span className={`badge rounded-4 px-3 fw-bold text-white ${statusColor(o?.Work_Id ? 3 : 1)}`}>\r\n                                                    {o?.Work_Id ? 'Completed' : 'Pending'}\r\n                                                </span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            )}\r\n\r\n            <br />\r\n\r\n            {(isEmp && tallyDetails?.length > 0) && (\r\n                <Card component={Paper}>\r\n                    <CardHeader title=\"Tally Entries\" sx={{ pb: 0 }} />\r\n                    <CardContent>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"fa-13 border\">Sno</th>\r\n                                        <th className=\"fa-13 border\">Particulars</th>\r\n                                        <th className=\"fa-13 border\">Value</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {tallyDetails?.map((o, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className=\"fa-13 border\">{i + 1}</td>\r\n                                            <td className=\"fa-13 border\">{o?.Particulars}</td>\r\n                                            <td className=\"fa-13 border\">{o?.Tally_Count}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CommonDashboard","import { useEffect, useState } from \"react\";\r\nimport { ISOString, LocalDate, UTCDateWithTime, UTCTime } from \"../../Components/functions\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\n\r\nconst LastSynedTime = () => {\r\n    const parseData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const isAdmin = Number(parseData?.UserTypeId) === 0 || Number(parseData?.UserTypeId) === 1;\r\n    const [lastSyncedTime, setLastSynedTime] = useState({\r\n        Last_Sync_Date_Time: null,\r\n        lastSalesSync: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (isAdmin) {\r\n            fetchLink({\r\n                address: `dashboard/lastSyncedTime`,\r\n                headers: {\r\n                    'Db': parseData?.Company_id\r\n                }\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    const tally = data?.data[0]?.Last_Sync_Date_Time ? new Date(data?.data[0]?.Last_Sync_Date_Time) : null;\r\n                    const sales = data?.data[0]?.lastSalesSync ? new Date(data?.data[0]?.lastSalesSync) : null;\r\n                    setLastSynedTime({\r\n                        Last_Sync_Date_Time: tally,\r\n                        lastSalesSync: sales\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }, [isAdmin, parseData?.Company_id])\r\n\r\n    return (\r\n        <>\r\n            {/* <span className=\"fa-14 px-2 py-1 bg-white rounded border\"> Sync: </span> */}\r\n            <div className=\"d-flex\">\r\n                <div className=\"rounded-3 overflow-hidden border p-0\">\r\n                    <table className=\"table table-borderless w-auto m-0 fa-14 \">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"px-2 py-1 border-bottom\">Tally Sync</td>\r\n                                <td className=\"px-2 py-1 border-bottom\">{\r\n                                    lastSyncedTime.Last_Sync_Date_Time\r\n                                        ? LocalDate(UTCDateWithTime(lastSyncedTime.Last_Sync_Date_Time))\r\n                                        + ', '\r\n                                        + UTCTime(lastSyncedTime.Last_Sync_Date_Time)\r\n                                        : '-'}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"px-2 py-1\">Sales Sync</td>\r\n                                <td className=\"px-2 py-1\">{\r\n                                    lastSyncedTime.lastSalesSync\r\n                                        ? LocalDate(UTCDateWithTime(lastSyncedTime.lastSalesSync))\r\n                                        + ', '\r\n                                        + UTCTime(lastSyncedTime.lastSalesSync)\r\n                                        : '-'}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LastSynedTime;"],"names":["_ref","TasksArray","chartData","setChartData","useState","chartInstance","setChartInstance","totalTime","setTotalTime","useEffect","length","totalDuration","reduce","acc","task","start","Date","toISOString","split","Start_Time","End_Time","firstTaskStart","freeTime","totalSeconds","Math","floor","hours","minutes","seconds","concat","String","padStart","taskData","map","duration","label","Task_Name","backgroundColor","getRandomColor","labels","datasets","data","borderColor","borderWidth","push","destroy","ctx","document","getElementById","newChartInstance","Chart","type","options","responsive","plugins","tooltip","callbacks","context","value","parsed","total","dataset","curr","percentage","round","datalabels","color","formatter","chart","dataIndex","value1","i","random","_jsxs","className","style","maxHeight","children","_jsx","id","width","height","SOAComp","_SOA$","_SOA$2","_SOA$3","_SOA$4","_SOA$5","_SOA$6","_SOA$7","_SOA$8","_SOA$9","_SOA$10","parseData","JSON","parse","localStorage","getItem","isCustomer","setIsCustomer","dataArray","setDataArray","UserId","setTotal","dialog","setDialog","SOA","setSOA","clickedRow","setClickedRow","today","firstDayOfMonth","getFullYear","getMonth","selectedRange","setSelectedRange","from","to","imageSource","logo","closingBalance","setClosingBalance","debit","credit","printRef","useRef","fetchLink","address","then","status","_data$data","temp","forEach","obj","Number","Bal_Amount","catch","e","console","error","getInfo","prop","mode","_rowData","_rowData2","_rowData3","rowData","Cust_Id","tally_id","Company_Id","_data$data2","bal","Debit_Amt","Credit_Amt","handleClose","handlePrint","useReactToPrint","content","current","_Fragment","Name","toLocaleString","fontSize","o","_o$Bal_Amount","onClick","LaunchOutlined","sx","Company_Name","ledger_name","CR_DR","Dialog","open","onClose","fullScreen","fullWidth","DialogTitle","Customer_name","Button","worksheet","XLSXUtils","json_to_sheet","workbook","book_new","book_append_sheet","writeXLSX","toLocaleDateString","day","month","year","hour","minute","second","generateExcel","Sno","Ledger_Date","Purticular","Ledger_Desc","InvoiceNo","invoice_no","Debit","Boolean","Credit","Company","Ledger","Ledger_Name","Mobile_Number","Mobile_no","DialogContent","src","alt","Contact_Person","onChange","_objectSpread","target","window","alert","disabled","ref","DialogActions","variant","AttendanceComp","storage","initialValue","Latitude","Longitude","Description","lastAttendance","setLastAttendance","reload","setReload","inputValue","setInputValue","success","resetValues","Card","StartDay","async","position","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","pre","code","PERMISSION_DENIED","toast","warn","message","getLocation","hasLocationAccess","method","bodyData","Active_Status","CardContent","Start_Date","LocalDate","LocalTime","maxWidth","rows","placeholder","EndDay","Id","getIcons","str","_iconArr$find","icon","LuArrowUpWideNarrow","ShoppingCart","IoReceiptOutline","HiOutlineCurrencyRupee","PiHandCoinsFill","BsCartPlus","FaCubesStacked","find","CardComp","title","firstVal","secondVal","classCount","_ref2","_popUpDetails$salesDe","loadingOn","loadingOff","UserAccess","UserTypeId","mangementReport","setMangementReport","secRow","setSecRow","theredRow","setTheredRow","popUpDetails","setPopUpDetails","salesDetails","erpPurchaseCount","erpPurchaseAmount","tallyPurchaseCount","tallyPurchaseAmount","morePurchaseInfo","popUpDialogs","setPopUpDialogs","purchaseDetails","purchaseMoreDetails","filter","setFilter","date","ISOString","Company_id","headers","tallyInfo","erpInfo","checkIsNumber","Purchase_Count","Purchase_Amount","Tally_Purchase_Count","Tally_Purchase_Amount","closeDialog","Object","fromEntries","entries","_ref3","key","salesDetailsGrouped","groupData","LastSynedTime","Stock_Value","NumberFormat","parseInt","Trans_Type","undefined","Trans_Amount","Trans_Count","Total_Cost_Vlaue","sum","item","Amount","FilterableTable","columns","Field_Name","Fied_Data","isVisible","isCustomCell","ColumnHeader","Cell","_ref4","_row$groupedData","row","groupedData","disablePagination","EnableSerialNumber","isExpendable","expandableComp","_ref5","_row$groupedData2","colSpan","fetchMorePurchaseDetails","finally","createCol","reqDate","user","getSessionUser","staffData","setStaffData","filters","setFilters","fetchReqDate","isValidDate","minWidth","sTacc","staff","Addition","StockJournalTotal","_staff$Stock_Journals","Stock_Journals","TripSheetTotal","_staff$Trip_Sheet","Trip_Sheet","dashboardData","setDashboardData","workedDetais","setWorkedDetais","myTasks","setMyTasks","tallyDetails","setTallyDetails","isAdmin","isMangement","isEmp","dispTask","setDispTask","sort","a","b","aHours","aMinutes","Sch_Time","bHours","bMinutes","minFormat","val","formatHour","formatMinute","statusColor","ManagementDashboard","FormControlLabel","control","Switch","checked","TbTargetArrow","ActiveProjects","AllProjects","CiCalendarDate","ActiveSchedule","AllSchedule","BiTask","TaskCompleted","HiUsers","EmployeeCounts","OtherUsers","RxLapTimer","TotalMinutes","CgSandClock","TodayTaskCompleted","TodayTasks","TotalTasks","WorkedMinutes","pb","PieChartComp","StaffInvolvedCostCenterDetails","CardHeader","Timer_Based","EN_Time","Sch_Period","Work_Id","component","Paper","Particulars","Tally_Count","lastSyncedTime","setLastSynedTime","Last_Sync_Date_Time","lastSalesSync","_data$data$","_data$data$2","_data$data$3","_data$data$4","tally","sales","UTCDateWithTime","UTCTime"],"sourceRoot":""}
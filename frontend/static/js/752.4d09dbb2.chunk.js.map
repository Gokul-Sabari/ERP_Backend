{"version":3,"file":"static/js/752.4d09dbb2.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","Pages/Receipts/ReceiptMaster/variable.js","Pages/Receipts/customerPendingReceipt.jsx"],"sourcesContent":["\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE ORDER' },\r\n    { name: 'PURCHASE INVOICE' },\r\n    { name: 'SALE ORDER' },\r\n    { name: 'SALE INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import { checkIsNumber, ISOString, storageValue } from \"../../../Components/functions\";\r\n\r\nexport const receiptGeneralInfoInitialValue = {\r\n    receipt_id: '',\r\n    year_id: '',\r\n    receipt_voucher_type_id: '',\r\n    receipt_sno: '',\r\n    receipt_invoice_no: '',\r\n\r\n    receipt_date: ISOString(),\r\n    receipt_bill_type: 1,\r\n    credit_ledger: '',\r\n    credit_ledger_name: 'Select',\r\n    credit_amount: 0,\r\n    debit_ledger: '',\r\n    debit_ledger_name: 'Select',\r\n    debit_amount: 0,\r\n    remarks: '',\r\n    status: 1,\r\n    \r\n    check_no: '',\r\n    check_date: '',\r\n    bank_name: '',\r\n    bank_date: '',\r\n    \r\n    created_by: checkIsNumber(storageValue?.UserId) ? storageValue?.UserId : '',\r\n    altered_by: checkIsNumber(storageValue?.UserId) ? storageValue?.UserId : '',\r\n    created_on: '',\r\n    alterd_on: '',\r\n}\r\n\r\nexport const receiptBillInfoInitialValue = {\r\n    auto_id: '',\r\n    // general info\r\n    created_on: '',\r\n    receipt_id: '',\r\n    receipt_no: '',\r\n    receipt_date: '',\r\n    receipt_bill_type: '',\r\n    DR_CR_Acc_Id: '',\r\n    \r\n    // form values\r\n    bill_id: '',\r\n    JournalBillType: '',\r\n    bill_name: '',\r\n    bill_amount: 0,\r\n    Debit_Amo: 0,\r\n    Credit_Amo: 0,\r\n\r\n    // frontEndColumns\r\n    SalesInvoiceDate: '',\r\n    StockJournalDate: '',\r\n    TotalPaidAmount: 0,\r\n    PendingAmount: 0,\r\n}\r\n\r\nexport const receiptCostingInfoInitialValue = {\r\n    // backend\r\n    auto_id: '',\r\n    receipt_id: '',\r\n    receipt_no: '',\r\n    receipt_date: '',\r\n    receipt_bill_type: '',\r\n    Debit_Ledger_Id: '',\r\n    created_on: '',\r\n\r\n    // frontend \r\n    bill_id: '',\r\n    JournalBillType: '',\r\n    item_id: '',\r\n    item_name: '',\r\n    expence_value: 0,\r\n\r\n    // to show previous payment (frontend only).\r\n    itemQuantity: 0,\r\n    PaidAmount: 0,\r\n}\r\n\r\nexport const receiptTypes = [\r\n    {\r\n        value: 1,\r\n        label: 'CUSTOMER - SALES INVOICE'\r\n    },\r\n    {\r\n        value: 2,\r\n        label: 'EXPENCES - RETURN'\r\n    },\r\n    {\r\n        value: 3,\r\n        label: 'ON ACCOUNT'\r\n    },\r\n];\r\n\r\nexport const stockJournalTypes = [\r\n    {\r\n        label: 'MATERIAL INWARD',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'GODOWN TRANSFER',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'PROCESSING',\r\n        value: 3\r\n    },\r\n]\r\n\r\nexport const receiptStatus = [\r\n    {\r\n        label: 'New',\r\n        value: 1\r\n    },\r\n    {\r\n        label: 'Process',\r\n        value: 2\r\n    },\r\n    {\r\n        label: 'Completed',\r\n        value: 3\r\n    },\r\n    {\r\n        label: 'Canceled',\r\n        value: 0\r\n    },\r\n]","import { useState, useEffect } from \"react\";\r\nimport { Button, Card } from '@mui/material';\r\nimport FilterableTable, { createCol } from '../../Components/filterableTable2';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\nimport { Addition, checkIsNumber, isEqualNumber, ISOString, LocalDate, NumberFormat, onlynum, Subraction, toArray, toNumber } from \"../../Components/functions\";\r\nimport { receiptGeneralInfoInitialValue } from \"./ReceiptMaster/variable\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\n\r\n\r\nconst CustomerPendingReceipt = ({ loadingOn, loadingOff, AddRights }) => {\r\n\r\n    const [reportData, setReportData] = useState([]);\r\n    const [ledgers, setLedgers] = useState([]);\r\n    const [selectedInvoice, setSelectedInvoice] = useState([]);\r\n    const navigation = useNavigate();\r\n\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        ledger: { value: '', label: 'Select Ledger' },\r\n        refresh: false,\r\n        filterDialog: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `receipt/getCustomerWhoHasBills`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setLedgers(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!checkIsNumber(filters.ledger.value)) return;\r\n        // setReportData([]);\r\n        setSelectedInvoice([]);\r\n\r\n        fetchLink({\r\n            address: `receipt/receiptMaster/pendingSalesInvoiceReceipt?Acc_Id=${filters.ledger.value}`,\r\n            loadingOn, loadingOff\r\n        }).then(data => {\r\n            if (data.success) {\r\n                const repDat = toArray(data.data).map(o => ({\r\n                    ...o,\r\n                    receiptPendingAmount: Subraction(o.Total_Invoice_value, o.Paid_Amount)\r\n                }))\r\n                setReportData(repDat);\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }, [filters.ledger.value]);\r\n\r\n    const onSelect = (row, deleteOption) => {\r\n        setSelectedInvoice(pre => {\r\n            const previousValue = toArray(pre);\r\n\r\n            const excludeCurrentValue = previousValue.filter(o => !isEqualNumber(o?.Do_Id, row.Do_Id));\r\n\r\n            let updateBillInfo;\r\n            if (deleteOption) {\r\n                updateBillInfo = excludeCurrentValue;\r\n            } else {\r\n                updateBillInfo = [...excludeCurrentValue, { ...row, newReceiptBillAmount: toNumber(row?.receiptPendingAmount) }];\r\n            }\r\n            return updateBillInfo;\r\n        })\r\n    }\r\n\r\n    const onChangeAmount = (billId, value) => {\r\n        setSelectedInvoice(pre => pre.map(\r\n            bill => ({\r\n                ...bill,\r\n                newReceiptBillAmount: isEqualNumber(\r\n                    billId, bill.Do_Id\r\n                ) ? value : bill.newReceiptBillAmount\r\n            })\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card>\r\n\r\n                <div className=\"p-2 d-flex justify-content-between align-items-center\">\r\n                    <h5>Customer Outstaing Receipts</h5>\r\n                    <div style={{ minWidth: '360px' }}>\r\n                        <Select\r\n                            value={filters?.ledger}\r\n                            onChange={(e) => setFilters(pre => ({ ...pre, ledger: e }))}\r\n                            options={[\r\n                                { value: '', label: 'ALL' },\r\n                                ...ledgers\r\n                            ]}\r\n                            styles={customSelectStyles}\r\n                            isSearchable={true}\r\n                            placeholder={\"Select Leder Name\"}\r\n                            menuPortalTarget={document.body}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    navigation('/erp/receipts/listReceipts/create', {\r\n                        state: {\r\n                            ...receiptGeneralInfoInitialValue,\r\n                            credit_ledger: filters.ledger.value,\r\n                            credit_ledger_name: filters.ledger.label,\r\n                            credit_amount: selectedInvoice.reduce((acc, bill) => Addition(\r\n                                acc, bill?.newReceiptBillAmount\r\n                            ), 0),\r\n                            BillsDetails: selectedInvoice.map(bill => ({\r\n                                bill_id: bill.Do_Id,\r\n                                bill_name: bill.Do_Inv_No,\r\n                                bill_amount: bill.Total_Invoice_value,\r\n                                Debit_Amo: 0,\r\n                                Credit_Amo: bill.newReceiptBillAmount\r\n                            }))\r\n                        }\r\n                    })\r\n                }}>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered fa-12\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {['Sno', 'Sales Invoice No', 'Date', 'Inv-Value', 'Closed Value', 'Outstanding', 'Make a Receipt'].map(\r\n                                        (o, i) => <th key={i} className=\"fa-13\">{o}</th>\r\n                                    )}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {/* total value details */}\r\n                                <tr>\r\n                                    <td colSpan={3} className=\"fw-bold bg-light text-center\">Total</td>\r\n                                    <td className=\"bg-light\">\r\n                                        {reportData.reduce((acc, bill) => Addition(\r\n                                            acc,\r\n                                            bill.Total_Invoice_value\r\n                                        ), 0)}\r\n                                    </td>\r\n                                    <td className=\"bg-light\">\r\n                                        {reportData.reduce((acc, bill) => Addition(\r\n                                            acc,\r\n                                            bill.Paid_Amount\r\n                                        ), 0)}\r\n                                    </td>\r\n                                    <td className=\"bg-light\">\r\n                                        {reportData.reduce((acc, bill) => Addition(\r\n                                            acc,\r\n                                            Subraction(bill.Total_Invoice_value, bill.Paid_Amount)\r\n                                        ), 0)}\r\n                                    </td>\r\n                                    <td className=\"text-primary fw-bold text-end fa-17 bg-light\">\r\n                                        {selectedInvoice.reduce((acc, bill) => Addition(\r\n                                            acc, bill?.newReceiptBillAmount\r\n                                        ), 0)}\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* pengin receipts */}\r\n                                {reportData.map((row, rowIndex) => {\r\n                                    const invIndex = selectedInvoice.findIndex(\r\n                                        bill => isEqualNumber(bill?.Do_Id, row?.Do_Id)\r\n                                    );\r\n                                    const amount = selectedInvoice[invIndex] ? selectedInvoice[invIndex]?.newReceiptBillAmount : 0;\r\n                                    const isChecked = invIndex !== -1;\r\n\r\n                                    return (\r\n                                        <tr key={rowIndex}>\r\n                                            <td>{rowIndex + 1}</td>\r\n                                            <td>{row?.Do_Inv_No}</td>\r\n                                            <td>{LocalDate(row?.Do_Date)}</td>\r\n                                            <td>{NumberFormat(row?.Total_Invoice_value)}</td>\r\n                                            <td>{NumberFormat(row?.Paid_Amount)}</td>\r\n                                            <td>{NumberFormat(row?.receiptPendingAmount)}</td>\r\n                                            <td className=\"p-0 vctr text-center\" style={{ verticalAlign: 'middle' }}>\r\n                                                <div className=\"d-flex align-items-center\">\r\n\r\n                                                    <input\r\n                                                        className=\"form-check-input shadow-none pointer mx-2\"\r\n                                                        style={{ padding: '0.7em' }}\r\n                                                        type=\"checkbox\"\r\n                                                        checked={isChecked}\r\n                                                        onChange={() => {\r\n                                                            if (isChecked) onSelect(row, true)\r\n                                                            else onSelect(row)\r\n                                                        }}\r\n                                                    />\r\n\r\n                                                    {isChecked && (\r\n                                                        <input\r\n                                                            value={amount ? amount : ''}\r\n                                                            onInput={onlynum}\r\n                                                            required={isChecked}\r\n                                                            type=\"number\"\r\n                                                            max={toNumber(row?.receiptPendingAmount)}\r\n                                                            className=\"cus-inpt flex-grow-1 p-2 border-0 me-1\"\r\n                                                            onChange={e => onChangeAmount(row?.Do_Id, e.target.value)}\r\n                                                            placeholder={isChecked ? \"Enter amount\" : ''}\r\n                                                        />\r\n                                                    )}\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                                {/* nave to receipt */}\r\n                                <tr>\r\n                                    <td colSpan={7} className=\"text-end\">\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            disabled={selectedInvoice.length === 0}\r\n                                            type=\"submit\"\r\n                                        >Create Receipt</Button>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </form>\r\n\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomerPendingReceipt;\r\n\r\n{/* <FilterableTable\r\n                title=\"Customer Outstaing Receipts\"\r\n                EnableSerialNumber\r\n                dataArray={reportData}\r\n                columns={[\r\n                    createCol('Do_Inv_No', 'string', 'Invoice No'),\r\n                    createCol('Do_Date', 'date', 'Date'),\r\n                    createCol('Total_Invoice_value', 'number', 'Invoice Value'),\r\n                    createCol('Paid_Amount', 'number'),\r\n                    createCol('receiptPendingAmount', 'number', 'Outstanding'),\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Make Receipt',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => {\r\n                            const isChecked = selectedInvoice.findIndex(\r\n                                bill => isEqualNumber(bill?.Do_Id, row?.Do_Id)\r\n                            ) !== -1;\r\n\r\n                            return (\r\n                                <div>\r\n                                    <input\r\n                                        className=\"form-check-input shadow-none pointer\"\r\n                                        style={{ padding: '0.7em' }}\r\n                                        type=\"checkbox\"\r\n                                        checked={isChecked}\r\n                                        onChange={() => {\r\n                                            if (isChecked) onSelect(row, true)\r\n                                            else onSelect(row)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }\r\n                ]}\r\n                ButtonArea={\r\n                    <>\r\n                        <div style={{ minWidth: '360px' }}>\r\n                            <Select\r\n                                value={filters?.ledger}\r\n                                onChange={(e) => setFilters(pre => ({ ...pre, ledger: e }))}\r\n                                options={[\r\n                                    { value: '', label: 'ALL' },\r\n                                    ...ledgers\r\n                                ]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                placeholder={\"Select Leder Name\"}\r\n                                menuPortalTarget={document.body}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                }\r\n            /> */}"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","menu","provided","state","_objectSpread","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","receiptGeneralInfoInitialValue","receipt_id","year_id","receipt_voucher_type_id","receipt_sno","receipt_invoice_no","receipt_date","ISOString","receipt_bill_type","credit_ledger","credit_ledger_name","credit_amount","debit_ledger","debit_ledger_name","debit_amount","remarks","status","check_no","check_date","bank_name","bank_date","created_by","checkIsNumber","storageValue","UserId","altered_by","created_on","alterd_on","receiptBillInfoInitialValue","auto_id","receipt_no","DR_CR_Acc_Id","bill_id","JournalBillType","bill_name","bill_amount","Debit_Amo","Credit_Amo","SalesInvoiceDate","StockJournalDate","TotalPaidAmount","PendingAmount","receiptCostingInfoInitialValue","Debit_Ledger_Id","item_id","item_name","expence_value","itemQuantity","PaidAmount","receiptTypes","value","label","stockJournalTypes","receiptStatus","_ref","loadingOn","loadingOff","AddRights","reportData","setReportData","useState","ledgers","setLedgers","selectedInvoice","setSelectedInvoice","navigation","useNavigate","filters","setFilters","Fromdate","Todate","ledger","refresh","filterDialog","useEffect","fetchLink","then","data","success","catch","e","console","error","concat","repDat","toArray","map","o","receiptPendingAmount","Subraction","Total_Invoice_value","Paid_Amount","onSelect","row","deleteOption","pre","excludeCurrentValue","filter","isEqualNumber","Do_Id","updateBillInfo","newReceiptBillAmount","toNumber","_jsx","_Fragment","children","_jsxs","Card","className","minWidth","Select","onChange","options","styles","isSearchable","placeholder","menuPortalTarget","document","body","onSubmit","preventDefault","reduce","acc","bill","Addition","BillsDetails","Do_Inv_No","i","colSpan","rowIndex","_selectedInvoice$invI","invIndex","findIndex","amount","isChecked","LocalDate","Do_Date","NumberFormat","verticalAlign","type","checked","onInput","onlynum","required","max","onChangeAmount","billId","target","Button","disabled","length"],"sourceRoot":""}
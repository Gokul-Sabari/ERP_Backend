{"version":3,"file":"static/js/1684.1acf7c0c.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","Pages/Attendance/fingerPrintAttendance.jsx","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: '45px',\r\n        background: 'rgba(255, 255, 255, 0.322)'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 })\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card, CardContent, Button, Chip, Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Autocomplete,\r\n    TextField,\r\n} from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../Components/tablecolumn\";\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport FilterableTable from \"../../Components/filterableTable2\";\r\nimport * as XLSX from 'xlsx';\r\nimport { MyContext } from \"../../Components/context/contextProvider\";\r\nimport { useContext } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst FingerPrintAttendanceReport = (loadingOn, loadingOff) => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n\r\n    const userTypeId = storage?.UserTypeId;\r\n    const parseData = storage;\r\n    const [attendanceData, setAttendanceData] = useState([]);\r\n    const [dropdownEmployees, setDropdownEmployees] = useState([]);\r\n    const { contextObj } = useContext(MyContext);\r\n    const [selectedEmployees, setSelectedEmployees] = useState([]);\r\n    const Add_Rights = contextObj?.Add_Rights;\r\n\r\n\r\n    const getCurrentMonthYear = () => {\r\n        const date = new Date();\r\n        const year = date.getFullYear();\r\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n        return `${year}-${month}`;\r\n    };\r\n\r\n    const handleAddEmployeeClose = () => {\r\n        setAddEmployeeDialogOpen(false);\r\n\r\n    };\r\n\r\n    const initialValue = {\r\n        From: getCurrentMonthYear(),\r\n        To: getCurrentMonthYear(),\r\n        EmpId: 0,\r\n        Name: '',\r\n    };\r\n\r\n    const [addEmployeeDialogOpen, setAddEmployeeDialogOpen] = useState(false);\r\n    const [filter, setFilter] = useState(initialValue);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [isDropdownDisabled, setIsDropdownDisabled] = useState(false);\r\n    const [dropdownPlaceholder, setDropdownPlaceholder] = useState(\"ALL\");\r\n    const [debouncedFilter, setDebouncedFilter] = useState(filter);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setDebouncedFilter(filter);\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [filter]);\r\n\r\n    useEffect(() => {\r\n        const userTypeId = storage?.UserTypeId;\r\n        const userId = storage?.UserId;\r\n        const companyId = storage?.Company_id;\r\n\r\n        fetchLink({\r\n            address: `masters/users/employee/dropDown?Company_id=${companyId}`,\r\n            headers: {\r\n                Authorization: `Bearer ${localStorage.getItem('Autheticate_Id')}`,\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                let filteredEmployees = [];\r\n\r\n                if (Number(userTypeId) === 1 || Number(userTypeId) === 0 || Number(Add_Rights) === 1) {\r\n                    filteredEmployees = data.data;\r\n                    setFilter(prev => ({ ...prev, EmpId: 0, Name: 'ALL' }));\r\n                    setIsDropdownDisabled(false);\r\n                    setDropdownPlaceholder(\"ALL\");\r\n                } else {\r\n                    filteredEmployees = data.data.filter(employee => employee.UserId === userId);\r\n                    setFilter(prev => ({ ...prev, EmpId: userId, Name: storage?.Name }));\r\n                    setIsDropdownDisabled(true);\r\n                    setDropdownPlaceholder(storage?.Name);\r\n                }\r\n\r\n                setEmployees(filteredEmployees);\r\n            }\r\n        }).catch(e => console.error(\"Error fetching employees:\", e));\r\n    }, [storage?.UserTypeId, storage?.UserId, storage?.Company_id, storage?.Name]);\r\n\r\n    const fetchAttendanceData = async (From, EmpId) => {\r\n        try {\r\n            const userTypeId = storage?.UserTypeId;\r\n            const [year, month] = From.split(\"-\");\r\n\r\n            const startDate = `${year}-${month}-01`;\r\n\r\n            const dayCount = getDaysInMonth(`${year}-${month}`);\r\n\r\n            const endDate = `${year}-${month}-${dayCount}`;\r\n\r\n            const response = await fetchLink({\r\n                address: `userModule/employeActivity/trackActivitylogAttendance?FromDate=${startDate}&ToDate=${endDate}&UserTypeId=${userTypeId}&UserId=${EmpId}`,\r\n                headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem('Autheticate_Id')}`,\r\n                },\r\n            });\r\n\r\n            if (response.success) {\r\n                setAttendanceData(response.data);\r\n            }\r\n        } catch (e) {\r\n\r\n            console.error(\"Error fetching attendance data:\", e);\r\n        }\r\n    };\r\n\r\n    const handleOverallDownload = async () => {\r\n        try {\r\n            const fromDate = filter.From;\r\n            const [year, month] = fromDate.split(\"-\");\r\n            const startDate = `${year}-${month}-01`;\r\n            const dayCount = getDaysInMonth(`${year}-${month}`);\r\n            const endDate = `${year}-${month}-${dayCount}`;\r\n            const response = await fetchLink({\r\n                address: `userModule/employeActivity/employeeAttendanceModuledownload?FromDate=${startDate}&ToDate=${endDate}`,\r\n            });\r\n    \r\n            if (response.success) {\r\n                const overallData = response.data;\r\n                console.log(\"overalldata\", overallData);\r\n    \r\n                const getWorkingDays = (fromDate, endDate) => {\r\n                    const allDays = [];\r\n                    const currentDate = new Date(fromDate);\r\n                    const endDateObj = new Date(endDate);\r\n    \r\n                    while (currentDate <= endDateObj) {\r\n                        allDays.push(new Date(currentDate).toISOString().split(\"T\")[0]);\r\n                        currentDate.setDate(currentDate.getDate() + 1);\r\n                    }\r\n                    return {\r\n                        days: allDays,\r\n                        count: allDays.length,\r\n                    };\r\n                };\r\n    \r\n                const { days: dateRange } = getWorkingDays(startDate, endDate);\r\n    \r\n                const exportData = overallData.map(row => {\r\n                    let punchDetails = [];\r\n                    try {\r\n        \r\n                        punchDetails = row.AttendanceDetails ? JSON.parse(row.AttendanceDetails) : [];\r\n                    } catch (error) {\r\n                        console.error(\"Error parsing AttendanceDetails for employee:\", row.username, error);\r\n                        punchDetails = []; \r\n                    }\r\n    \r\n                    const dailyAttendance = {};\r\n    \r\n                    let totalPresent = 0;\r\n    \r\n                    dateRange.forEach((date, index) => {\r\n                        const isSunday = new Date(date).getDay() === 0;\r\n                    \r\n                        if (isSunday) {\r\n                            dailyAttendance[`Day ${index + 1}`] = 'H';\r\n                        } else {\r\n                            if (Array.isArray(punchDetails)) {\r\n                                const detail = punchDetails.find(detail => detail.Date === date);\r\n                    \r\n                               \r\n                                dailyAttendance[`Day ${index + 1}`] = detail ? detail.AttendanceStatus : 'A';\r\n                    \r\n                               \r\n                                if (detail && detail.AttendanceStatus === 'P') {\r\n                                    totalPresent++;\r\n                                }\r\n                            } else {\r\n                              \r\n                                dailyAttendance[`Day ${index + 1}`] = 'A';\r\n                            }\r\n                        }\r\n                    });\r\n    \r\n                    return {\r\n                        EmployeeName: row.username || row.Name,\r\n                        TotalPresent: totalPresent, \r\n                        ...dailyAttendance,\r\n                    };\r\n                });\r\n    \r\n             \r\n                const headers = [\r\n                    \"EmployeeName\",\r\n                    \"TotalPresent\",\r\n                    ...dateRange.map((_, id) => `Day ${id + 1}`),\r\n                ];\r\n    \r\n               \r\n                const ws = XLSX.utils.json_to_sheet(exportData);\r\n                XLSX.utils.sheet_add_aoa(ws, [headers], { origin: \"A1\" });\r\n    \r\n              \r\n                const wb = XLSX.utils.book_new();\r\n                XLSX.utils.book_append_sheet(wb, ws, \"Overall Attendance Report\");\r\n    \r\n                \r\n                XLSX.writeFile(wb, \"Overall_Attendance_Report.xlsx\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error downloading overall report:\", error);\r\n        }\r\n    };\r\n    const getDaysInMonth = (monthYear) => {\r\n        if (!monthYear) return 0;\r\n\r\n        const [year, month] = monthYear.split('-');\r\n\r\n        return new Date(year, month, 0).getDate();\r\n    };\r\n\r\n    useEffect(() => {\r\n        const { From, EmpId } = debouncedFilter;\r\n        if (From && (EmpId || EmpId === 0)) {\r\n            fetchAttendanceData(From, EmpId);\r\n            fetchDropdownEmployees();\r\n        }\r\n\r\n    }, [debouncedFilter]);\r\n\r\n    const fetchDropdownEmployees = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const data = await fetchLink({\r\n                address: `masters/Employeedetails/dropDown?Company_id=${parseData.Company_id}`,\r\n            });\r\n            if (data.success) {\r\n                setDropdownEmployees(data.data);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            toast.error(\"Failed to fetch employees for dropdown\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleFromChange = (e) => {\r\n        const getDaysInMonth = (monthYear) => {\r\n            if (!monthYear) return 0;\r\n\r\n            const [year, month] = monthYear.split('-');\r\n\r\n            return new Date(year, month, 0).getDate();\r\n        };\r\n        const selectedMonth = e.target.value;\r\n        const [year, month] = selectedMonth.split(\"-\");\r\n        const startDate = `${year}-${month}-01`;\r\n        const dayCount = getDaysInMonth(`${year}-${month}`);\r\n        const endDate = `${year}-${month}-${dayCount}`;\r\n\r\n        setFilter({\r\n            From: startDate,\r\n            To: endDate,\r\n            EmpId: filter.EmpId || 0,\r\n            Name: filter?.Name,\r\n        });\r\n    };\r\n\r\n    const handleDownload = () => {\r\n        const maxPunches = 6;\r\n\r\n        const exportData = attendanceData.map(row => {\r\n\r\n            const punchDetails = row.AttendanceDetails ? row.AttendanceDetails.split(',').map(detail => detail.trim()) : [];\r\n            const punchColumns = {};\r\n\r\n\r\n            let allPunchesEmpty = true;\r\n\r\n            for (let i = 0; i < maxPunches; i++) {\r\n                const punch = punchDetails[i] || '--';\r\n                punchColumns[`Punch ${i + 1}`] = punch;\r\n\r\n                if (punch !== '--') {\r\n                    allPunchesEmpty = false;\r\n                }\r\n            }\r\n\r\n            const attendanceStatus = allPunchesEmpty ? 'A' : 'P';\r\n\r\n\r\n            return {\r\n                Employee: row.username,\r\n                \"Log Date\": formatAttendanceDate(row.LogDate),\r\n                \"Attendance Status\": attendanceStatus,\r\n                ...punchColumns,\r\n            };\r\n        });\r\n\r\n\r\n        const columnsOrder = [\r\n            \"Employee\",\r\n            \"Log Date\",\r\n            \"Attendance Status\",\r\n            ...Array.from({ length: maxPunches }, (_, i) => `Punch ${i + 1}`)\r\n        ];\r\n\r\n        const reorderedData = exportData.map(row =>\r\n            columnsOrder.reduce((acc, col) => {\r\n                acc[col] = row[col] || '--';\r\n                return acc;\r\n            }, {})\r\n        );\r\n        const ws = XLSX.utils.json_to_sheet(reorderedData);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"Attendance Report\");\r\n\r\n        XLSX.writeFile(wb, \"Attendance_Report.xlsx\");\r\n    };\r\n\r\n    const formatAttendanceDate = (logDateTime) => {\r\n        if (!logDateTime) return '--';\r\n        const [date] = logDateTime.split('T');\r\n        return `${date} `;\r\n    };\r\n\r\n    const handleOverallWithPunch = () => {\r\n        const maxPunches = 6;\r\n      \r\n        const filteredAttendanceData = attendanceData.filter((row) => {\r\n            \r\n          const isUserSelected = selectedEmployees.some(\r\n            (user) => Number(user.UserId) === Number(row.User_Mgt_Id) || user.UserId === 'ALL'\r\n          );\r\n          return isUserSelected;\r\n        });\r\n      \r\n        const groupedData = filteredAttendanceData.reduce((acc, row) => {\r\n          const username = row.username;\r\n          if (!acc[username]) {\r\n            acc[username] = [];\r\n          }\r\n          acc[username].push(row);\r\n          return acc;\r\n        }, {});\r\n      \r\n        if (Object.keys(groupedData).length === 0) {\r\n            toast.error(\"No attendance data found\")\r\n          return;\r\n        }\r\n      \r\n        const wb = XLSX.utils.book_new();\r\n      \r\n        const firstLogDate = filteredAttendanceData[0]?.LogDate;\r\n        if (!firstLogDate) {\r\n          console.error(\"No log date found in the filtered attendance data.\");\r\n          return;\r\n        }\r\n      \r\n        const date = new Date(firstLogDate);\r\n        const year = date.getFullYear();\r\n        const month = date.toLocaleString(\"default\", { month: \"long\" });\r\n      \r\n        Object.entries(groupedData).forEach(([username, userAttendance]) => {\r\n          const exportData = userAttendance.map((row) => {\r\n        \r\n            const punchDetails = row.AttendanceDetails\r\n              ? row.AttendanceDetails.split(',').map((detail) => detail.trim())\r\n              : [];\r\n      \r\n            const punchColumns = {};\r\n            let allPunchesEmpty = true;\r\n      \r\n            for (let i = 0; i < maxPunches; i++) {\r\n              const punch = punchDetails[i] || '--';\r\n              punchColumns[`Punch ${i + 1}`] = punch;\r\n      \r\n              if (punch !== '--') {\r\n                allPunchesEmpty = false;\r\n              }\r\n            }\r\n      \r\n          \r\n            const attendanceStatus = allPunchesEmpty ? 'A' : 'P';\r\n      \r\n            return {\r\n              Employee: row.username,\r\n              \"Log Date\": formatAttendanceDate(row.LogDate),\r\n              \"Attendance Status\": attendanceStatus,\r\n              ...punchColumns,\r\n            };\r\n          });\r\n      \r\n       \r\n          const columnsOrder = [\r\n            \"Employee\",\r\n            \"Log Date\",\r\n            \"Attendance Status\",\r\n            ...Array.from({ length: maxPunches }, (_, i) => `Punch ${i + 1}`),\r\n          ];\r\n    \r\n          const reorderedData = exportData.map((row) =>\r\n            columnsOrder.reduce((acc, col) => {\r\n              acc[col] = row[col] || '--';\r\n              return acc;\r\n            }, {})\r\n          );\r\n\r\n          const sheetName = username.slice(0, 31); \r\n          const ws = XLSX.utils.json_to_sheet(reorderedData);\r\n          XLSX.utils.book_append_sheet(wb, ws, sheetName);\r\n        });\r\n      \r\n      \r\n        const fileName = `Attendance_Report_${month}_${year}.xlsx`;\r\n        XLSX.writeFile(wb, fileName);\r\n      };\r\n\r\n    const handleSummaryDownload = async () => {\r\n        try {\r\n            const fromDate = filter.From;\r\n            const [year, month] = fromDate.split(\"-\");\r\n            const startDate = `${year}-${month}-01`;\r\n            const dayCount = getDaysInMonth(`${year}-${month}`);\r\n            const endDate = `${year}-${month}-${dayCount}`;\r\n\r\n            const response = await fetchLink({\r\n                address: `userModule/employeActivity/employeeAttendanceModuledownload?FromDate=${startDate}&ToDate=${endDate}`,\r\n            });\r\n\r\n            if (response.success) {\r\n                const overallData = response.data;\r\n                const getWorkingDays = (fromDate, endDate) => {\r\n                    const allDays = [];\r\n                    const currentDate = new Date(fromDate);\r\n                    const endDateObj = new Date(endDate);\r\n                    let sundayCount = 0;\r\n\r\n                    while (currentDate <= endDateObj) {\r\n                        const dateStr = new Date(currentDate).toISOString().split(\"T\")[0];\r\n                        allDays.push(dateStr);\r\n\r\n                        if (currentDate.getDay() === 0) {\r\n                            sundayCount++;\r\n                        }\r\n\r\n                        currentDate.setDate(currentDate.getDate() + 1);\r\n                    }\r\n\r\n                    if (allDays.length === 0) {\r\n                        allDays.push(\"No days in this range\");\r\n                    }\r\n\r\n                    return {\r\n                        days: allDays,\r\n                        sundayCount,\r\n                        totalDays: allDays.length,\r\n                    };\r\n                };\r\n\r\n                const { days: dateRange, sundayCount, totalDays } = getWorkingDays(startDate, endDate);\r\n\r\n                let totalWorkingDaysSummary = 0;\r\n                let totalLeaveDaysSummary = 0;\r\n\r\n                const summaryData = overallData.map(row => {\r\n                    const punchDetails = row.AttendanceDetails ? JSON.parse(row.AttendanceDetails) : [];\r\n                    let totalWorkingDays = 0;\r\n                    let totalLeaveDays = 0;\r\n\r\n                    dateRange.forEach((date) => {\r\n                        if (Array.isArray(punchDetails)) {\r\n                            const detail = punchDetails.find(detail => detail.Date === date);\r\n\r\n                            const isSunday = new Date(date).getDay() === 0;\r\n\r\n                          \r\n                            if (isSunday) {\r\n                                return; \r\n                            }\r\n\r\n                            if (detail) {\r\n                                if (detail.AttendanceStatus === 'P') {\r\n                                    totalWorkingDays++;\r\n                                } else if (detail.AttendanceStatus === 'A') {\r\n                                    totalLeaveDays++;\r\n                                }\r\n                            } else {\r\n                                totalLeaveDays++;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    totalWorkingDaysSummary += totalWorkingDays;\r\n                    totalLeaveDaysSummary += totalLeaveDays;\r\n\r\n                    return {\r\n                        EmployeeName: row.Name,\r\n                        EmployeeID: row.EmployeeID,\r\n                        Month: `${month}-${year}`,\r\n                        Branch: row.Branch,\r\n                        NumberOfSundays: sundayCount,\r\n                        NumberOfDaysInMonth: totalDays,\r\n                        TotalWorkingDays: totalWorkingDays,\r\n                        TotalLeaveDays: totalLeaveDays,\r\n                    };\r\n                });\r\n\r\n                const exportData = summaryData.map(item => ({\r\n                    EmployeeName: item.EmployeeName,\r\n                    EmployeeID: item.EmployeeID,\r\n                    Month: item.Month,\r\n                    Branch: item.Branch,\r\n                    NumberOfSundays: item.NumberOfSundays,\r\n                    NumberOfDaysInMonth: item.NumberOfDaysInMonth,\r\n                    TotalWorkingDays: item.TotalWorkingDays,\r\n                    TotalLeaveDays: item.TotalLeaveDays,\r\n                }));\r\n\r\n                const ws = XLSX.utils.json_to_sheet(exportData);\r\n\r\n                const headers = [\r\n                    \"EmployeeName\",\r\n                    \"EmployeeID\",\r\n                    \"Month\",\r\n                    \"Branch\",\r\n                    \"NumberOfSundays\",\r\n                    \"NumberOfDaysInMonth\",\r\n                    \"TotalWorkingDays\",\r\n                    \"TotalLeaveDays\",\r\n                ];\r\n\r\n                XLSX.utils.sheet_add_aoa(ws, [headers], { origin: \"A1\" });\r\n\r\n                const wb = XLSX.utils.book_new();\r\n                XLSX.utils.book_append_sheet(wb, ws, \"Attendance Summary Report\");\r\n\r\n                \r\n                XLSX.writeFile(wb, \"Attendance_Summary_Report.xlsx\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error downloading overall report:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={addEmployeeDialogOpen}\r\n                // onClose={handleAddEmployeeClose}\r\n                maxWidth=\"md\"\r\n                PaperProps={{\r\n                    style: { width: '500px', height: '500px' },\r\n                }}\r\n            >\r\n                <DialogTitle>Add Employee</DialogTitle>\r\n                <DialogContent>\r\n                    <Autocomplete\r\n                        multiple\r\n                        options={[{ UserId: 'all', Name: 'ALL' }, ...dropdownEmployees]}\r\n                        getOptionLabel={(option) => option.Name}\r\n                        isOptionEqualToValue={(option, value) => option.UserId === value.UserId}\r\n                        onChange={(event, value) => {\r\n                            if (value.some((selected) => selected.UserId === 'all')) {\r\n                                setSelectedEmployees(dropdownEmployees);\r\n                            } else {\r\n                                const uniqueValues = value.filter((val, index, self) =>\r\n                                    index === self.findIndex((t) => t.UserId === val.UserId)\r\n                                );\r\n                                setSelectedEmployees(uniqueValues);\r\n                            }\r\n                        }}\r\n                        value={selectedEmployees.some((user) => user.UserId === 'all')\r\n                            ? [{ UserId: 'all', Name: 'ALL' }]\r\n                            : selectedEmployees}\r\n                        renderInput={(params) => (\r\n                            <TextField {...params} placeholder=\"Employees\" />\r\n                        )}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions className=\"d-flex justify-content-between flex-wrap\">\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"outlined\"\r\n                        onClick={() => setSelectedEmployees([])}\r\n                    >\r\n                        Clear\r\n                    </Button>\r\n                    <span>\r\n                        <Button onClick={handleAddEmployeeClose}>Cancel</Button>\r\n                        <Button onClick={handleOverallWithPunch}>Download</Button>\r\n\r\n                    </span>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Card>\r\n                <CardContent sx={{ minHeight: '50vh' }}>\r\n                    <div className=\"ps-3 pb-2 pt-0 d-flex align-items-center justify-content-between border-bottom mb-3\">\r\n                        <h6 className=\"fa-18\">Employee Attendance</h6>\r\n\r\n                        {Number(userTypeId === 1) || Number(userTypeId) === 0 ? (\r\n                            <>\r\n                                <div className=\"d-flex align-items-center justify-content-start gap-3\">\r\n                                    <Button\r\n\r\n                                        onClick={handleDownload}\r\n                                        variant=\"contained\"\r\n\r\n                                        disabled={filter?.EmpId === 0 || filter?.Name === \"ALL\"}\r\n                                    >\r\n\r\n                                        Individual Report\r\n                                    </Button>\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                            handleOverallDownload(filter?.From, filter?.To);\r\n\r\n                                        }}\r\n                                    >\r\n                                        Monthly Report\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                            setAddEmployeeDialogOpen(true)\r\n                                            // handleOverallWithPunch(filter?.From, filter?.To);\r\n\r\n                                        }}\r\n                                    >\r\n                                        Cummulative Monthly Report\r\n                                    </Button>\r\n\r\n\r\n                                    <Button\r\n                                        onClick={\r\n                                            handleSummaryDownload\r\n                                        }\r\n                                    >\r\n                                        Summary\r\n                                    </Button>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <div> </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"px-2 row mb-4\">\r\n                        <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                            <label>Employee</label>\r\n                            <Select\r\n                                value={{ value: filter?.EmpId, label: filter?.Name }}\r\n                                onChange={(e) => setFilter({ ...filter, EmpId: e.value, Name: e.label })}\r\n                                options={[{ value: 0, label: `ALL` }, ...employees.map(obj => ({ value: obj?.UserId, label: obj?.Name }))]}\r\n                                styles={customSelectStyles}\r\n                                isSearchable={true}\r\n                                placeholder={dropdownPlaceholder}\r\n                                isDisabled={isDropdownDisabled}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2\">\r\n                            <label>From</label>\r\n                            <input\r\n                                type=\"month\"\r\n                                className=\"cus-inpt\"\r\n                                value={filter?.From?.slice(0, 7)}\r\n                                onChange={handleFromChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <FilterableTable\r\n                        dataArray={attendanceData}\r\n                        columns={[\r\n                            {\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => row.username,\r\n                                ColumnHeader: 'Employee',\r\n                                isVisible: 1,\r\n                                width: '20%',\r\n                                CellProps: {\r\n                                    sx: {\r\n                                        padding: '10px',\r\n                                        textAlign: 'left',\r\n                                        fontWeight: 'bold',\r\n                                    },\r\n                                },\r\n                            },\r\n                            {\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => formatAttendanceDate(row.LogDate || '--'),\r\n                                ColumnHeader: 'Log Date',\r\n                                isVisible: 1,\r\n                                width: '20%',\r\n                                CellProps: {\r\n                                    sx: {\r\n                                        padding: '10px',\r\n                                        textAlign: 'center',\r\n                                        color: 'gray',\r\n                                    },\r\n                                },\r\n                            },\r\n                            {\r\n                                isCustomCell: true,\r\n                                ColumnHeader: 'Punch Details',\r\n                                isVisible: 1,\r\n                                width: '40%',\r\n                                CellProps: {\r\n                                    sx: {\r\n                                        display: 'flex',\r\n                                        flexWrap: 'wrap',\r\n                                        justifyContent: 'center',\r\n                                    },\r\n                                },\r\n                                Cell: ({ row }) => (\r\n                                    <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n                                        {row.AttendanceDetails ? (\r\n                                            row.AttendanceDetails.split(',')\r\n                                                .map((detail) => detail.trim())\r\n                                                .filter((detail) => detail !== '')\r\n                                                .map((detail, index) => {\r\n\r\n                                                    const parts = detail.split(' (');\r\n                                                    const time = parts[0];\r\n\r\n                                                    return (\r\n                                                        <Chip\r\n                                                            key={index}\r\n                                                            label={time}\r\n                                                            variant=\"outlined\"\r\n                                                            size=\"small\"\r\n                                                            sx={{ margin: '2px', color: 'green' }}\r\n                                                        />\r\n                                                    );\r\n                                                })\r\n                                        ) : (\r\n                                            <div>No Punch Details</div>\r\n                                        )}\r\n                                    </div>\r\n                                ),\r\n                            }\r\n                        ]}\r\n                        EnableSerialNumber\r\n                        CellSize=\"small\"\r\n                        disablePagination={false}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FingerPrintAttendanceReport;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","control","provided","state","_objectSpread","height","background","menu","zIndex","menuPortal","base","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","FingerPrintAttendanceReport","loadingOn","loadingOff","_filter$From","loading","setLoading","useState","storage","JSON","parse","localStorage","getItem","userTypeId","UserTypeId","parseData","attendanceData","setAttendanceData","dropdownEmployees","setDropdownEmployees","contextObj","useContext","MyContext","selectedEmployees","setSelectedEmployees","Add_Rights","getCurrentMonthYear","date","Date","year","getFullYear","month","getMonth","toString","padStart","concat","initialValue","From","To","EmpId","Name","addEmployeeDialogOpen","setAddEmployeeDialogOpen","filter","setFilter","employees","setEmployees","isDropdownDisabled","setIsDropdownDisabled","dropdownPlaceholder","setDropdownPlaceholder","debouncedFilter","setDebouncedFilter","useEffect","timer","setTimeout","clearTimeout","userId","UserId","companyId","Company_id","fetchLink","headers","Authorization","then","data","success","filteredEmployees","Number","prev","employee","catch","e","console","error","getDaysInMonth","monthYear","split","getDate","async","startDate","dayCount","endDate","response","fetchAttendanceData","fetchDropdownEmployees","toast","formatAttendanceDate","logDateTime","_jsxs","_Fragment","children","Dialog","open","maxWidth","PaperProps","_jsx","DialogTitle","DialogContent","Autocomplete","multiple","options","getOptionLabel","option","isOptionEqualToValue","value","onChange","event","some","selected","uniqueValues","val","index","self","findIndex","t","user","renderInput","params","TextField","placeholder","DialogActions","className","Button","type","onClick","handleAddEmployeeClose","handleOverallWithPunch","_filteredAttendanceDa","filteredAttendanceData","row","User_Mgt_Id","groupedData","reduce","acc","username","push","Object","keys","length","wb","XLSX","book_new","firstLogDate","LogDate","toLocaleString","entries","forEach","_ref","userAttendance","exportData","map","punchDetails","AttendanceDetails","detail","trim","punchColumns","allPunchesEmpty","i","punch","attendanceStatus","Employee","columnsOrder","Array","from","_","reorderedData","col","sheetName","slice","ws","json_to_sheet","book_append_sheet","fileName","Card","CardContent","sx","minHeight","handleDownload","disabled","fromDate","overallData","log","getWorkingDays","allDays","currentDate","endDateObj","toISOString","setDate","days","count","dateRange","dailyAttendance","totalPresent","getDay","isArray","find","AttendanceStatus","EmployeeName","TotalPresent","sheet_add_aoa","origin","handleOverallDownload","sundayCount","dateStr","totalDays","totalWorkingDaysSummary","totalLeaveDaysSummary","totalWorkingDays","totalLeaveDays","EmployeeID","Month","Branch","NumberOfSundays","NumberOfDaysInMonth","TotalWorkingDays","TotalLeaveDays","item","Select","label","obj","styles","isSearchable","isDisabled","selectedMonth","target","FilterableTable","dataArray","columns","isCustomCell","Cell","_ref2","ColumnHeader","isVisible","CellProps","padding","textAlign","fontWeight","_ref3","display","flexWrap","justifyContent","_ref4","time","Chip","size","margin","EnableSerialNumber","CellSize","disablePagination","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","root","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}
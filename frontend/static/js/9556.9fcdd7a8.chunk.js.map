{"version":3,"file":"static/js/9556.9fcdd7a8.chunk.js","mappings":"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","sources":["Pages/Payments/Receipts/listReceipts.jsx","../node_modules/@mui/icons-material/esm/FilterAlt.js","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["import { Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tooltip } from \"@mui/material\";\r\nimport {\r\n    checkIsNumber,\r\n    getSessionUser,\r\n    isEqualNumber,\r\n    ISOString,\r\n    isValidDate,\r\n    Subraction,\r\n} from \"../../../Components/functions\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\nimport Select from \"react-select\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FilterAlt, Search } from \"@mui/icons-material\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\nconst defaultFilters = {\r\n    Fromdate: ISOString(),\r\n    Todate: ISOString(),\r\n};\r\n\r\nconst ReceiptsListing = ({ loadingOn, loadingOff }) => {\r\n    const storage = getSessionUser().user;\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const query = useQuery();\r\n\r\n    const [salesReceipts, setSalesReceipts] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: defaultFilters.Fromdate,\r\n        Todate: defaultFilters.Todate,\r\n        fetchFrom: defaultFilters.Fromdate,\r\n        fetchTo: defaultFilters.Todate,\r\n        Retailer: { value: \"\", label: \"Search by Retailer...\" },\r\n        filterDialog: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (loadingOn) loadingOn();\r\n\r\n        fetchLink({\r\n            address: `delivery/paymentCollection?Fromdate=${filters?.fetchFrom}&Todate=${filters?.fetchTo}`,\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSalesReceipts(data.data);\r\n            }\r\n        }).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        }).catch(e => console.error(e))\r\n    }, [filters?.fetchFrom, filters?.fetchTo]);\r\n\r\n    useEffect(() => {\r\n        const queryFilters = {\r\n            Fromdate: query.get(\"Fromdate\") && isValidDate(query.get(\"Fromdate\"))\r\n                ? query.get(\"Fromdate\")\r\n                : defaultFilters.Fromdate,\r\n            Todate: query.get(\"Todate\") && isValidDate(query.get(\"Todate\"))\r\n                ? query.get(\"Todate\")\r\n                : defaultFilters.Todate,\r\n        };\r\n        setFilters(pre => ({ ...pre, fetchFrom: queryFilters.Fromdate, fetchTo: queryFilters.Todate }));\r\n    }, [location.search]);\r\n\r\n    const updateQueryString = (newFilters) => {\r\n        const params = new URLSearchParams(newFilters);\r\n        navigate(`?${params.toString()}`, { replace: true });\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setFilters(pre => ({ ...pre, filterDialog: false }));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title=\"Receipts\"\r\n                ButtonArea={\r\n                    <>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            className=\"ms-2\"\r\n                            onClick={() => navigate('create')}>\r\n                            Create Receipt\r\n                        </Button>\r\n                        <Tooltip title='Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({ ...filters, filterDialog: true })}\r\n                            ><FilterAlt /></IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                }\r\n                EnableSerialNumber\r\n                dataArray={salesReceipts}\r\n                headerFontSizePx={13}\r\n                bodyFontSizePx={12}\r\n                columns={[\r\n                    createCol('collection_inv_no', 'string', 'Invoice'),\r\n                    createCol('collection_date', 'date', 'Date'),\r\n                    createCol('RetailerGet', 'string', 'Retailer'),\r\n                    createCol('CollectedByGet', 'string', 'Received By'),\r\n                    createCol('total_amount', 'number', 'Amount'),\r\n                    createCol('collection_type', 'string', 'Type'),\r\n                    createCol('VoucherGet', 'string', 'Voucher'),\r\n                    {\r\n                        isVisible: 1,\r\n                        ColumnHeader: 'Verifyed-?',\r\n                        isCustomCell: true,\r\n                        Cell: ({ row }) => {\r\n                            const verified = isEqualNumber(row?.verify_status);\r\n                            return (\r\n                                <span\r\n                                    className={\r\n                                        verified\r\n                                            ? 'bg-success' : 'bg-warning'\r\n                                            + \" text-light fa-11 px-2 py-1 rounded-3\"\r\n                                    }\r\n                                >\r\n                                    {verified ? 'Verified' : 'Pending'}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    },\r\n                    // {\r\n                    //     isVisible: 1,\r\n                    //     ColumnHeader: 'Action',\r\n                    //     isCustomCell: true,\r\n                    //     Cell: ({ row }) => (\r\n                    //         <span className=\"\">{isEqualNumber(row?.verify_status) ? 'Verified' : 'Pending'}</span>\r\n                    //     )\r\n                    // },\r\n                ]}\r\n                isExpendable={true}\r\n                expandableComp={({ row }) => (\r\n                    <div className=\"py-2\">\r\n                        <FilterableTable\r\n                            // title=\"Receipts\"\r\n                            disablePagination\r\n                            headerFontSizePx={13}\r\n                            bodyFontSizePx={12}\r\n                            dataArray={Array.isArray(row?.Receipts) ? row?.Receipts : []}\r\n                            columns={[\r\n                                createCol('Do_Inv_No', 'string', 'Delivery Invoice Number'),\r\n                                createCol('Do_Date', 'date', 'Delivery Date'),\r\n                                createCol('collected_amount', 'number', 'Receipt Amount'),\r\n                                createCol('total_receipt_amount', 'number', 'Total Receipt'),\r\n                                createCol('Total_Invoice_value', 'number', 'Invoice Value'),\r\n                                {\r\n                                    isVisible: 1,\r\n                                    ColumnHeader: 'Pending Amount',\r\n                                    isCustomCell: true,\r\n                                    Cell: ({ row }) => Subraction(row?.bill_amount, row?.total_receipt_amount)\r\n                                },\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                )}\r\n            />\r\n\r\n            <Dialog\r\n                open={filters.filterDialog}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='md'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                {/* <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Voucher</td>\r\n                                    <td colSpan={3}>\r\n                                        <Select\r\n                                            value={filters.VoucherType}\r\n                                            onChange={(selectedOptions) =>\r\n                                                setFilters((prev) => ({ ...prev, VoucherType: selectedOptions }))\r\n                                            }\r\n                                            menuPortalTarget={document.body}\r\n                                            options={uniqueVoucher}\r\n                                            styles={customSelectStyles}\r\n                                            isMulti\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Select Voucher\"}\r\n                                            maxMenuHeight={300}\r\n                                        />\r\n                                    </td>\r\n                                </tr> */}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            const updatedFilters = {\r\n                                Fromdate: filters?.Fromdate,\r\n                                Todate: filters?.Todate\r\n                            };\r\n                            updateQueryString(updatedFilters);\r\n                            closeDialog();\r\n                        }}\r\n                        startIcon={<Search />}\r\n                        variant=\"outlined\"\r\n                    >Search</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ReceiptsListing;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["defaultFilters","Fromdate","ISOString","Todate","_ref","loadingOn","loadingOff","getSessionUser","user","navigate","useNavigate","location","useLocation","query","state","URLSearchParams","search","salesReceipts","setSalesReceipts","useState","retailers","setRetailers","filters","setFilters","fetchFrom","fetchTo","Retailer","value","label","filterDialog","useEffect","fetchLink","address","concat","then","data","success","finally","catch","e","console","error","queryFilters","get","isValidDate","pre","_objectSpread","closeDialog","_jsxs","_Fragment","children","_jsx","FilterableTable","title","ButtonArea","Button","variant","className","onClick","Tooltip","IconButton","size","FilterAlt","EnableSerialNumber","dataArray","headerFontSizePx","bodyFontSizePx","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref2","row","verified","isEqualNumber","verify_status","isExpendable","expandableComp","_ref3","disablePagination","Array","isArray","Receipts","_ref4","Subraction","bill_amount","total_receipt_amount","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","style","verticalAlign","type","onChange","target","DialogActions","newFilters","params","toString","replace","updateQueryString","startIcon","Search","createSvgIcon","d"],"sourceRoot":""}
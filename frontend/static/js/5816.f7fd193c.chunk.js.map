{"version":3,"file":"static/js/5816.f7fd193c.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/taxCalculator.js","Pages/Sales/SalesReportComponent/previewInvoice.jsx","Pages/Sales/SalesReportComponent/DeliveryDetailsList.jsx","Pages/Sales/SalesReportComponent/NewDeliveryOrder.jsx","Pages/Sales/convertedStatus.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","/**\r\n * @param {number} amount \r\n * @param {number} gstRate \r\n * @param {string} type 3 Types add, remove, zerotax\r\n * @returns {object} \r\n */\r\n\r\nimport { toNumber } from \"./functions\";\r\n\r\nexport const calculateGSTDetails = (amount, gstRate, type = 'add') => {\r\n\r\n    const validatedAmount = toNumber(amount);\r\n    const validatedGstRate = toNumber(gstRate);\r\n\r\n    const halfGstRate = validatedGstRate / 2;\r\n    let baseAmount, taxAmount, withTax, withoutTax;\r\n\r\n    if (type === 'zerotax') {\r\n        baseAmount = validatedAmount; // No tax applied\r\n        taxAmount = 0;\r\n        withTax = validatedAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'add') {\r\n        taxAmount = (validatedAmount * validatedGstRate) / 100;\r\n        baseAmount = validatedAmount;\r\n        withTax = validatedAmount + taxAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'remove') {\r\n        baseAmount = validatedAmount / (1 + validatedGstRate / 100);\r\n        taxAmount = validatedAmount - baseAmount;\r\n        withTax = validatedAmount;\r\n        withoutTax = baseAmount;\r\n    } else {\r\n        throw new Error(\"Invalid type. Use 'add', 'remove', or 'zerotax'.\");\r\n    }\r\n\r\n    const sgstAmount = (taxAmount / 2).toFixed(2);\r\n    const cgstAmount = (taxAmount / 2).toFixed(2);\r\n    const igstAmount = taxAmount.toFixed(2);\r\n\r\n    return {\r\n        base_amount: Number(baseAmount).toFixed(2),\r\n        with_tax: Number(withTax).toFixed(2),\r\n        without_tax: Number(withoutTax).toFixed(2),\r\n        tax_per: Number(validatedGstRate),\r\n        tax_amount: Number(taxAmount).toFixed(2),\r\n        sgst_per: Number(halfGstRate),\r\n        sgst_amount: Number(sgstAmount),\r\n        cgst_per: Number(halfGstRate),\r\n        cgst_amount: Number(cgstAmount),\r\n        igst_per: Number(validatedGstRate),\r\n        igst_amount: Number(igstAmount),\r\n        type,\r\n    };\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle, Button, DialogActions } from '@mui/material';\r\nimport { Close, Download } from '@mui/icons-material';\r\nimport { isEqualNumber, isGraterNumber, LocalDate, NumberFormat, numberToWords, Multiplication, Subraction, Addition, RoundNumber } from '../../../Components/functions';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\n\r\n\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst InvoiceBillTemplate = ({ orderDetails, orderProducts, download, actionOpen, clearDetails, children, TitleText }) => {\r\n\r\n\r\n\r\n    const [pageSize, setPageSize] = useState('A5');\r\n\r\n\r\n    // const a4Styles = {\r\n    //     width: '210mm',\r\n    //     minHeight: '297mm',\r\n    //     padding: '10mm',\r\n    //     backgroundColor: '#fff',\r\n    //     fontSize: '7px',\r\n    //     boxSizing: 'border-box',\r\n    //     boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n    //     fontFamily: 'Arial, sans-serif',\r\n    //     lineHeight: 1.2,\r\n    //     overflow: 'visible',\r\n    //     display: 'flex',\r\n    //     flexDirection: 'column',\r\n    //     flexGrow: 1,\r\n    //     paddingTop: '1px',\r\n    //     margin: '0 auto',\r\n    //     '@media print': {\r\n    //         width: '210mm',\r\n    //         height: '297mm',\r\n    //         margin: 0,\r\n    //         padding: '8mm',\r\n    //         boxShadow: 'none',\r\n    //         overflow: 'hidden',\r\n    //         pageBreakAfter: 'avoid',\r\n    //         pageBreakInside: 'avoid'\r\n    //     }\r\n    // };\r\n\r\n    // const a5Styles = {\r\n    //     width: '210mm',\r\n    //     minHeight: '148.5mm',\r\n    //     padding: '6mm',\r\n    //     backgroundColor: '#fff',\r\n    //     fontSize: '5px',\r\n    //     boxSizing: 'border-box',\r\n    //     boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n    //     fontFamily: 'Arial, sans-serif',\r\n    //     lineHeight: 1.0,\r\n    //     display: 'flex',\r\n    //     flexDirection: 'column',\r\n\r\n    //     flexGrow: 1,\r\n    //     margin: '0 auto',\r\n    //     '@media print': {\r\n    //         width: '148mm',\r\n    //         height: '210mm',\r\n    //         margin: 0,\r\n    //         padding: '5mm',\r\n    //         boxShadow: 'none',\r\n    //         overflow: 'hidden',\r\n    //         pageBreakAfter: 'avoid',\r\n    //         pageBreakInside: 'avoid'\r\n    //     }\r\n    // };\r\n\r\n\r\n\r\n    const a4Styles = {\r\n        width: '200mm',\r\n        minHeight: '290mm',\r\n        padding: '10mm',\r\n        backgroundColor: '#fff',\r\n        fontSize: '7px',\r\n        boxSizing: 'border-box',\r\n        boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n        fontFamily: 'Arial, sans-serif',\r\n        lineHeight: 1.2,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        margin: '0 auto',\r\n\r\n    };\r\n\r\n    const a5Styles = {\r\n        width: '200mm',\r\n        minHeight: '146mm',\r\n        padding: '8mm',\r\n        backgroundColor: '#fff',\r\n        fontSize: '5px',\r\n        boxSizing: 'border-box',\r\n        boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n        fontFamily: 'Arial, sans-serif',\r\n        lineHeight: 1.0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        margin: '0 auto',\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [open, setOpen] = useState(false);\r\n    const [retailerInfo, setRetailerInfo] = useState({});\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const printRef = useRef(null);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    useEffect(() => {\r\n        if (actionOpen) {\r\n            setOpen(true);\r\n        }\r\n    }, [actionOpen])\r\n\r\n    useEffect(() => {\r\n        if (orderDetails?.Retailer_Id) {\r\n            fetchLink({\r\n                address: `masters/retailers/info?Retailer_Id=${orderDetails?.Retailer_Id}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setRetailerInfo(data?.data[0] ? data?.data[0] : {})\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [orderDetails?.Retailer_Id])\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        if (clearDetails) {\r\n            clearDetails();\r\n        }\r\n    };\r\n\r\n    const includedProducts = orderProducts.filter(orderProduct => isGraterNumber(orderProduct?.Bill_Qty, 0));\r\n\r\n    const totalValueBeforeTax = orderProducts.reduce((acc, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty) || 0;\r\n\r\n        if (isNotTaxableBill) {\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n            return acc;\r\n        }\r\n\r\n        const gstPercentage = IS_IGST ? item?.Igst : Addition(item?.Sgst, item?.Cgst);\r\n\r\n        if (isInclusive) {\r\n            const itemTax = taxCalc(1, itemRate, gstPercentage);\r\n            const basePrice = Subraction(itemRate, itemTax);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, basePrice);\r\n        }\r\n        if (isExclusiveBill) {\r\n            const itemTax = taxCalc(0, itemRate, gstPercentage);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n        }\r\n\r\n        return acc;\r\n    }, {\r\n        TotalValue: 0,\r\n        TotalTax: 0\r\n    });\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n        pageStyle: `\r\n    @page {\r\n      size: ${pageSize === 'A4' ? 'A4' : 'A5'};\r\n      margin-top: 10px;\r\n      margin-right: 0;\r\n      margin-bottom: 0;\r\n      margin-left: 0;\r\n      \r\n    }\r\n\r\n    @media print {\r\n      body {\r\n        margin: 0;\r\n        padding: 0;\r\n         margin-top: 10px;\r\n      }\r\n\r\n      .MuiDialog-root,\r\n      .MuiDialog-container,\r\n      .MuiPaper-root,\r\n      .MuiDialogTitle-root {\r\n        display: none !important;\r\n      }\r\n\r\n    .pagebreak {\r\n        clear: both;\r\n        page-break-after: always;\r\n    }\r\n\r\n      .print-content {\r\n        padding-top: 0;\r\n         margin-top: 10px;\r\n      }\r\n    }\r\n  `\r\n    });\r\n\r\n\r\n    const extraDetails = [\r\n        {\r\n            labelOne: 'Invoice No',\r\n            dataOne: orderDetails?.Do_Inv_No,\r\n            labelTwo: 'Dated',\r\n            dataTwo: LocalDate(orderDetails?.Do_Date),\r\n        },\r\n        {\r\n            labelOne: 'Delivery Note',\r\n            dataOne: '',\r\n            labelTwo: 'Mode/Terms of Payment',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Reference No. & Date',\r\n            dataOne: '',\r\n            labelTwo: 'Other References',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Buyer\\'s Order No',\r\n            dataOne: '',\r\n            labelTwo: 'Dated',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Dispatch Doc No',\r\n            dataOne: '',\r\n            labelTwo: 'Delivery Note Date',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Dispatched through',\r\n            dataOne: '',\r\n            labelTwo: 'Destination',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Bill of Lading/LR-RR No',\r\n            dataOne: '',\r\n            labelTwo: 'Motor Vehicle No',\r\n            dataTwo: '',\r\n        },\r\n    ]\r\n\r\n    const TaxData = orderProducts?.reduce((data, item) => {\r\n        const HSNindex = data.findIndex(obj => obj.hsnCode == item.HSN_Code);\r\n\r\n        const {\r\n            Taxable_Amount, Cgst_Amo, Sgst_Amo, Igst_Amo, HSN_Code,\r\n            Cgst, Sgst, Igst,\r\n        } = item;\r\n\r\n        if (HSNindex !== -1) {\r\n            const prev = data[HSNindex];\r\n            const newValue = {\r\n                ...prev,\r\n                taxableValue: prev.taxableValue + Taxable_Amount,\r\n                cgst: Addition(prev.cgst, Cgst_Amo),\r\n                sgst: Addition(prev.sgst, Sgst_Amo),\r\n                igst: Addition(prev.igst, Igst_Amo),\r\n                totalTax: prev.totalTax + Number(orderDetails.IS_IGST ? Igst_Amo : Addition(Cgst_Amo, Sgst_Amo)),\r\n            };\r\n\r\n            data[HSNindex] = newValue;\r\n            return data;\r\n        }\r\n\r\n        const newEntry = {\r\n            hsnCode: HSN_Code,\r\n            taxableValue: Taxable_Amount,\r\n            cgst: Cgst_Amo,\r\n            cgstPercentage: Cgst,\r\n            sgst: Sgst_Amo,\r\n            sgstPercentage: Sgst,\r\n            igst: Igst_Amo,\r\n            igstPercentage: Igst,\r\n            totalTax: orderDetails.IS_IGST ? Number(Igst_Amo) : Addition(Cgst_Amo, Sgst_Amo),\r\n        };\r\n\r\n        return [...data, newEntry];\r\n    }, []);\r\n\r\n    const getInlineStyles = () => (pageSize === 'A4' ? a4Styles : a5Styles);\r\n\r\n    const handleToggle = () => {\r\n        setPageSize((prev) => (prev === 'A5' ? 'A4' : 'A5'));\r\n    };\r\n    return (\r\n        <>\r\n            <span onClick={handleOpen}>{children}</span>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                fullWidth\r\n                maxWidth=\"xl\"\r\n                sx={{\r\n                    '& .MuiDialog-container': {\r\n                        alignItems: 'flex-start',\r\n                        padding: '20px 0',\r\n                        overflow: 'auto',\r\n                    },\r\n                    '& .MuiPaper-root': {\r\n                        width: 'auto',\r\n                        maxWidth: '95vw',\r\n                        maxHeight: '95vh',\r\n                        margin: 0,\r\n                        overflow: 'visible',\r\n                    }\r\n                }}\r\n            >\r\n                <DialogTitle sx={{\r\n                    textAlign: 'center',\r\n                    fontWeight: 'bold',\r\n                    width: '100%',\r\n                    position: 'sticky',\r\n                    marginTop: '2px',\r\n                    backgroundColor: 'white',\r\n                    zIndex: 1,\r\n                }}>\r\n                    Order Preview\r\n                </DialogTitle>\r\n\r\n                <DialogContent\r\n                    ref={printRef}\r\n                    sx={{\r\n                        padding: 0,\r\n                        margin: 0,\r\n                        overflow: 'auto',\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        '@media print': {\r\n                            overflow: 'visible',\r\n                            display: 'block',\r\n                            height: 'auto',\r\n                            marginTop: '2px'\r\n                        }\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={getInlineStyles()}\r\n                        className=\"print-container\"\r\n                    >\r\n                        <h3 className='text-center mb-2'>{TitleText ?? 'Invoice Details'}</h3>\r\n\r\n                        {/* General Info */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 p-0 border border-bottom-0 border-end-0\">\r\n                                <div className=\"border-bottom p-2\">\r\n                                    <p className='m-0 fa-17'>{companyInfo?.Company_Name}</p>\r\n                                    <p className='m-0 fa-14'>Address: {companyInfo?.Company_Address}</p>\r\n                                    <p className='m-0 fa-14'>City: {companyInfo?.Region} - {companyInfo?.Pincode}</p>\r\n                                    <p className='m-0 fa-14'>GSTIN / UIN: {companyInfo?.Gst_Number}</p>\r\n                                    <p className='m-0 fa-14'>State: {companyInfo?.State}</p>\r\n                                    <p className='m-0 fa-14'>Code: </p>\r\n                                </div>\r\n                                <div className=\"p-2\">\r\n                                    <p className='m-0 fa-12'>Buyer (Bill to)</p>\r\n                                    <p className='m-0 fa-15'>{retailerInfo?.Retailer_Name}</p>\r\n                                    <p className='m-0 fa-14'>{retailerInfo?.Mobile_No + ' - ' + retailerInfo?.Reatailer_Address}</p>\r\n                                    <p className='m-0 fa-14'>{retailerInfo?.Reatailer_City} - {retailerInfo?.PinCode}</p>\r\n                                    <p className='m-0 fa-14'>GSTIN / UIN: {companyInfo?.Gstno}</p>\r\n                                    <p className='m-0 fa-14'>State Name: {companyInfo?.StateGet}</p>\r\n                                    <p className='m-0 fa-14'>Code: </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6 p-0 border border-bottom-0\">\r\n                                <table className=\"table m-0\">\r\n                                    <tbody>\r\n                                        {extraDetails.map((detail, index) => (\r\n                                            <tr key={index}>\r\n                                                <td className=\"border-end fa-12 p-0 px-1\">\r\n                                                    <p className=\"m-0\">{detail.labelOne}</p>\r\n                                                    <p className=\"m-0\">&emsp;{detail.dataOne}</p>\r\n                                                </td>\r\n                                                <td className='fa-12 p-0 px-1'>\r\n                                                    <p className=\"m-0\">{detail.labelTwo}</p>\r\n                                                    <p className=\"m-0\">&emsp;{detail.dataTwo}</p>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        <tr>\r\n                                            <td colSpan={2} className='border-0 fa-12 p-0'>\r\n                                                <p className=\"m-0\">Terms of Delivery</p>\r\n                                                <p className=\"m-0\"></p>\r\n                                                <br />\r\n                                                <br />\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Product Info */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 p-0\">\r\n                                <table className=\"table m-0\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <td className='border bg-light fa-14'>Sno</td>\r\n                                            <td className='border bg-light fa-14'>Product</td>\r\n                                            <td className='border bg-light fa-14'>HSN/SAC</td>\r\n                                            <td className='border bg-light fa-14 text-end'>Quantity</td>\r\n                                            <td className='border bg-light fa-14 text-end'>Rate</td>\r\n                                            <td className='border bg-light fa-14 text-end'>\r\n                                                <p className='m-2 '>Rate</p>\r\n                                                <p className='m-0 '>\r\n                                                    {isEqualNumber(orderDetails.GST_Inclusive, 1) && '(Incl. of Tax)'}\r\n                                                    {isEqualNumber(orderDetails.GST_Inclusive, 2) && '(Tax not applicable)'}\r\n                                                    {isEqualNumber(orderDetails.GST_Inclusive, 0) && '(Excl. of Tax)'}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className='border bg-light fa-14 text-end'>Amount</td>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n                                        {(() => {\r\n                                            const chunkSize = 15;\r\n                                            const productChunks = [];\r\n                                            for (let i = 0; i < includedProducts.length; i += chunkSize) {\r\n                                                productChunks.push(includedProducts.slice(i, i + chunkSize));\r\n                                            }\r\n\r\n                                            return productChunks.map((chunk, chunkIndex) => (\r\n                                                <React.Fragment key={chunkIndex}>\r\n                                                    {chunk.map((o, i) => {\r\n                                                        const globalIndex = chunkIndex * chunkSize + i;\r\n                                                        const percentage = (IS_IGST ? o?.Igst_P : o?.Cgst + o?.Sgst) ?? 0;\r\n                                                        const quantity = Number(o?.Bill_Qty || 0);\r\n                                                        const Item_Rate = Number(o?.Item_Rate || 0);\r\n                                                        const itemTax = taxCalc(orderDetails.GST_Inclusive, Item_Rate, percentage);\r\n\r\n                                                        return (\r\n                                                            <tr key={globalIndex}>\r\n                                                                <td className='border fa-13'>{globalIndex + 1}</td>\r\n                                                                <td className='border fa-13'>{o?.Product_Name}</td>\r\n                                                                <td className='border fa-13'>{o?.HSN_Code}</td>\r\n                                                                <td className='border fa-13 text-end'>\r\n                                                                    {NumberFormat(quantity)}\r\n                                                                    {o?.UOM && ' (' + o?.UOM + ') '}\r\n                                                                </td>\r\n                                                                <td className='border fa-13 text-end'>\r\n                                                                    {NumberFormat(isEqualNumber(\r\n                                                                        orderDetails.GST_Inclusive, 1\r\n                                                                    ) ? (Item_Rate - itemTax) : Item_Rate)}\r\n                                                                </td>\r\n                                                                <td className='border fa-13 text-end'>\r\n                                                                    {NumberFormat(isEqualNumber(\r\n                                                                        orderDetails.GST_Inclusive, 1\r\n                                                                    ) ? Item_Rate : (Item_Rate + itemTax))}\r\n                                                                </td>\r\n                                                                <td className='border fa-13 text-end'>\r\n                                                                    {NumberFormat(o?.Taxable_Amount)}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        );\r\n                                                    })}\r\n\r\n                                                    {/* Summary section only after last chunk */}\r\n                                                    {chunkIndex === productChunks.length - 1 && (\r\n                                                        <>\r\n                                                            <tr>\r\n                                                                <td\r\n                                                                    className=\"border p-2\"\r\n                                                                    rowSpan={IS_IGST ? 4 : 5}\r\n                                                                    colSpan={4}\r\n                                                                >\r\n                                                                    <p className='m-0 mx-2 p-2 fa-13 fw-bold'>Amount Chargeable (in words):</p>\r\n                                                                    <p className='m-0 fa-13 fw-bold'>&emsp; INR {numberToWords(parseInt(orderDetails?.Total_Invoice_value))} Only.</p>\r\n                                                                </td>\r\n                                                                <td className=\"border p-2 fa-14\" colSpan={2}>Total Taxable Amount</td>\r\n                                                                <td className=\"border p-2 text-end fa-14\">\r\n                                                                    {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                                                </td>\r\n                                                            </tr>\r\n\r\n                                                            {!IS_IGST ? (\r\n                                                                <>\r\n                                                                    <tr>\r\n                                                                        <td className=\"border p-2 fa-14\" colSpan={2}>CGST</td>\r\n                                                                        <td className=\"border p-2 text-end fa-14\">\r\n                                                                            {NumberFormat(orderDetails?.CSGT_Total)}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td className=\"border p-2 fa-14\" colSpan={2}>SGST</td>\r\n                                                                        <td className=\"border p-2 fa-14 text-end\">\r\n                                                                            {NumberFormat(orderDetails?.SGST_Total)}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </>\r\n                                                            ) : (\r\n                                                                <tr>\r\n                                                                    <td className=\"border p-2 fa-14\" colSpan={2}>IGST</td>\r\n                                                                    <td className=\"border p-2 fa-14 text-end\">\r\n                                                                        {NumberFormat(orderDetails.IGST_Total)}\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            )}\r\n\r\n                                                            <tr>\r\n                                                                <td className=\"border p-2 fa-14\" colSpan={2}>Round Off</td>\r\n                                                                <td className=\"border p-2 fa-14 text-end\">\r\n                                                                    {NumberFormat(orderDetails?.Round_off)}\r\n                                                                </td>\r\n                                                            </tr>\r\n\r\n                                                            <tr>\r\n                                                                <td className=\"border p-2 fa-14\" colSpan={2}>Total</td>\r\n                                                                <td className=\"border p-2 fa-14 text-end fw-bold\">\r\n                                                                    {NumberFormat(orderDetails?.Total_Invoice_value)}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </>\r\n                                                    )}\r\n\r\n                                                    {/* Page break after each chunk except last */}\r\n                                                    {chunkIndex < productChunks.length - 1 && (\r\n                                                        <tr style={{\r\n                                                            pageBreakAfter: 'always',\r\n                                                            height: '0',\r\n                                                            visibility: 'hidden',\r\n                                                            border: 'none'\r\n                                                        }}>\r\n                                                            <td colSpan=\"7\" style={{ border: 'none' }}></td>\r\n                                                        </tr>\r\n                                                    )}\r\n                                                </React.Fragment>\r\n                                            ));\r\n                                        })()}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Tax Table */}\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td className=\"border bg-light fa-14 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>HSN / SAC</td>\r\n                                    <td className=\"border bg-light fa-14 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>Taxable Value</td>\r\n                                    {isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                        <td className=\"border bg-light fa-14 text-center\" colSpan={2}>IGST Tax</td>\r\n                                    ) : (\r\n                                        <>\r\n                                            <td className=\"border bg-light fa-14 text-center\" colSpan={2}>Central Tax</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\" colSpan={2}>State Tax</td>\r\n                                        </>\r\n                                    )}\r\n                                    <td className=\"border bg-light fa-14 text-center\">Total</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    {isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                        <>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                        </>\r\n                                    )}\r\n                                    <td className=\"border bg-light fa-14 text-center\">Tax Amount</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {TaxData.map((o, i) => (\r\n                                    <tr key={i}>\r\n                                        <td className=\"border fa-13 text-end\">{o?.hsnCode}</td>\r\n                                        <td className=\"border fa-13 text-end\">{NumberFormat(o?.taxableValue)}</td>\r\n                                        {orderDetails.IS_IGST ? (\r\n                                            <>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.igstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.igst)}</td>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.cgstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.cgst)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.sgstPercentage)}</td>\r\n                                                <td className=\"border fa-13 text-end\">{NumberFormat(o?.sgst)}</td>\r\n                                            </>\r\n                                        )}\r\n                                        <td className=\"border fa-13 text-end\">\r\n                                            {NumberFormat(o?.totalTax)}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                <tr>\r\n                                    <td className=\"border fa-13 text-end\">Total</td>\r\n                                    <td className=\"border fa-13 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.taxableValue), 0))}\r\n                                    </td>\r\n                                    {orderDetails.IS_IGST ? (\r\n                                        <>\r\n                                            <td className=\"border fa-13 text-end\"></td>\r\n                                            <td className=\"border fa-13 text-end fw-bold\">\r\n                                                {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.igst), 0))}\r\n                                            </td>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <td className=\"border fa-13 text-end\"></td>\r\n                                            <td className=\"border fa-13 text-end fw-bold\">\r\n                                                {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.cgst), 0))}\r\n                                            </td>\r\n                                            <td className=\"border fa-13 text-end\"></td>\r\n                                            <td className=\"border fa-13 text-end fw-bold\">\r\n                                                {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.sgst), 0))}\r\n                                            </td>\r\n                                        </>\r\n                                    )}\r\n                                    <td className=\"border fa-13 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0))}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td\r\n                                        colSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 5 : 7}\r\n                                        className='border fa-13 fw-bold'\r\n                                    >\r\n                                        Tax Amount (in words) : INR &nbsp;\r\n                                        {numberToWords(\r\n                                            parseInt(\r\n                                                TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0)\r\n                                            )\r\n                                        )} only.\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p>This is a Computer Generated Invoice</p>\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', px: 2 }}>\r\n                    <div className=\"form-check form-switch\">\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id=\"pageSizeSwitch\"\r\n                            checked={pageSize === 'A4'}\r\n                            onChange={handleToggle}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"pageSizeSwitch\">\r\n                            {pageSize} selected\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\r\n                        <Button\r\n                            startIcon={<Close />}\r\n                            variant=\"outlined\"\r\n                            color=\"error\"\r\n                            onClick={handleClose}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                        {download && (\r\n                            <Button\r\n                                startIcon={<Download />}\r\n                                variant=\"outlined\"\r\n                                onClick={handlePrint}\r\n                            >\r\n                                Download\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvoiceBillTemplate;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n    Dialog,\r\n    Tooltip,\r\n    IconButton,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Switch,\r\n} from \"@mui/material\";\r\n// import '../common.css'\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport {\r\n    getPreviousDate,\r\n    isEqualNumber,\r\n    ISOString,\r\n    isValidObject,\r\n} from \"../../../Components/functions\";\r\n// import DeliveryInvoiceTemplate from \"../SalesReportComponent/newInvoiceTemplate\";\r\nimport { Edit, FilterAlt, Delete, Visibility } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\n// import SalesDelivery from \"./SalesReportComponent/SalesDeliveryConvert\"\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NewDeliveryOrder from \"./NewDeliveryOrder\";\r\nimport DeliveryInvoiceTemplate from \"../SalesReportComponent/previewInvoice\";\r\nconst DeliveryDetailsList = ({\r\n    loadingOn,\r\n    loadingOff,\r\n    onToggle,\r\n    reload,\r\n    triggerReload,\r\n}) => {\r\n    const storage = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [screen, setScreen] = useState(true);\r\n    const [orderInfo, setOrderInfo] = useState({});\r\n    const [viewOrder, setViewOrder] = useState({});\r\n\r\n    const [deleteConfirm, setDeleteConfirm] = useState(false);\r\n    const [itemTodelete, setItemToDelete] = useState({});\r\n    const [isDeliveryDetailsVisible, setIsDeliveryDetailsVisible] =\r\n        useState(false);\r\n    const [deliveryPerson, setDeliveryPerson] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: getPreviousDate(7),\r\n        Todate: ISOString(),\r\n        Retailer_Id: \"\",\r\n        RetailerGet: \"ALL\",\r\n        Created_by: \"\",\r\n        CreatedByGet: \"ALL\",\r\n        Delivery_Person_Id: \"\",\r\n        Delivery_Person_Name: \"ALL\",\r\n        Sales_Person_Id: \"\",\r\n        Sales_Person_Name: \"ALL\",\r\n        Cancel_status: 0,\r\n    });\r\n\r\n    const [pageLoad, setPageLoad] = useState(false);\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `delivery/deliveryOrderList?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Sales_Person_Id=${filters?.Sales_Person_Id}&Delivery_Person_Id=${filters?.Delivery_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setSaleOrders(data?.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n    }, [\r\n        filters.Fromdate,\r\n        filters?.Todate,\r\n        filters?.Retailer_Id,\r\n        filters?.Delivery_Person_Id,\r\n        filters?.Created_by,\r\n        filters?.Cancel_status,\r\n        filters?.Sales_Person_Id,\r\n        reload,\r\n        pageLoad,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `dataEntry/costCenter`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setDeliveryPerson(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setRetailers(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setSalePerson(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/user/dropDown?Company_id=${storage?.Company_id}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setUsers(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n    }, []);\r\n    const openDeleteDialog = (itemData) => {\r\n        setItemToDelete({\r\n            So_No: itemData.So_No,\r\n            Do_Id: itemData.Do_Id,\r\n        });\r\n        setDeleteConfirm(true);\r\n    };\r\n\r\n    const saleOrderColumn = [\r\n        {\r\n            Field_Name: \"Do_Id\",\r\n            ColumnHeader: \"Delivery ID\",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: \"So_No\",\r\n            ColumnHeader: \"Sale Order ID\",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n        },\r\n\r\n        {\r\n            Field_Name: \"Do_Inv_No\",\r\n            ColumnHeader: \"Do_Inv_No \",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"Retailer_Name\",\r\n            ColumnHeader: \"Customer\",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: \"SalesDate\",\r\n            ColumnHeader: \"Sale Order Date\",\r\n            Fied_Data: \"date\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"Do_Date\",\r\n            ColumnHeader: \"Delivery Date\",\r\n            Fied_Data: \"date\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n\r\n        {\r\n            Field_Name: \"Total_Before_Tax\",\r\n            ColumnHeader: \"Before Tax\",\r\n            Fied_Data: \"number\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"Total_Tax\",\r\n            ColumnHeader: \"Tax\",\r\n            Fied_Data: \"number\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"Total_Invoice_value\",\r\n            ColumnHeader: \"Invoice Value\",\r\n            Fied_Data: \"number\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n        {\r\n            Field_Name: \"DeliveryStatusName\",\r\n            ColumnHeader: \"Delivery Status \",\r\n            Fied_Data: \"string\",\r\n            isVisible: 1,\r\n            align: \"center\",\r\n        },\r\n\r\n        {\r\n            Field_Name: \"Action\",\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return (\r\n                    <>\r\n                        <Tooltip title=\"View Order\">\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    setViewOrder({\r\n                                        orderDetails: row,\r\n                                        orderProducts: row?.Products_List ? row?.Products_List : [],\r\n                                    });\r\n                                }}\r\n                                onFocus={(e) => {\r\n                                    e.target.blur();\r\n                                }}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                            >\r\n                                <Visibility className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Edit\">\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    switchScreen();\r\n                                    setOrderInfo({ ...row, isEdit: true });\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <Edit className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\">\r\n                            <IconButton onClick={() => openDeleteDialog(row)} size=\"small\">\r\n                                <Delete className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n        return (\r\n            <>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Branch</td>\r\n                            <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Delivery Person</td>\r\n                            <td className=\"border p-2\">{row.Delivery_Person_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Round off</td>\r\n                            <td className=\"border p-2\">{row.Round_off}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.GST_Inclusive, 1) && \"Inclusive\"}\r\n                                {isEqualNumber(row.GST_Inclusive, 0) && \"Exclusive\"}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.IS_IGST, 1) && \"IGST\"}\r\n                                {isEqualNumber(row.IS_IGST, 0) && \"GST\"}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Narration</td>\r\n                            <td className=\"border p-2\" colSpan={5}>\r\n                                {row.Narration}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const switchScreen = () => {\r\n        setScreen(!screen);\r\n        setOrderInfo({});\r\n        setIsDeliveryDetailsVisible(!isDeliveryDetailsVisible);\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setDialog({\r\n            ...dialog,\r\n            filters: false,\r\n            orderDetails: false,\r\n        });\r\n        setOrderInfo({});\r\n        setDeleteConfirm(false);\r\n    };\r\n\r\n    const confirmData = async () => {\r\n        if (!itemTodelete) return;\r\n\r\n        try {\r\n            const data = await fetchLink({\r\n                address: \"delivery/deliveryOrder\",\r\n                method: \"DELETE\",\r\n                bodyData: {\r\n                    Order_Id: itemTodelete.So_No,\r\n                    Do_Id: itemTodelete.Do_Id,\r\n                },\r\n            });\r\n\r\n            if (data.success) {\r\n                toast.success(\"Delivery Deleted successfully\");\r\n\r\n                triggerReload();\r\n                setDeleteConfirm(false);\r\n\r\n                setPageLoad((prev) => !prev);\r\n                setIsDeliveryDetailsVisible(false);\r\n            } else {\r\n                toast.error(data?.message || \"Deletion failed\");\r\n            }\r\n            // throw error\r\n        } catch (error) {\r\n            toast.error(\"An error occurred while deleting.\", error);\r\n        } finally {\r\n            setDeleteConfirm(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                    <h6 className=\"fa-18 m-0 p-0\">\r\n                        {screen\r\n                            ? \"Delivery Orders\"\r\n                            : isValidObject(orderInfo)\r\n                                ? \"Modify Delivery Order\"\r\n                                : \"\"}\r\n                    </h6>\r\n                    <span>\r\n                        {screen && (\r\n                            <Tooltip title=\"Filters\">\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n\r\n                        {screen && (\r\n                            <Switch\r\n                                checked={!screen}\r\n                                onChange={onToggle}\r\n                                label={\"Delivery Details\"}\r\n                                inputProps={{ \"aria-label\": \"controlled\" }}\r\n                            />\r\n                        )}\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent className=\"p-0 \">\r\n                    {screen ? (\r\n                        <FilterableTable\r\n                            dataArray={saleOrders}\r\n                            columns={saleOrderColumn}\r\n                            // EnableSerialNumber={true}\r\n                            isExpendable={true}\r\n                            tableMaxHeight={550}\r\n                            expandableComp={ExpendableComponent}\r\n                        />\r\n                    ) : (\r\n                        <NewDeliveryOrder\r\n                            editValues={orderInfo}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            reload={() => {\r\n                                setScreen((pre) => !pre);\r\n                            }}\r\n                            switchScreen={switchScreen}\r\n                        />\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <DeliveryInvoiceTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={\"Delivery Order\"}\r\n                />\r\n            )}\r\n\r\n            <Dialog open={deleteConfirm} fullWidth maxWidth=\"sm\">\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <DialogContent>\r\n                    <div>Are You Want to Delete Delivery Details</div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button onClick={confirmData}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: filters?.Retailer_Id,\r\n                                                label: filters?.RetailerGet,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setFilters({\r\n                                                    ...filters,\r\n                                                    Retailer_Id: e.value,\r\n                                                    RetailerGet: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...retailers.map((obj) => ({\r\n                                                    value: obj?.Retailer_Id,\r\n                                                    label: obj?.Retailer_Name,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Delivery Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: filters?.Delivery_Person_Id,\r\n                                                label: filters?.Delivery_Person_Name,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setFilters({\r\n                                                    ...filters,\r\n                                                    Delivery_Person_Id: e.value,\r\n                                                    Delivery_Person_Name: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...deliveryPerson.map((obj) => ({\r\n                                                    value: obj?.User_Id,\r\n                                                    label: obj?.UserGet,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                {/* <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Sales Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: filters?.Sales_Person_Id,\r\n                                                label: filters?.Sales_Person_Name,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setFilters({\r\n                                                    ...filters,\r\n                                                    Sales_Person_Id: e.value,\r\n                                                    Sales_Person_Name: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...salesPerson.map((obj) => ({\r\n                                                    value: obj?.UserId,\r\n                                                    label: obj?.Name,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr> */}\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Sales Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: filters?.Sales_Person_Id,\r\n                                                label: filters?.Sales_Person_Name,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setFilters({\r\n                                                    ...filters,\r\n                                                    Sales_Person_Id: e.value,\r\n                                                    Sales_Person_Name: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...salesPerson.map((obj) => ({\r\n                                                    value: obj?.UserId,\r\n                                                    label: obj?.Name,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={{\r\n                                                ...customSelectStyles,\r\n                                                menu: (provided) => ({\r\n                                                    ...provided,\r\n                                                    zIndex: 9999,\r\n                                                }),\r\n                                            }}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Sales Person Name\"}\r\n                                            menuPortalTarget={document.body}\r\n                                            menuPosition=\"fixed\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{\r\n                                                value: filters?.Created_by,\r\n                                                label: filters?.CreatedByGet,\r\n                                            }}\r\n                                            onChange={(e) =>\r\n                                                setFilters({\r\n                                                    ...filters,\r\n                                                    Created_by: e.value,\r\n                                                    CreatedByGet: e.label,\r\n                                                })\r\n                                            }\r\n                                            options={[\r\n                                                { value: \"\", label: \"ALL\" },\r\n                                                ...users.map((obj) => ({\r\n                                                    value: obj?.UserId,\r\n                                                    label: obj?.Name,\r\n                                                })),\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={(e) =>\r\n                                                setFilters({ ...filters, Fromdate: e.target.value })\r\n                                            }\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: \"middle\" }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={(e) =>\r\n                                                setFilters({ ...filters, Todate: e.target.value })\r\n                                            }\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DeliveryDetailsList;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    IconButton,\r\n} from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    isEqualNumber,\r\n    isGraterNumber,\r\n    isValidObject,\r\n    ISOString,\r\n    getUniqueData,\r\n    Multiplication,\r\n    Division,\r\n    NumberFormat,\r\n    numberToWords,\r\n    Addition,\r\n} from \"../../../Components/functions\";\r\nimport { Add, Clear, ClearAll, Delete, Edit, Save } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\n\r\n\r\nconst findProductDetails = (arr = [], productid) =>\r\n    arr.find((obj) => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst NewDeliveryOrder = ({\r\n    editValues,\r\n    loadingOn,\r\n    loadingOff,\r\n    reload,\r\n    switchScreen,\r\n    editOn,\r\n}) => {\r\n    const storage = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [baseData, setBaseData] = useState({\r\n        products: [],\r\n        branch: [],\r\n        retailers: [],\r\n        voucherType: [],\r\n        uom: [],\r\n        staff: [],\r\n        staffType: [],\r\n        salesPerson: [],\r\n        brand: [],\r\n    });\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [productBrand, setProductBrand] = useState([]);\r\n    const [productUOM, setProductUOM] = useState([]);\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const [voucherType, setVoucherType] = useState([]);\r\n    const [branch, setBranch] = useState([]);\r\n\r\n    const initialValue = {\r\n        Company_Id: storage?.Company_id,\r\n        Do_Date: ISOString(),\r\n        VoucherType: \"\",\r\n        Retailer_Id: \"\",\r\n        Retailer_Name: \"Select\",\r\n        Delivery_Status: 1,\r\n        Delivery_Person_Id: \"\",\r\n        Payment_Ref_No: \"\",\r\n        Delivery_Person_Name: \"\",\r\n        Payment_Mode: 0,\r\n        Payment_Status: 0,\r\n        Branch_Id: storage?.BranchId,\r\n        Narration: \"\",\r\n        Created_by: storage?.UserId,\r\n        Product_Array: [],\r\n        So_No: editValues?.So_Id,\r\n        GST_Inclusive: 1,\r\n        IS_IGST: 0,\r\n    };\r\n\r\n    const productInitialDetails = {\r\n        Item_Id: \"\",\r\n        ItemName: \"Search Item\",\r\n        Bill_Qty: 0,\r\n        Item_Rate: 0,\r\n        UOM: \"\",\r\n        Units: \"\",\r\n        Product: {},\r\n        Group: \"Search Group\",\r\n        GroupID: \"\",\r\n        Brand: \"Search Brand\",\r\n        BrandID: \"\",\r\n        Amount: 0,\r\n    };\r\n\r\n    const [orderDetails, setOrderDetails] = useState(initialValue);\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n    const [productDetails, setProductDetails] = useState(productInitialDetails);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [addProductDialog, setAddProductDialog] = useState(false);\r\n\r\n    // const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    // const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n    const deliveryPerson = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchLocation = async () => {\r\n            try {\r\n                const position = await new Promise((resolve, reject) => {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n                });\r\n                const { latitude, longitude } = position.coords;\r\n\r\n                setOrderDetails((pre) => ({\r\n                    ...pre,\r\n                    Delivery_Latitude: latitude,\r\n                    Delivery_Longitude: longitude,\r\n                }));\r\n            } catch (error) {\r\n                toast.warn(\"Unable to fetch location. Allow location access.\");\r\n            }\r\n        };\r\n\r\n        if (isValidObject(editValues)) {\r\n            setOrderDetails((pre) => ({\r\n                ...pre,\r\n                Do_Id: editValues?.Do_Id,\r\n                Do_Date: editValues?.Do_Date ?? ISOString(),\r\n                VoucherType: editValues?.Voucher_Type,\r\n                Retailer_Id: editValues?.Retailer_Id,\r\n                Retailer_Name: editValues?.Retailer_Name,\r\n                Delivery_Status: editValues?.Delivery_Status,\r\n                Payment_Status: editValues?.Payment_Status,\r\n                Payment_Mode: editValues?.Payment_Mode,\r\n                Branch_Id: editValues?.Branch_Id,\r\n                Narration: editValues?.Narration,\r\n                Created_by: editValues?.Created_by,\r\n                Payment_Ref_No: editValues?.Payment_Ref_No,\r\n                So_No: editValues?.So_Id,\r\n                GST_Inclusive: editValues?.GST_Inclusive,\r\n                IS_IGST: editValues?.IS_IGST,\r\n            }));\r\n            setOrderProducts(\r\n                editValues?.Products_List?.map((pro) => ({\r\n                    ...pro,\r\n                    Item_Id: pro.Item_Id ?? \"\",\r\n                    ItemName: pro?.Product_Name ?? \"\",\r\n                    Bill_Qty: pro?.Bill_Qty ?? 0,\r\n                    Item_Rate: pro?.Item_Rate ?? 0,\r\n                    UOM: pro?.Unit_Id ?? \"\",\r\n                    Units: pro?.Units ?? \"\",\r\n                    Product: {\r\n                        ...pro,\r\n                        Cgst_P: Number(findProductDetails(products, pro.Item_Id)?.Cgst_P) ?? 0,\r\n                        Sgst_P: Number(findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0,\r\n                        Igst_P: Number(findProductDetails(products, pro.Item_Id)?.Igst_P) ?? 0,\r\n                        Gst_P: Addition(\r\n                            findProductDetails(products, pro.Item_Id)?.Cgst_P,\r\n                            findProductDetails(products, pro.Item_Id)?.Sgst_P\r\n                        ) ?? 0,\r\n                    },\r\n                    Group: \"Search Group\",\r\n                    GroupID: \"\",\r\n                    Brand: \"Search Brand\",\r\n                    BrandID: \"\",\r\n                    Amount: pro?.Amount ?? 0,\r\n                }))\r\n            );\r\n            setIsEdit(true);\r\n            if (!editValues?.Latitude || !editValues?.Longitude) {\r\n                fetchLocation();\r\n            }\r\n        } else {\r\n            setOrderDetails(initialValue);\r\n            setOrderProducts([]);\r\n            setIsEdit(false);\r\n        }\r\n    }, [editValues, products]);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setRetailers(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/uom`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setProductUOM(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/products`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setProducts(data.data);\r\n                    const uniqueBrand = getUniqueData(data.data, \"Brand\", [\"Brand_Name\"]);\r\n                    setProductBrand(uniqueBrand);\r\n                } else {\r\n                    setProducts([]);\r\n                    setProductBrand([]);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setCompanyInfo(data?.data[0] ? data?.data[0] : {});\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `purchase/voucherType`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setVoucherType(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n\r\n        fetchLink({\r\n            address: `masters/branch/dropDown`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setBranch(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n    }, [storage?.Company_id]);\r\n\r\n    const handleProductInputChange = (productId, value, rate, obj, UOM_Id, Units) => {\r\n        const productMaster = findProductDetails(baseData.products, productId);\r\n        const gstPercentage = orderDetails.IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n        const isTaxable = gstPercentage > 0 && !isNotTaxableBill;\r\n        \r\n        const amount = Multiplication(value, rate);\r\n        const gstInfo = calculateGSTDetails(\r\n            amount,\r\n            gstPercentage,\r\n            isInclusive ? \"remove\" : \"add\"\r\n        );\r\n\r\n        const productIndex = orderProducts.findIndex(item => \r\n            isEqualNumber(item.Item_Id, productId)\r\n        );\r\n\r\n        const productData = {\r\n            Item_Id: productId,\r\n            Bill_Qty: Number(value),\r\n            Item_Rate: Number(rate),\r\n            UOM: UOM_Id,\r\n            Units: Units,\r\n            Amount: amount,\r\n            Product: obj,\r\n            Taxable_Amount: isTaxable ? gstInfo.without_tax : amount,\r\n            Cgst_Amo: isTaxable && !orderDetails.IS_IGST ? gstInfo.cgst_amount : 0,\r\n            Sgst_Amo: isTaxable && !orderDetails.IS_IGST ? gstInfo.sgst_amount : 0,\r\n            Igst_Amo: isTaxable && orderDetails.IS_IGST ? gstInfo.igst_amount : 0,\r\n            Final_Amo: isTaxable ? gstInfo.with_tax : amount,\r\n            Tax_Rate: gstPercentage,\r\n            Cgst: !orderDetails.IS_IGST ? gstInfo.cgst_per : 0,\r\n            Sgst: !orderDetails.IS_IGST ? gstInfo.sgst_per : 0,\r\n            Igst: orderDetails.IS_IGST ? gstInfo.igst_per : 0,\r\n            Taxble: isTaxable ? 1 : 0\r\n        };\r\n\r\n        if (productIndex !== -1) {\r\n            setOrderProducts(prev => [\r\n                ...prev.slice(0, productIndex),\r\n                productData,\r\n                ...prev.slice(productIndex + 1)\r\n            ]);\r\n        } else {\r\n            setOrderProducts(prev => [...prev, productData]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOrderProducts(pre => pre.map(product => {\r\n            const productMaster = findProductDetails(baseData.products, product.Item_Id);\r\n            const gstPercentage = orderDetails.IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n            const isTaxable = gstPercentage > 0 && !isNotTaxableBill;\r\n            \r\n            const amount = Multiplication(product.Item_Rate, product.Bill_Qty);\r\n            const gstInfo = calculateGSTDetails(\r\n                amount,\r\n                gstPercentage,\r\n                isInclusive ? \"remove\" : \"add\"\r\n            );\r\n\r\n            return {\r\n                ...product,\r\n                Amount: amount,\r\n                Taxable_Amount: isTaxable ? gstInfo.without_tax : amount,\r\n                Cgst_Amo: isTaxable && !orderDetails.IS_IGST ? gstInfo.cgst_amount : 0,\r\n                Sgst_Amo: isTaxable && !orderDetails.IS_IGST ? gstInfo.sgst_amount : 0,\r\n                Igst_Amo: isTaxable && orderDetails.IS_IGST ? gstInfo.igst_amount : 0,\r\n                Final_Amo: isTaxable ? gstInfo.with_tax : amount,\r\n                Tax_Rate: gstPercentage,\r\n                Cgst: !orderDetails.IS_IGST ? gstInfo.cgst_per : 0,\r\n                Sgst: !orderDetails.IS_IGST ? gstInfo.sgst_per : 0,\r\n                Igst: orderDetails.IS_IGST ? gstInfo.igst_per : 0,\r\n                Taxble: isTaxable ? 1 : 0\r\n            };\r\n        }));\r\n    }, [orderDetails.GST_Inclusive, orderDetails.IS_IGST]);\r\n\r\n    const calculateTotals = (orderProducts) => {\r\n        return orderProducts.reduce((acc, product) => {\r\n            return {\r\n                taxableAmount: acc.taxableAmount + (product.Taxable_Amount || 0),\r\n                cgst: acc.cgst + (product.Cgst_Amo || 0),\r\n                sgst: acc.sgst + (product.Sgst_Amo || 0),\r\n                igst: acc.igst + (product.Igst_Amo || 0),\r\n                finalAmount: acc.finalAmount + (product.Final_Amo || 0)\r\n            };\r\n        }, { taxableAmount: 0, cgst: 0, sgst: 0, igst: 0, finalAmount: 0 });\r\n    };\r\n\r\n    const totals = calculateTotals(orderProducts);\r\n    const roundOff = Math.round(totals.finalAmount) - totals.finalAmount;\r\n\r\n    const postSaleOrder = () => {\r\n        if (orderProducts?.length > 0 && orderDetails?.Retailer_Id) {\r\n            loadingOn();\r\n\r\n            fetchLink({\r\n                address: `delivery/deliveryOrder`,\r\n                method: isEdit && !editOn ? \"PUT\" : \"POST\",\r\n                bodyData: {\r\n                    ...orderDetails,\r\n                    Product_Array: orderProducts.filter((o) =>\r\n                        isGraterNumber(o?.Bill_Qty, 0)\r\n                    ),\r\n                    Delivery_Person_Id:\r\n                        deliveryPerson ?? Number(orderDetails?.Delivery_Person_Id) ?? 0,\r\n                    Payment_Status: orderDetails?.Payment_Status\r\n                        ? Number(orderDetails?.Payment_Status)\r\n                        : 1,\r\n                    Payment_Ref_No: orderDetails?.Payment_Ref_No,\r\n                    Delivery_Status: orderDetails?.Delivery_Status\r\n                        ? Number(orderDetails?.Delivery_Status)\r\n                        : 1,\r\n                    Payment_Mode: orderDetails?.Payment_Mode\r\n                        ? Number(orderDetails?.Payment_Mode)\r\n                        : 1,\r\n                },\r\n            })\r\n                .then((data) => {\r\n                    if (data.success) {\r\n                        toast.success(data?.message);\r\n                        setOrderDetails(initialValue);\r\n                        setOrderProducts([]);\r\n                        reload();\r\n                    } else {\r\n                        toast.error(data?.message);\r\n                    }\r\n                })\r\n                .catch((e) => console.error(e))\r\n                .finally(() => loadingOff());\r\n        } else {\r\n            if (orderProducts.length <= 0) {\r\n                return toast.error(\"Enter any one product quantity\");\r\n            }\r\n            if (!orderDetails?.Retailer_Id) {\r\n                toast.error(\"Select Retailer\");\r\n                return toast.error(\"Select Retailer\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const closeAddProduct = () => {\r\n        setAddProductDialog(false);\r\n        setProductDetails(productInitialDetails);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {editOn && (\r\n                <>\r\n                    <h6 className=\"fa-18 m-0 p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                        Create Delivery Order\r\n                    </h6>\r\n                </>\r\n            )}\r\n\r\n            <div className=\"p-3 pt-0\">\r\n                {/* Company Info */}\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">From:</h5>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-md-7\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\" colSpan={2}>\r\n                                            {companyInfo?.Company_Name}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            {companyInfo?.Company_Address}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            {companyInfo?.Telephone_Number}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-5\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Date:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={\r\n                                                    orderDetails?.Do_Date\r\n                                                        ? ISOString(orderDetails?.Do_Date)\r\n                                                        : \"\"\r\n                                                }\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Do_Date: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                className=\"cus-inpt p-1\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Invoice Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        GST_Inclusive: Number(e.target.value),\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.GST_Inclusive}\r\n                                            >\r\n                                                <option value={1}>Inclusive Tax</option>\r\n                                                <option value={0}>Exclusive Tax</option>\r\n                                                <option value={2}>Not Taxable</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Tax Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        IS_IGST: Number(e.target.value),\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.IS_IGST}\r\n                                            >\r\n                                                <option value=\"0\">GST</option>\r\n                                                <option value=\"1\">IGST</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            Voucher Type <span style={{ color: \"red\" }}>*</span>\r\n                                        </td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1 \"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        VoucherType: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.VoucherType}\r\n                                            >\r\n                                                <option value=\"\" disabled>\r\n                                                    select voucher\r\n                                                </option>\r\n                                                {voucherType.map((vou, ind) => (\r\n                                                    <option value={vou.Vocher_Type_Id} key={ind}>\r\n                                                        {vou.Voucher_Type}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            Branch <span style={{ color: \"red\" }}>*</span>\r\n                                        </td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Branch_Id: Number(e.target.value),\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.Branch_Id}\r\n                                            >\r\n                                                <option value=\"\" disabled>\r\n                                                    select Branch\r\n                                                </option>\r\n                                                {branch.map((branch, ind) => (\r\n                                                    <option value={branch.BranchId} key={ind}>\r\n                                                        {branch.BranchName}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Customer Info */}\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">To:</h5>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Retailer Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{\r\n                                                    value: orderDetails?.Retailer_Id,\r\n                                                    label: orderDetails?.Retailer_Name,\r\n                                                }}\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Retailer_Id: e.value,\r\n                                                        Retailer_Name: e.label,\r\n                                                    })\r\n                                                }\r\n                                                options={[\r\n                                                    { value: \"\", label: \"select\", isDisabled: true },\r\n                                                    ...retailers.map((obj) => ({\r\n                                                        value: obj?.Retailer_Id,\r\n                                                        label: obj?.Retailer_Name,\r\n                                                    })),\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Retailer Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{storage.Name}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{ }</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Delivery_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Delivery_Status: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                value={\r\n                                                    orderDetails.Delivery_Status\r\n                                                        ? orderDetails.Delivery_Status\r\n                                                        : 1\r\n                                                }\r\n                                            >\r\n                                                <option value={5}>Pending</option>\r\n                                                <option value={7}>Delivered</option>\r\n                                                <option value={6}>Return</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Mode:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Payment_Mode: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.Payment_Mode || 0}\r\n                                            >\r\n                                                <option value={0}></option>\r\n                                                <option value={1}>Cash</option>\r\n                                                <option value={3}>QR-Pay</option>\r\n                                                <option value={2}>G-Pay</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Q-Pay:</td>\r\n                                        <td className=\"border-0 bg-light\">{10}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Frequency Days:</td>\r\n                                        <td className=\"border-0 bg-light\">{20}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Payment_Status: Number(e.target.value),\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails.Payment_Status}\r\n                                            >\r\n                                                <option value={1}>Pending</option>\r\n                                                <option value={3}>Complete</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment Reference No:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={(e) =>\r\n                                                    setOrderDetails({\r\n                                                        ...orderDetails,\r\n                                                        Payment_Ref_No: e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                value={orderDetails?.Payment_Ref_No}\r\n                                                placeholder=\"Enter Payment Reference Number\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Actions */}\r\n                <div className=\"d-flex align-items-end justify-content-end flex-wrap mb-3\">\r\n                    <Button\r\n                        onClick={() => setAddProductDialog(true)}\r\n                        sx={{ ml: 1 }}\r\n                        variant=\"outlined\"\r\n                        startIcon={<Add />}\r\n                    >\r\n                        Add Product\r\n                    </Button>\r\n                </div>\r\n                <FilterableTable\r\n                    dataArray={orderProducts}\r\n                    columns={[\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.Product_Name,\r\n                            ColumnHeader: \"Product\",\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.HSN_Code,\r\n                            ColumnHeader: \"HSN Code\",\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Bill_Qty + (row?.Units ?? \"\"),\r\n                            ColumnHeader: \"Quantity\",\r\n                            isVisible: 1,\r\n                            align: \"center\",\r\n                        },\r\n                        {\r\n                            Field_Name: \"Item_Rate\",\r\n                            ColumnHeader: \"Rate\",\r\n                            Fied_Data: \"number\",\r\n                            isVisible: 1,\r\n                            align: \"right\",\r\n                        },\r\n                        {\r\n                            ColumnHeader: \"Taxable Amount\",\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return NumberFormat(row.Taxable_Amount || 0);\r\n                            },\r\n                            isVisible: 1,\r\n                            align: \"right\",\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const taxAmount = Addition(\r\n                                    row.Cgst_Amo || 0,\r\n                                    row.Sgst_Amo || 0,\r\n                                    row.Igst_Amo || 0\r\n                                );\r\n                                return `${NumberFormat(taxAmount)} (${row.Product?.Tax_Rate || 0}%)`;\r\n                            },\r\n                            ColumnHeader: \"Tax\",\r\n                            isVisible: 1,\r\n                            align: \"right\",\r\n                        },\r\n                        {\r\n                            ColumnHeader: \"Amount\",\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => NumberFormat(row.Final_Amo || 0),\r\n                            isVisible: 1,\r\n                            align: \"right\",\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return (\r\n                                    <>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                const product = row.Product || {};\r\n                                                const latestUOM_Id = row.UOM || product.Unit_Id;\r\n                                                const latestUnitName =\r\n                                                    row.Unit_Name || product.Units || product.Unit_Name;\r\n\r\n                                                setProductDetails({\r\n                                                    Item_Id: row.Item_Id,\r\n                                                    ItemName: product.Product_Name || row.ItemName,\r\n                                                    Bill_Qty: row.Bill_Qty,\r\n                                                    Item_Rate: row.Item_Rate,\r\n                                                    UOM: latestUOM_Id,\r\n                                                    Units: latestUnitName,\r\n                                                    Product: product,\r\n                                                    Group: product.Pro_Group || row.Group || \"\",\r\n                                                    GroupID: product.Product_Group || row.GroupID || \"\",\r\n                                                    Brand: product.Brand_Name || row.Brand || \"\",\r\n                                                    BrandID: product.Brand || row.BrandID || \"\",\r\n                                                    Amount: row.Amount,\r\n                                                });\r\n                                                setAddProductDialog(true);\r\n                                            }}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setOrderProducts((pre) =>\r\n                                                    pre.filter(\r\n                                                        (obj) => !isEqualNumber(obj.Item_Id, row.Item_Id)\r\n                                                    )\r\n                                                );\r\n                                            }}\r\n                                            color=\"error\"\r\n                                        >\r\n                                            <Delete />\r\n                                        </IconButton>\r\n                                    </>\r\n                                );\r\n                            },\r\n                            ColumnHeader: \"Action\",\r\n                            isVisible: 1,\r\n                        },\r\n                    ]}\r\n                    EnableSerialNumber\r\n                    CellSize=\"small\"\r\n                    disablePagination={true}\r\n                />\r\n\r\n                {/* Invoice Summary */}\r\n                {orderProducts.length > 0 && (\r\n                    <div className=\"d-flex justify-content-end py-2\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border p-2\" rowSpan={orderDetails.IS_IGST === 1 ? 4 : 5}>\r\n                                        Total in words: {numberToWords(Math.round(totals.finalAmount))}\r\n                                    </td>\r\n                                    <td className=\"border p-2\">Total Taxable Amount</td>\r\n                                    <td className=\"border p-2 text-end\">\r\n                                        {NumberFormat(totals.taxableAmount.toFixed(2))}\r\n                                    </td>\r\n                                </tr>\r\n                                {orderDetails.IS_IGST === 1 ? (\r\n                                    <tr>\r\n                                        <td className=\"border p-2\">IGST</td>\r\n                                        <td className=\"border p-2 text-end\">\r\n                                            {NumberFormat(totals.igst.toFixed(2))}\r\n                                        </td>\r\n                                    </tr>\r\n                                ) : (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">CGST</td>\r\n                                            <td className=\"border p-2 text-end\">\r\n                                                {NumberFormat(totals.cgst.toFixed(2))}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">SGST</td>\r\n                                            <td className=\"border p-2 text-end\">\r\n                                                {NumberFormat(totals.sgst.toFixed(2))}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </>\r\n                                )}\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Round Off</td>\r\n                                    <td className=\"border p-2 text-end\">\r\n                                        {NumberFormat(roundOff.toFixed(2))}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"border p-2 fw-bold\">Total</td>\r\n                                    <td className=\"border p-2 text-end fw-bold\">\r\n                                        {NumberFormat(Math.round(totals.finalAmount))}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n                <p className=\"fa-15 mt-3 m-0\">Narration</p>\r\n                <textarea\r\n                    className=\"cus-inpt \"\r\n                    value={orderDetails.Narration}\r\n                    onChange={(e) =>\r\n                        setOrderDetails((pre) => ({ ...pre, Narration: e.target.value }))\r\n                    }\r\n                />\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        startIcon={<Clear />}\r\n                        onClick={switchScreen}\r\n                    >\r\n                        {\"cancel\"}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={postSaleOrder}\r\n                        sx={{ ml: 1 }}\r\n                        variant=\"outlined\"\r\n                        color=\"success\"\r\n                        startIcon={<Save />}\r\n                        disabled={orderProducts?.length === 0 || !orderDetails?.Retailer_Id}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Add Product Dialog */}\r\n            <Dialog\r\n                open={addProductDialog}\r\n                onClose={closeAddProduct}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        if (\r\n                            productDetails.Item_Id &&\r\n                            productDetails.Bill_Qty &&\r\n                            productDetails.Item_Rate\r\n                        ) {\r\n                            handleProductInputChange(\r\n                                productDetails.Item_Id,\r\n                                productDetails.Bill_Qty,\r\n                                productDetails.Item_Rate,\r\n                                productDetails.Product,\r\n                                productDetails.UOM,\r\n                                productDetails.Units\r\n                            );\r\n                            closeAddProduct();\r\n                        } else {\r\n                            toast.warn(\r\n                                !productDetails.Item_Id\r\n                                    ? \"Select Product\"\r\n                                    : !productDetails.Bill_Qty\r\n                                        ? \"Enter Quantity\"\r\n                                        : \"Enter Rate or Amount\"\r\n                            );\r\n                        }\r\n                    }}\r\n                >\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.BrandID,\r\n                                        label: productDetails.Brand,\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({\r\n                                            ...pre,\r\n                                            BrandID: e.value,\r\n                                            Brand: e.label,\r\n                                        }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: \"\", label: \"select\", isDisabled: true },\r\n                                        ...productBrand.map((obj) => ({\r\n                                            value: obj?.Brand,\r\n                                            label: obj?.Brand_Name,\r\n                                        })),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.GroupID,\r\n                                        label: productDetails.Group,\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({\r\n                                            ...pre,\r\n                                            GroupID: e.value,\r\n                                            Group: e.label,\r\n                                        }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: \"\", label: \"select\", isDisabled: true },\r\n                                        ...products\r\n                                            .filter((pro) =>\r\n                                                productDetails.BrandID\r\n                                                    ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                    : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 p-2\">\r\n                                <label>\r\n                                    Item Name <RequiredStar />\r\n                                </label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.Item_Id,\r\n                                        label: productDetails.ItemName,\r\n                                    }}\r\n                                    onChange={(e) => {\r\n                                        const productInfo = products.find((pro) =>\r\n                                            isEqualNumber(pro.Product_Id, e.value)\r\n                                        );\r\n                                        setProductDetails((pre) => ({\r\n                                            ...pre,\r\n                                            Item_Id: e.value,\r\n                                            ItemName: e.label,\r\n                                            Product: productInfo ?? {},\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n                                            UOM: productInfo.UOM_Id ?? pre.UOM,\r\n                                            Units: productInfo.Units ?? pre.Units,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Amount: 0,\r\n                                            Bill_Qty: 0,\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: \"\", label: \"select\", isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter((pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                                )\r\n                                                .filter((pro) =>\r\n                                                    productDetails.GroupID\r\n                                                        ? isEqualNumber(\r\n                                                            pro.Product_Group,\r\n                                                            productDetails.GroupID\r\n                                                        )\r\n                                                        : true\r\n                                                ),\r\n                                        ].map((obj) => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled:\r\n                                                orderProducts.findIndex((ind) =>\r\n                                                    isEqualNumber(ind?.Item_Id, obj?.Product_Id)\r\n                                                ) === -1\r\n                                                    ? false\r\n                                                    : true,\r\n                                        })),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>\r\n                                    Quantity <RequiredStar />\r\n                                </label>\r\n                                <input\r\n                                    type=\"input\"\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : \"\"}\r\n                                    onChange={(e) => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(\r\n                                                    productDetails.Item_Rate,\r\n                                                    e.target.value\r\n                                                                                               ),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        } else {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Quantity\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>\r\n                                    Rate <RequiredStar />\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    required\r\n                                    value={productDetails.Item_Rate ? productDetails.Item_Rate : \"\"}\r\n                                    onChange={(e) => {\r\n                                        if (productDetails.Bill_Qty) {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(\r\n                                                    e.target.value,\r\n                                                    productDetails.Bill_Qty\r\n                                                ),\r\n                                                Item_Rate: e.target.value,\r\n                                            }));\r\n                                        } else {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Item_Rate: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Rate\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={productDetails.Amount ? productDetails.Amount : \"\"}\r\n                                    onChange={(e) => {\r\n                                        if (productDetails.Bill_Qty) {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(\r\n                                                    e.target.value,\r\n                                                    productDetails.Bill_Qty\r\n                                                ),\r\n                                                Amount: e.target.value,\r\n                                            }));\r\n                                        } else {\r\n                                            setProductDetails((pre) => ({\r\n                                                ...pre,\r\n                                                Amount: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    placeholder=\"Amount\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.UOM,\r\n                                        label: productDetails.Units,\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({\r\n                                            ...pre,\r\n                                            UOM: e.value,\r\n                                            Units: e.label,\r\n                                        }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: \"\", label: \"select\", isDisabled: true },\r\n                                        ...productUOM.map((obj) => ({\r\n                                            value: obj?.UOM_Id,\r\n                                            label: obj?.UOM_Name,\r\n                                        })),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select UOM\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>HSN Code</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={productDetails.Product?.HSN_Code || \"\"}\r\n                                    className=\"cus-inpt\"\r\n                                    readOnly\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>GST %</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={\r\n                                        orderDetails.IS_IGST\r\n                                            ? productDetails.Product?.Igst_P || 0\r\n                                            : Addition(\r\n                                                productDetails.Product?.Cgst_P || 0,\r\n                                                productDetails.Product?.Sgst_P || 0\r\n                                            )\r\n                                    }\r\n                                    className=\"cus-inpt\"\r\n                                    readOnly\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions className=\"border-top\">\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"error\"\r\n                            startIcon={<ClearAll />}\r\n                            onClick={closeAddProduct}\r\n                        >\r\n                            Clear\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"success\"\r\n                            startIcon={<Save />}\r\n                            type=\"submit\"\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewDeliveryOrder;","export const convertedStatus = [\r\n    {\r\n        id: 0,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 1,\r\n        label: 'Verified',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Converted',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]\r\n\r\nexport const dbStatus = [\r\n    {\r\n        id: 1,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Progess',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Completed',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 4,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","calculateGSTDetails","amount","gstRate","type","arguments","length","undefined","validatedAmount","toNumber","validatedGstRate","halfGstRate","baseAmount","taxAmount","withTax","withoutTax","Error","sgstAmount","toFixed","cgstAmount","igstAmount","base_amount","Number","with_tax","without_tax","tax_per","tax_amount","sgst_per","sgst_amount","cgst_per","cgst_amount","igst_per","igst_amount","taxCalc","percentage","RoundNumber","_ref","orderDetails","orderProducts","download","actionOpen","clearDetails","TitleText","pageSize","setPageSize","useState","a4Styles","width","minHeight","padding","backgroundColor","boxSizing","boxShadow","fontFamily","lineHeight","display","flexDirection","flexGrow","margin","a5Styles","storage","JSON","parse","localStorage","getItem","open","setOpen","retailerInfo","setRetailerInfo","companyInfo","setCompanyInfo","printRef","useRef","isExclusiveBill","isEqualNumber","GST_Inclusive","isInclusive","isNotTaxableBill","IS_IGST","useEffect","fetchLink","address","Company_id","then","data","success","catch","e","console","error","Retailer_Id","handleClose","includedProducts","filter","orderProduct","isGraterNumber","Bill_Qty","totalValueBeforeTax","reduce","acc","item","itemRate","Item_Rate","billQty","parseInt","TotalValue","Multiplication","gstPercentage","Igst","Addition","Sgst","Cgst","itemTax","basePrice","Subraction","TotalTax","handlePrint","useReactToPrint","content","current","pageStyle","extraDetails","labelOne","dataOne","Do_Inv_No","labelTwo","dataTwo","LocalDate","Do_Date","TaxData","HSNindex","findIndex","obj","hsnCode","HSN_Code","Taxable_Amount","Cgst_Amo","Sgst_Amo","Igst_Amo","prev","newValue","taxableValue","cgst","sgst","igst","totalTax","newEntry","cgstPercentage","sgstPercentage","igstPercentage","_jsxs","_Fragment","onClick","handleOpen","Dialog","onClose","fullWidth","maxWidth","sx","alignItems","overflow","maxHeight","DialogTitle","textAlign","position","marginTop","zIndex","DialogContent","ref","justifyContent","height","className","Company_Name","Company_Address","Region","Pincode","Gst_Number","State","Retailer_Name","Mobile_No","Reatailer_Address","Reatailer_City","PinCode","Gstno","StateGet","map","detail","index","colSpan","productChunks","i","push","slice","chunk","chunkIndex","React","o","_ref2","globalIndex","Igst_P","quantity","Product_Name","NumberFormat","UOM","rowSpan","numberToWords","Total_Invoice_value","IGST_Total","CSGT_Total","SGST_Total","Round_off","pageBreakAfter","visibility","border","verticalAlign","sum","DialogActions","px","id","checked","onChange","handleToggle","htmlFor","gap","Button","startIcon","Close","variant","Download","loadingOn","loadingOff","onToggle","reload","triggerReload","saleOrders","setSaleOrders","retailers","setRetailers","salesPerson","setSalePerson","users","setUsers","screen","setScreen","orderInfo","setOrderInfo","viewOrder","setViewOrder","deleteConfirm","setDeleteConfirm","itemTodelete","setItemToDelete","isDeliveryDetailsVisible","setIsDeliveryDetailsVisible","deliveryPerson","setDeliveryPerson","filters","setFilters","Fromdate","getPreviousDate","Todate","ISOString","RetailerGet","Created_by","CreatedByGet","Delivery_Person_Id","Delivery_Person_Name","Sales_Person_Id","Sales_Person_Name","Cancel_status","pageLoad","setPageLoad","dialog","setDialog","saleOrderColumn","Field_Name","ColumnHeader","Fied_Data","isVisible","align","isCustomCell","Cell","row","Tooltip","title","IconButton","Products_List","onFocus","target","blur","size","Visibility","switchScreen","isEdit","Edit","openDeleteDialog","So_No","itemData","Do_Id","Delete","closeDialog","Card","isValidObject","FilterAlt","Switch","label","inputProps","CardContent","FilterableTable","dataArray","columns","isExpendable","tableMaxHeight","expandableComp","_ref3","Branch_Name","Narration","NewDeliveryOrder","editValues","pre","Object","keys","DeliveryInvoiceTemplate","async","method","bodyData","Order_Id","toast","message","Select","value","options","styles","customSelectStyles","isSearchable","placeholder","User_Id","UserGet","UserId","Name","menu","provided","menuPortalTarget","document","body","menuPosition","findProductDetails","_arr$find","productid","find","Product_Id","_productDetails$Produ","_productDetails$Produ2","_productDetails$Produ3","_productDetails$Produ4","editOn","baseData","setBaseData","products","branch","voucherType","uom","staff","staffType","brand","setProducts","productBrand","setProductBrand","productUOM","setProductUOM","setVoucherType","setBranch","initialValue","Company_Id","VoucherType","Delivery_Status","Payment_Ref_No","Payment_Mode","Payment_Status","Branch_Id","BranchId","Product_Array","So_Id","productInitialDetails","Item_Id","ItemName","Units","Product","Group","GroupID","Brand","BrandID","Amount","setOrderDetails","setOrderProducts","productDetails","setProductDetails","setIsEdit","addProductDialog","setAddProductDialog","_editValues$Products_","_editValues$Do_Date","Voucher_Type","pro","_pro$Item_Id","_pro$Product_Name","_pro$Bill_Qty","_pro$Item_Rate","_pro$Unit_Id","_pro$Units","_Number","_findProductDetails","_Number2","_findProductDetails2","_Number3","_findProductDetails3","_Addition","_findProductDetails4","_findProductDetails5","_pro$Amount","Unit_Id","Cgst_P","Sgst_P","Gst_P","Latitude","Longitude","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","Delivery_Latitude","Delivery_Longitude","warn","fetchLocation","uniqueBrand","getUniqueData","product","productMaster","isTaxable","gstInfo","Final_Amo","Tax_Rate","Taxble","totals","taxableAmount","finalAmount","calculateTotals","roundOff","Math","round","closeAddProduct","Telephone_Number","disabled","vou","ind","Vocher_Type_Id","BranchName","isDisabled","maxMenuHeight","ml","Add","_row$Product","_ref4","_row$Product2","_ref5","_row$Units","_ref6","_ref7","_row$Product3","_ref8","_ref9","latestUOM_Id","latestUnitName","Unit_Name","Pro_Group","Product_Group","Brand_Name","EnableSerialNumber","CellSize","disablePagination","Clear","postSaleOrder","finally","Save","onSubmit","preventDefault","handleProductInputChange","productId","rate","UOM_Id","productIndex","productData","some","grp","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$UOM_Id","_productInfo$Units","_productInfo$Item_Rat","required","Division","UOM_Name","readOnly","ClearAll","convertedStatus","dbStatus"],"sourceRoot":""}
{"version":3,"file":"static/js/5816.890a9294.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/taxCalculator.js","Pages/Sales/SalesReportComponent/previewInvoice.jsx","Pages/Sales/SalesReportComponent/DeliveryDetailsList.jsx","Pages/Sales/SalesReportComponent/NewDeliveryOrder.jsx","Pages/Sales/convertedStatus.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","/**\r\n * @param {number} amount \r\n * @param {number} gstRate \r\n * @param {string} type 3 Types add, remove, zerotax\r\n * @returns {object} \r\n */\r\n\r\nimport { toNumber } from \"./functions\";\r\n\r\nexport const calculateGSTDetails = (amount, gstRate, type = 'add') => {\r\n\r\n    const validatedAmount = toNumber(amount);\r\n    const validatedGstRate = toNumber(gstRate);\r\n\r\n    const halfGstRate = validatedGstRate / 2;\r\n    let baseAmount, taxAmount, withTax, withoutTax;\r\n\r\n    if (type === 'zerotax') {\r\n        baseAmount = validatedAmount; // No tax applied\r\n        taxAmount = 0;\r\n        withTax = validatedAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'add') {\r\n        taxAmount = (validatedAmount * validatedGstRate) / 100;\r\n        baseAmount = validatedAmount;\r\n        withTax = validatedAmount + taxAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'remove') {\r\n        baseAmount = validatedAmount / (1 + validatedGstRate / 100);\r\n        taxAmount = validatedAmount - baseAmount;\r\n        withTax = validatedAmount;\r\n        withoutTax = baseAmount;\r\n    } else {\r\n        throw new Error(\"Invalid type. Use 'add', 'remove', or 'zerotax'.\");\r\n    }\r\n\r\n    const sgstAmount = (taxAmount / 2).toFixed(2);\r\n    const cgstAmount = (taxAmount / 2).toFixed(2);\r\n    const igstAmount = taxAmount.toFixed(2);\r\n\r\n    return {\r\n        base_amount: Number(baseAmount).toFixed(2),\r\n        with_tax: Number(withTax).toFixed(2),\r\n        without_tax: Number(withoutTax).toFixed(2),\r\n        tax_per: Number(validatedGstRate),\r\n        tax_amount: Number(taxAmount).toFixed(2),\r\n        sgst_per: Number(halfGstRate),\r\n        sgst_amount: Number(sgstAmount),\r\n        cgst_per: Number(halfGstRate),\r\n        cgst_amount: Number(cgstAmount),\r\n        igst_per: Number(validatedGstRate),\r\n        igst_amount: Number(igstAmount),\r\n        type,\r\n    };\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Dialog, DialogContent, DialogTitle, Button, DialogActions } from '@mui/material';\r\nimport { Close, Download } from '@mui/icons-material';\r\nimport { isEqualNumber, isGraterNumber, LocalDate, NumberFormat, numberToWords, Multiplication, Subraction, Addition, RoundNumber } from '../../../Components/functions';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\n\r\n\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst InvoiceBillTemplate = ({ orderDetails, orderProducts, download, actionOpen, clearDetails, children, TitleText }) => {\r\n\r\n\r\n\r\n    const [pageSize, setPageSize] = useState('A5');\r\n\r\n\r\n    const a4Styles = {\r\n        width: '210mm',\r\n        minHeight: '297mm',\r\n        padding: '10mm',\r\n        backgroundColor: '#fff',\r\n        fontSize: '8px',\r\n        boxSizing: 'border-box',\r\n        boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n        fontFamily: 'Arial, sans-serif',\r\n        lineHeight: 1.2,\r\n        overflow: 'visible',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        paddingTop: '0',\r\n        margin: '0 auto',\r\n        '@media print': {\r\n            width: '210mm',\r\n            height: '297mm',\r\n            margin: 0,\r\n            padding: '10mm',\r\n            boxShadow: 'none',\r\n            overflow: 'hidden',\r\n            pageBreakAfter: 'avoid',\r\n            pageBreakInside: 'avoid'\r\n        }\r\n    };\r\n\r\n    const a5Styles = {\r\n        width: '210mm',\r\n        minHeight: '148.5mm',\r\n        padding: '5mm',\r\n        backgroundColor: '#fff',\r\n        fontSize: '5px',\r\n        boxSizing: 'border-box',\r\n        boxShadow: '0 0 5mm rgba(0,0,0,0.1)',\r\n        fontFamily: 'Arial, sans-serif',\r\n        lineHeight: 1.0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        margin: '0 auto',\r\n        '@media print': {\r\n            width: '148mm',\r\n            height: '210mm',\r\n            margin: 0,\r\n            padding: '5mm',\r\n            boxShadow: 'none',\r\n            overflow: 'hidden',\r\n            pageBreakAfter: 'avoid',\r\n            pageBreakInside: 'avoid'\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [open, setOpen] = useState(false);\r\n    const [retailerInfo, setRetailerInfo] = useState({});\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const printRef = useRef(null);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    useEffect(() => {\r\n        if (actionOpen) {\r\n            setOpen(true);\r\n        }\r\n    }, [actionOpen])\r\n\r\n    useEffect(() => {\r\n        if (orderDetails?.Retailer_Id) {\r\n            fetchLink({\r\n                address: `masters/retailers/info?Retailer_Id=${orderDetails?.Retailer_Id}`\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    setRetailerInfo(data?.data[0] ? data?.data[0] : {})\r\n                }\r\n            }).catch(e => console.error(e))\r\n        }\r\n    }, [orderDetails?.Retailer_Id])\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        if (clearDetails) {\r\n            clearDetails();\r\n        }\r\n    };\r\n\r\n    const includedProducts = orderProducts.filter(orderProduct => isGraterNumber(orderProduct?.Bill_Qty, 0));\r\n\r\n    const totalValueBeforeTax = orderProducts.reduce((acc, item) => {\r\n        const itemRate = RoundNumber(item?.Item_Rate);\r\n        const billQty = parseInt(item?.Bill_Qty) || 0;\r\n\r\n        if (isNotTaxableBill) {\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n            return acc;\r\n        }\r\n\r\n        const gstPercentage = IS_IGST ? item?.Igst : Addition(item?.Sgst, item?.Cgst);\r\n\r\n        if (isInclusive) {\r\n            const itemTax = taxCalc(1, itemRate, gstPercentage);\r\n            const basePrice = Subraction(itemRate, itemTax);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, basePrice);\r\n        }\r\n        if (isExclusiveBill) {\r\n            const itemTax = taxCalc(0, itemRate, gstPercentage);\r\n            acc.TotalTax += Multiplication(billQty, itemTax);\r\n            acc.TotalValue += Multiplication(billQty, itemRate);\r\n        }\r\n\r\n        return acc;\r\n    }, {\r\n        TotalValue: 0,\r\n        TotalTax: 0\r\n    });\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n        pageStyle: `\r\n               @page {\r\n                 size: ${pageSize === 'A4' ? 'A4' : 'A5'};\r\n                 margin: 0;\r\n               }\r\n               @media print {\r\n                 body {\r\n                   margin: 0;\r\n                   padding: 0;\r\n                 }\r\n               }\r\n             `\r\n    });\r\n\r\n    const extraDetails = [\r\n        {\r\n            labelOne: 'Invoice No',\r\n            dataOne: orderDetails?.So_Id,\r\n            labelTwo: 'Dated',\r\n            dataTwo: LocalDate(orderDetails?.So_Date),\r\n        },\r\n        {\r\n            labelOne: 'Delivery Note',\r\n            dataOne: '',\r\n            labelTwo: 'Mode/Terms of Payment',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Reference No. & Date',\r\n            dataOne: '',\r\n            labelTwo: 'Other References',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Buyer\\'s Order No',\r\n            dataOne: '',\r\n            labelTwo: 'Dated',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Dispatch Doc No',\r\n            dataOne: '',\r\n            labelTwo: 'Delivery Note Date',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Dispatched through',\r\n            dataOne: '',\r\n            labelTwo: 'Destination',\r\n            dataTwo: '',\r\n        },\r\n        {\r\n            labelOne: 'Bill of Lading/LR-RR No',\r\n            dataOne: '',\r\n            labelTwo: 'Motor Vehicle No',\r\n            dataTwo: '',\r\n        },\r\n    ]\r\n\r\n    const TaxData = orderProducts?.reduce((data, item) => {\r\n        const HSNindex = data.findIndex(obj => obj.hsnCode == item.HSN_Code);\r\n\r\n        const {\r\n            Taxable_Amount, Cgst_Amo, Sgst_Amo, Igst_Amo, HSN_Code,\r\n            Cgst, Sgst, Igst,\r\n        } = item;\r\n\r\n        if (HSNindex !== -1) {\r\n            const prev = data[HSNindex];\r\n            const newValue = {\r\n                ...prev,\r\n                taxableValue: prev.taxableValue + Taxable_Amount,\r\n                cgst: Addition(prev.cgst, Cgst_Amo),\r\n                sgst: Addition(prev.sgst, Sgst_Amo),\r\n                igst: Addition(prev.igst, Igst_Amo),\r\n                totalTax: prev.totalTax + Number(orderDetails.IS_IGST ? Igst_Amo : Addition(Cgst_Amo, Sgst_Amo)),\r\n            };\r\n\r\n            data[HSNindex] = newValue;\r\n            return data;\r\n        }\r\n\r\n        const newEntry = {\r\n            hsnCode: HSN_Code,\r\n            taxableValue: Taxable_Amount,\r\n            cgst: Cgst_Amo,\r\n            cgstPercentage: Cgst,\r\n            sgst: Sgst_Amo,\r\n            sgstPercentage: Sgst,\r\n            igst: Igst_Amo,\r\n            igstPercentage: Igst,\r\n            totalTax: orderDetails.IS_IGST ? Number(Igst_Amo) : Addition(Cgst_Amo, Sgst_Amo),\r\n        };\r\n\r\n        return [...data, newEntry];\r\n    }, []);\r\n\r\n    const getInlineStyles = () => (pageSize === 'A4' ? a4Styles : a5Styles);\r\n\r\n    const handleToggle = () => {\r\n        setPageSize((prev) => (prev === 'A5' ? 'A4' : 'A5'));\r\n    };\r\n    return (\r\n        <>\r\n            <span onClick={handleOpen}>{children}</span>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                fullWidth\r\n                maxWidth=\"xl\" // Use the maximum width\r\n                sx={{\r\n                    '& .MuiDialog-container': {\r\n                        alignItems: 'flex-start', // Align to top to prevent vertical centering issues\r\n                        padding: '20px 0',\r\n                        overflow: 'auto', // Allow container to scroll\r\n                    },\r\n                    '& .MuiPaper-root': {\r\n                        width: 'auto',\r\n                        maxWidth: '95vw', // Slightly less than viewport width\r\n                        maxHeight: '95vh', // Slightly less than viewport height\r\n                        margin: 0,\r\n                        overflow: 'visible',\r\n                    }\r\n                }}\r\n            >\r\n                <DialogTitle sx={{\r\n                    textAlign: 'center',\r\n                    fontWeight: 'bold',\r\n                    width: '100%',\r\n                    position: 'sticky',\r\n                    top: 0,\r\n                    backgroundColor: 'white',\r\n                    zIndex: 1,\r\n                }}>\r\n                    Order Preview\r\n                </DialogTitle>\r\n\r\n                <DialogContent\r\n                    ref={printRef}\r\n                    sx={{\r\n                        padding: 0,\r\n                        margin: 0,\r\n                        overflow: 'auto',\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        '@media print': {\r\n                            overflow: 'visible',\r\n                            display: 'block',\r\n                            height: 'auto'\r\n                        }\r\n                    }}\r\n                >\r\n                    {/* <div className=\"auto-break\"> */}\r\n                    <div\r\n                        style={getInlineStyles()}\r\n                        className=\"print-container\"\r\n                    >\r\n                        <h3 className='text-center mb-2'>{TitleText ?? 'Invoice Details'}</h3>\r\n\r\n                        {/* General Info */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 p-0 border border-bottom-0 border-end-0\"> {/* Company Info */}\r\n                                <div className=\"border-bottom p-2\">\r\n                                    <p className='m-0 fa-17'>{companyInfo?.Company_Name}</p>\r\n                                    <p className='m-0 fa-14'>Address: {companyInfo?.Company_Address}</p>\r\n                                    {/* <p className='m-0 fa-14'></p> */}\r\n                                    <p className='m-0 fa-14'>City: {companyInfo?.Region} - {companyInfo?.Pincode}</p>\r\n                                    <p className='m-0 fa-14'>GSTIN / UIN: {companyInfo?.Gst_Number}</p>\r\n                                    <p className='m-0 fa-14'>State: {companyInfo?.State}</p>\r\n                                    <p className='m-0 fa-14'>Code: </p>\r\n                                </div>\r\n                                <div className=\"p-2\"> {/* buyer info */}\r\n                                    <p className='m-0 fa-12'>Buyer (Bill to)</p>\r\n                                    <p className='m-0 fa-15'>{retailerInfo?.Retailer_Name}</p>\r\n                                    <p className='m-0 fa-14'>{retailerInfo?.Mobile_No + ' - ' + retailerInfo?.Reatailer_Address}</p>\r\n                                    <p className='m-0 fa-14'>{retailerInfo?.Reatailer_City} - {retailerInfo?.PinCode}</p>\r\n                                    <p className='m-0 fa-14'>GSTIN / UIN: {companyInfo?.Gstno}</p>\r\n                                    <p className='m-0 fa-14'>State Name: {companyInfo?.StateGet}</p>\r\n                                    <p className='m-0 fa-14'>Code: </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6 p-0 border border-bottom-0\">\r\n                                <table className=\"table m-0\">\r\n                                    <tbody>\r\n                                        {extraDetails.map((detail, index) => (\r\n                                            <tr key={index}>\r\n                                                <td className=\"border-end fa-12 p-0 px-1\">\r\n                                                    <p className=\"m-0\">{detail.labelOne}</p>\r\n                                                    <p className=\"m-0\">&emsp;{detail.dataOne}</p>\r\n                                                </td>\r\n                                                <td className='fa-12 p-0 px-1'>\r\n                                                    <p className=\"m-0\">{detail.labelTwo}</p>\r\n                                                    <p className=\"m-0\">&emsp;{detail.dataTwo}</p>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                        <tr>\r\n                                            <td colSpan={2} className='border-0 fa-12 p-0'>\r\n                                                <p className=\"m-0\">Terms of Delivery</p>\r\n                                                <p className=\"m-0\"></p>\r\n                                                <br />\r\n                                                <br />\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Product Info */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 p-0\">\r\n                                <table className=\"table m-0\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <td className='border bg-light fa-14'>Sno</td>\r\n                                            <td className='border bg-light fa-14'>Product</td>\r\n                                            <td className='border bg-light fa-14'>HSN/SAC</td>\r\n                                            <td className='border bg-light fa-14 text-end'>Quantity</td>\r\n                                            <td className='border bg-light fa-14 text-end'>Rate</td>\r\n                                            <td className='border bg-light fa-14 text-end'>\r\n                                                <p className='m-2 '>Rate</p>\r\n                                                <p className='m-0 '>\r\n                                                    {isEqualNumber(orderDetails.GST_Inclusive, 1) && '(Incl. of Tax)'}\r\n                                                    {isEqualNumber(orderDetails.GST_Inclusive, 2) && '(Tax not applicable)'}\r\n                                                    {isEqualNumber(orderDetails.GST_Inclusive, 0) && '(Excl. of Tax)'}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className='border bg-light fa-14 text-end'>Amount</td>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n\r\n                                        {includedProducts.map((o, i) => {\r\n                                            const percentage = (IS_IGST ? o?.Igst_P : o?.Cgst + o?.Sgst) ?? 0;\r\n                                            const quantity = Number(o?.Bill_Qty || 0);\r\n                                            const Item_Rate = Number(o?.Item_Rate || 0);\r\n                                            const itemTax = taxCalc(orderDetails.GST_Inclusive, Item_Rate, percentage)\r\n                                            return (\r\n                                                <tr key={i}>\r\n                                                    <td className='border fa-13'>{i + 1}</td>\r\n                                                    <td className='border fa-13'>{o?.Product_Name}</td>\r\n                                                    <td className='border fa-13'>{o?.HSN_Code}</td>\r\n\r\n                                                    <td className='border fa-13 text-end'>\r\n                                                        {NumberFormat(quantity)}\r\n                                                        {o?.UOM && ' (' + o?.UOM + ') '}\r\n                                                    </td>\r\n\r\n                                                    <td className='border fa-13 text-end'>\r\n                                                        {NumberFormat(isEqualNumber(\r\n                                                            orderDetails.GST_Inclusive, 1\r\n                                                        ) ? (Item_Rate - itemTax) : Item_Rate)}\r\n                                                    </td>\r\n\r\n                                                    <td className='border fa-13 text-end'> {/* rate per item */}\r\n                                                        {NumberFormat(isEqualNumber(\r\n                                                            orderDetails.GST_Inclusive, 1\r\n                                                        ) ? Item_Rate : (Item_Rate + itemTax))}\r\n                                                    </td>\r\n\r\n                                                    <td className='border fa-13 text-end'> {/* taxable amount (qty * rate) */}\r\n                                                        {NumberFormat(o?.Taxable_Amount)}\r\n                                                    </td>\r\n\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n\r\n                                        <tr>\r\n                                            <td\r\n                                                className=\"border p-2\"\r\n                                                rowSpan={IS_IGST ? 4 : 5}\r\n                                                colSpan={4}\r\n                                            >\r\n                                                <p className='m-0'>Amount Chargeable (in words):</p>\r\n                                                <p className='m-0'>&emsp; INR {numberToWords(parseInt(orderDetails?.Total_Invoice_value))} Only.</p>\r\n                                            </td>\r\n                                            <td className=\"border p-2 fa-14\" colSpan={2}>Total Taxable Amount</td>\r\n                                            <td className=\"border p-2 text-end fa-14\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                        {!IS_IGST ? (\r\n                                            <>\r\n                                                <tr>\r\n                                                    <td className=\"border p-2 fa-14\" colSpan={2}>CGST</td>\r\n                                                    <td className=\"border p-2 text-end fa-14\">\r\n                                                        {NumberFormat(orderDetails?.CSGT_Total)}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"border p-2 fa-14\" colSpan={2}>SGST</td>\r\n                                                    <td className=\"border p-2 fa-14 text-end\">\r\n                                                        {NumberFormat(orderDetails?.SGST_Total)}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </>\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td className=\"border p-2 fa-14\" colSpan={2}>IGST</td>\r\n                                                <td className=\"border p-2 fa-14 text-end\">\r\n                                                    {NumberFormat(orderDetails.IGST_Total)}\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n\r\n                                        <tr>\r\n                                            <td className=\"border p-2 fa-14\" colSpan={2}>Round Off</td>\r\n                                            <td className=\"border p-2 fa-14 text-end\">\r\n                                                {NumberFormat(orderDetails?.Round_off)}\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <td className=\"border p-2 fa-14\" colSpan={2}>Total</td>\r\n                                            <td className=\"border p-2 fa-14 text-end fw-bold\">\r\n                                                {NumberFormat(orderDetails?.Total_Invoice_value)}\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Tax Calculations */}\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td className=\"border bg-light fa-14 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>HSN / SAC</td>\r\n                                    <td className=\"border bg-light fa-14 text-center\" rowSpan={2} style={{ verticalAlign: 'middle' }}>Taxable Value</td>\r\n                                    {isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                        <td className=\"border bg-light fa-14 text-center\" colSpan={2}>IGST Tax</td>\r\n                                    ) : (\r\n                                        <>\r\n                                            <td className=\"border bg-light fa-14 text-center\" colSpan={2}>Central Tax</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\" colSpan={2}>State Tax</td>\r\n                                        </>\r\n                                    )}\r\n                                    <td className=\"border bg-light fa-14 text-center\">Total</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    {isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                        <>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Rate</td>\r\n                                            <td className=\"border bg-light fa-14 text-center\">Amount</td>\r\n                                        </>\r\n                                    )}\r\n                                    <td className=\"border bg-light fa-14 text-center\">Tax Amount</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {TaxData.map((o, i) => {\r\n                                    return (\r\n                                        <tr key={i}>\r\n                                            <td className=\"border fa-13 text-end\">{o?.hsnCode}</td>\r\n                                            <td className=\"border fa-13 text-end\">{NumberFormat(o?.taxableValue)}</td>\r\n                                            {orderDetails.IS_IGST ? (\r\n                                                <>\r\n                                                    <td className=\"border fa-13 text-end\">{NumberFormat(o?.igstPercentage)}</td>\r\n                                                    <td className=\"border fa-13 text-end\">{NumberFormat(o?.igst)}</td>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <td className=\"border fa-13 text-end\">{NumberFormat(o?.cgstPercentage)}</td>\r\n                                                    <td className=\"border fa-13 text-end\">{NumberFormat(o?.cgst)}</td>\r\n                                                    <td className=\"border fa-13 text-end\">{NumberFormat(o?.sgstPercentage)}</td>\r\n                                                    <td className=\"border fa-13 text-end\">{NumberFormat(o?.sgst)}</td>\r\n                                                </>\r\n                                            )}\r\n                                            <td className=\"border fa-13 text-end\">\r\n                                                {NumberFormat(o?.totalTax)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                                <tr>\r\n                                    <td className=\"border fa-13 text-end\">Total</td>\r\n                                    <td className=\"border fa-13 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.taxableValue), 0))}\r\n                                    </td>\r\n\r\n                                    {orderDetails.IS_IGST ? (\r\n                                        <>\r\n                                            <td className=\"border fa-13 text-end\"></td>\r\n                                            <td className=\"border fa-13 text-end fw-bold\">\r\n                                                {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.igst), 0))}\r\n                                            </td>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <td className=\"border fa-13 text-end\"></td>\r\n                                            <td className=\"border fa-13 text-end fw-bold\">\r\n                                                {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.cgst), 0))}\r\n                                            </td>\r\n                                            <td className=\"border fa-13 text-end\"></td>\r\n                                            <td className=\"border fa-13 text-end fw-bold\">\r\n                                                {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.sgst), 0))}\r\n                                            </td>\r\n                                        </>\r\n                                    )}\r\n\r\n                                    <td className=\"border fa-13 text-end fw-bold\">\r\n                                        {NumberFormat(TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0))}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td\r\n                                        colSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 5 : 7}\r\n                                        className='border fa-13 fw-bold'\r\n                                    >\r\n                                        Tax Amount (in words) : INR &nbsp;\r\n                                        {numberToWords(\r\n                                            parseInt(\r\n                                                TaxData.reduce((sum, item) => sum += Number(item.totalTax), 0)\r\n                                            )\r\n                                        )} only.\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p>This is a Computer Generated Invoice</p>\r\n                        </div>\r\n                    </div>\r\n                    {/* </div> */}\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', px: 2 }}>\r\n                    {/* Left side: Toggle Switch */}\r\n                    <div className=\"form-check form-switch\">\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id=\"pageSizeSwitch\"\r\n                            checked={pageSize === 'A4'}\r\n                            onChange={handleToggle}\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"pageSizeSwitch\">\r\n                            {pageSize} selected\r\n                        </label>\r\n                    </div>\r\n\r\n                    {/* Right side: Buttons */}\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\r\n                        <Button\r\n                            startIcon={<Close />}\r\n                            variant=\"outlined\"\r\n                            color=\"error\"\r\n                            onClick={handleClose}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n\r\n                        {download && (\r\n                            <Button\r\n                                startIcon={<Download />}\r\n                                variant=\"outlined\"\r\n                                onClick={handlePrint}\r\n                            >\r\n                                Download\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </DialogActions>\r\n\r\n\r\n            </Dialog >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvoiceBillTemplate;","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, Button, Dialog, Tooltip, IconButton, DialogTitle, DialogContent, DialogActions, Switch } from \"@mui/material\";\r\n// import '../common.css'\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { getPreviousDate, isEqualNumber, ISOString, isValidObject } from \"../../../Components/functions\";\r\n// import DeliveryInvoiceTemplate from \"../SalesReportComponent/newInvoiceTemplate\";\r\nimport { Edit, FilterAlt, Delete, Visibility } from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\n// import SalesDelivery from \"./SalesReportComponent/SalesDeliveryConvert\"\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NewDeliveryOrder from \"./NewDeliveryOrder\";\r\nimport DeliveryInvoiceTemplate from \"../SalesReportComponent/previewInvoice\"\r\nconst DeliveryDetailsList = ({ loadingOn, loadingOff, onToggle, reload, triggerReload }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [screen, setScreen] = useState(true);\r\n    const [orderInfo, setOrderInfo] = useState({});\r\n    const [viewOrder, setViewOrder] = useState({});\r\n\r\n\r\n    const [deleteConfirm, setDeleteConfirm] = useState(false)\r\n    const [itemTodelete, setItemToDelete] = useState({})\r\n    const [isDeliveryDetailsVisible, setIsDeliveryDetailsVisible] = useState(false)\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: getPreviousDate(7),\r\n        Todate: ISOString(),\r\n        Retailer_Id: '',\r\n        RetailerGet: 'ALL',\r\n        Created_by: '',\r\n        CreatedByGet: 'ALL',\r\n        Delivery_Person_Id: '',\r\n        Delivery_Person_Name: 'ALL',\r\n        Cancel_status: 0\r\n    });\r\n\r\n    const [pageLoad, setPageLoad] = useState(false)\r\n\r\n\r\n    const [dialog, setDialog] = useState({\r\n        filters: false,\r\n        orderDetails: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `delivery/deliveryOrderList?Fromdate=${filters?.Fromdate}&Todate=${filters?.Todate}&Retailer_Id=${filters?.Retailer_Id}&Delivery_Person_Id=${filters?.Delivery_Person_Id}&Created_by=${filters?.Created_by}&Cancel_status=${filters?.Cancel_status}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSaleOrders(data?.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n\r\n    }, [\r\n        filters.Fromdate,\r\n        filters?.Todate,\r\n        filters?.Retailer_Id,\r\n        filters?.Delivery_Person_Id,\r\n        filters?.Created_by,\r\n        filters?.Cancel_status,\r\n        reload,\r\n        pageLoad\r\n    ])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setSalePerson(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/user/dropDown?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setUsers(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [])\r\n    const openDeleteDialog = (itemData) => {\r\n\r\n        setItemToDelete({\r\n            So_No: itemData.So_No,\r\n            Do_Id: itemData.Do_Id\r\n        });\r\n        setDeleteConfirm(true);\r\n    };\r\n\r\n    const saleOrderColumn = [\r\n        {\r\n            Field_Name: 'Do_Id',\r\n            ColumnHeader: 'Delivery ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'So_No',\r\n            ColumnHeader: 'Sale Order ID',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n\r\n        {\r\n            Field_Name: 'Do_Inv_No',\r\n            ColumnHeader: 'Do_Inv_No ',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Retailer_Name',\r\n            ColumnHeader: 'Customer',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n        },\r\n        {\r\n            Field_Name: 'SalesDate',\r\n            ColumnHeader: 'Sale Order Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Do_Date',\r\n            ColumnHeader: 'Delivery Date',\r\n            Fied_Data: 'date',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n\r\n\r\n        // {\r\n        //     Field_Name: 'Products',\r\n        //     ColumnHeader: 'Products / Quantity',\r\n        //     isVisible: 1,\r\n        //     align: 'center',\r\n        //     isCustomCell: true,\r\n        //     Cell: ({ row }) => (\r\n        //         <>\r\n        //             <span>{row?.Products_List?.length ?? 0}</span> /&nbsp;\r\n        //             <span>{row?.Products_List?.reduce((sum, item) => sum += item?.Bill_Qty ?? 0, 0) ?? 0}</span>\r\n        //         </>\r\n        //     )\r\n        // },\r\n        {\r\n            Field_Name: 'Total_Before_Tax',\r\n            ColumnHeader: 'Before Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Tax',\r\n            ColumnHeader: 'Tax',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'Total_Invoice_value',\r\n            ColumnHeader: 'Invoice Value',\r\n            Fied_Data: 'number',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n        {\r\n            Field_Name: 'DeliveryStatusName',\r\n            ColumnHeader: 'Delivery Status ',\r\n            Fied_Data: 'string',\r\n            isVisible: 1,\r\n            align: 'center',\r\n        },\r\n\r\n        // {\r\n        //     Field_Name: 'DeliveryStatusName',\r\n        //     // ColumnHeader: 'DeliveryStatusName',\r\n        //     isVisible: 1,\r\n        //     Field_Data:'String',\r\n        //     align: 'center',\r\n        //     // isCustomCell: true,\r\n\r\n        // },\r\n        // {\r\n        //     Field_Name: 'Sales_Person_Name',\r\n        //     ColumnHeader: 'Sales Person',\r\n        //     Fied_Data: 'string',\r\n        //     isVisible: 1,\r\n        // },\r\n        {\r\n            Field_Name: 'Action',\r\n            isVisible: 1,\r\n            isCustomCell: true,\r\n            Cell: ({ row }) => {\r\n                return (\r\n                    <>\r\n                        <Tooltip title='View Order'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    setViewOrder({\r\n                                        orderDetails: row,\r\n                                        orderProducts: row?.Products_List ? row?.Products_List : [],\r\n                                    })\r\n                                }}\r\n                                color='primary' size=\"small\"\r\n                            >\r\n                                <Visibility className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title='Edit'>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    switchScreen();\r\n                                    setOrderInfo({ ...row, isEdit: true });\r\n                                }}\r\n                                size=\"small\"\r\n                            >\r\n                                <Edit className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title='Delete'>\r\n                            <IconButton\r\n                                onClick={() => openDeleteDialog(row)}\r\n\r\n                                size=\"small\"\r\n                            >\r\n                                <Delete className=\"fa-16\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                )\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n\r\n        return (\r\n            <>\r\n\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Branch</td>\r\n                            <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Delivery Person</td>\r\n                            <td className=\"border p-2\">{row.Delivery_Person_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Round off</td>\r\n                            <td className=\"border p-2\">{row.Round_off}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.GST_Inclusive, 1) && 'Inclusive'}\r\n                                {isEqualNumber(row.GST_Inclusive, 0) && 'Exclusive'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.IS_IGST, 1) && 'IGST'}\r\n                                {isEqualNumber(row.IS_IGST, 0) && 'GST'}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Narration</td>\r\n                            <td className=\"border p-2\" colSpan={5}>{row.Narration}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const switchScreen = () => {\r\n        setScreen(!screen)\r\n        setOrderInfo({});\r\n        setIsDeliveryDetailsVisible(!isDeliveryDetailsVisible);\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setDialog({\r\n            ...dialog,\r\n            filters: false,\r\n            orderDetails: false,\r\n        });\r\n        setOrderInfo({});\r\n\r\n\r\n        setDeleteConfirm(false)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const confirmData = async () => {\r\n        if (!itemTodelete) return;\r\n\r\n        try {\r\n            const data = await fetchLink({\r\n                address: 'delivery/deliveryOrder',\r\n                method: 'DELETE',\r\n                bodyData: {\r\n                    Order_Id: itemTodelete.So_No,\r\n                    Do_Id: itemTodelete.Do_Id\r\n                }\r\n            });\r\n\r\n            if (data.success) {\r\n                toast.success('Delivery Deleted successfully');\r\n\r\n\r\n                triggerReload();\r\n                setDeleteConfirm(false);\r\n\r\n                setPageLoad(prev => !prev);\r\n                setIsDeliveryDetailsVisible(false);\r\n\r\n            } else {\r\n                toast.error(data?.message || 'Deletion failed');\r\n            }\r\n            // throw error\r\n        } catch (error) {\r\n            toast.error('An error occurred while deleting.', error);\r\n        } finally {\r\n            setDeleteConfirm(false);\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"p-3 py-2 d-flex align-items-center justify-content-between\">\r\n                    <h6 className=\"fa-18 m-0 p-0\">{\r\n                        screen\r\n                            ? 'Delivery Orders'\r\n                            : isValidObject(orderInfo)\r\n                                ? 'Modify Delivery Order'\r\n                                : ''}\r\n                    </h6>\r\n                    <span>\r\n                        {screen && (\r\n                            <Tooltip title='Filters'>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setDialog({ ...dialog, filters: true })}\r\n                                >\r\n                                    <FilterAlt />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n\r\n                        {screen && (\r\n                            <Switch\r\n                                checked={!screen}\r\n                                onChange={onToggle}\r\n                                label={'Delivery Details'}\r\n                                inputProps={{ 'aria-label': 'controlled' }}\r\n\r\n                            />\r\n                        )}\r\n                    </span>\r\n                </div>\r\n\r\n                <CardContent className=\"p-0 \">\r\n                    {screen ? (\r\n                        <FilterableTable\r\n                            dataArray={saleOrders}\r\n                            columns={saleOrderColumn}\r\n                            // EnableSerialNumber={true}\r\n                            isExpendable={true}\r\n                            tableMaxHeight={550}\r\n                            expandableComp={ExpendableComponent}\r\n                        />\r\n                    ) : (\r\n                        <NewDeliveryOrder\r\n                            editValues={orderInfo}\r\n                            loadingOn={loadingOn}\r\n                            loadingOff={loadingOff}\r\n                            reload={() => {\r\n                                setScreen(pre => !pre)\r\n                            }}\r\n                            switchScreen={switchScreen}\r\n                        />\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n\r\n            {Object.keys(viewOrder).length > 0 && (\r\n                <DeliveryInvoiceTemplate\r\n                    orderDetails={viewOrder?.orderDetails}\r\n                    orderProducts={viewOrder?.orderProducts}\r\n                    download={true}\r\n                    actionOpen={true}\r\n                    clearDetails={() => setViewOrder({})}\r\n                    TitleText={'Sale Order'}\r\n                />\r\n            )}\r\n\r\n\r\n            <Dialog\r\n                open={deleteConfirm}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Delete</DialogTitle>\r\n                <DialogContent>\r\n                    <div>Are You Want to Delete Delivery Details</div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                    <Button onClick={confirmData}>Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog.filters}\r\n                onClose={closeDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Filters</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"table-responsive pb-4\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Retailer</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Retailer_Id, label: filters?.RetailerGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Retailer_Id: e.value, RetailerGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Retailer Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Delivery Person</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Delivery_Person_Id, label: filters?.Delivery_Person_Name }}\r\n                                            onChange={(e) => setFilters({ ...filters, Delivery_Person_Id: e.value, Delivery_Person_Name: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...salesPerson.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Created By</td>\r\n                                    <td>\r\n                                        <Select\r\n                                            value={{ value: filters?.Created_by, label: filters?.CreatedByGet }}\r\n                                            onChange={(e) => setFilters({ ...filters, Created_by: e.value, CreatedByGet: e.label })}\r\n                                            options={[\r\n                                                { value: '', label: 'ALL' },\r\n                                                ...users.map(obj => ({ value: obj?.UserId, label: obj?.Name }))\r\n                                            ]}\r\n                                            styles={customSelectStyles}\r\n                                            isSearchable={true}\r\n                                            placeholder={\"Delivery Person Name\"}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>From</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Fromdate}\r\n                                            onChange={e => setFilters({ ...filters, Fromdate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>To</td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={filters.Todate}\r\n                                            onChange={e => setFilters({ ...filters, Todate: e.target.value })}\r\n                                            className=\"cus-inpt\"\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td style={{ verticalAlign: 'middle' }}>Canceled Order</td>\r\n                                    <td>\r\n                                        <select\r\n                                            type=\"date\"\r\n                                            value={filters.Cancel_status}\r\n                                            onChange={e => setFilters({ ...filters, Cancel_status: Number(e.target.value) })}\r\n                                            className=\"cus-inpt\"\r\n                                        >\r\n                                            <option value={1}>Show</option>\r\n                                            <option value={0}>Hide</option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog}>close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeliveryDetailsList;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, IconButton } from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    isEqualNumber, isGraterNumber, isValidObject, ISOString, getUniqueData,\r\n    Multiplication, Division, NumberFormat, Subraction, numberToWords,\r\n    RoundNumber, Addition\r\n} from \"../../../Components/functions\";\r\nimport { Add, Clear, ClearAll, Delete, Edit, Save } from \"@mui/icons-material\";\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\n\r\nimport { calculateGSTDetails } from '../../../Components/taxCalculator';\r\nconst taxCalc = (method = 1, amount = 0, percentage = 0) => {\r\n    switch (method) {\r\n        case 0:\r\n            return RoundNumber(amount * (percentage / 100));\r\n        case 1:\r\n            return RoundNumber(amount - (amount * (100 / (100 + percentage))));\r\n        case 2:\r\n            return 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nconst findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst NewDeliveryOrder = ({ editValues, loadingOn, loadingOff, reload, switchScreen, editOn }) => {\r\n    const storage = JSON.parse(localStorage.getItem('user'));\r\n    const [baseData, setBaseData] = useState({\r\n        products: [],\r\n        branch: [],\r\n        retailers: [],\r\n        voucherType: [],\r\n        uom: [],\r\n        staff: [],\r\n        staffType: [],\r\n        salesPerson: [],\r\n        brand: [],\r\n    });\r\n    const [retailers, setRetailers] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [productBrand, setProductBrand] = useState([]);\r\n    const [productUOM, setProductUOM] = useState([]);\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const [voucherType, setVoucherType] = useState([]);\r\n\r\n    const [branch, setBranch] = useState([]);\r\n    const initialValue = {\r\n        Company_Id: storage?.Company_id,\r\n        Do_Date: ISOString(),\r\n        VoucherType: '',\r\n        Retailer_Id: '',\r\n        Retailer_Name: 'Select',\r\n        Delivery_Status: 1,\r\n        Delivery_Person_Id: '',\r\n        Payment_Ref_No: '',\r\n        Delivery_Person_Name: '',\r\n        Payment_Mode: 0,\r\n        Payment_Status: 0,\r\n        Branch_Id: storage?.BranchId,\r\n        Narration: '',\r\n        Created_by: storage?.UserId,\r\n        Product_Array: [],\r\n        So_No: editValues?.So_Id,\r\n        GST_Inclusive: 1,\r\n        IS_IGST: 0,\r\n    }\r\n\r\n    const productInitialDetails = {\r\n        Item_Id: '',\r\n        ItemName: 'Search Item',\r\n        Bill_Qty: 0,\r\n        Item_Rate: 0,\r\n        UOM: '',\r\n        Units: '',\r\n        Product: {},\r\n        Group: 'Search Group',\r\n        GroupID: '',\r\n        Brand: 'Search Brand',\r\n        BrandID: '',\r\n        Amount: 0\r\n    }\r\n\r\n    const [orderDetails, setOrderDetails] = useState(initialValue)\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n    const [productDetails, setProductDetails] = useState(productInitialDetails);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [addProductDialog, setAddProductDialog] = useState(false);\r\n\r\n    const isExclusiveBill = isEqualNumber(orderDetails.GST_Inclusive, 0);\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n    const deliveryPerson = useState(0);\r\n    // const [deliveryPersonList, setDeliveryPersonList] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchLocation = async () => {\r\n            try {\r\n                const position = await new Promise((resolve, reject) => {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n                });\r\n                const { latitude, longitude } = position.coords;\r\n\r\n                setOrderDetails(pre => ({\r\n                    ...pre,\r\n                    Delivery_Latitude: latitude,\r\n                    Delivery_Longitude: longitude,\r\n                }));\r\n            } catch (error) {\r\n                toast.warn('Unable to fetch location. Allow location access.');\r\n            }\r\n        };\r\n\r\n        if (isValidObject(editValues)) {\r\n\r\n            setOrderDetails(pre => ({\r\n                ...pre,\r\n                Do_Id: editValues?.Do_Id,\r\n                Do_Date: editValues?.Do_Date ?? ISOString(),\r\n                VoucherType: editValues?.Voucher_Type,\r\n                Retailer_Id: editValues?.Retailer_Id,\r\n                Retailer_Name: editValues?.Retailer_Name,\r\n                Delivery_Status: editValues?.Delivery_Status,\r\n                // Delivery_Person_Id: editValues?.Delivery_Person_Id,\r\n                // Delivery_Person_Name: editValues?.Delivery_Person_Name,\r\n                Payment_Status: editValues?.Payment_Status,\r\n                Payment_Mode: editValues?.Payment_Mode,\r\n                Branch_Id: editValues?.Branch_Id,\r\n                Narration: editValues?.Narration,\r\n                Created_by: editValues?.Created_by,\r\n                Payment_Ref_No: editValues?.Payment_Ref_No,\r\n                So_No: editValues?.So_Id,\r\n                GST_Inclusive: editValues?.GST_Inclusive,\r\n                IS_IGST: editValues?.IS_IGST,\r\n\r\n            }));\r\n            setOrderProducts(editValues?.Products_List?.map(pro => ({\r\n                ...pro,\r\n                Item_Id: pro.Item_Id ?? '',\r\n                ItemName: pro?.Product_Name ?? \"\",\r\n                Bill_Qty: pro?.Bill_Qty ?? 0,\r\n                Item_Rate: pro?.Item_Rate ?? 0,\r\n                UOM: pro?.Unit_Id ?? '',\r\n                Units: pro?.Units ?? '',\r\n                Product: {\r\n                    ...pro,\r\n                    Cgst_P: Number(findProductDetails(products, pro.Item_Id)?.Cgst_P) ?? 0,\r\n                    Sgst_P: Number(findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0,\r\n                    Igst_P: Number(findProductDetails(products, pro.Item_Id)?.Igst_P) ?? 0,\r\n                    Gst_P: Addition(findProductDetails(products, pro.Item_Id)?.Cgst_P, findProductDetails(products, pro.Item_Id)?.Sgst_P) ?? 0\r\n                } ?? {},\r\n                Group: 'Search Group',\r\n                GroupID: '',\r\n                Brand: 'Search Brand',\r\n                BrandID: '',\r\n                Amount: pro?.Amount ?? 0\r\n            })));\r\n            setIsEdit(true)\r\n            if (!editValues?.Latitude || !editValues?.Longitude) {\r\n                fetchLocation();\r\n            }\r\n        } else {\r\n            setOrderDetails(initialValue);\r\n            setOrderProducts([])\r\n            setIsEdit(false)\r\n        }\r\n    }, [editValues, products])\r\n\r\n    useEffect(() => {\r\n\r\n        fetchLink({\r\n            address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setRetailers(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/uom`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProductUOM(data.data);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/products?Company_Id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setProducts(data.data);\r\n\r\n                const uniqueBrand = getUniqueData(data.data, 'Brand', ['Brand_Name']);\r\n                setProductBrand(uniqueBrand);\r\n\r\n            } else {\r\n                setProducts([]);\r\n                setProductBrand([]);\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n\r\n        // fetchLink({\r\n        //     address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`\r\n        // }).then(data => {\r\n        //     if (data.success) {\r\n        //         setDeliveryPersonList(data.data);\r\n        //     }\r\n        // }).catch(e => console.error(e));\r\n\r\n\r\n        fetchLink({\r\n            address: `masters/company?Company_id=${storage?.Company_id}`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setCompanyInfo(data?.data[0] ? data?.data[0] : {})\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `purchase/voucherType`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setVoucherType(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/branch/dropDown`\r\n        }).then(data => {\r\n            if (data.success) {\r\n                setBranch(data.data)\r\n            }\r\n        }).catch(e => console.error(e))\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    const handleProductInputChange = (productId, value, rate, obj, UOM_Id, Units) => {\r\n        const productIndex = orderProducts.findIndex(item => isEqualNumber(item.Item_Id, productId));\r\n\r\n        if (productIndex !== -1) {\r\n            const updatedValues = [...orderProducts];\r\n            updatedValues[productIndex].Bill_Qty = Number(value);\r\n            updatedValues[productIndex].Item_Rate = Number(rate);\r\n            updatedValues[productIndex].UOM = UOM_Id;\r\n            updatedValues[productIndex].Units = Units;\r\n            updatedValues[productIndex].Amount = Multiplication(value, rate);\r\n            updatedValues[productIndex] = { ...updatedValues[productIndex], Product: obj }\r\n\r\n            setOrderProducts(updatedValues);\r\n        } else {\r\n            setOrderProducts(prevValues => [...prevValues, {\r\n                Item_Id: productId,\r\n                Bill_Qty: Number(value),\r\n                Item_Rate: Number(rate),\r\n                UOM: UOM_Id,\r\n                Units: Units,\r\n                Amount: Multiplication(value, rate),\r\n                Product: obj\r\n            }]);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const postSaleOrder = () => {\r\n        if (orderProducts?.length > 0 && orderDetails?.Retailer_Id) {\r\n            loadingOn();\r\n\r\n            fetchLink({\r\n                address: `delivery/deliveryOrder`,\r\n                method: (isEdit && !editOn) ? 'PUT' : 'POST',\r\n\r\n                bodyData: {\r\n                    ...orderDetails,\r\n                    Product_Array: orderProducts.filter(o => isGraterNumber(o?.Bill_Qty, 0)),\r\n                    Delivery_Person_Id: deliveryPerson ?? Number(orderDetails?.Delivery_Person_Id) ?? 0,\r\n                    Payment_Status: (orderDetails?.Payment_Status) ? Number(orderDetails?.Payment_Status) : 1,\r\n                    Payment_Ref_No: orderDetails?.Payment_Ref_No,\r\n                    Delivery_Status: (orderDetails?.Delivery_Status) ? Number(orderDetails?.Delivery_Status) : 1,\r\n                    Payment_Mode: (orderDetails?.Payment_Mode) ? Number(orderDetails?.Payment_Mode) : 1\r\n                }\r\n\r\n            }).then(data => {\r\n\r\n                if (data.success) {\r\n                    toast.success(data?.message);\r\n\r\n                    setOrderDetails(initialValue);\r\n                    setOrderProducts([])\r\n                    reload()\r\n                } else {\r\n                    toast.error(data?.message)\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => loadingOff())\r\n\r\n        } else {\r\n            if (orderProducts.length <= 0) {\r\n                return toast.error('Enter any one product quantity')\r\n            }\r\n            if (!orderDetails?.Retailer_Id) {\r\n                toast.error('Select Retailer')\r\n                return toast.error('Select Retailer')\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeAddProduct = () => {\r\n        setAddProductDialog(false);\r\n        setProductDetails(productInitialDetails);\r\n    }\r\n\r\n    const Total_Invoice_value = useMemo(() => {\r\n        return orderProducts.reduce((acc, item) => {\r\n            const Amount = RoundNumber(item?.Amount);\r\n\r\n            if (isNotTaxableBill) return Addition(acc, Amount);\r\n\r\n            const product = findProductDetails(baseData.products, item.Item_Id);\r\n            const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n\r\n            if (isInclusive) {\r\n                return Addition(acc, calculateGSTDetails(Amount, gstPercentage, 'remove').with_tax);\r\n            } else {\r\n                return Addition(acc, calculateGSTDetails(Amount, gstPercentage, 'add').with_tax);\r\n            }\r\n        }, 0)\r\n    }, [orderProducts, isNotTaxableBill, baseData.products, IS_IGST, isInclusive])\r\n\r\n    const totalValueBeforeTax = useMemo(() => {\r\n        return orderProducts.reduce((acc, item) => {\r\n            const Amount = RoundNumber(item?.Amount);\r\n\r\n            if (isNotTaxableBill) return {\r\n                TotalValue: Addition(acc.TotalValue, Amount),\r\n                TotalTax: 0\r\n            }\r\n\r\n            const product = findProductDetails(baseData.products, item.Item_Id);\r\n            const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n\r\n            const taxInfo = calculateGSTDetails(Amount, gstPercentage, isInclusive ? 'remove' : 'add');\r\n            const TotalValue = Addition(acc.TotalValue, taxInfo.without_tax);\r\n            const TotalTax = Addition(acc.TotalTax, taxInfo.tax_amount);\r\n\r\n            return {\r\n                TotalValue, TotalTax\r\n            };\r\n        }, {\r\n            TotalValue: 0,\r\n            TotalTax: 0\r\n        });\r\n    }, [orderProducts, isNotTaxableBill, baseData.products, IS_IGST, isInclusive])\r\n\r\n    useEffect(() => {\r\n        setOrderProducts(pre => pre?.map(pro => ({\r\n            ...pro,\r\n            Amount: Multiplication(pro?.Item_Rate, pro?.Bill_Qty)\r\n        })));\r\n    }, [orderDetails.GST_Inclusive])\r\n\r\n    useEffect(() => {\r\n        setOrderProducts(pre => pre?.map(pro => ({\r\n            ...pro,\r\n            Amount: Multiplication(pro?.Item_Rate, pro?.Bill_Qty)\r\n        })));\r\n    }, [orderDetails.GST_Inclusive])\r\n\r\n    // const handleDeliveryPersonChange = (selectedOption) => {\r\n\r\n    //     setDeliveryPerson(selectedOption ? { UserId: selectedOption.value, Name: selectedOption.label } : null);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            {editOn && (\r\n                <>\r\n                    <h6 className=\"fa-18 m-0 p-3 py-2 d-flex align-items-center justify-content-between\">Create Delivery Order</h6>\r\n                </>\r\n            )}\r\n\r\n            <div className=\"p-3 pt-0\">\r\n                {/* CompnayInfo  */}\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">From:</h5>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-md-7\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\" colSpan={2}>\r\n                                            {companyInfo?.Company_Name}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{companyInfo?.Company_Address}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{companyInfo?.Telephone_Number}</td>\r\n                                    </tr>\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-5\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Date:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={orderDetails?.Do_Date ? ISOString(orderDetails?.Do_Date) : ''}\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Do_Date: e.target.value })}\r\n                                                className=\"cus-inpt p-1\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Invoice Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, GST_Inclusive: Number(e.target.value) })}\r\n                                                value={orderDetails.GST_Inclusive}\r\n                                            >\r\n                                                <option value={1}>Inclusive Tax</option>\r\n                                                <option value={0}>Exclusive Tax</option>\r\n                                                <option value={2}>Not Taxable</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Tax Type:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, IS_IGST: Number(e.target.value) })}\r\n                                                value={orderDetails.IS_IGST}\r\n                                            >\r\n                                                <option value='0'>GST</option>\r\n                                                <option value='1'>IGST</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Voucher Type <span style={{ color: \"red\" }}>*</span></td>\r\n\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1 \"\r\n                                                onChange={e => setOrderDetails({\r\n                                                    ...orderDetails,\r\n                                                    VoucherType: e.target.value\r\n                                                })}\r\n\r\n                                                value={orderDetails.VoucherType}\r\n                                            >\r\n\r\n                                                <option value='' disabled>select voucher</option>\r\n                                                {voucherType.map((vou, ind) => (\r\n                                                    <option\r\n                                                        value={vou.Vocher_Type_Id}\r\n                                                        key={ind}\r\n                                                    >\r\n                                                        {vou.Voucher_Type}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Branch <span style={{ color: \"red\" }}>*</span></td>\r\n\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Branch_Id: Number(e.target.value) })}\r\n                                                value={orderDetails.Branch_Id}\r\n                                            >\r\n                                                <option value='' disabled>select Branch</option>\r\n                                                {branch.map((branch, ind) => (\r\n                                                    <option value={branch.BranchId} key={ind}>{branch.BranchName}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Customer Info */}\r\n\r\n                <div className=\"p-3 bg-light rounded-3 mb-3 shadow-sm\">\r\n                    <h5 className=\"border-bottom\">To:</h5>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Retailer Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={{ value: orderDetails?.Retailer_Id, label: orderDetails?.Retailer_Name }}\r\n                                                onChange={(e) => setOrderDetails({ ...orderDetails, Retailer_Id: e.value, Retailer_Name: e.label })}\r\n                                                options={[\r\n                                                    { value: '', label: 'select', isDisabled: true },\r\n                                                    ...retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\"Retailer Name\"}\r\n                                                maxMenuHeight={200}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Address:</td>\r\n                                        <td className=\"border-0 bg-light\">{storage.Name}</td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Phone:</td>\r\n                                        <td className=\"border-0 bg-light\">{ }</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Delivery_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Delivery_Status: e.target.value })}\r\n                                                value={orderDetails.Delivery_Status ? orderDetails.Delivery_Status : 1}\r\n                                            >\r\n                                                <option value={5}>Pending</option>\r\n\r\n                                                <option value={7}>Delivered</option>\r\n                                                <option value={6}>Return</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Mode:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Payment_Mode: e.target.value })}\r\n                                                value={orderDetails.Payment_Mode || 0}\r\n                                            >\r\n                                                <option value={0}></option>\r\n                                                <option value={1}>Cash</option>\r\n                                                <option value={3}>QR-Pay</option>\r\n                                                <option value={2}>G-Pay</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Q-Pay:</td>\r\n                                        <td className=\"border-0 bg-light\">{10}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Frequency Days:</td>\r\n                                        <td className=\"border-0 bg-light\">{20}</td>\r\n                                    </tr>\r\n\r\n\r\n\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment_Status:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <select\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Payment_Status: Number(e.target.value) })}\r\n                                                value={orderDetails.Payment_Status}\r\n                                            >\r\n                                                <option value={1}>Pending</option>\r\n\r\n                                                <option value={3}>Complete</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    {/* <tr>\r\n                                        <td className=\"border-0 bg-light\">Delivery Person Name:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <Select\r\n                                                value={\r\n                                                    deliveryPerson\r\n                                                        ? { value: deliveryPerson.UserId, label: deliveryPerson.Name }\r\n                                                        : { value: orderDetails?.Delivery_Person_Id, label: orderDetails?.Delivery_Person_Name }\r\n                                                }\r\n                                                onChange={handleDeliveryPersonChange}\r\n                                                options={[\r\n                                                    { value: '', label: 'Select', isDisabled: true },\r\n                                                    ...deliveryPersonList.map((obj) => ({\r\n                                                        value: obj.UserId,\r\n                                                        label: obj.Name,\r\n                                                    })),\r\n                                                ]}\r\n                                                styles={customSelectStyles}\r\n                                                isSearchable={true}\r\n                                                placeholder={\r\n                                                    deliveryPerson\r\n                                                        ? deliveryPerson.Name\r\n                                                        : 'Sales Person Name'\r\n                                                }\r\n                                            />\r\n                                        </td>\r\n                                    </tr> */}\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"border-0 bg-light\">Payment Reference No:</td>\r\n                                        <td className=\"border-0 bg-light\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"cus-inpt p-1\"\r\n                                                onChange={e => setOrderDetails({ ...orderDetails, Payment_Ref_No: e.target.value })}\r\n                                                value={orderDetails?.Payment_Ref_No}  // Default to empty string if no value available\r\n                                                placeholder=\"Enter Payment Reference Number\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* Actions */}\r\n                <div className=\"d-flex align-items-end justify-content-end flex-wrap mb-3\">\r\n\r\n                    <Button\r\n                        onClick={() => setAddProductDialog(true)}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        startIcon={<Add />}\r\n                    >Add Product</Button>\r\n                </div>\r\n\r\n                <FilterableTable\r\n                    dataArray={orderProducts}\r\n                    columns={[\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.Product_Name,\r\n                            ColumnHeader: 'Product',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Product?.HSN_Code,\r\n                            ColumnHeader: 'HSN Code',\r\n                            isVisible: 1,\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => row?.Bill_Qty + (row?.Units ?? ''),\r\n                            ColumnHeader: 'Quantity',\r\n                            isVisible: 1,\r\n                            align: 'center'\r\n                        },\r\n                        {\r\n                            Field_Name: 'Item_Rate',\r\n                            ColumnHeader: \"Rate\",\r\n                            Fied_Data: 'number',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Taxable Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST ? row?.Product?.Igst_P : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage);\r\n                                return NumberFormat(\r\n                                    isInclusive ? (amount - tax) : amount\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST ? row?.Product?.Igst_P : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                return NumberFormat(\r\n                                    taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                ) + ' (' + percentage + '%)'\r\n                            },\r\n                            ColumnHeader: 'Tax',\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            ColumnHeader: 'Amount',\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                const percentage = (\r\n                                    IS_IGST\r\n                                        ? row?.Product?.Igst_P\r\n                                        : Addition(row?.Product?.Cgst_P, row?.Product?.Sgst_P)\r\n                                ) ?? 0;\r\n                                const amount = row.Amount ?? 0;\r\n                                const tax = taxCalc(orderDetails.GST_Inclusive, amount, percentage)\r\n                                return NumberFormat(\r\n                                    isEqualNumber(orderDetails.GST_Inclusive, 1) ? amount : (amount + tax)\r\n                                )\r\n                            },\r\n                            isVisible: 1,\r\n                            align: 'right'\r\n                        },\r\n                        {\r\n                            isCustomCell: true,\r\n                            Cell: ({ row }) => {\r\n                                return (\r\n                                    <>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                setProductDetails({\r\n                                                    Item_Id: row.Item_Id,\r\n                                                    ItemName: row?.Product?.Product_Name,\r\n                                                    Bill_Qty: row.Bill_Qty,\r\n                                                    Item_Rate: row.Item_Rate,\r\n                                                    UOM: row.Product.UOM_Id,\r\n                                                    Product: row.Product,\r\n                                                    Group: row?.Product?.Pro_Group,\r\n                                                    GroupID: row?.Product?.Product_Group,\r\n                                                    Brand: row?.Product?.Brand_Name,\r\n                                                    BrandID: row?.Product?.Brand,\r\n                                                    Amount: row?.Amount\r\n                                                });\r\n                                                setAddProductDialog(true);\r\n                                            }}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <Edit />\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setOrderProducts(pre => pre.filter(obj => !isEqualNumber(obj.Item_Id, row.Item_Id)))\r\n                                            }}\r\n                                            color='error'\r\n                                        >\r\n                                            <Delete />\r\n                                        </IconButton>\r\n\r\n                                    </>\r\n                                )\r\n                            },\r\n                            ColumnHeader: 'Action',\r\n                            isVisible: 1,\r\n                        },\r\n                    ]}\r\n                    EnableSerialNumber\r\n                    CellSize=\"small\"\r\n                    disablePagination={true}\r\n                />\r\n\r\n\r\n                {orderProducts.length > 0 && (\r\n                    <div className=\"d-flex justify-content-end py-2\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className=\"border p-2\" rowSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 4 : 5}>\r\n                                        Total in words: {numberToWords(parseInt(Total_Invoice_value))}\r\n                                    </td>\r\n                                    <td className=\"border p-2\">Total Taxable Amount</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                    </td>\r\n                                </tr>\r\n                                {!isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                    <>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">CGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">SGST</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </>\r\n                                ) : (\r\n                                    <tr>\r\n                                        <td className=\"border p-2\">IGST</td>\r\n                                        <td className=\"border p-2\">\r\n                                            {NumberFormat(totalValueBeforeTax.TotalTax)}\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                                <tr>\r\n                                    {/* {\r\n                                            Total_Invoice_value}\r\n                                            {\r\n                                                totalValueBeforeTax}\r\n                                                 { totalValueBeforeTax.TotalTax\r\n                                             }\r\n                                        */}\r\n\r\n                                    <td className=\"border p-2\">Round Off</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {RoundNumber(Math.round(Total_Invoice_value) - Total_Invoice_value)}\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <td className=\"border p-2\">Total</td>\r\n                                    <td className=\"border p-2\">\r\n                                        {NumberFormat(Math.round(Total_Invoice_value))}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n\r\n                <p className=\"fa-15 mt-3 m-0\">Narration</p>\r\n                <textarea\r\n                    className=\"cus-inpt \"\r\n                    value={orderDetails.Narration}\r\n                    onChange={e => setOrderDetails(pre => ({ ...pre, Narration: e.target.value }))}\r\n                />\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button\r\n                        variant='outlined'\r\n                        startIcon={<Clear />}\r\n                        onClick={switchScreen}\r\n                    >\r\n                        {'cancel'}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={postSaleOrder}\r\n                        sx={{ ml: 1 }}\r\n                        variant='outlined'\r\n                        color='success'\r\n                        startIcon={<Save />}\r\n                        disabled={orderProducts?.length === 0 || !orderDetails?.Retailer_Id}\r\n                    >Save</Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={addProductDialog}\r\n                onClose={closeAddProduct}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (productDetails.Item_Id && productDetails.Bill_Qty && productDetails.Item_Rate) {\r\n                        handleProductInputChange(\r\n                            productDetails.Item_Id,\r\n                            productDetails.Bill_Qty,\r\n                            productDetails.Item_Rate,\r\n                            productDetails.Product,\r\n                            productDetails.UOM,\r\n                            productDetails.Units,\r\n                        );\r\n                        closeAddProduct();\r\n                    } else {\r\n                        toast.warn(!productDetails.Item_Id ? 'Select Product' : !productDetails.Bill_Qty ? 'Enter Quantity' : 'Enter Rate or Amount');\r\n                    }\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.BrandID, label: productDetails.Brand }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, BrandID: e.value, Brand: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productBrand.map(obj => ({ value: obj?.Brand, label: obj?.Brand_Name }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, GroupID: e.value, Group: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...productGroup.map(obj => ({ value: obj?.Product_Group, label: obj?.Pro_Group }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div> */}\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({ ...pre, GroupID: e.value, Group: e.label }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...products\r\n                                            .filter(\r\n                                                (pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-12 p-2\">\r\n                                <label>Item Name <RequiredStar /></label>\r\n                                <Select\r\n                                    value={{ value: productDetails.Item_Id, label: productDetails.ItemName }}\r\n                                    onChange={e => {\r\n                                        const productInfo = products.find(pro => isEqualNumber(pro.Product_Id, e.value))\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n                                            Item_Id: e.value,\r\n                                            ItemName: e.label,\r\n                                            Product: productInfo ?? {},\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n                                            UOM: productInfo.UOM_Id ?? pre.UOM,\r\n                                            Units: productInfo.Units ?? pre.Units,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Amount: 0,\r\n                                            Bill_Qty: 0,\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter(pro => productDetails.BrandID ? isEqualNumber(pro.Brand, productDetails.BrandID) : true)\r\n                                                .filter(pro => productDetails.GroupID ? isEqualNumber(pro.Product_Group, productDetails.GroupID) : true)\r\n                                        ].map(obj => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled: (\r\n                                                orderProducts.findIndex(ind => isEqualNumber(\r\n                                                    ind?.Item_Id, obj?.Product_Id\r\n                                                ))\r\n                                            ) === -1 ? false : true\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Quantity <RequiredStar /></label>\r\n                                <input\r\n                                    type=\"input\"\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : ''}\r\n                                    onChange={e => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(productDetails.Item_Rate, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else if (productDetails.Amount) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(pre.Amount, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Rate </label>\r\n                                <input\r\n                                    type=\"float\"\r\n                                    value={productDetails.Item_Rate ? (productDetails.Item_Rate) : ''}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Item_Rate: e.target.value,\r\n                                        Amount: pre.Bill_Qty ? Multiplication(e.target.value, pre.Bill_Qty) : pre.Amount\r\n                                    }))}\r\n                                    min={1}\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <select\r\n                                    value={productDetails.UOM}\r\n                                    onChange={e => {\r\n                                        const selectedIndex = e.target.selectedIndex;\r\n                                        const label = e.target.options[selectedIndex].text;\r\n                                        const value = e.target.value;\r\n                                        setProductDetails(pre => ({ ...pre, UOM: value, Units: label }));\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                >\r\n                                    <option value=\"\" disabled>select</option>\r\n                                    {productUOM.map((o, i) => (\r\n                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    type=\"input\"\r\n                                    value={productDetails.Amount ? productDetails.Amount : ''}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Amount: e.target.value,\r\n                                        Item_Rate: pre.Bill_Qty ? Division(e.target.value, pre.Bill_Qty) : pre.Item_Rate\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions className=\"d-flex justify-content-between align-items-center\">\r\n                        <Button onClick={() => setProductDetails(productInitialDetails)} type='button' startIcon={<ClearAll />}>Clear</Button>\r\n                        <span>\r\n                            <Button type=\"button\" onClick={closeAddProduct}>cancel</Button>\r\n                            <Button type='submit' variant=\"outlined\">Add</Button>\r\n                        </span>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default NewDeliveryOrder;","export const convertedStatus = [\r\n    {\r\n        id: 0,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 1,\r\n        label: 'Verified',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Converted',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]\r\n\r\nexport const dbStatus = [\r\n    {\r\n        id: 1,\r\n        label: 'New',\r\n        color: ' bg-info text-white '\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'Progess',\r\n        color: ' bg-warning text-white '\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'Completed',\r\n        color: ' bg-success text-white '\r\n    },\r\n    {\r\n        id: 4,\r\n        label: 'Canceled',\r\n        color: ' bg-danger text-white '\r\n    },\r\n]"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","calculateGSTDetails","amount","gstRate","type","arguments","length","undefined","validatedAmount","toNumber","validatedGstRate","halfGstRate","baseAmount","taxAmount","withTax","withoutTax","Error","sgstAmount","toFixed","cgstAmount","igstAmount","base_amount","Number","with_tax","without_tax","tax_per","tax_amount","sgst_per","sgst_amount","cgst_per","cgst_amount","igst_per","igst_amount","taxCalc","percentage","RoundNumber","_ref","orderDetails","orderProducts","download","actionOpen","clearDetails","TitleText","pageSize","setPageSize","useState","a4Styles","width","minHeight","padding","backgroundColor","boxSizing","boxShadow","fontFamily","lineHeight","overflow","display","flexDirection","flexGrow","paddingTop","margin","height","pageBreakAfter","pageBreakInside","a5Styles","storage","JSON","parse","localStorage","getItem","open","setOpen","retailerInfo","setRetailerInfo","companyInfo","setCompanyInfo","printRef","useRef","isExclusiveBill","isEqualNumber","GST_Inclusive","isInclusive","isNotTaxableBill","IS_IGST","useEffect","fetchLink","address","concat","Company_id","then","data","success","catch","e","console","error","Retailer_Id","handleClose","includedProducts","filter","orderProduct","isGraterNumber","Bill_Qty","totalValueBeforeTax","reduce","acc","item","itemRate","Item_Rate","billQty","parseInt","TotalValue","Multiplication","gstPercentage","Igst","Addition","Sgst","Cgst","itemTax","basePrice","Subraction","TotalTax","handlePrint","useReactToPrint","content","current","pageStyle","extraDetails","labelOne","dataOne","So_Id","labelTwo","dataTwo","LocalDate","So_Date","TaxData","HSNindex","findIndex","obj","hsnCode","HSN_Code","Taxable_Amount","Cgst_Amo","Sgst_Amo","Igst_Amo","prev","newValue","_objectSpread","taxableValue","cgst","sgst","igst","totalTax","newEntry","cgstPercentage","sgstPercentage","igstPercentage","_jsxs","_Fragment","onClick","handleOpen","Dialog","onClose","fullWidth","maxWidth","sx","alignItems","maxHeight","DialogTitle","textAlign","position","top","zIndex","DialogContent","ref","justifyContent","className","Company_Name","Company_Address","Region","Pincode","Gst_Number","State","Retailer_Name","Mobile_No","Reatailer_Address","Reatailer_City","PinCode","Gstno","StateGet","map","detail","index","colSpan","o","i","_ref2","Igst_P","quantity","Product_Name","NumberFormat","UOM","rowSpan","numberToWords","Total_Invoice_value","IGST_Total","CSGT_Total","SGST_Total","Round_off","verticalAlign","sum","DialogActions","px","id","checked","onChange","handleToggle","htmlFor","gap","Button","startIcon","Close","variant","Download","loadingOn","loadingOff","onToggle","reload","triggerReload","saleOrders","setSaleOrders","retailers","setRetailers","salesPerson","setSalePerson","users","setUsers","screen","setScreen","orderInfo","setOrderInfo","viewOrder","setViewOrder","deleteConfirm","setDeleteConfirm","itemTodelete","setItemToDelete","isDeliveryDetailsVisible","setIsDeliveryDetailsVisible","filters","setFilters","Fromdate","getPreviousDate","Todate","ISOString","RetailerGet","Created_by","CreatedByGet","Delivery_Person_Id","Delivery_Person_Name","Cancel_status","pageLoad","setPageLoad","dialog","setDialog","saleOrderColumn","Field_Name","ColumnHeader","Fied_Data","isVisible","align","isCustomCell","Cell","row","Tooltip","title","IconButton","Products_List","size","Visibility","switchScreen","isEdit","Edit","openDeleteDialog","So_No","itemData","Do_Id","Delete","closeDialog","Card","isValidObject","FilterAlt","Switch","label","inputProps","CardContent","FilterableTable","dataArray","columns","isExpendable","tableMaxHeight","expandableComp","_ref3","Branch_Name","Sales_Person_Name","Narration","NewDeliveryOrder","editValues","pre","Object","keys","DeliveryInvoiceTemplate","async","method","bodyData","Order_Id","toast","message","Select","value","options","styles","customSelectStyles","isSearchable","placeholder","UserId","Name","target","findProductDetails","_arr$find","productid","find","Product_Id","editOn","baseData","setBaseData","products","branch","voucherType","uom","staff","staffType","brand","setProducts","productBrand","setProductBrand","productUOM","setProductUOM","setVoucherType","setBranch","initialValue","Company_Id","Do_Date","VoucherType","Delivery_Status","Payment_Ref_No","Payment_Mode","Payment_Status","Branch_Id","BranchId","Product_Array","productInitialDetails","Item_Id","ItemName","Units","Product","Group","GroupID","Brand","BrandID","Amount","setOrderDetails","setOrderProducts","productDetails","setProductDetails","setIsEdit","addProductDialog","setAddProductDialog","deliveryPerson","_editValues$Products_","_editValues$Do_Date","Voucher_Type","pro","_pro$Item_Id","_pro$Product_Name","_pro$Bill_Qty","_pro$Item_Rate","_pro$Unit_Id","_pro$Units","_pro$Cgst_P$Sgst_P$Ig","_Number","_findProductDetails","_Number2","_findProductDetails2","_Number3","_findProductDetails3","_Addition","_findProductDetails4","_findProductDetails5","_pro$Amount","Unit_Id","Cgst_P","Sgst_P","Gst_P","Latitude","Longitude","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","Delivery_Latitude","Delivery_Longitude","warn","fetchLocation","uniqueBrand","getUniqueData","closeAddProduct","useMemo","product","taxInfo","Telephone_Number","disabled","vou","ind","Vocher_Type_Id","BranchName","isDisabled","maxMenuHeight","ml","Add","_row$Product","_ref4","_row$Product2","_ref5","_row$Units","_ref6","_ref7","_row$Product3","_row$Product4","_row$Product5","_row$Amount","tax","_ref8","_ref9","_row$Product6","_row$Product7","_row$Product8","_row$Amount2","_ref10","_ref11","_row$Product9","_row$Product10","_row$Product11","_row$Amount3","_ref12","_row$Product12","_row$Product13","_row$Product14","_row$Product15","_row$Product16","UOM_Id","Pro_Group","Product_Group","Brand_Name","EnableSerialNumber","CellSize","disablePagination","Math","round","Clear","postSaleOrder","finally","Save","onSubmit","preventDefault","handleProductInputChange","productId","rate","productIndex","updatedValues","prevValues","some","grp","push","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$UOM_Id","_productInfo$Units","_productInfo$Item_Rat","required","Division","min","selectedIndex","text","ClearAll","convertedStatus","dbStatus"],"sourceRoot":""}
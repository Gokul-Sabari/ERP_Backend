{"version":3,"file":"static/js/2176.7d4e220e.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/tablecolumn.js","Components/taxCalculator.js","../node_modules/@mui/icons-material/esm/ArrowLeft.js","../node_modules/@mui/icons-material/esm/Done.js","Pages/Sales/SaleOrder/column.js","Pages/Sales/SaleOrder/importFromPos.jsx","Pages/Sales/SaleOrder/addItemToCart.jsx","Pages/Sales/SaleOrder/saleOrderCreation.jsx","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/Clear.js","../node_modules/@mui/icons-material/esm/ClearAll.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        height: '45px',\r\n        background: 'rgba(255, 255, 255, 0.322)'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 })\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]","/**\r\n * @param {number} amount \r\n * @param {number} gstRate \r\n * @param {string} type 3 Types add, remove, zerotax\r\n * @returns {object} \r\n */\r\n\r\nimport { toNumber } from \"./functions\";\r\n\r\nexport const calculateGSTDetails = (amount, gstRate, type = 'add') => {\r\n\r\n    const validatedAmount = toNumber(amount);\r\n    const validatedGstRate = toNumber(gstRate);\r\n\r\n    const halfGstRate = validatedGstRate / 2;\r\n    let baseAmount, taxAmount, withTax, withoutTax;\r\n\r\n    if (type === 'zerotax') {\r\n        baseAmount = validatedAmount; // No tax applied\r\n        taxAmount = 0;\r\n        withTax = validatedAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'add') {\r\n        taxAmount = (validatedAmount * validatedGstRate) / 100;\r\n        baseAmount = validatedAmount;\r\n        withTax = validatedAmount + taxAmount;\r\n        withoutTax = validatedAmount;\r\n    } else if (type === 'remove') {\r\n        baseAmount = validatedAmount / (1 + validatedGstRate / 100);\r\n        taxAmount = validatedAmount - baseAmount;\r\n        withTax = validatedAmount;\r\n        withoutTax = baseAmount;\r\n    } else {\r\n        throw new Error(\"Invalid type. Use 'add', 'remove', or 'zerotax'.\");\r\n    }\r\n\r\n    const sgstAmount = (taxAmount / 2).toFixed(2);\r\n    const cgstAmount = (taxAmount / 2).toFixed(2);\r\n    const igstAmount = taxAmount.toFixed(2);\r\n\r\n    return {\r\n        base_amount: Number(baseAmount).toFixed(2),\r\n        with_tax: Number(withTax).toFixed(2),\r\n        without_tax: Number(withoutTax).toFixed(2),\r\n        tax_per: Number(validatedGstRate),\r\n        tax_amount: Number(taxAmount).toFixed(2),\r\n        sgst_per: Number(halfGstRate),\r\n        sgst_amount: Number(sgstAmount),\r\n        cgst_per: Number(halfGstRate),\r\n        cgst_amount: Number(cgstAmount),\r\n        igst_per: Number(validatedGstRate),\r\n        igst_amount: Number(igstAmount),\r\n        type,\r\n    };\r\n};","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m14 7-5 5 5 5z\"\n}), 'ArrowLeft');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4z\"\n}), 'Done');","import { getSessionUser, ISOString } from \"../../../Components/functions\"\r\n\r\nconst storage = getSessionUser().user;\r\n\r\nexport const saleOrderGeneralInfo = {\r\n    So_Id: '',\r\n    So_Inv_No: '',\r\n    So_Year: '',\r\n    So_Branch_Inv_Id: '',\r\n\r\n    So_Date: ISOString(),\r\n    Retailer_Id: '',\r\n    Sales_Person_Id: '',\r\n    Branch_Id: '',\r\n    VoucherType: '',\r\n    GST_Inclusive: 2,\r\n    IS_IGST: 0,\r\n    Narration: '',\r\n    isConverted: '',\r\n    Cancel_status: '',\r\n    \r\n    CSGT_Total: 0,\r\n    SGST_Total: 0,\r\n    IGST_Total: 0,\r\n    Round_off: 0,\r\n    Total_Before_Tax: 0,\r\n    Total_Tax: 0,\r\n    Total_Invoice_value: 0,\r\n\r\n    Created_by: storage?.UserId,\r\n    Altered_by: storage?.UserId,\r\n    Approved_By: '',\r\n    Approve_Status: '',\r\n\r\n    Created_on: '',\r\n    Alterd_on: '',\r\n    Trans_Type: '',\r\n    Alter_Id: '',\r\n}\r\n\r\nexport const saleOrderStockInfo = {\r\n    // front-end purpose\r\n    BrandID: '',\r\n    Brand: '',\r\n    GroupID: '',\r\n    Group: '',\r\n\r\n    // backend generated\r\n    SO_St_Id: '',\r\n    So_Date: '',\r\n    Sales_Order_Id: '',\r\n    S_No: '',\r\n\r\n    // from entry\r\n    Pre_Id: '',\r\n    Item_Id: '',\r\n    Item_Rate: 0,\r\n    Bill_Qty: 0,\r\n    Amount: 0,\r\n    HSN_Code: '',\r\n    Unit_Id: '',\r\n    Unit_Name: '',\r\n\r\n    // others\r\n    Free_Qty: 0,\r\n    Total_Qty: 0,\r\n\r\n    // from product master  \r\n    Taxble: 0, // 0 means tax not applicable\r\n    Taxable_Rate: 0,\r\n    Taxable_Amount: 0,\r\n    Tax_Rate: 0,\r\n    Cgst: 0,\r\n    Cgst_Amo: 0,\r\n    Sgst: 0,\r\n    Sgst_Amo: 0,\r\n    Igst: 0,\r\n    Igst_Amo: 0,\r\n    Final_Amo: 0,\r\n\r\n    // generated from server\r\n    Created_on: '',\r\n}","import { useEffect, useState } from \"react\";\r\nimport { checkIsNumber, isEqualNumber, ISOString, LocalDate, toNumber } from \"../../../Components/functions\";\r\nimport { Button, Dialog, DialogContent, DialogTitle, IconButton } from \"@mui/material\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport { Done } from \"@mui/icons-material\";\r\nimport { saleOrderStockInfo } from \"./column\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\n\r\n\r\n\r\nconst ImportFromPOS = ({\r\n    loadingOn,\r\n    loadingOff,\r\n    open,\r\n    onClose,\r\n    retailer,\r\n    children,\r\n    selectedItems,\r\n    setSelectedItems,\r\n    products = [],\r\n    GST_Inclusive,\r\n    IS_IGST\r\n}) => {\r\n\r\n    const isInclusive = isEqualNumber(GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(GST_Inclusive, 2);\r\n\r\n    const findProductDetails = (productid) => products?.find(obj => isEqualNumber(obj?.Product_Id, productid)) ?? {};\r\n\r\n    const [saleOrders, setSaleOrders] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        search: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (checkIsNumber(retailer) && open) {\r\n            const { Fromdate, Todate } = filters;\r\n            if (loadingOn) loadingOn();\r\n            fetchLink({\r\n                address: `sales/saleOrder/importPosOrders?Fromdate=${Fromdate}&Todate=${Todate}&Retailer_Id=${retailer}`\r\n            }).then(data => {\r\n                if (data.success) setSaleOrders(data.data);\r\n                else setSaleOrders([]);\r\n            }).catch(e => console.error(e)).finally(() => {\r\n                if (loadingOff) loadingOff();\r\n            })\r\n        }\r\n    }, [filters.search])\r\n\r\n    const changeSelectedItems = (itemDetail, deleteRow = false) => {\r\n        setSelectedItems(prev => {\r\n            const preItems = prev.filter(o => !isEqualNumber(o?.Pre_Id, itemDetail.Pre_Id));\r\n\r\n            let tempArray;\r\n            if (deleteRow) {\r\n                tempArray = preItems;\r\n            } else {\r\n                const currentOrder = saleOrders.filter(sale => isEqualNumber(sale.Pre_Id, itemDetail.Pre_Id))\r\n                const reStruc = currentOrder.map(cur => (\r\n                    Object.fromEntries(\r\n                        Object.entries(saleOrderStockInfo).map(([key, value]) => {\r\n\r\n                            const productMaster = findProductDetails(cur.Item_Id);\r\n                            const gstPercentage = IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n                            const isTaxable = gstPercentage > 0;\r\n\r\n                            const { Bill_Qty, Item_Rate, Amount } = cur;\r\n\r\n                            const taxType = isNotTaxableBill ? 'zerotax' : isInclusive ? 'remove' : 'add';\r\n                            const itemRateGst = calculateGSTDetails(Item_Rate, gstPercentage, taxType);\r\n                            const gstInfo = calculateGSTDetails(Amount, gstPercentage, taxType);\r\n\r\n                            const cgstPer = !IS_IGST ? gstInfo.cgst_per : 0;\r\n                            const igstPer = IS_IGST ? gstInfo.igst_per : 0;\r\n                            const Cgst_Amo = !IS_IGST ? gstInfo.cgst_amount : 0;\r\n                            const Igst_Amo = IS_IGST ? gstInfo.igst_amount : 0;\r\n\r\n                            switch (key) {\r\n                                case 'Pre_Id': return [key, cur['Pre_Id'] ?? value];\r\n                                case 'Item_Id': return [key, cur['Item_Id'] ?? value];\r\n                                case 'Item_Rate': return [key, toNumber(Item_Rate)];\r\n                                case 'Bill_Qty': return [key, toNumber(Bill_Qty)];\r\n                                case 'Amount': return [key, toNumber(Amount)];\r\n                                case 'Unit_Id': return [key, cur['Unit_Id'] ?? value];\r\n                                case 'Unit_Name': return [key, cur['Units'] ?? value];\r\n                                case 'HSN_Code': return [key, productMaster.HSN_Code ?? value];\r\n\r\n                                case 'Taxable_Rate': return [key, itemRateGst.base_amount]\r\n                                case 'Total_Qty': return [key, Bill_Qty]\r\n                                case 'Taxble': return [key, isTaxable ? 1 : 0]\r\n                                case 'Taxable_Amount': return [key, gstInfo.base_amount]\r\n                                case 'Tax_Rate': return [key, gstPercentage]\r\n                                case 'Cgst':\r\n                                case 'Sgst': return [key, cgstPer ?? 0]\r\n                                case 'Cgst_Amo':\r\n                                case 'Sgst_Amo': return [key, isNotTaxableBill ? 0 : Cgst_Amo]\r\n                                case 'Igst': return [key, igstPer ?? 0]\r\n                                case 'Igst_Amo': return [key, isNotTaxableBill ? 0 : Igst_Amo]\r\n                                case 'Final_Amo': return [key, gstInfo.with_tax]\r\n\r\n                                default: return [key, value]\r\n                            }\r\n                        })\r\n                    )\r\n                ))\r\n                tempArray = [...preItems, ...reStruc];\r\n            }\r\n            return tempArray;\r\n        });\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        if (onClose) onClose();\r\n        setSaleOrders([]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={closeDialog}\r\n                fullScreen\r\n            >\r\n                <DialogTitle>\r\n                    <div className=\"d-flex flex-wrap align-items-center \">\r\n                        <span className=\"flex-grow-1\">Import from POS</span>\r\n                        <IconButton\r\n                            onClick={closeDialog}\r\n                            color='success'\r\n                        >\r\n                            <Done className=\"fa-20\" />\r\n                        </IconButton>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        setFilters(pre => ({ ...pre, search: !pre.search }))\r\n                    }}>\r\n                        <div className=\"d-flex flex-wrap align-items-end\">\r\n                            <div>\r\n                                <label className='d-block ms-2'>From Date</label>\r\n                                <input\r\n                                    className=\"cus-inpt p-2 w-auto\"\r\n                                    type=\"date\"\r\n                                    value={filters?.Fromdate}\r\n                                    onChange={e => setFilters(pre => ({ ...pre, Fromdate: e.target.value }))}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label className='d-block ms-2'>To Date</label>\r\n                                <input\r\n                                    className=\"cus-inpt p-2 w-auto ms-2\"\r\n                                    type=\"date\"\r\n                                    min={filters.Fromdate}\r\n                                    value={filters?.Todate}\r\n                                    onChange={e => setFilters(pre => ({ ...pre, Todate: e.target.value }))}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                className=\"ms-2\"\r\n                                type=\"submit\"\r\n                            >search</Button>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className=\"table-responsive mt-3\">\r\n                        <table className=\"table table-bordered fa-13\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {['Sno', '#', 'Item', 'Qty', 'Rate', 'Amount', 'Order ID', 'Date', 'Invoice Value'].map((col, ind) => (\r\n                                        <th key={ind} >{col}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {saleOrders.filter(\r\n                                    sale => isEqualNumber(sale.Custome_Id, retailer)\r\n                                ).map((sale, saleInd) => (\r\n                                    <tr key={saleInd}>\r\n                                        <td>{saleInd + 1}</td>\r\n                                        <td>\r\n                                            {(() => {\r\n                                                const isChecked = selectedItems.findIndex(o =>\r\n                                                    isEqualNumber(o?.Pre_Id, sale.Pre_Id)\r\n                                                ) !== -1;\r\n\r\n                                                return (\r\n                                                    <div>\r\n                                                        <input\r\n                                                            className=\"form-check-input shadow-none pointer\"\r\n                                                            style={{ padding: '0.7em' }}\r\n                                                            type=\"checkbox\"\r\n                                                            checked={isChecked}\r\n                                                            onChange={() => {\r\n                                                                if (isChecked) changeSelectedItems(sale, true)\r\n                                                                else changeSelectedItems(sale)\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                )\r\n                                            })()}\r\n                                        </td>\r\n                                        <td>{sale?.Product_Name}</td>\r\n                                        <td>{sale?.Bill_Qty}</td>\r\n                                        <td>{sale?.Item_Rate}</td>\r\n                                        <td>{sale?.Amount}</td>\r\n                                        <td>{sale?.Pre_Id}</td>\r\n                                        <td>{LocalDate(sale?.Pre_Date)}</td>\r\n                                        <td>{sale?.Total_Invoice_value}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImportFromPOS;","import { useEffect, useState } from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from \"@mui/material\";\r\nimport { checkIsNumber, Division, isEqualNumber, isValidObject, Multiplication, onlynum, RoundNumber } from \"../../../Components/functions\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { saleOrderStockInfo } from \"./column\";\r\nimport { ClearAll } from \"@mui/icons-material\";\r\nimport RequiredStar from \"../../../Components/requiredStar\";\r\nimport { calculateGSTDetails } from \"../../../Components/taxCalculator\";\r\nimport { toast } from \"react-toastify\";\r\nimport Select from \"react-select\";\r\n\r\nconst AddItemToSaleOrderCart = ({\r\n    children,\r\n    orderProducts = [],\r\n    setOrderProducts,\r\n    open = false,\r\n    onClose,\r\n    products = [],\r\n    brands = [],\r\n    uom = [],\r\n    GST_Inclusive,\r\n    IS_IGST,\r\n    editValues = null\r\n}) => {\r\n\r\n    const [productDetails, setProductDetails] = useState(saleOrderStockInfo);\r\n\r\n    const isInclusive = isEqualNumber(GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(GST_Inclusive, 2);\r\n\r\n    const findProductDetails = (productid) => products?.find(obj => isEqualNumber(obj?.Product_Id, productid)) ?? {};\r\n\r\n    const handleProductInputChange = () => {\r\n\r\n        setOrderProducts(pre => {\r\n            const existingProducts = pre.filter(ordered => !isEqualNumber(ordered.Item_Id, productDetails.Item_Id));\r\n\r\n            const currentProductDetails = Object.fromEntries(\r\n                Object.entries(saleOrderStockInfo).map(([key, value]) => {\r\n                    const productMaster = findProductDetails(productDetails.Item_Id);\r\n                    const gstPercentage = IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n                    const isTaxable = gstPercentage > 0;\r\n\r\n                    const { Bill_Qty, Item_Rate, Amount } = productDetails;\r\n\r\n                    const taxType = isNotTaxableBill ? 'zerotax' : isInclusive ? 'remove' : 'add';\r\n                    const itemRateGst = calculateGSTDetails(Item_Rate, gstPercentage, taxType);\r\n                    const gstInfo = calculateGSTDetails(Amount, gstPercentage, taxType);\r\n\r\n                    const cgstPer = !IS_IGST ? gstInfo.cgst_per : 0;\r\n                    const igstPer = IS_IGST ? gstInfo.igst_per : 0;\r\n                    const Cgst_Amo = !IS_IGST ? gstInfo.cgst_amount : 0;\r\n                    const Igst_Amo = IS_IGST ? gstInfo.igst_amount : 0;\r\n\r\n                    switch (key) {\r\n                        case 'Taxable_Rate': return [key, itemRateGst.base_amount]\r\n                        case 'Total_Qty': return [key, Bill_Qty]\r\n                        case 'Taxble': return [key, isTaxable ? 1 : 0]\r\n                        case 'Taxable_Amount': return [key, gstInfo.base_amount]\r\n                        case 'Tax_Rate': return [key, gstPercentage]\r\n                        case 'Cgst':\r\n                        case 'Sgst': return [key, cgstPer ?? 0]\r\n                        case 'Cgst_Amo':\r\n                        case 'Sgst_Amo': return [key, isNotTaxableBill ? 0 : Cgst_Amo]\r\n                        case 'Igst': return [key, igstPer ?? 0]\r\n                        case 'Igst_Amo': return [key, isNotTaxableBill ? 0 : Igst_Amo]\r\n                        case 'Final_Amo': return [key, gstInfo.with_tax]\r\n\r\n                        default: return [key, productDetails[key] || value]\r\n                    }\r\n                })\r\n            );\r\n\r\n            return [...existingProducts, currentProductDetails];\r\n        });\r\n\r\n        setProductDetails(saleOrderStockInfo);\r\n        onClose();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isValidObject(editValues) && open) {\r\n            setProductDetails(pre => (\r\n                Object.fromEntries(\r\n                    Object.entries(pre).map(([key, value]) => [key, editValues[key] ? editValues[key] : value])\r\n                )\r\n            ))\r\n        }\r\n    }, [editValues])\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={onClose}\r\n                maxWidth='sm' fullWidth\r\n            >\r\n                <DialogTitle className=\"border-bottom\">\r\n                    <span>Add Products Details</span>\r\n                </DialogTitle>\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    if (productDetails.Item_Id) {\r\n                        handleProductInputChange();\r\n                    } else {\r\n                        toast.warn('Select Product');\r\n                    }\r\n                }}>\r\n                    <DialogContent>\r\n                        <div className=\"row pb-5\">\r\n\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Brand</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.BrandID, label: productDetails.Brand }}\r\n                                    onChange={(e) => setProductDetails(pre => ({ ...pre, BrandID: e.value, Brand: e.label }))}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        brands.map(obj => ({ value: obj?.Brand, label: obj?.Brand_Name }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Brand\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-6 p-2\">\r\n                                <label>Group</label>\r\n                                <Select\r\n                                    value={{ value: productDetails.GroupID, label: productDetails.Group }}\r\n                                    onChange={(e) =>\r\n                                        setProductDetails((pre) => ({ ...pre, GroupID: e.value, Group: e.label }))\r\n                                    }\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        products\r\n                                            .filter(\r\n                                                (pro) =>\r\n                                                    productDetails.BrandID\r\n                                                        ? isEqualNumber(pro.Brand, productDetails.BrandID)\r\n                                                        : true\r\n                                            )\r\n                                            .reduce((acc, pro) => {\r\n                                                if (\r\n                                                    !acc.some((grp) => grp.value === pro.Product_Group)\r\n                                                ) {\r\n                                                    acc.push({\r\n                                                        value: pro.Product_Group,\r\n                                                        label: pro.Pro_Group,\r\n                                                    });\r\n                                                }\r\n                                                return acc;\r\n                                            }, []),\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    placeholder={\"Select Group\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-12 p-2\">\r\n                                <label>Item Name <RequiredStar /></label>\r\n                                <Select\r\n                                    value={{\r\n                                        value: productDetails.Item_Id,\r\n                                        label: findProductDetails(productDetails.Item_Id)?.Product_Name\r\n                                    }}\r\n                                    isDisabled={checkIsNumber(productDetails.Pre_Id)}\r\n                                    onChange={e => {\r\n                                        const productInfo = findProductDetails(e.value);\r\n                                        setProductDetails(pre => ({\r\n                                            ...pre,\r\n\r\n                                            Group: productInfo.Pro_Group ?? pre.Group,\r\n                                            GroupID: productInfo.Product_Group ?? pre.GroupID,\r\n                                            Brand: productInfo.Brand_Name ?? pre.Brand,\r\n                                            BrandID: productInfo.Brand ?? pre.BrandID,\r\n\r\n                                            Item_Id: e.value,\r\n                                            Item_Rate: productInfo.Item_Rate ?? 0,\r\n                                            Bill_Qty: 0,\r\n                                            Amount: 0,\r\n                                            Unit_Id: productInfo.UOM_Id ?? pre.Unit_Id,\r\n                                            Unit_Name: productInfo.Units ?? pre.Unit_Name,\r\n                                            HSN_Code: productInfo?.HSN_Code\r\n                                        }));\r\n                                    }}\r\n                                    options={[\r\n                                        { value: '', label: 'select', isDisabled: true },\r\n                                        ...[\r\n                                            ...products\r\n                                                .filter(pro => productDetails.BrandID ? isEqualNumber(pro.Brand, productDetails.BrandID) : true)\r\n                                                .filter(pro => productDetails.GroupID ? isEqualNumber(pro.Product_Group, productDetails.GroupID) : true)\r\n                                        ].map(obj => ({\r\n                                            value: obj?.Product_Id,\r\n                                            label: obj?.Product_Name,\r\n                                            isDisabled: (\r\n                                                orderProducts.findIndex(ind => isEqualNumber(\r\n                                                    ind?.Item_Id, obj?.Product_Id\r\n                                                ))\r\n                                            ) === -1 ? false : true\r\n                                        }))\r\n                                    ]}\r\n                                    styles={customSelectStyles}\r\n                                    isSearchable={true}\r\n                                    required\r\n                                    placeholder={\"Select Product\"}\r\n                                    maxMenuHeight={200}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Quantity <RequiredStar /></label>\r\n                                <input\r\n                                    required\r\n                                    value={productDetails.Bill_Qty ? productDetails.Bill_Qty : ''}\r\n                                    onInput={onlynum}\r\n                                    onChange={e => {\r\n                                        if (productDetails.Item_Rate) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Amount: Multiplication(productDetails.Item_Rate, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else if (productDetails.Amount) {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Item_Rate: Division(pre.Amount, e.target.value),\r\n                                                Bill_Qty: e.target.value,\r\n                                            }))\r\n                                        } else {\r\n                                            setProductDetails(pre => ({\r\n                                                ...pre,\r\n                                                Bill_Qty: e.target.value,\r\n                                            }));\r\n                                        }\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>Rate </label>\r\n                                <input\r\n                                    value={productDetails.Item_Rate ? productDetails.Item_Rate : ''}\r\n                                    onInput={onlynum}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Item_Rate: e.target.value,\r\n                                        Amount: pre.Bill_Qty ? Multiplication(e.target.value, pre.Bill_Qty) : pre.Amount\r\n                                    }))}\r\n                                    required\r\n                                    className=\"cus-inpt\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-4 col-md-6 p-2\">\r\n                                <label>UOM</label>\r\n                                <select\r\n                                    value={productDetails.UOM}\r\n                                    onChange={e => {\r\n                                        const selectedIndex = e.target.selectedIndex;\r\n                                        const label = e.target.options[selectedIndex].text;\r\n                                        const value = e.target.value;\r\n                                        setProductDetails(pre => ({ ...pre, UOM: value, Units: label }));\r\n                                    }}\r\n                                    className=\"cus-inpt\"\r\n                                >\r\n                                    <option value=\"\" disabled>select</option>\r\n                                    {uom.map((o, i) => (\r\n                                        <option value={o.Unit_Id} key={i} >{o.Units}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6 p-2\">\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    required\r\n                                    value={productDetails.Amount ? productDetails.Amount : ''}\r\n                                    onInput={onlynum}\r\n                                    onChange={e => setProductDetails(pre => ({\r\n                                        ...pre,\r\n                                        Amount: e.target.value,\r\n                                        Item_Rate: pre.Bill_Qty ? Division(e.target.value, pre.Bill_Qty) : pre.Item_Rate\r\n                                    }))}\r\n                                    className=\"cus-inpt\"\r\n                                    min={1}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions className=\"d-flex justify-content-between align-items-center\">\r\n                        <Button onClick={() => setProductDetails(saleOrderStockInfo)} type='button' startIcon={<ClearAll />}>Clear</Button>\r\n                        <span>\r\n                            <Button type=\"button\" onClick={onClose}>cancel</Button>\r\n                            <Button type='submit' variant=\"outlined\">Add</Button>\r\n                        </span>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddItemToSaleOrderCart;","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Button, IconButton, CardContent, Card } from \"@mui/material\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    isEqualNumber, isGraterNumber, isValidObject, ISOString, getUniqueData,\r\n    NumberFormat, numberToWords,\r\n    RoundNumber, Addition,\r\n    getSessionUser,\r\n    checkIsNumber,\r\n    toNumber\r\n} from \"../../../Components/functions\";\r\nimport { Add, ArrowLeft, Clear, Delete, Download, Edit, Save } from \"@mui/icons-material\";\r\nimport { fetchLink } from '../../../Components/fetchComponent';\r\nimport FilterableTable, { createCol } from \"../../../Components/filterableTable2\";\r\nimport { calculateGSTDetails } from '../../../Components/taxCalculator';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport ImportFromPOS from \"./importFromPos\";\r\nimport { saleOrderGeneralInfo, saleOrderStockInfo } from \"./column\";\r\nimport AddItemToSaleOrderCart from \"./addItemToCart\";\r\n\r\nconst storage = getSessionUser().user;\r\n\r\nconst findProductDetails = (arr = [], productid) => arr.find(obj => isEqualNumber(obj.Product_Id, productid)) ?? {};\r\n\r\nconst SaleOrderCreation = ({ loadingOn, loadingOff }) => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const editValues = location.state;\r\n    const [baseData, setBaseData] = useState({\r\n        products: [],\r\n        branch: [],\r\n        retailers: [],\r\n        voucherType: [],\r\n        uom: [],\r\n        staff: [],\r\n        staffType: [],\r\n        salesPerson: [],\r\n        brand: [],\r\n    });\r\n\r\n    const [orderDetails, setOrderDetails] = useState(saleOrderGeneralInfo)\r\n    const [orderProducts, setOrderProducts] = useState([]);\r\n\r\n    const [companyInfo, setCompanyInfo] = useState({});\r\n    const [selectedProductToEdit, setSelectedProductToEdit] = useState(null);\r\n    const [addProductDialog, setAddProductDialog] = useState(false);\r\n    const [importPosDialog, setImportPosDialog] = useState(false);\r\n\r\n    const isInclusive = isEqualNumber(orderDetails.GST_Inclusive, 1);\r\n    const isNotTaxableBill = isEqualNumber(orderDetails.GST_Inclusive, 2);\r\n    const IS_IGST = isEqualNumber(orderDetails.IS_IGST, 1);\r\n    const taxType = isNotTaxableBill ? 'zerotax' : isInclusive ? 'remove' : 'add';\r\n\r\n    useEffect(() => {\r\n        if (\r\n            isValidObject(editValues) &&\r\n            Array.isArray(editValues?.Products_List)\r\n        ) {\r\n            const { Products_List } = editValues;\r\n            setOrderDetails(\r\n                Object.fromEntries(\r\n                    Object.entries(saleOrderGeneralInfo).map(([key, value]) => {\r\n                        if (key === 'So_Date') return [key, editValues[key] ? ISOString(editValues[key]) : value]\r\n                        return [key, editValues[key] ?? value]\r\n                    })\r\n                )\r\n            );\r\n            setOrderProducts(\r\n                Products_List.map(item => Object.fromEntries(\r\n                    Object.entries(saleOrderStockInfo).map(([key, value]) => {\r\n                        return [key, item[key] ?? value]\r\n                    })\r\n                ))\r\n            );\r\n        }\r\n    }, [editValues])\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    branchResponse,\r\n                    productsResponse,\r\n                    retailerResponse,\r\n                    voucherTypeResponse,\r\n                    uomResponse,\r\n                    staffResponse,\r\n                    staffCategory,\r\n                    salesPersonResponse,\r\n                    companyResponse,\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `masters/branch/dropDown` }),\r\n                    fetchLink({ address: `masters/products` }),\r\n                    fetchLink({ address: `masters/retailers/dropDown?Company_Id=${storage?.Company_id}` }),\r\n                    fetchLink({ address: `purchase/voucherType` }),\r\n                    fetchLink({ address: `masters/uom` }),\r\n                    fetchLink({ address: `dataEntry/costCenter` }),\r\n                    fetchLink({ address: `dataEntry/costCenter/category` }),\r\n                    fetchLink({ address: `masters/users/salesPerson/dropDown` }),\r\n                    fetchLink({ address: `masters/company?Company_id=${storage?.Company_id}` }),\r\n                ]);\r\n\r\n                const branchData = (branchResponse.success ? branchResponse.data : []).sort(\r\n                    (a, b) => String(a?.BranchName).localeCompare(b?.BranchName)\r\n                );\r\n                const productsData = (productsResponse.success ? productsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Product_Name).localeCompare(b?.Product_Name)\r\n                );\r\n                const retailersData = (retailerResponse.success ? retailerResponse.data : []).sort(\r\n                    (a, b) => String(a?.Retailer_Name).localeCompare(b?.Retailer_Name)\r\n                );\r\n                const voucherType = (voucherTypeResponse.success ? voucherTypeResponse.data : []).sort(\r\n                    (a, b) => String(a?.Voucher_Type).localeCompare(b?.Voucher_Type)\r\n                );\r\n                const uomData = (uomResponse.success ? uomResponse.data : []).sort(\r\n                    (a, b) => String(a.Units).localeCompare(b.Units)\r\n                );\r\n                const staffData = (staffResponse.success ? staffResponse.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Center_Name).localeCompare(b?.Cost_Center_Name)\r\n                );\r\n                const staffCategoryData = (staffCategory.success ? staffCategory.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Category).localeCompare(b?.Cost_Category)\r\n                );\r\n                const salesPersonData = (salesPersonResponse.success ? salesPersonResponse.data : []).sort(\r\n                    (a, b) => String(a?.Name).localeCompare(b?.Name)\r\n                );\r\n\r\n                setBaseData((pre) => ({\r\n                    ...pre,\r\n                    products: productsData,\r\n                    branch: branchData,\r\n                    retailers: retailersData,\r\n                    voucherType: voucherType,\r\n                    uom: uomData,\r\n                    staff: staffData,\r\n                    staffType: staffCategoryData,\r\n                    salesPerson: salesPersonData,\r\n                    brand: getUniqueData(productsData, 'Brand', ['Brand_Name'])\r\n                }));\r\n                setCompanyInfo((companyResponse.success && companyResponse?.data[0]) ? companyResponse?.data[0] : {})\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n\r\n    }, [storage?.Company_id])\r\n\r\n    const clearValues = () => {\r\n        setOrderDetails(saleOrderGeneralInfo);\r\n        setOrderProducts([]);\r\n    }\r\n\r\n    const postSaleOrder = () => {\r\n        if (orderProducts?.length > 0 && orderDetails?.Retailer_Id) {\r\n            loadingOn();\r\n            fetchLink({\r\n                address: `sales/saleOrder`,\r\n                method: checkIsNumber(orderDetails?.So_Id) ? 'PUT' : 'POST',\r\n                bodyData: {\r\n                    ...orderDetails,\r\n                    Product_Array: orderProducts.filter(o => isGraterNumber(o?.Bill_Qty, 0))\r\n                }\r\n            }).then(data => {\r\n                if (data.success) {\r\n                    toast.success(data?.message);\r\n                    setOrderDetails(saleOrderGeneralInfo);\r\n                    setOrderProducts([])\r\n                } else {\r\n                    toast.error(data?.message)\r\n                }\r\n            }).catch(e => console.error(e)).finally(() => loadingOff())\r\n\r\n        } else {\r\n            if (orderProducts.length <= 0) {\r\n                return toast.error('Enter any one product quantity')\r\n            }\r\n            if (!orderDetails?.Retailer_Id) {\r\n                return toast.error('Select Retailer')\r\n            }\r\n        }\r\n    }\r\n\r\n    const Total_Invoice_value = useMemo(() => {\r\n        return orderProducts.reduce((acc, item) => {\r\n            const Amount = RoundNumber(item?.Amount);\r\n\r\n            if (isNotTaxableBill) return Addition(acc, Amount);\r\n\r\n            const product = findProductDetails(baseData.products, item.Item_Id);\r\n            const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n\r\n            if (isInclusive) {\r\n                return Addition(acc, calculateGSTDetails(Amount, gstPercentage, 'remove').with_tax);\r\n            } else {\r\n                return Addition(acc, calculateGSTDetails(Amount, gstPercentage, 'add').with_tax);\r\n            }\r\n        }, 0)\r\n    }, [orderProducts, isNotTaxableBill, baseData.products, IS_IGST, isInclusive])\r\n\r\n    const totalValueBeforeTax = useMemo(() => {\r\n        return orderProducts.reduce((acc, item) => {\r\n            const Amount = RoundNumber(item?.Amount);\r\n\r\n            if (isNotTaxableBill) return {\r\n                TotalValue: Addition(acc.TotalValue, Amount),\r\n                TotalTax: 0\r\n            }\r\n\r\n            const product = findProductDetails(baseData.products, item.Item_Id);\r\n            const gstPercentage = isEqualNumber(IS_IGST, 1) ? product.Igst_P : product.Gst_P;\r\n\r\n            const taxInfo = calculateGSTDetails(Amount, gstPercentage, isInclusive ? 'remove' : 'add');\r\n            const TotalValue = Addition(acc.TotalValue, taxInfo.without_tax);\r\n            const TotalTax = Addition(acc.TotalTax, taxInfo.tax_amount);\r\n\r\n            return {\r\n                TotalValue, TotalTax\r\n            };\r\n        }, {\r\n            TotalValue: 0,\r\n            TotalTax: 0\r\n        });\r\n    }, [orderProducts, isNotTaxableBill, baseData.products, IS_IGST, isInclusive])\r\n\r\n    useEffect(() => {\r\n        setOrderProducts(pre => {\r\n            const exist = [...pre];\r\n\r\n            return exist.map(item => {\r\n                return Object.fromEntries(\r\n                    Object.entries(saleOrderStockInfo).map(([key, value]) => {\r\n                        const productMaster = findProductDetails(baseData.products, item?.Item_Id);\r\n                        const gstPercentage = IS_IGST ? productMaster.Igst_P : productMaster.Gst_P;\r\n                        const isTaxable = gstPercentage > 0;\r\n\r\n                        const { Bill_Qty, Item_Rate, Amount } = item;\r\n\r\n                        const itemRateGst = calculateGSTDetails(Item_Rate, gstPercentage, taxType);\r\n                        const gstInfo = calculateGSTDetails(Amount, gstPercentage, taxType);\r\n\r\n                        const cgstPer = !IS_IGST ? gstInfo.cgst_per : 0;\r\n                        const igstPer = IS_IGST ? gstInfo.igst_per : 0;\r\n                        const Cgst_Amo = !IS_IGST ? gstInfo.cgst_amount : 0;\r\n                        const Igst_Amo = IS_IGST ? gstInfo.igst_amount : 0;\r\n\r\n                        switch (key) {\r\n                            case 'Taxable_Rate': return [key, itemRateGst.base_amount]\r\n                            case 'Total_Qty': return [key, Bill_Qty]\r\n                            case 'Taxble': return [key, isTaxable ? 1 : 0]\r\n                            case 'Taxable_Amount': return [key, gstInfo.base_amount]\r\n                            case 'Tax_Rate': return [key, gstPercentage]\r\n                            case 'Cgst':\r\n                            case 'Sgst': return [key, cgstPer ?? 0]\r\n                            case 'Cgst_Amo':\r\n                            case 'Sgst_Amo': return [key, isNotTaxableBill ? 0 : Cgst_Amo]\r\n                            case 'Igst': return [key, igstPer ?? 0]\r\n                            case 'Igst_Amo': return [key, isNotTaxableBill ? 0 : Igst_Amo]\r\n                            case 'Final_Amo': return [key, gstInfo.with_tax]\r\n\r\n                            default: return [key, item[key] || value]\r\n                        }\r\n                    })\r\n                )\r\n            })\r\n        });\r\n    }, [\r\n        saleOrderStockInfo,\r\n        baseData.products,\r\n        IS_IGST,\r\n        taxType,\r\n    ])\r\n\r\n    return (\r\n        <>\r\n            <AddItemToSaleOrderCart\r\n                orderProducts={orderProducts}\r\n                setOrderProducts={setOrderProducts}\r\n                open={addProductDialog}\r\n                onClose={() => {\r\n                    setAddProductDialog(false);\r\n                    setSelectedProductToEdit(null);\r\n                }}\r\n                products={baseData.products}\r\n                brands={baseData.brand}\r\n                uom={baseData.uom}\r\n                GST_Inclusive={orderDetails.GST_Inclusive}\r\n                IS_IGST={IS_IGST}\r\n                editValues={selectedProductToEdit}\r\n            />\r\n\r\n            <Card>\r\n\r\n                <div className=\"d-flex align-items-center flex-wrap p-2\">\r\n                    <h5 className=\"flex-grow-1 ps-2\">Create Order</h5>\r\n                    <Button\r\n                        variant='outlined' sx={{ ml: 1 }}\r\n                        startIcon={<ArrowLeft />}\r\n                        onClick={() => navigate('/erp/sales/saleOrder')}\r\n                    >\r\n                        {'Back'}\r\n                    </Button>\r\n                    <Button\r\n                        variant='outlined' sx={{ ml: 1 }}\r\n                        startIcon={<Clear />}\r\n                        onClick={clearValues}\r\n                    >\r\n                        {'Clear'}\r\n                    </Button>\r\n                </div>\r\n\r\n                <CardContent>\r\n                    <div className=\"pt-0\">\r\n                        {/* CompnayInfo  */}\r\n                        <div className=\"p-3 rounded-3 mb-3 shadow-sm\">\r\n                            <h5 className=\"border-bottom\">From:</h5>\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-lg-4 col-md-6\">\r\n                                    <table className=\"table table-borderless m-0 fa-13\">\r\n                                        <tbody>\r\n                                            <tr><td>\r\n                                                <span className=\"me-2\">Company: </span>\r\n                                                <span>{companyInfo?.Company_Name}</span>\r\n                                            </td></tr>\r\n                                            <tr><td>\r\n                                                <span className=\"me-2\">Address: </span>\r\n                                                <span>{companyInfo?.Company_Address}</span>\r\n                                            </td></tr>\r\n                                            <tr><td>\r\n                                                <span className=\"me-2\">Phone: </span>\r\n                                                <span>{companyInfo?.Telephone_Number}</span>\r\n                                            </td></tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-4 col-md-6\">\r\n                                    <table className=\"table table-borderless fa-13 m-0\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Date:</td>\r\n                                                <td>\r\n                                                    <input\r\n                                                        type=\"date\"\r\n                                                        value={orderDetails?.So_Date ? ISOString(orderDetails?.So_Date) : ''}\r\n                                                        onChange={e => setOrderDetails({ ...orderDetails, So_Date: e.target.value })}\r\n                                                        className=\"cus-inpt p-1\"\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Invoice Type:</td>\r\n                                                <td>\r\n                                                    <select\r\n                                                        className=\"cus-inpt p-1\"\r\n                                                        onChange={e => setOrderDetails({ ...orderDetails, GST_Inclusive: Number(e.target.value) })}\r\n                                                        value={orderDetails.GST_Inclusive}\r\n                                                    >\r\n                                                        <option value={1}>Inclusive Tax</option>\r\n                                                        <option value={0}>Exclusive Tax</option>\r\n                                                        <option value={2}>Not Taxable</option>\r\n                                                    </select>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Tax Type:</td>\r\n                                                <td>\r\n                                                    <select\r\n                                                        className=\"cus-inpt p-1\"\r\n                                                        onChange={e => setOrderDetails({ ...orderDetails, IS_IGST: Number(e.target.value) })}\r\n                                                        value={orderDetails.IS_IGST}\r\n                                                    >\r\n                                                        <option value='0'>GST</option>\r\n                                                        <option value='1'>IGST</option>\r\n                                                    </select>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-4 col-md-6\">\r\n                                    <table className=\"table table-borderless fa-13 m-0\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Sales Person:</td>\r\n                                                <td>\r\n                                                    <select\r\n                                                        className=\"cus-inpt p-1\"\r\n                                                        onChange={e => setOrderDetails({ ...orderDetails, Sales_Person_Id: Number(e.target.value) })}\r\n                                                        value={orderDetails.Sales_Person_Id}\r\n                                                    >\r\n                                                        <option value='' disabled>select sales person</option>\r\n                                                        <option value={storage?.UserId}>{storage?.Name}</option>\r\n                                                        {baseData.salesPerson?.map((vou, ind) => (\r\n                                                            <option value={vou.UserId} key={ind}>{vou.Name}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Voucher Type:</td>\r\n                                                <td>\r\n                                                    <select\r\n                                                        className=\"cus-inpt p-1\"\r\n                                                        onChange={e => setOrderDetails({ ...orderDetails, VoucherType: Number(e.target.value) })}\r\n                                                        value={orderDetails.VoucherType}\r\n                                                    >\r\n                                                        <option value='' disabled>select voucher</option>\r\n                                                        {baseData.voucherType?.filter(vou => vou.Type === 'SALES').map((vou, ind) => (\r\n                                                            <option value={vou.Vocher_Type_Id} key={ind}>{vou.Voucher_Type}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Branch</td>\r\n                                                <td>\r\n                                                    <select\r\n                                                        className=\"cus-inpt p-1\"\r\n                                                        onChange={e => setOrderDetails({ ...orderDetails, Branch_Id: Number(e.target.value) })}\r\n                                                        value={orderDetails.Branch_Id}\r\n                                                    >\r\n                                                        <option value='' disabled>select Branch</option>\r\n                                                        {baseData.branch.map((branch, ind) => (\r\n                                                            <option value={branch.BranchId} key={ind}>{branch.BranchName}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Customer Info */}\r\n\r\n                        <div className=\"p-3 rounded-3 mb-3 shadow-sm\">\r\n                            <h5 className=\"border-bottom\">To:</h5>\r\n\r\n                            <div className=\"row \">\r\n\r\n                                <div className=\"col-md-6\">\r\n                                    <table className=\"table table-borderless\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Retailer Name:</td>\r\n                                                <td>\r\n                                                    <Select\r\n                                                        value={{ value: orderDetails?.Retailer_Id, label: orderDetails?.Retailer_Name }}\r\n                                                        onChange={(e) => {\r\n                                                            setOrderDetails({ ...orderDetails, Retailer_Id: e.value, Retailer_Name: e.label });\r\n                                                            setOrderProducts([]);\r\n                                                        }}\r\n                                                        options={[\r\n                                                            { value: '', label: 'select', isDisabled: true },\r\n                                                            ...baseData.retailers.map(obj => ({ value: obj?.Retailer_Id, label: obj?.Retailer_Name }))\r\n                                                        ]}\r\n                                                        styles={customSelectStyles}\r\n                                                        isSearchable={true}\r\n                                                        placeholder={\"Retailer Name\"}\r\n                                                        maxMenuHeight={200}\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Address:</td>\r\n                                                <td>{storage.Name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Phone:</td>\r\n                                                <td>{ }</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6\">\r\n                                    <table className=\"table table-borderless\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Q-Pay:</td>\r\n                                                <td>{10}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Frequency Days:</td>\r\n                                                <td>{20}</td>\r\n                                            </tr>\r\n\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <FilterableTable\r\n                            title=\"Products\"\r\n                            ButtonArea={\r\n                                <>\r\n                                    {/* <AddItemToSaleOrderCart\r\n                                        orderProducts={orderProducts}\r\n                                        setOrderProducts={setOrderProducts}\r\n                                        open={addProductDialog}\r\n                                        onClose={() => setAddProductDialog(false)}\r\n                                        products={baseData.products}\r\n                                        brands={baseData.brand}\r\n                                        uom={baseData.uom}\r\n                                        GST_Inclusive={orderDetails.GST_Inclusive}\r\n                                        IS_IGST={IS_IGST}\r\n                                    >\r\n                                        <Button\r\n                                            onClick={() => setAddProductDialog(true)}\r\n                                            sx={{ ml: 1 }}\r\n                                            variant='outlined'\r\n                                            startIcon={<Add />}\r\n                                            disabled={\r\n                                                !checkIsNumber(orderDetails.Retailer_Id)\r\n                                                || (orderProducts.length > 0\r\n                                                    && orderProducts.some(pro => checkIsNumber(pro.Pre_Id)))\r\n                                            }\r\n                                        >Add Product</Button>\r\n                                    </AddItemToSaleOrderCart> */}\r\n\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                            setSelectedProductToEdit(null); \r\n                                            setAddProductDialog(true);\r\n                                        }}\r\n                                        sx={{ ml: 1 }}\r\n                                        variant='outlined'\r\n                                        startIcon={<Add />}\r\n                                        disabled={\r\n                                            !checkIsNumber(orderDetails.Retailer_Id)\r\n                                            || (orderProducts.length > 0\r\n                                                && orderProducts.some(pro => checkIsNumber(pro.Pre_Id)))\r\n                                        }\r\n                                    >Add Product</Button>\r\n\r\n                                    <ImportFromPOS\r\n                                        loadingOn={loadingOn} loadingOff={loadingOff}\r\n                                        open={importPosDialog} onClose={() => setImportPosDialog(false)}\r\n                                        retailer={orderDetails?.Retailer_Id}\r\n                                        selectedItems={orderProducts} setSelectedItems={setOrderProducts}\r\n                                        products={baseData.products}\r\n                                        GST_Inclusive={orderDetails.GST_Inclusive}\r\n                                        IS_IGST={IS_IGST}\r\n                                    >\r\n                                        <Button\r\n                                            onClick={() => setImportPosDialog(true)}\r\n                                            disabled={\r\n                                                !checkIsNumber(orderDetails.Retailer_Id)\r\n                                                || (orderProducts.length > 0\r\n                                                    && orderProducts.some(pro => !checkIsNumber(pro.Pre_Id)))\r\n                                            }\r\n                                            sx={{ ml: 1 }}\r\n                                            variant='outlined'\r\n                                            startIcon={<Download />}\r\n                                        >Import pos</Button>\r\n                                    </ImportFromPOS>\r\n\r\n                                </>\r\n                            }\r\n                            dataArray={orderProducts}\r\n                            columns={[\r\n                                {\r\n                                    isCustomCell: true,\r\n                                    Cell: ({ row }) => findProductDetails(baseData.products, row?.Item_Id).Product_Name,\r\n                                    ColumnHeader: 'Product',\r\n                                    isVisible: 1,\r\n                                },\r\n                                {\r\n                                    isCustomCell: true,\r\n                                    Cell: ({ row }) => findProductDetails(baseData.products, row?.Item_Id).Product_Name?.HSN_Code,\r\n                                    ColumnHeader: 'HSN Code',\r\n                                    isVisible: 1,\r\n                                },\r\n                                {\r\n                                    isCustomCell: true,\r\n                                    Cell: ({ row }) => row?.Bill_Qty + ' ' + (row?.Units ?? ''),\r\n                                    ColumnHeader: 'Quantity',\r\n                                    isVisible: 1,\r\n                                    align: 'center'\r\n                                },\r\n                                createCol('Item_Rate', 'number', 'Rate', 'right'),\r\n                                createCol('Taxable_Amount', 'number', 'Taxable Amount', 'right'),\r\n                                {\r\n                                    isCustomCell: true,\r\n                                    Cell: ({ row }) => {\r\n                                        const percentage = findProductDetails(baseData.products, row?.Item_Id)?.Gst_P\r\n                                        const amount = toNumber(row?.Amount);\r\n                                        const taxDetails = calculateGSTDetails(amount, percentage, taxType);\r\n                                        // console.log({ percentage, amount, taxDetails, taxType })\r\n                                        return NumberFormat(taxDetails.tax_amount) + ' (' + taxDetails.tax_per + '%)'\r\n                                    },\r\n                                    ColumnHeader: 'Tax',\r\n                                    isVisible: 1,\r\n                                    align: 'right'\r\n                                },\r\n                                // createCol('Amount', 'number', 'Amount', 'right'),\r\n                                {\r\n                                    ColumnHeader: 'Amount',\r\n                                    isCustomCell: true,\r\n                                    Cell: ({ row }) => {\r\n                                        const percentage = findProductDetails(baseData.products, row?.Item_Id)?.Gst_P\r\n                                        const amount = row.Amount ?? 0;\r\n                                        const tax = calculateGSTDetails(amount, percentage, taxType).tax_amount;\r\n                                        return NumberFormat(\r\n                                            isEqualNumber(orderDetails.GST_Inclusive, 1) ? amount : Addition(amount, tax)\r\n                                        )\r\n                                    },\r\n                                    isVisible: 1,\r\n                                    align: 'right'\r\n                                },\r\n                                {\r\n                                    isCustomCell: true,\r\n                                    Cell: ({ row }) => {\r\n                                        return (\r\n                                            <>\r\n                                                {/* {!checkIsNumber(row?.Pre_Id) && ( */}\r\n                                                {/* <AddItemToSaleOrderCart\r\n                                                    orderProducts={orderProducts}\r\n                                                    setOrderProducts={setOrderProducts}\r\n                                                    open={addProductDialog}\r\n                                                    onClose={() => setAddProductDialog(false)}\r\n                                                    products={baseData.products}\r\n                                                    brands={baseData.brand}\r\n                                                    uom={baseData.uom}\r\n                                                    GST_Inclusive={orderDetails.GST_Inclusive}\r\n                                                    IS_IGST={IS_IGST}\r\n                                                    editValues={row}\r\n                                                >\r\n                                                    <IconButton\r\n                                                        onClick={() => setAddProductDialog(true)}\r\n                                                        size=\"small\"\r\n                                                    >\r\n                                                        <Edit />\r\n                                                    </IconButton>\r\n                                                </AddItemToSaleOrderCart> */}\r\n                                                {/* )} */}\r\n                                                <IconButton\r\n                                                    onClick={() => {\r\n                                                        setSelectedProductToEdit(row);\r\n                                                        setAddProductDialog(true);\r\n                                                    }}\r\n                                                    size=\"small\"\r\n                                                >\r\n                                                    <Edit />\r\n                                                </IconButton>\r\n                                                <IconButton\r\n                                                    size=\"small\"\r\n                                                    onClick={() => {\r\n                                                        if (checkIsNumber(row?.Pre_Id)) {\r\n                                                            setOrderProducts(pre => pre.filter(o => !isEqualNumber(o?.Pre_Id, row?.Pre_Id)))\r\n                                                        } else {\r\n                                                            setOrderProducts(pre => pre.filter(obj => !isEqualNumber(obj.Item_Id, row.Item_Id)))\r\n                                                        }\r\n                                                    }}\r\n                                                    color='error'\r\n                                                >\r\n                                                    <Delete />\r\n                                                </IconButton>\r\n                                            </>\r\n                                        )\r\n                                    },\r\n                                    ColumnHeader: 'Action',\r\n                                    isVisible: 1,\r\n                                },\r\n                            ]}\r\n                            EnableSerialNumber\r\n                            CellSize=\"small\"\r\n                            disablePagination={true}\r\n                        />\r\n\r\n                        {/* invoice Gst and total  */}\r\n                        {orderProducts.length > 0 && (\r\n                            <div className=\"d-flex justify-content-end py-2\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\" rowSpan={isEqualNumber(orderDetails.IS_IGST, 1) ? 4 : 5}>\r\n                                                Total in words: {numberToWords(parseInt(Total_Invoice_value))}\r\n                                            </td>\r\n                                            <td className=\"border p-2\">Total Taxable Amount</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(totalValueBeforeTax.TotalValue)}\r\n                                            </td>\r\n                                        </tr>\r\n                                        {!isEqualNumber(orderDetails.IS_IGST, 1) ? (\r\n                                            <>\r\n                                                <tr>\r\n                                                    <td className=\"border p-2\">CGST</td>\r\n                                                    <td className=\"border p-2\">\r\n                                                        {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"border p-2\">SGST</td>\r\n                                                    <td className=\"border p-2\">\r\n                                                        {NumberFormat(totalValueBeforeTax.TotalTax / 2)}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </>\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td className=\"border p-2\">IGST</td>\r\n                                                <td className=\"border p-2\">\r\n                                                    {NumberFormat(totalValueBeforeTax.TotalTax)}\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">Round Off</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {RoundNumber(Math.round(Total_Invoice_value) - Total_Invoice_value)}\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"border p-2\">Total</td>\r\n                                            <td className=\"border p-2\">\r\n                                                {NumberFormat(Math.round(Total_Invoice_value))}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        )}\r\n\r\n                        <p className=\"fa-15 mt-3 m-0\">Narration</p>\r\n                        <textarea\r\n                            className=\"cus-inpt \"\r\n                            value={orderDetails.Narration}\r\n                            onChange={e => setOrderDetails(pre => ({ ...pre, Narration: e.target.value }))}\r\n                        />\r\n\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <Button\r\n                                onClick={postSaleOrder}\r\n                                sx={{ ml: 1 }}\r\n                                variant='outlined'\r\n                                color='success'\r\n                                startIcon={<Save />}\r\n                                disabled={orderProducts?.length === 0 || !orderDetails?.Retailer_Id}\r\n                            >Save</Button>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SaleOrderCreation;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAll');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","customTableStyles","table","width","backgroundColor","rows","headCells","customSelectStyles","control","provided","state","_objectSpread","height","background","menu","zIndex","menuPortal","base","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","calculateGSTDetails","amount","gstRate","type","arguments","length","undefined","validatedAmount","toNumber","validatedGstRate","halfGstRate","baseAmount","taxAmount","withTax","withoutTax","Error","sgstAmount","toFixed","cgstAmount","igstAmount","base_amount","Number","with_tax","without_tax","tax_per","tax_amount","sgst_per","sgst_amount","cgst_per","cgst_amount","igst_per","igst_amount","createSvgIcon","d","storage","getSessionUser","user","saleOrderGeneralInfo","So_Id","So_Inv_No","So_Year","So_Branch_Inv_Id","So_Date","ISOString","Retailer_Id","Sales_Person_Id","Branch_Id","VoucherType","GST_Inclusive","IS_IGST","Narration","isConverted","Cancel_status","CSGT_Total","SGST_Total","IGST_Total","Round_off","Total_Before_Tax","Total_Tax","Total_Invoice_value","Created_by","UserId","Altered_by","Approved_By","Approve_Status","Created_on","Alterd_on","Trans_Type","Alter_Id","saleOrderStockInfo","BrandID","Brand","GroupID","Group","SO_St_Id","Sales_Order_Id","S_No","Pre_Id","Item_Id","Item_Rate","Bill_Qty","Amount","HSN_Code","Unit_Id","Unit_Name","Free_Qty","Total_Qty","Taxble","Taxable_Rate","Taxable_Amount","Tax_Rate","Cgst","Cgst_Amo","Sgst","Sgst_Amo","Igst","Igst_Amo","Final_Amo","_ref","loadingOn","loadingOff","open","onClose","retailer","selectedItems","setSelectedItems","products","isInclusive","isEqualNumber","isNotTaxableBill","saleOrders","setSaleOrders","useState","filters","setFilters","Fromdate","Todate","search","useEffect","checkIsNumber","fetchLink","concat","then","data","success","catch","e","console","error","finally","changeSelectedItems","itemDetail","deleteRow","prev","preItems","filter","o","tempArray","reStruc","sale","map","cur","Object","fromEntries","entries","_ref2","_cur$Pre_Id","_cur$Item_Id","_cur$Unit_Id","_cur$Units","_productMaster$HSN_Co","key","value","productMaster","productid","_products$find","find","obj","Product_Id","findProductDetails","gstPercentage","Igst_P","Gst_P","isTaxable","taxType","itemRateGst","gstInfo","cgstPer","igstPer","closeDialog","_jsxs","_Fragment","Dialog","fullScreen","DialogTitle","className","IconButton","onClick","Done","DialogContent","onSubmit","preventDefault","pre","onChange","target","required","min","Button","col","ind","Custome_Id","saleInd","isChecked","findIndex","padding","checked","Product_Name","LocalDate","Pre_Date","_findProductDetails","orderProducts","setOrderProducts","brands","uom","editValues","productDetails","setProductDetails","isValidObject","_ref3","maxWidth","fullWidth","ordered","toast","warn","Select","label","options","isDisabled","Brand_Name","styles","isSearchable","placeholder","maxMenuHeight","pro","reduce","acc","some","grp","Product_Group","push","Pro_Group","productInfo","_productInfo$Pro_Grou","_productInfo$Product_","_productInfo$Brand_Na","_productInfo$Brand","_productInfo$Item_Rat","_productInfo$UOM_Id","_productInfo$Units","UOM_Id","Units","onInput","onlynum","Multiplication","Division","UOM","selectedIndex","text","disabled","i","DialogActions","startIcon","ClearAll","_arr$find","_baseData$salesPerson","_baseData$voucherType","navigate","useNavigate","useLocation","baseData","setBaseData","branch","retailers","voucherType","staff","staffType","salesPerson","brand","orderDetails","setOrderDetails","companyInfo","setCompanyInfo","selectedProductToEdit","setSelectedProductToEdit","addProductDialog","setAddProductDialog","importPosDialog","setImportPosDialog","Array","isArray","Products_List","_editValues$key","item","_item$key","async","branchResponse","productsResponse","retailerResponse","voucherTypeResponse","uomResponse","staffResponse","staffCategory","salesPersonResponse","companyResponse","Promise","all","Company_id","branchData","sort","a","b","String","BranchName","localeCompare","productsData","retailersData","Retailer_Name","Voucher_Type","uomData","staffData","Cost_Center_Name","staffCategoryData","Cost_Category","salesPersonData","Name","getUniqueData","fetchData","useMemo","RoundNumber","Addition","product","totalValueBeforeTax","TotalValue","TotalTax","taxInfo","_ref4","AddItemToSaleOrderCart","Card","sx","ml","ArrowLeft","Clear","clearValues","CardContent","Company_Name","Company_Address","Telephone_Number","vou","Type","Vocher_Type_Id","BranchId","FilterableTable","title","ButtonArea","Add","ImportFromPOS","Download","dataArray","columns","isCustomCell","Cell","_ref5","row","ColumnHeader","isVisible","_ref6","_findProductDetails$P","_ref7","_row$Units","createCol","_ref8","percentage","taxDetails","NumberFormat","_ref9","_findProductDetails2","_row$Amount","tax","_ref10","size","Edit","Delete","EnableSerialNumber","CellSize","disablePagination","rowSpan","numberToWords","parseInt","Math","round","postSaleOrder","method","bodyData","Product_Array","isGraterNumber","message","Save","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","root","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}
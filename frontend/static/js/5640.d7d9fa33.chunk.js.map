{"version":3,"file":"static/js/5640.d7d9fa33.chunk.js","mappings":"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","sources":["Pages/Reports/storageClosingStock/itemWise.jsx","Pages/Reports/storageClosingStock/stockInHand.jsx","Pages/Reports/storageClosingStock/variable.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/material/styles/useThemeProps.js","../node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport {\r\n    Addition, checkIsNumber, filterableText,\r\n    groupData, isEqualNumber, stringCompare, toArray, toNumber,\r\n} from \"../../../Components/functions\";\r\nimport FilterableTable from \"../../../Components/filterableTable2\";\r\nimport {\r\n    Autocomplete, Button, Card, Checkbox, Dialog,\r\n    DialogActions, DialogContent, DialogTitle, IconButton,\r\n    Paper, Switch, TextField, Tooltip,\r\n} from \"@mui/material\";\r\nimport {\r\n    CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff, Settings,\r\n} from \"@mui/icons-material\";\r\nimport { useMemo } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst ItemWiseStockReport = ({\r\n    loadingOn,\r\n    loadingOff,\r\n    Fromdate,\r\n    Todate,\r\n    api = \"itemWise\",\r\n    defaultGrouping = \"\",\r\n    storageStockColumns = [],\r\n    groupingOption = true,\r\n    reportName = '',\r\n    url = ''\r\n}) => {\r\n\r\n    const [reportData, setReportData] = useState([]);\r\n    const [filters, setFilters] = useState({});\r\n    const [groupBy, setGroupBy] = useState(defaultGrouping);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [dialog, setDialog] = useState(false);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [columnSettings, setColumnSettings] = useState([]);\r\n    const [reportVisiblity, setReportVisiblity] = useState([]);\r\n\r\n    const propsColumns = storageStockColumns.map((col, colInd) => {\r\n        const columnState = reportVisiblity.find(\r\n            repState => stringCompare(repState.columnName, col?.Column_Name)\r\n        ) || {};\r\n\r\n        return {\r\n            isVisible: columnState?.columnName ? 1 : 0,\r\n            Field_Name: col?.Column_Name,\r\n            Fied_Data: col?.Data_Type,\r\n            OrderBy: columnState?.orderNum || colInd + 1,\r\n            isEnabled: true,\r\n        }\r\n    });\r\n\r\n    const [columns, setColumns] = useState(propsColumns);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/storageStock/${api}?Fromdate=${Fromdate}&Todate=${Todate}`,\r\n            loadingOn, loadingOff\r\n        }).then((data) => {\r\n            if (data.success) setReportData(toArray(data.data));\r\n            else setReportData([]);\r\n        }).catch(e => console.error(e))\r\n    }, [Fromdate, Todate, api]);\r\n\r\n    useEffect(() => {\r\n        const parseData = JSON.parse(localStorage.getItem(\"user\"));\r\n        const companyId = parseData?.Company_id;\r\n\r\n        fetchLink({\r\n            address: `reports/reportState/columnVisiblity?reportName=${reportName}&reportUrl=${url}`\r\n        }).then(data => {\r\n            if (data.success) setReportVisiblity(toArray(data.data));\r\n            else setReportVisiblity([])\r\n        }).catch(e => console.error(e))\r\n\r\n        fetchLink({\r\n            address: `masters/displayLosColumn?company_id=${companyId}`,\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                const settings = toArray(data.data);\r\n                setColumnSettings(settings);\r\n            }\r\n        }).catch(e => console.error(e));\r\n\r\n    }, [reportName, url]);\r\n\r\n    useEffect(() => {\r\n        setColumns((prevColumns) =>\r\n            prevColumns.map((col) => {\r\n                // console.log({ prevColumns, reportVisiblity })\r\n\r\n                const setting = columnSettings.find(\r\n                    (s) => (\r\n                        stringCompare(s?.Column_Name, col?.Field_Name)\r\n                        || stringCompare(s?.ColumnName, col?.Field_Name)\r\n                    )\r\n                );\r\n\r\n                const reportColumnVisibliety = reportVisiblity.find(\r\n                    (s) => stringCompare(s?.columnName, col?.Field_Name)\r\n                );\r\n\r\n                const status = isEqualNumber(setting?.status, 1);\r\n\r\n                return {\r\n                    ...col,\r\n                    isEnabled: status,\r\n                    isVisible: reportColumnVisibliety?.columnName ? 1 : 0,\r\n                    OrderBy: reportColumnVisibliety?.orderNum ? toNumber(reportColumnVisibliety?.orderNum) : col?.OrderBy,\r\n                };\r\n            })\r\n        );\r\n    }, [columnSettings, reportVisiblity]);\r\n\r\n    const sortedColumns = useMemo(() => {\r\n        return [...columns].sort((a, b) =>\r\n            a?.OrderBy && b?.OrderBy\r\n                ? a?.OrderBy - b?.OrderBy\r\n                : b?.OrderBy - a?.OrderBy\r\n        );\r\n    }, [columns]);\r\n\r\n    const DisplayColumn = useMemo(() => {\r\n        return sortedColumns.filter(\r\n            (col) => (\r\n                isEqualNumber(col?.isVisible, 1) || isEqualNumber(col?.Defult_Display, 1)\r\n            )\r\n        );\r\n    }, [sortedColumns]);\r\n\r\n    const showData = useMemo(() => {\r\n        const filter = Object.keys(filters).length > 0;\r\n        const grouping = groupBy ? true : false;\r\n\r\n        const filtered = filter ? filteredData : reportData;\r\n        const groupFiltered = grouping ? groupData(filtered, groupBy) : [];\r\n\r\n        const aggKeys = DisplayColumn.filter(\r\n            (fil) => filterableText(fil.Fied_Data) === \"number\"\r\n        ).map((col) => col.Field_Name);\r\n\r\n        const groupAggregations = groupFiltered.map((grp) => {\r\n            return {\r\n                ...grp,\r\n                ...Object.fromEntries(\r\n                    aggKeys.map((key) => [\r\n                        key,\r\n                        grp?.groupedData?.reduce(\r\n                            (acc, colmn) => Addition(acc, toNumber(colmn[key]) || 0),\r\n                            0\r\n                        ),\r\n                    ])\r\n                ),\r\n            };\r\n        });\r\n\r\n        return grouping ? groupAggregations : filtered;\r\n    }, [filters, reportData, filteredData, groupBy, DisplayColumn]);\r\n\r\n    const getDisplayName = (columnName) => {\r\n        if (!columnName) return \"\";\r\n\r\n        const columnSetting = columnSettings.find(\r\n            (cs) =>\r\n                cs.Column_Name?.toLowerCase() === columnName?.toLowerCase() ||\r\n                cs.ColumnName?.toLowerCase() === columnName?.toLowerCase()\r\n        );\r\n\r\n        if (columnSetting?.Alias_Name) {\r\n            return columnSetting.Alias_Name;\r\n        }\r\n\r\n        const storageColumn = storageStockColumns.find(\r\n            (col) => col.Column_Name?.toLowerCase() === columnName?.toLowerCase()\r\n        );\r\n\r\n        if (storageColumn?.Alias_Name) {\r\n            return storageColumn.Alias_Name;\r\n        }\r\n\r\n        return columnName?.replace(/_/g, \" \");\r\n    };\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filters]);\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters((prevFilters) => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...reportData];\r\n        for (const column of sortedColumns) {\r\n            if (filters[column.Field_Name]) {\r\n                if (filters[column.Field_Name].type === \"range\") {\r\n                    const { min, max } = filters[column.Field_Name];\r\n                    filtered = filtered.filter((item) => {\r\n                        const value = item[column.Field_Name];\r\n                        return (\r\n                            (min === undefined || value >= min) &&\r\n                            (max === undefined || value <= max)\r\n                        );\r\n                    });\r\n                } else if (filters[column.Field_Name].type === \"date\") {\r\n                    const { start, end } = filters[column.Field_Name].value;\r\n                    filtered = filtered.filter((item) => {\r\n                        const dateValue = new Date(item[column.Field_Name]);\r\n                        return (\r\n                            (start === undefined || dateValue >= new Date(start)) &&\r\n                            (end === undefined || dateValue <= new Date(end))\r\n                        );\r\n                    });\r\n                } else if (Array.isArray(filters[column.Field_Name])) {\r\n                    filtered =\r\n                        filters[column.Field_Name]?.length > 0\r\n                            ? filtered.filter((item) =>\r\n                                filters[column.Field_Name].includes(\r\n                                    item[column.Field_Name]?.toLowerCase().trim()\r\n                                )\r\n                            )\r\n                            : filtered;\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Field_Name, Fied_Data } = column;\r\n        if (Fied_Data === \"number\") {\r\n            return (\r\n                <div className=\"d-flex justify-content-between px-2\">\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.min ?? \"\"}\r\n                        onChange={(e) =>\r\n                            handleFilterChange(Field_Name, {\r\n                                type: \"range\",\r\n                                ...filters[Field_Name],\r\n                                min: e.target.value ? parseFloat(e.target.value) : undefined,\r\n                            })\r\n                        }\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.max ?? \"\"}\r\n                        onChange={(e) =>\r\n                            handleFilterChange(Field_Name, {\r\n                                type: \"range\",\r\n                                ...filters[Field_Name],\r\n                                max: e.target.value ? parseFloat(e.target.value) : undefined,\r\n                            })\r\n                        }\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === \"date\") {\r\n            return (\r\n                <div className=\"d-flex justify-content-between px-2\">\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.start ?? \"\"}\r\n                        onChange={(e) =>\r\n                            handleFilterChange(Field_Name, {\r\n                                type: \"date\",\r\n                                value: {\r\n                                    ...filters[Field_Name]?.value,\r\n                                    start: e.target.value || undefined,\r\n                                },\r\n                            })\r\n                        }\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[Field_Name]?.value?.end ?? \"\"}\r\n                        onChange={(e) =>\r\n                            handleFilterChange(Field_Name, {\r\n                                type: \"date\",\r\n                                value: {\r\n                                    ...filters[Field_Name]?.value,\r\n                                    end: e.target.value || undefined,\r\n                                },\r\n                            })\r\n                        }\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Fied_Data === \"string\") {\r\n            const distinctValues = [\r\n                ...new Set(\r\n                    reportData.map((item) => item[Field_Name]?.toLowerCase()?.trim())\r\n                ),\r\n            ];\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${Field_Name}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={(option) => option}\r\n                    value={filters[Field_Name] || []}\r\n                    onChange={(event, newValue) =>\r\n                        handleFilterChange(Field_Name, newValue)\r\n                    }\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={getDisplayName(Field_Name)}\r\n                            placeholder={`Select ${getDisplayName(Field_Name)}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setDialog(false);\r\n        setFilterDialog(false);\r\n    };\r\n\r\n    const resetColumns = () => {\r\n        setColumns(propsColumns);\r\n    };\r\n\r\n    const saveColumnState = () => {\r\n        fetchLink({\r\n            address: `reports/reportState/columnVisiblity`,\r\n            method: \"POST\",\r\n            bodyData: {\r\n                visibleColumns: columns.filter(\r\n                    col => isEqualNumber(col.isVisible, 1)\r\n                ).map(col => ({\r\n                    ColumnName: col.Field_Name,\r\n                    ColumnOrder: col.OrderBy,\r\n                })),\r\n                reportName,\r\n                reportUrl: url,\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FilterableTable\r\n                title=\"Item Wise\"\r\n                EnableSerialNumber\r\n                headerFontSizePx={12}\r\n                bodyFontSizePx={12}\r\n                maxHeightOption\r\n                ButtonArea={\r\n                    <>\r\n                        <Tooltip title=\"Column Visibility\">\r\n                            <IconButton size=\"small\" onClick={() => setDialog(true)}>\r\n                                <Settings />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Clear Filters\">\r\n                            <IconButton size=\"small\" onClick={() => setFilters({})}>\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Filters\">\r\n                            <IconButton onClick={() => setFilterDialog(true)} size=\"small\">\r\n                                <FilterAlt />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        {groupingOption && (\r\n                            <div className=\"d-flex align-items-center flex-wrap\">\r\n                                <span>Group-By: </span>\r\n                                <select\r\n                                    className=\"cus-inpt p-2 w-auto m-1\"\r\n                                    value={groupBy}\r\n                                    onChange={(e) => setGroupBy(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">select group</option>\r\n                                    {DisplayColumn.filter(\r\n                                        (fil) =>\r\n                                            filterableText(fil.Fied_Data) === \"string\" &&\r\n                                            fil?.Field_Name !== \"Ledger_Name\" &&\r\n                                            fil.isEnabled\r\n                                    ).map((col, colInd) => (\r\n                                        <option value={col?.Field_Name} key={colInd}>\r\n                                            {getDisplayName(col?.Field_Name)}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                }\r\n                ExcelPrintOption\r\n                dataArray={showData}\r\n                columns={\r\n                    groupBy\r\n                        ? DisplayColumn.map((col) => ({\r\n                            ...col,\r\n                            ColumnHeader: getDisplayName(col.Field_Name),\r\n                        }))\r\n                        : DisplayColumn.map((col) => ({\r\n                            ...col,\r\n                            ColumnHeader: getDisplayName(col.Field_Name),\r\n                        }))\r\n                }\r\n                isExpendable={groupBy ? true : false}\r\n                expandableComp={({ row }) => (\r\n                    <FilterableTable\r\n                        EnableSerialNumber\r\n                        headerFontSizePx={12}\r\n                        bodyFontSizePx={12}\r\n                        dataArray={toArray(row?.groupedData)}\r\n                        columns={DisplayColumn.filter(\r\n                            (clm) => !stringCompare(clm.Field_Name, groupBy)\r\n                        ).map((col) => ({\r\n                            ...col,\r\n                            ColumnHeader: getDisplayName(col.Field_Name),\r\n                        }))}\r\n                    />\r\n                )}\r\n            />\r\n\r\n            <Dialog open={filterDialog} onClose={closeDialog} maxWidth=\"sm\" fullWidth>\r\n                <DialogContent>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        <span>Filters</span>\r\n                        <span>\r\n                            <Tooltip title=\"Column Visibility\">\r\n                                <IconButton size=\"small\" onClick={() => setDialog(true)}>\r\n                                    <Settings />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Clear Filters\">\r\n                                <IconButton size=\"small\" onClick={() => setFilters({})}>\r\n                                    <FilterAltOff />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </span>\r\n                    </h5>\r\n\r\n                    <div className=\"border rounded-3\">\r\n                        {DisplayColumn.filter((col) => col.isEnabled).map((column, ke) => (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className=\"mt-2 mb-1\">\r\n                                    {getDisplayName(column?.Field_Name)}\r\n                                </label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog} color=\"error\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialog}\r\n                onClose={() => setDialog(false)}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle>Column Settings</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"row\">\r\n                        {columns.map((o, i) => (\r\n                            <div className=\"col-lg-4 col-md-6 p-2\" key={i}>\r\n                                <Card\r\n                                    component={Paper}\r\n                                    className={`p-2 d-flex justify-content-between align-items-center flex-wrap ${i % 2 !== 0 ? \"bg-light\" : \"\"\r\n                                        } ${!o.isEnabled ? \"opacity-50\" : \"\"}`}\r\n                                >\r\n                                    <div className=\"d-flex justify-content-between align-items-center flex-wrap\">\r\n                                        <Switch\r\n                                            checked={Boolean(o?.isVisible)}\r\n                                            onChange={(e) => {\r\n                                                if (o.isEnabled) {\r\n                                                    setColumns((prevColumns) =>\r\n                                                        prevColumns.map((oo) =>\r\n                                                            oo.Field_Name === o?.Field_Name\r\n                                                                ? { ...oo, isVisible: e.target.checked ? 1 : 0 }\r\n                                                                : oo\r\n                                                        )\r\n                                                    )\r\n                                                }\r\n                                            }}\r\n                                        // disabled={!o.isEnabled}\r\n                                        />\r\n                                        <h6 className=\"fa-13 mb-0 fw-bold\">\r\n                                            {getDisplayName(o.Field_Name)}\r\n                                            {!o.isEnabled && (\r\n                                                <span className=\"text-muted small\"></span>\r\n                                            )}\r\n                                        </h6>\r\n                                    </div>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={checkIsNumber(o?.OrderBy) ? o?.OrderBy : \"\"}\r\n                                        onChange={(e) =>\r\n                                            o.isEnabled &&\r\n                                            setColumns((prevColumns) =>\r\n                                                prevColumns.map((oo) =>\r\n                                                    oo.Field_Name === o?.Field_Name\r\n                                                        ? { ...oo, OrderBy: e.target.value }\r\n                                                        : oo\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                        disabled={!o.isEnabled}\r\n                                        className=\"mt-2 p-1 border-0 cus-inpt\"\r\n                                        style={{ width: \"80px\" }}\r\n                                        placeholder=\"Order\"\r\n                                    />\r\n                                </Card>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions className=\"d-flex justify-content-between align-items-center flex-wrap\">\r\n                    <Button onClick={saveColumnState} variant=\"outlined\">\r\n                        Save State\r\n                    </Button>\r\n                    <span>\r\n                        <Button onClick={resetColumns} variant=\"outlined\">\r\n                            Reset\r\n                        </Button>\r\n                        <Button onClick={() => setDialog(false)} color=\"error\">\r\n                            Close\r\n                        </Button>\r\n                    </span>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItemWiseStockReport;","import TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport { Box, IconButton, Tab } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { ISOString } from '../../../Components/functions';\r\nimport { Search } from '@mui/icons-material';\r\nimport ItemWiseStockReport from './itemWise';\r\nimport { storageStockColumnsForItemWise, storageStockColumnsForGodownWise } from './variable';\r\n\r\nconst CustomerClosingStockReport = ({ loadingOn, loadingOff }) => {\r\n    const [tabValue, setTabValue] = useState(1);\r\n    const [dateFilter, setDateFilter] = useState({\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        FilterFromDate: ISOString(),\r\n        FilterTodate: ISOString(),\r\n    })\r\n\r\n    const tabData = [\r\n        {\r\n            name: 'Item Wise',\r\n            component: (\r\n                <ItemWiseStockReport\r\n                    loadingOn={loadingOn}\r\n                    loadingOff={loadingOff}\r\n                    Fromdate={dateFilter.Fromdate}\r\n                    Todate={dateFilter.Todate}\r\n                    api='itemWise'\r\n                    defaultGrouping=''\r\n                    storageStockColumns={storageStockColumnsForItemWise}\r\n                    reportName='stockInHand_itemWise'\r\n                    url='/erp/reports/stockInHand'\r\n                />\r\n            )\r\n        },\r\n        {\r\n            name: 'Godown Wise',\r\n            component: (\r\n                <ItemWiseStockReport\r\n                    loadingOn={loadingOn}\r\n                    loadingOff={loadingOff}\r\n                    Fromdate={dateFilter.Fromdate}\r\n                    Todate={dateFilter.Todate}\r\n                    api='godownWise'\r\n                    defaultGrouping='Godown_Name'\r\n                    storageStockColumns={storageStockColumnsForGodownWise}\r\n                    groupingOption={false}\r\n                    reportName='stockInHand_GodownWise'\r\n                    url='/erp/reports/stockInHand'\r\n                />\r\n            )\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"d-flex align-items-center flex-wrap mb-3\">\r\n                <label htmlFor=\"from\" className='me-1 fw-bold '>Fromdate: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    id='from'\r\n                    className='cus-inpt p-2 w-auto me-2'\r\n                    value={dateFilter.FilterFromDate}\r\n                    onChange={e => setDateFilter(pre => ({ ...pre, FilterFromDate: e.target.value }))}\r\n                />\r\n                <label htmlFor=\"to\" className='me-1 fw-bold '>Todate: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    id='to'\r\n                    className='cus-inpt p-2 w-auto'\r\n                    value={dateFilter.FilterTodate}\r\n                    onChange={e => setDateFilter(pre => ({ ...pre, FilterTodate: e.target.value }))}\r\n                />\r\n                <IconButton\r\n                    size='small'\r\n                    onClick={() => setDateFilter(pre => ({\r\n                        ...pre,\r\n                        Fromdate: pre.FilterFromDate ? pre.FilterFromDate : pre.Fromdate,\r\n                        Todate: pre.FilterTodate ? pre.FilterTodate : pre.Todate\r\n                    }))}\r\n                ><Search /></IconButton>\r\n            </div>\r\n\r\n            <TabContext value={tabValue}>\r\n                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                    <TabList\r\n                        indicatorColor='transparant'\r\n                        onChange={(e, n) => setTabValue(n)}\r\n                        variant='scrollable'\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        {tabData.map(\r\n                            (tab, tabInd) => (\r\n                                <Tab\r\n                                    key={tabInd}\r\n                                    sx={tabValue === (tabInd + 1) ? { backgroundColor: '#c6d7eb' } : {}}\r\n                                    label={tab.name}\r\n                                    value={tabInd + 1}\r\n                                />\r\n                            )\r\n                        )}\r\n                    </TabList>\r\n                </Box>\r\n\r\n                {tabData.map((tab, tabInd) => (\r\n                    <TabPanel value={tabInd + 1} sx={{ p: 0, pt: 2 }} key={tabInd}>\r\n                        {tab.component}\r\n                    </TabPanel>\r\n                ))}\r\n\r\n            </TabContext>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomerClosingStockReport;","export const storageStockColumnsForItemWise = [\r\n    { Column_Name: 'Trans_Date', Data_Type: 'date' },\r\n    { Column_Name: 'Group_Name', Data_Type: 'string' },\r\n    { Column_Name: 'stock_item_name', Data_Type: 'string' },\r\n    { Column_Name: 'OB_Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'OB_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Bal_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Stock_Item', Data_Type: 'string' },\r\n    { Column_Name: 'Group_ST', Data_Type: 'string' },\r\n    { Column_Name: 'Bag', Data_Type: 'string' },\r\n    { Column_Name: 'Stock_Group', Data_Type: 'string' },\r\n    { Column_Name: 'Product_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'S_Sub_Group_1', Data_Type: 'string' },\r\n    { Column_Name: 'Grade_Item_Group', Data_Type: 'string' },\r\n    { Column_Name: 'Item_Name_Modified', Data_Type: 'string' },\r\n];\r\n\r\nexport const storageStockColumnsForGodownWise = [\r\n    // { Column_Name: 'Trans_Date', Data_Type: 'date' },\r\n    { Column_Name: 'Godown_Name', Data_Type: 'string' },\r\n    { Column_Name: 'stock_item_name', Data_Type: 'string' },\r\n    { Column_Name: 'Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'CL_Value', Data_Type: 'number' },\r\n    { Column_Name: 'OB_Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'OB_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Act_Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_Act_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Stock_Item', Data_Type: 'string' },\r\n    { Column_Name: 'Group_ST', Data_Type: 'string' },\r\n    { Column_Name: 'Bag', Data_Type: 'string' },\r\n    { Column_Name: 'Stock_Group', Data_Type: 'string' },\r\n    { Column_Name: 'Product_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'S_Sub_Group_1', Data_Type: 'string' },\r\n    { Column_Name: 'Grade_Item_Group', Data_Type: 'string' },\r\n    { Column_Name: 'Item_Name_Modified', Data_Type: 'string' },\r\n    { Column_Name: 'CL_Rate', Data_Type: 'number' },\r\n]\r\n\r\nexport const itemGroupWiseStockValue = [\r\n    { Column_Name: 'Group_Name', Data_Type: 'string' },\r\n    { Column_Name: 'Brand', Data_Type: 'string' },\r\n    { Column_Name: 'Group_ST', Data_Type: 'string' },\r\n    { Column_Name: 'Stock_Group', Data_Type: 'string' },\r\n    { Column_Name: 'S_Sub_Group_1', Data_Type: 'string' },\r\n    { Column_Name: 'Grade_Item_Group', Data_Type: 'string' },\r\n    { Column_Name: 'Trans_Date', Data_Type: 'date' },\r\n    \r\n    { Column_Name: 'OB_Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'OB_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'OB_Value', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Pur_value', Data_Type: 'number' },\r\n    { Column_Name: 'Adj_Pur_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Adj_Pur_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Adj_Pur_value', Data_Type: 'number' },\r\n    { Column_Name: 'IN_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'IN_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'IN_Value', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Sal_value', Data_Type: 'number' },\r\n    { Column_Name: 'Adj_Sal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Adj_Sal_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Adj_Sal_value', Data_Type: 'number' },\r\n    { Column_Name: 'OUT_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Out_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Out_Value', Data_Type: 'number' },\r\n    { Column_Name: 'Expense_value', Data_Type: 'number' },\r\n    { Column_Name: 'Act_Expense', Data_Type: 'number' },\r\n    { Column_Name: 'Bal_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'CL_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'CL_Value', Data_Type: 'number' },\r\n    { Column_Name: 'CR_CL_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Pre_Qty', Data_Type: 'number' },\r\n    { Column_Name: 'Pre_Rate', Data_Type: 'number' },\r\n    { Column_Name: 'Pre_CL_Value', Data_Type: 'number' },\r\n]","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n} : void 0;\n\n/**\n * @returns {unknown}\n */\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n  if (idPrefix === null) {\n    return null;\n  }\n  return `${context.idPrefix}-T-${value}`;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n      children: childrenProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n  const {\n      children,\n      className,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props);\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","'use client';\n\nimport systemUseThemeProps from '@mui/system/useThemeProps';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nexport default function useThemeProps({\n  props,\n  name\n}) {\n  return systemUseThemeProps({\n    props,\n    name,\n    defaultTheme,\n    themeId: THEME_ID\n  });\n}","import resolveProps from '@mui/utils/resolveProps';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return resolveProps(theme.components[name].defaultProps, props);\n}","'use client';\n\nimport getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}"],"names":["icon","_jsx","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","_ref","loadingOn","loadingOff","Fromdate","Todate","api","defaultGrouping","storageStockColumns","groupingOption","reportName","url","reportData","setReportData","useState","filters","setFilters","groupBy","setGroupBy","filteredData","setFilteredData","dialog","setDialog","filterDialog","setFilterDialog","columnSettings","setColumnSettings","reportVisiblity","setReportVisiblity","propsColumns","map","col","colInd","columnState","find","repState","stringCompare","columnName","Column_Name","isVisible","Field_Name","Fied_Data","Data_Type","OrderBy","orderNum","isEnabled","columns","setColumns","useEffect","fetchLink","address","then","data","success","toArray","catch","e","console","error","parseData","JSON","parse","localStorage","getItem","companyId","Company_id","settings","prevColumns","setting","s","ColumnName","reportColumnVisibliety","status","isEqualNumber","toNumber","sortedColumns","useMemo","sort","a","b","DisplayColumn","filter","Defult_Display","showData","Object","keys","length","grouping","filtered","groupFiltered","groupData","aggKeys","fil","filterableText","groupAggregations","grp","fromEntries","key","_grp$groupedData","groupedData","reduce","acc","colmn","Addition","getDisplayName","columnSetting","cs","_cs$Column_Name","_cs$ColumnName","toLowerCase","Alias_Name","storageColumn","_col$Column_Name","replace","applyFilters","handleFilterChange","column","value","prevFilters","type","min","max","item","undefined","start","end","dateValue","Date","Array","isArray","_filters$column$Field","_item$column$Field_Na","includes","trim","renderFilter","_filters$Field_Name$m","_filters$Field_Name","_filters$Field_Name$m2","_filters$Field_Name2","_filters$Field_Name$v","_filters$Field_Name3","_filters$Field_Name3$","_filters$Field_Name$v2","_filters$Field_Name5","_filters$Field_Name5$","_jsxs","className","children","placeholder","onChange","target","parseFloat","_filters$Field_Name4","_filters$Field_Name6","distinctValues","Set","_item$Field_Name","_item$Field_Name$toLo","Autocomplete","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","event","newValue","renderOption","props","_ref2","selected","Checkbox","style","marginRight","checked","isOptionEqualToValue","opt","val","renderInput","params","TextField","label","closeDialog","_Fragment","FilterableTable","title","EnableSerialNumber","headerFontSizePx","bodyFontSizePx","maxHeightOption","ButtonArea","Tooltip","IconButton","size","onClick","Settings","FilterAltOff","FilterAlt","ExcelPrintOption","dataArray","ColumnHeader","isExpendable","expandableComp","_ref3","row","clm","Dialog","open","onClose","maxWidth","fullWidth","DialogContent","ke","DialogActions","Button","color","DialogTitle","o","i","Card","component","Paper","Switch","Boolean","oo","checkIsNumber","disabled","width","saveColumnState","method","bodyData","visibleColumns","ColumnOrder","reportUrl","toast","message","variant","resetColumns","tabValue","setTabValue","dateFilter","setDateFilter","ISOString","FilterFromDate","FilterTodate","tabData","name","ItemWiseStockReport","storageStockColumnsForItemWise","storageStockColumnsForGodownWise","htmlFor","pre","Search","TabContext","Box","sx","borderBottom","borderColor","TabList","indicatorColor","n","scrollButtons","tab","tabInd","Tab","backgroundColor","TabPanel","p","pt","itemGroupWiseStockValue","createSvgIcon","d","Context","React","idPrefix","setId","Math","round","random","useUniquePrefix","context","Provider","useTabContext","getPanelId","getTabId","_excluded","ref","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","child","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabPanelRoot","styled","overridesResolver","styles","root","theme","padding","spacing","inProps","useThemeProps","ownerState","classes","composeClasses","useUtilityClasses","tabId","clsx","hidden","role","defaultTheme","createTheme","createBox","themeId","THEME_ID","defaultClassName","boxClasses","generateClassName","ClassNameGenerator","generate","systemUseThemeProps","getThemeProps","components","defaultProps","resolveProps","useTheme"],"sourceRoot":""}
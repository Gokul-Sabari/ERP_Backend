{"version":3,"file":"static/js/3028.7546e375.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/AccountTree.js","../node_modules/@mui/icons-material/esm/AccountBalance.js","Pages/Masters/ExpenseReport.jsx","../node_modules/@mui/icons-material/esm/AttachMoney.js","../node_modules/@mui/icons-material/esm/ClearAll.js","../node_modules/@mui/icons-material/esm/ExpandLess.js","../node_modules/@mui/icons-material/esm/ExpandMore.js","../node_modules/@mui/icons-material/esm/FilterList.js","../node_modules/@mui/material/Box/boxClasses.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/system/esm/createBox.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\"\n}), 'AccountTree');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 10h3v7H4zm6.5 0h3v7h-3zM2 19h20v3H2zm15-9h3v7h-3zm-5-9L2 6v2h20V6z\"\n}), 'AccountBalance');","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Paper, Typography, Box, Collapse, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, \r\n    CircularProgress, TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions, Tooltip, Autocomplete\r\n} from \"@mui/material\";\r\nimport {\r\n    ExpandMore, ExpandLess, AccountTree, AccountBalance, AttachMoney, FilterList, ClearAll\r\n} from \"@mui/icons-material\";\r\nimport { fetchLink } from \"../../Components/fetchComponent\";\r\n\r\nconst calculateTotals = (node) => {\r\n    let debit = 0;\r\n    let credit = 0;\r\n\r\n    if (node.accounts?.length) {\r\n        node.accounts.forEach((acc) => {\r\n            debit += Number(acc.Debit_Amount || 0);\r\n            credit += Number(acc.Credit_Amount || 0);\r\n        });\r\n    }\r\n    if (node.children?.length) {\r\n        node.children.forEach((child) => {\r\n            const childTotals = calculateTotals(child);\r\n            debit += childTotals.debit;\r\n            credit += childTotals.credit;\r\n        });\r\n    }\r\n    return { debit, credit, balance: debit - credit };\r\n};\r\n\r\nconst ExpenseNode = ({ node, depth = 0 }) => {\r\n    const [expanded, setExpanded] = useState(depth === 0);\r\n    const totals = calculateTotals(node);\r\n    const hasChildren = node.children?.length > 0;\r\n    const hasAccounts = node.accounts?.length > 0;\r\n\r\n    return (\r\n        <Box sx={{ ml: depth * 2 }}>\r\n            <Paper sx={{ mb: 1, p: 1, backgroundColor: depth === 0 ? \"#f5f5f5\" : \"white\" }}>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\"\r\n                    sx={{ cursor: (hasChildren || hasAccounts) ? \"pointer\" : \"default\" }}\r\n                    onClick={() => (hasChildren || hasAccounts) && setExpanded(!expanded)}>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                        {(hasChildren || hasAccounts) && (\r\n                            <IconButton size=\"small\" sx={{ mr: 1 }}>\r\n                                {expanded ? <ExpandLess /> : <ExpandMore />}\r\n                            </IconButton>\r\n                        )}\r\n                        {hasChildren ? <AccountTree color=\"primary\" sx={{ mr: 1 }} /> : <AccountBalance color=\"secondary\" sx={{ mr: 1 }} />}\r\n                        <Typography fontWeight=\"medium\">{node.group_name}</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" gap={3} sx={{ mr: 2 }}>\r\n                        <Typography variant=\"body2\">Debit: {totals.debit.toFixed(2)}</Typography>\r\n                        <Typography variant=\"body2\">Credit: {totals.credit.toFixed(2)}</Typography>\r\n                        <Typography variant=\"body2\" sx={{ fontWeight: \"bold\", color: totals.balance >= 0 ? \"green\" : \"red\" }}>\r\n                            Balance: {totals.balance.toFixed(2)}\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Collapse in={expanded}>\r\n                    {hasAccounts && (\r\n                        <TableContainer sx={{ mt: 1, mb: 1 }}>\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow sx={{ backgroundColor: \"#eeeeee\" }}>\r\n                                        <TableCell>Account</TableCell>\r\n                                        <TableCell align=\"right\">Debit</TableCell>\r\n                                        <TableCell align=\"right\">Credit</TableCell>\r\n                                        <TableCell align=\"right\">Balance</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {node.accounts.map(acc => (\r\n                                        <TableRow key={acc.Acc_Id}>\r\n                                            <TableCell>\r\n                                                <Box display=\"flex\" alignItems=\"center\">\r\n                                                    <AttachMoney fontSize=\"small\" sx={{ mr: 1 }} />\r\n                                                    {acc.Account_Name}\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{acc.Debit_Amount?.toFixed(2) || '0.00'}</TableCell>\r\n                                            <TableCell align=\"right\">{acc.Credit_Amount?.toFixed(2) || '0.00'}</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {((acc.Debit_Amount || 0) - (acc.Credit_Amount || 0)).toFixed(2)}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    )}\r\n\r\n                    {hasChildren && (\r\n                        <Box>\r\n                            {node.children.map(child => (\r\n                                <ExpenseNode key={child.group_id} node={child} depth={depth + 1} />\r\n                            ))}\r\n                        </Box>\r\n                    )}\r\n                </Collapse>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst ExpenseHierarchy = () => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n\r\n    const [hierarchy, setHierarchy] = useState([]);\r\n    const [fullHierarchy, setFullHierarchy] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [filterDialogOpen, setFilterDialogOpen] = useState(false);\r\n    const [filterOptions, setFilterOptions] = useState({\r\n\r\n        accountNames: [],\r\n\r\n    });\r\n    const [filters, setFilters] = useState({\r\n        fromDate: today,\r\n        toDate: today,\r\n        accountName: null,\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (fullHierarchy.length > 0) {\r\n            const groupNames = new Set();\r\n            const accountNames = new Set();\r\n            const ledgerNames = new Set();\r\n\r\n            const extractData = (nodes) => {\r\n                nodes.forEach(node => {\r\n                    if (node.group_name) groupNames.add(node.group_name);\r\n\r\n                    if (node.accounts?.length) {\r\n                        node.accounts.forEach(acc => {\r\n                            if (acc.Account_Name) accountNames.add(acc.Account_Name);\r\n\r\n                        });\r\n                    }\r\n\r\n                    if (node.children?.length) {\r\n                        extractData(node.children);\r\n                    }\r\n                });\r\n            };\r\n\r\n            extractData(fullHierarchy);\r\n\r\n            setFilterOptions({\r\n                accountNames: Array.from(accountNames),\r\n            });\r\n        }\r\n    }, [fullHierarchy]);\r\n\r\n    const filterHierarchy = (nodes) => {\r\n        if (!nodes) return [];\r\n\r\n        return nodes.reduce((acc, node) => {\r\n\r\n            const newNode = { ...node };\r\n\r\n            if (newNode.accounts?.length) {\r\n                newNode.accounts = newNode.accounts.filter(acc => {\r\n\r\n                    if (filters.accountName && !acc.Account_Name?.toLowerCase().includes(filters.accountName.toLowerCase())) {\r\n                        return false;\r\n                    }\r\n                    if (filters.ledgerName &&\r\n                        !acc.Debit_Ledger_Name?.toLowerCase().includes(filters.ledgerName.toLowerCase()) &&\r\n                        !acc.Credit_Ledger_Name?.toLowerCase().includes(filters.ledgerName.toLowerCase())) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n\r\n            if (newNode.children?.length) {\r\n                newNode.children = filterHierarchy(newNode.children);\r\n            }\r\n\r\n            const groupNameMatch = !filters.groupName ||\r\n                newNode.group_name?.toLowerCase().includes(filters.groupName.toLowerCase());\r\n\r\n            const hasMatchingAccounts = newNode.accounts?.length > 0;\r\n            const hasMatchingChildren = newNode.children?.length > 0;\r\n            const hasMatchingData = hasMatchingAccounts || hasMatchingChildren;\r\n\r\n\r\n            if (groupNameMatch && hasMatchingData) {\r\n                acc.push(newNode);\r\n            }\r\n\r\n            return acc;\r\n        }, []);\r\n    };\r\n\r\n    const fetchExpenseHierarchy = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const query = new URLSearchParams({\r\n                fromDate: filters.fromDate,\r\n                toDate: filters.toDate\r\n            }).toString();\r\n\r\n            const response = await fetchLink({ address: `/reports/expenseReport?${query}` });\r\n            const data = response.data || [];\r\n\r\n            setFullHierarchy(data);\r\n            setHierarchy(data);\r\n            setFilterDialogOpen(false);\r\n        } catch (err) {\r\n            console.error(\"Error fetching expenses:\", err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        if (!filters.groupName && !filters.accountName && !filters.ledgerName) {\r\n            setHierarchy(fullHierarchy);\r\n        } else {\r\n            const filteredData = filterHierarchy(JSON.parse(JSON.stringify(fullHierarchy)));\r\n            setHierarchy(filteredData);\r\n        }\r\n        setFilterDialogOpen(false);\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        setFilters({\r\n            fromDate: today,\r\n            toDate: today,\r\n            groupName: null,\r\n            accountName: null,\r\n            ledgerName: null\r\n        });\r\n        setHierarchy(fullHierarchy);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchExpenseHierarchy();\r\n    }, [filters.fromDate, filters.toDate]);\r\n\r\n    return (\r\n        <Box sx={{ p: 3 }}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n                <Typography variant=\"h5\">Expense Hierarchy</Typography>\r\n                <Box>\r\n                    <Tooltip title=\"Reset filters\">\r\n                        <IconButton onClick={resetFilters} sx={{ mr: 1 }}>\r\n                            <ClearAll />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Filter options\">\r\n                        <IconButton\r\n                            color=\"primary\"\r\n                            onClick={() => setFilterDialogOpen(true)}\r\n                            sx={{ backgroundColor: 'rgba(25, 118, 210, 0.04)' }}\r\n                        >\r\n                            <FilterList />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Dialog open={filterDialogOpen} onClose={() => setFilterDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n                <DialogTitle>Filter Options</DialogTitle>\r\n                <DialogContent>\r\n                    <Box display=\"flex\" flexDirection=\"column\" gap={2} sx={{ pt: 2 }}>\r\n                        <TextField\r\n                            type=\"date\"\r\n                            label=\"From Date\"\r\n                            value={filters.fromDate}\r\n                            onChange={(e) => setFilters({ ...filters, fromDate: e.target.value })}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            type=\"date\"\r\n                            label=\"To Date\"\r\n                            value={filters.toDate}\r\n                            onChange={(e) => setFilters({ ...filters, toDate: e.target.value })}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                        />\r\n\r\n\r\n                        <Autocomplete\r\n                            options={filterOptions.accountNames}\r\n                            value={filters.accountName}\r\n                            onChange={(e, newValue) => setFilters({ ...filters, accountName: newValue })}\r\n                            renderInput={(params) => (\r\n                                <TextField {...params} label=\"Account Name\" fullWidth />\r\n                            )}\r\n                            freeSolo\r\n                        />\r\n\r\n\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setFilterDialogOpen(false)}>Cancel</Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={applyFilters}\r\n                        disabled={loading}\r\n                    >\r\n                        Apply Filters\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {loading ? (\r\n                <Box display=\"flex\" justifyContent=\"center\" p={4}><CircularProgress /></Box>\r\n            ) : hierarchy.length === 0 ? (\r\n                <Paper sx={{ p: 2, textAlign: \"center\" }}>\r\n                    <Typography>No expense data available</Typography>\r\n                </Paper>\r\n            ) : (\r\n                hierarchy.map(group => (\r\n                    <ExpenseNode key={group.group_id} node={group} />\r\n                ))\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ExpenseHierarchy;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4\"\n}), 'AttachMoney');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z\"\n}), 'ClearAll');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 8-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4zM3 6v2h18V6zm3 7h12v-2H6z\"\n}), 'FilterList');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}"],"names":["createSvgIcon","_jsx","d","calculateTotals","node","_node$accounts","_node$children","debit","credit","accounts","length","forEach","acc","Number","Debit_Amount","Credit_Amount","children","child","childTotals","balance","ExpenseNode","_ref","_node$children2","_node$accounts2","depth","expanded","setExpanded","useState","totals","hasChildren","hasAccounts","Box","sx","ml","_jsxs","Paper","mb","p","backgroundColor","display","alignItems","justifyContent","cursor","onClick","IconButton","size","mr","ExpandLess","ExpandMore","AccountTree","color","AccountBalance","Typography","fontWeight","group_name","gap","variant","toFixed","Collapse","in","TableContainer","mt","Table","TableHead","TableRow","TableCell","align","TableBody","map","_acc$Debit_Amount","_acc$Credit_Amount","AttachMoney","fontSize","Account_Name","Acc_Id","group_id","ExpenseHierarchy","today","Date","toISOString","split","hierarchy","setHierarchy","fullHierarchy","setFullHierarchy","loading","setLoading","filterDialogOpen","setFilterDialogOpen","filterOptions","setFilterOptions","accountNames","filters","setFilters","fromDate","toDate","accountName","useEffect","groupNames","Set","extractData","nodes","_node$accounts3","_node$children3","add","Array","from","filterHierarchy","reduce","_newNode$accounts","_newNode$children","_newNode$group_name","_newNode$accounts2","_newNode$children2","newNode","filter","_acc$Account_Name","_acc$Debit_Ledger_Nam","_acc$Credit_Ledger_Na","toLowerCase","includes","ledgerName","Debit_Ledger_Name","Credit_Ledger_Name","groupNameMatch","groupName","hasMatchingAccounts","hasMatchingChildren","push","async","query","URLSearchParams","toString","data","fetchLink","address","err","console","error","fetchExpenseHierarchy","Tooltip","title","resetFilters","ClearAll","FilterList","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","flexDirection","pt","TextField","type","label","value","onChange","e","target","InputLabelProps","shrink","Autocomplete","options","newValue","renderInput","params","freeSolo","DialogActions","Button","applyFilters","filteredData","JSON","parse","stringify","disabled","CircularProgress","textAlign","group","generateUtilityClasses","defaultTheme","createTheme","createBox","themeId","THEME_ID","defaultClassName","boxClasses","root","generateClassName","ClassNameGenerator","generate","_excluded","arguments","undefined","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","className","component","other","_objectWithoutPropertiesLoose","_extends","as","clsx"],"sourceRoot":""}
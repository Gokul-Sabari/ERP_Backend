{"version":3,"file":"static/js/7520.8027acc4.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/FileDownload.js","../node_modules/@mui/icons-material/esm/SettingsOutlined.js","Components/dynamicMuiTable.jsx","Pages/Analytics/reportTemplates.jsx","../node_modules/@mui/icons-material/esm/ArrowBackIosNewOutlined.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Launch.js","../node_modules/@mui/icons-material/esm/List.js","../node_modules/@mui/icons-material/esm/Visibility.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'FileDownload');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4m0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2\"\n}), 'SettingsOutlined');","import React from 'react';\r\nimport { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\r\nimport { isEqualNumber, LocalDate, NumberFormat } from './functions';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { Autocomplete, IconButton, Tooltip, TextField, Checkbox, Dialog, DialogContent, DialogTitle, DialogActions, Button, Box } from '@mui/material';\r\nimport { CheckBox, CheckBoxOutlineBlank, FilterAlt, FilterAltOff, FileDownload, SettingsOutlined } from '@mui/icons-material';\r\nimport { mkConfig, generateCsv, download } from 'export-to-csv';\r\nimport { fetchLink } from './fetchComponent';\r\n\r\nconst formatString = (val, dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return NumberFormat(val)\r\n        case 'date':\r\n            return LocalDate(val);\r\n        case 'string':\r\n            return val;\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nconst getFun = (dataType) => {\r\n    switch (dataType) {\r\n        case 'number':\r\n            return {\r\n                filterVariant: 'range',\r\n                filterFn: 'between',\r\n            }\r\n        case 'date':\r\n            return {\r\n                filterVariant: 'text',\r\n            };\r\n        case 'string':\r\n            // const distinctValues = [];\r\n            // dataArray?.forEach(item => (item[key] && (distinctValues.findIndex(o => o?.value === item[key]?.toLocaleLowerCase()) === -1))\r\n            //     ? distinctValues.push({ label: String(item[key]), value: String(item[key]).toLocaleLowerCase() })\r\n            //     : null\r\n            // )\r\n            return {\r\n                filterVariant: 'text',\r\n            }\r\n\r\n        default:\r\n            return {}\r\n    }\r\n}\r\n\r\nconst csvConfig = mkConfig({\r\n    fieldSeparator: ',',\r\n    decimalSeparator: '.',\r\n    useKeysAsHeaders: true,\r\n});\r\n\r\nconst icon = <CheckBoxOutlineBlank fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBox fontSize=\"small\" />;\r\n\r\nconst DynamicMuiTable = ({ reportId, company, queryFilters, buttons, groupingState }) => {\r\n    const [dispColmn, setDispColmn] = useState([]);\r\n    const [dataArray, setDataArray] = useState([]);\r\n    const [columns, setColumns] = useState([]);\r\n    const [filters, setFilters] = useState({});\r\n    const [filteredData, setFilteredData] = useState(dataArray);\r\n    const filterCount = Object.keys(filters).length;\r\n    const showData = (filterCount > 0) ? filteredData : dataArray;\r\n    const [aggregationValues, setAggregationValues] = useState({});\r\n    const [dialogs, setDialogs] = useState({\r\n        filters: false,\r\n        aggregations: false\r\n    });\r\n    console.log(groupingState)\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/template?ReportId=${reportId}`\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                if (data.data[0]) {\r\n\r\n                    const o = data.data[0];\r\n                    const strucre = {\r\n                        Report_Type_Id: o?.Report_Type_Id,\r\n                        reportName: o?.Report_Name,\r\n                        tables: o?.tablesList?.map(table => ({\r\n                            Table_Id: table?.Table_Id,\r\n                            Table_Name: table?.Table_Name,\r\n                            AliasName: table?.AliasName,\r\n                            Table_Accronym: table?.Table_Accronym,\r\n                            isChecked: true,\r\n                            columns: table?.columnsList?.map(column => ({\r\n                                Column_Data_Type: column?.Column_Data_Type,\r\n                                Column_Name: column?.Column_Name,\r\n                                IS_Default: column?.IS_Default,\r\n                                IS_Join_Key: column?.IS_Join_Key,\r\n                                Order_By: column?.Order_By,\r\n                                Table_Id: column?.Table_Id,\r\n                                isVisible: true,\r\n                                accessColumnName: `${table?.Table_Accronym}_${column?.Column_Name}`\r\n                            }))\r\n                        }))\r\n                    }\r\n                    const allColumns = strucre.tables?.reduce((colArr, table) => {\r\n                        return colArr.concat(table.columns);\r\n                    }, []);\r\n                    setColumns(allColumns);\r\n                }\r\n            }\r\n        }).catch(e => console.log(e))\r\n\r\n    }, [reportId])\r\n\r\n    useEffect(() => {\r\n        if (reportId) {\r\n            fetchLink({\r\n                address: `reports/template/executeQuery`,\r\n                method: 'POST',\r\n                headers: {\r\n                    'Db': company,\r\n                },\r\n                bodyData: {\r\n                    filterReq: queryFilters,\r\n                    ReportID: reportId\r\n                }\r\n            }).then(data => {\r\n                if (data?.success) {\r\n                    setDataArray(data?.data);\r\n                }\r\n            }).catch(e => console.log(e))\r\n        }\r\n    }, [company, reportId])\r\n\r\n    useEffect(() => {\r\n        const displayColumns = [...columns].sort((a, b) => (a.Order_By && b.Order_By) ? a.Order_By - b.Order_By : b.Order_By - a.Order_By)\r\n\r\n        const muiColumns = displayColumns.filter(column =>\r\n            !Boolean(Number(column?.IS_Default)) && !Boolean(Number(column?.IS_Join_Key))\r\n        ).map(column => ({\r\n            header: column?.Column_Name?.replace(/_/g, ' '),\r\n            accessorKey: column?.accessColumnName,\r\n            sortable: true,\r\n            size: 150,\r\n            // ...aggregations(column?.Column_Data_Type, column?.Column_Name),\r\n            aggregationFn: aggregationValues[column?.Column_Name] ? aggregationValues[column?.Column_Name] : '',\r\n            AggregatedCell: ({ cell }) => (\r\n                <div className='blue-text text-center float-end w-100'>\r\n                    {cell.getValue() ? NumberFormat(cell.getValue()) : ''}\r\n                </div>\r\n            ),\r\n            Cell: ({ cell }) => (\r\n                <p className={`m-0 text-center fa-14 w-100`}>\r\n                    {formatString(cell.getValue(), column?.Column_Data_Type)}\r\n                </p>\r\n            ),\r\n            ...getFun(column?.Column_Data_Type),\r\n        }))\r\n\r\n        setDispColmn(muiColumns)\r\n    }, [columns, aggregationValues])\r\n\r\n    useEffect(() => {\r\n        applyFilters();\r\n    }, [filters]);\r\n\r\n    const handleExportRows = (rows) => {\r\n        const rowData = rows.map((row) => row.original);\r\n        const csv = generateCsv(csvConfig)(rowData);\r\n        download(csvConfig)(csv);\r\n    };\r\n\r\n    const handleExportData = () => {\r\n        const csv = generateCsv(csvConfig)(dataArray);\r\n        download(csvConfig)(csv);\r\n    };\r\n\r\n    const table = useMaterialReactTable({\r\n        columns: dispColmn,\r\n        data: showData || [],\r\n        enableColumnResizing: true,\r\n        enableGrouping: true,\r\n        enableStickyHeader: true,\r\n        enableStickyFooter: true,\r\n        enableColumnOrdering: true,\r\n        enableRowNumbers: false,\r\n        initialState: {\r\n            density: 'compact',\r\n            // grouping: groupingState?.filter(o => typeof o === 'string')\r\n            // .filter(o => {\r\n            //     const ind = dispColmn.findIndex(indVal => indVal?.accessorKey === o);\r\n            //     return ind !== -1; \r\n            // })\r\n            // ,\r\n            pagination: { pageIndex: 0, pageSize: 100 },\r\n        },\r\n        muiToolbarAlertBannerChipProps: { color: 'primary' },\r\n        muiTableContainerProps: { sx: { maxHeight: '68dvh', minHeight: '46vh' } },\r\n        muiTableProps: {\r\n            sx: {\r\n                caption: {\r\n                    captionSide: 'top',\r\n                },\r\n            },\r\n        },\r\n        muiTableHeadCellProps: {\r\n            sx: {\r\n                fontWeight: 'normal',\r\n            },\r\n            className: ' border text-center'\r\n        },\r\n        muiTableBodyCellProps: {\r\n            className: ' border-end text-center'\r\n        },\r\n        renderTopToolbarCustomActions: ({ table }) => (\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    gap: '16px',\r\n                    padding: '8px',\r\n                    flexWrap: 'wrap',\r\n                }}\r\n            >\r\n                <Button\r\n                    onClick={handleExportData}\r\n                    startIcon={<FileDownload />}\r\n                >\r\n                    All Data\r\n                </Button>\r\n                <Button\r\n                    disabled={table.getPrePaginationRowModel().rows.length === 0}\r\n                    onClick={() =>\r\n                        handleExportRows(table.getPrePaginationRowModel().rows)\r\n                    }\r\n                    startIcon={<FileDownload />}\r\n                >\r\n                    Filtered Rows\r\n                </Button>\r\n                <Button\r\n                    onClick={() => setDialogs(pre => ({ ...pre, aggregations: true }))}\r\n                    startIcon={<SettingsOutlined />}\r\n                >\r\n                    Aggregation\r\n                </Button>\r\n                {/*  */}\r\n                {/* {buttons({grouping: table.getState().grouping})} */}\r\n                <Button\r\n                    onClick={() => setDialogs(pre => ({ ...pre, filters: true }))}\r\n                    className=\"d-md-none d-inline\"\r\n                    startIcon={<FilterAlt />}\r\n                >\r\n                    Filters\r\n                </Button>\r\n            </Box>\r\n        ),\r\n    })\r\n\r\n    const memoizedTableConfig = useMemo(() => table, [table, aggregationValues, showData, groupingState]);\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const applyFilters = () => {\r\n        let filtered = [...dataArray];\r\n        for (const column of columns) {\r\n            if (filters[column.accessColumnName]) {\r\n                if (filters[column.accessColumnName].type === 'range') {\r\n                    const { min, max } = filters[column.accessColumnName];\r\n                    filtered = filtered.filter(item => {\r\n                        const value = item[column.accessColumnName];\r\n                        return (min === undefined || value >= min) && (max === undefined || value <= max);\r\n                    });\r\n                } else if (filters[column.accessColumnName].type === 'date') {\r\n                    const { start, end } = filters[column.accessColumnName].value;\r\n                    filtered = filtered.filter(item => {\r\n                        const dateValue = new Date(item[column.accessColumnName]);\r\n                        return (start === undefined || dateValue >= new Date(start)) && (end === undefined || dateValue <= new Date(end));\r\n                    });\r\n                } else if (Array.isArray(filters[column.accessColumnName])) {\r\n                    filtered = filters[column.accessColumnName]?.length > 0 ? filtered.filter(item => filters[column.accessColumnName].includes(item[column.accessColumnName].toLowerCase().trim())) : filtered\r\n                }\r\n            }\r\n        }\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { accessColumnName, Column_Name, Column_Data_Type } = column;\r\n        if (Column_Data_Type === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], min: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'range', ...filters[accessColumnName], max: e.target.value ? parseFloat(e.target.value) : undefined })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between px-2'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, start: e.target.value || undefined } })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"bg-light border-0 m-1 p-1 w-50\"\r\n                        value={filters[accessColumnName]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(accessColumnName, { type: 'date', value: { ...filters[accessColumnName]?.value, end: e.target.value || undefined } })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'string') {\r\n            const distinctValues = [...new Set(dataArray.map(item => item[accessColumnName]?.toLowerCase()?.trim()))].sort();\r\n            return (\r\n                <Autocomplete\r\n                    multiple\r\n                    id={`${accessColumnName}-filter`}\r\n                    options={distinctValues}\r\n                    disableCloseOnSelect\r\n                    getOptionLabel={option => option}\r\n                    value={filters[accessColumnName] || []}\r\n                    onChange={(event, newValue) => handleFilterChange(accessColumnName, newValue)}\r\n                    renderOption={(props, option, { selected }) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option}\r\n                        </li>\r\n                    )}\r\n                    isOptionEqualToValue={(opt, val) => opt === val}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label={Column_Name?.replace(/_/g, ' ')}\r\n                            placeholder={`Select ${Column_Name?.replace(/_/g, ' ')}`}\r\n                        />\r\n                    )}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row \">\r\n\r\n                <div className=\"col-xxl-10 col-lg-9 col-md-8\">\r\n                    <div className=\"p-2\">\r\n                        <MaterialReactTable table={memoizedTableConfig} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-xxl-2 col-lg-3 col-md-4 d-none d-md-block\">\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <Dialog\r\n                open={dialogs.filters}\r\n                onClose={() => setDialogs(pre => ({ ...pre, filters: false }))}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>\r\n                    <h5 className=\"d-flex justify-content-between px-2\">\r\n                        Filters\r\n                        <Tooltip title='Clear Filters'>\r\n                            <IconButton\r\n                                size=\"small\"\r\n                                onClick={() => setFilters({})}\r\n                            >\r\n                                <FilterAltOff />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </h5>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <div className=\"border rounded-3 \" style={{ maxHeight: '70vh', overflow: 'auto' }}>\r\n                        {columns.map((column, ke) => (isEqualNumber(column?.IS_Default, 0) && isEqualNumber(column?.IS_Join_Key, 0)) && (\r\n                            <div key={ke} className=\"py-3 px-3 hov-bg border-bottom\">\r\n                                <label className='mt-2 mb-1'>{column?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                {renderFilter(column)}\r\n                            </div>\r\n                        ))}\r\n                        <br />\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setDialogs(pre => ({ ...pre, filters: false }))}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={dialogs.aggregations}\r\n                onClose={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\r\n                fullWidth maxWidth='lg'\r\n            >\r\n                <DialogTitle>Aggregations</DialogTitle>\r\n                <DialogContent>\r\n                    <div className=\"row\" style={{ minHeight: '30dvh' }}>\r\n                        {[...columns].filter(column => (\r\n                            isEqualNumber(column?.IS_Default, 0)\r\n                            && isEqualNumber(column?.IS_Join_Key, 0)\r\n                            && (column.Column_Data_Type === 'number'\r\n                                || column.Column_Data_Type === 'string')\r\n                        )).map((o, i) => (\r\n                            <div className=\"col-xxl-3 col-lg-4 col-md-6 p-2\" key={i}>\r\n                                <label>{o?.Column_Name?.replace(/_/g, ' ')}</label>\r\n                                <select\r\n                                    className='cus-inpt'\r\n                                    value={aggregationValues[o?.Column_Name] ?? ''}\r\n                                    onChange={e => setAggregationValues(pre => ({ ...pre, [o.Column_Name]: e.target.value }))}\r\n                                >\r\n                                    {\r\n                                        [\r\n                                            { label: 'Select Aggregation', value: '' },\r\n                                            { label: 'count', value: 'count' },\r\n                                            { label: 'extent', value: 'extent' },\r\n                                            { label: 'max', value: 'max' },\r\n                                            { label: 'min', value: 'min' },\r\n                                            { label: 'mean', value: 'mean' },\r\n                                            { label: 'median', value: 'median' },\r\n                                            { label: 'uniqueCount', value: 'uniqueCount' },\r\n                                            { label: 'sum', value: 'sum' },\r\n                                            { label: 'unique', value: 'unique' },\r\n                                        ].map((o, i) => (\r\n                                            <option value={o.value} key={i}>{o.label}</option>\r\n                                        ))\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setDialogs(pre => ({ ...pre, aggregations: false }))}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DynamicMuiTable;","import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n    Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Tab, Tabs, Box, Typography,\r\n    ListItemIcon, ListItemText, MenuItem, MenuList, Popover, \r\n} from '@mui/material';\r\nimport { ArrowBackIosNewOutlined, Edit, Visibility, List, Delete, FilterAlt, Launch, Close } from '@mui/icons-material';\r\nimport { isEqualNumber, UTCDateWithTime } from '../../Components/functions';\r\nimport { MyContext } from '../../Components/context/contextProvider';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport DynamicMuiTable from '../../Components/dynamicMuiTable';\r\nimport { toast } from 'react-toastify';\r\nimport { fetchLink } from '../../Components/fetchComponent';\r\nimport FilterableTable from '../../Components/filterableTable2'\r\n\r\n\r\n\r\nconst TabPanel = (props) => {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`tabpanel-${index}`}\r\n            aria-labelledby={`tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ReportTemplates = () => {\r\n    const storage = JSON.parse(localStorage.getItem('user'))\r\n    const [templates, setTemplates] = useState([]);\r\n    const variableState = {\r\n        search: '',\r\n        openFilterDialog: false,\r\n        filterTablesAndColumns: {},\r\n        deleteConfirmationDialog: false,\r\n        preFilterDialog: false,\r\n    }\r\n    const [localVariable, setLocalVariable] = useState(variableState);\r\n    const { contextObj } = useContext(MyContext);\r\n    const [filters, setFilters] = useState({})\r\n    const nav = useNavigate();\r\n    const [reload, setReload] = useState(false)\r\n    const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setSelectedTab(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `reports/template`,\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                setTemplates(data?.data);\r\n            }\r\n        }).catch(e => console.log(e))\r\n    }, [reload])\r\n\r\n    const handleFilterChange = (column, value) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [column]: value,\r\n        }));\r\n    };\r\n\r\n    const renderFilter = (column) => {\r\n        const { Column_Name, Column_Data_Type } = column;\r\n        if (Column_Data_Type === 'number') {\r\n            return (\r\n                <div className='d-flex justify-content-between'>\r\n                    <input\r\n                        placeholder=\"Min\"\r\n                        type=\"number\"\r\n                        className=\"cus-inpt me-1\"\r\n                        value={filters[Column_Name]?.min ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'range',\r\n                            ...filters[Column_Name],\r\n                            min: e.target.value ? parseFloat(e.target.value) : undefined\r\n                        })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"Max\"\r\n                        type=\"number\"\r\n                        className=\"cus-inpt ms-1\"\r\n                        value={filters[Column_Name]?.max ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'range',\r\n                            ...filters[Column_Name],\r\n                            max: e.target.value ? parseFloat(e.target.value) : undefined\r\n                        })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'date') {\r\n            return (\r\n                <div className='d-flex justify-content-between flex-wrap'>\r\n                    <input\r\n                        placeholder=\"Start Date\"\r\n                        type=\"date\"\r\n                        className=\"cus-inpt w-auto flex-grow-1 me-1 my-1\"\r\n                        value={filters[Column_Name]?.value?.start ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'date',\r\n                            value: { ...filters[Column_Name]?.value, start: e.target.value || undefined }\r\n                        })}\r\n                    />\r\n                    <input\r\n                        placeholder=\"End Date\"\r\n                        type=\"date\"\r\n                        className=\"cus-inpt w-auto flex-grow-1 ms-1 my-1\"\r\n                        value={filters[Column_Name]?.value?.end ?? ''}\r\n                        onChange={(e) => handleFilterChange(Column_Name, {\r\n                            type: 'date',\r\n                            value: { ...filters[Column_Name]?.value, end: e.target.value || undefined }\r\n                        })}\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (Column_Data_Type === 'string') {\r\n            return (\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='Search...'\r\n                    className='cus-inpt'\r\n                    value={filters[Column_Name]?.value ?? ''}\r\n                    onChange={e => handleFilterChange(Column_Name, {\r\n                        type: 'textCompare',\r\n                        value: String(e.target.value).toLowerCase() || ''\r\n                    })}\r\n                />\r\n            )\r\n        }\r\n    };\r\n\r\n    const Actions = ({ o }) => {\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n        const dataToForward = {\r\n            Report_Type_Id: o?.Report_Type_Id,\r\n            reportName: o?.Report_Name,\r\n            ReportState: o?.ReportState,\r\n            tables: o?.tablesList?.map(table => ({\r\n                Table_Id: table?.Table_Id,\r\n                Table_Name: table?.Table_Name,\r\n                AliasName: table?.AliasName,\r\n                Table_Accronym: table?.Table_Accronym,\r\n                isChecked: true,\r\n                columns: table?.columnsList?.map(column => ({\r\n                    Column_Data_Type: column?.Column_Data_Type,\r\n                    Column_Name: column?.Column_Name,\r\n                    IS_Default: column?.IS_Default,\r\n                    IS_Join_Key: column?.IS_Join_Key,\r\n                    Order_By: column?.Order_By,\r\n                    Table_Id: column?.Table_Id,\r\n                    isVisible: true\r\n                }))\r\n            }))\r\n        }\r\n\r\n        const popOverOpen = Boolean(anchorEl);\r\n        const id = popOverOpen ? o?.Report_Name : undefined;\r\n\r\n        const handleClick = (event) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setAnchorEl(null);\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <IconButton aria-describedby={id} onClick={handleClick}>\r\n                    <List />\r\n                </IconButton>\r\n\r\n                <Popover\r\n                    id={id}\r\n                    open={popOverOpen}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                >\r\n                    <MenuList>\r\n\r\n                        <MenuItem\r\n                            onClick={\r\n                                () => {\r\n                                    setLocalVariable(pre => ({\r\n                                        ...pre,\r\n                                        filterTablesAndColumns: dataToForward,\r\n                                        openFilterDialog: true,\r\n                                    }));\r\n                                    setSelectedTab(0);\r\n                                    setFilters({})\r\n                                }\r\n                            }\r\n                        >\r\n                            <ListItemIcon><Visibility fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>OPEN</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={\r\n                                !storage?.Company_id\r\n                                    ? () => toast.warn('Select Company!')\r\n                                    : () => {\r\n                                        setLocalVariable(pre => ({\r\n                                            ...pre,\r\n                                            filterTablesAndColumns: dataToForward,\r\n                                            preFilterDialog: true,\r\n                                        }));\r\n                                        setFilters({});\r\n                                        setSelectedTab(0);\r\n                                    }\r\n                            }\r\n                        >\r\n                            <ListItemIcon><FilterAlt fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>FILTERS</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={() => nav('create', { state: { ReportState: dataToForward } })}\r\n                        >\r\n                            <ListItemIcon><Edit fontSize=\"small\" /></ListItemIcon>\r\n                            <ListItemText>EDIT</ListItemText>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem\r\n                            onClick={() => setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: true, filterTablesAndColumns: dataToForward }))}\r\n                        >\r\n                            <ListItemIcon><Delete fontSize=\"small\" color='error' /></ListItemIcon>\r\n                            <ListItemText>DELETE</ListItemText>\r\n                        </MenuItem>\r\n\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const RowComp = ({ o }) => {\r\n        return (\r\n            <>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {['SNo', 'Table', 'Column', 'Data-Type', 'Order'].map(o => (\r\n                                    <th className=\"border fa-14 text-center\" key={o} style={{ backgroundColor: '#EDF0F7' }}>{o}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {o?.tablesList?.map((table, tableInd) => (\r\n                                <React.Fragment key={tableInd}>\r\n                                    {table?.columnsList?.map((column, columnInd) => (\r\n                                        <tr key={columnInd}>\r\n                                            {columnInd === 0 && (\r\n                                                <>\r\n                                                    <td className=\"border fa-13 text-center vctr\" rowSpan={table?.columnsList?.length}>{tableInd + 1}</td>\r\n                                                    <td className=\"border fa-13 text-center blue-text vctr\" rowSpan={table?.columnsList?.length}>\r\n                                                        {table?.AliasName}\r\n                                                    </td>\r\n                                                </>\r\n                                            )}\r\n                                            <td\r\n                                                className={`\r\n                                                    border fa-13 vctr\r\n                                                    ${Boolean(Number(column?.IS_Default)) ? ' blue-text ' : ''}\r\n                                                    ${Boolean(Number(column?.IS_Join_Key)) ? ' fw-bold ' : ''}\r\n                                                    `}\r\n                                            >\r\n                                                {column?.Column_Name}\r\n                                            </td>\r\n                                            <td className=\"border fa-13 vctr\">{column?.Column_Data_Type}</td>\r\n                                            <td className=\"border fa-13 vctr\">{column?.Order_By}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </React.Fragment>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const closeDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, openFilterDialog: false, filterTablesAndColumns: {} }))\r\n    }\r\n\r\n    const closeDeleteConfirmationDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false, filterTablesAndColumns: {} }))\r\n    }\r\n\r\n    const closeFilterDialog = () => {\r\n        setLocalVariable(pre => ({ ...pre, preFilterDialog: false }));\r\n        setFilters({})\r\n    }\r\n\r\n    const deleteTemplate = () => {\r\n        setLocalVariable(pre => ({ ...pre, deleteConfirmationDialog: false }))\r\n        fetchLink({\r\n            address: `reports/template`,\r\n            method: 'DELETE',\r\n            bodyData: {\r\n                Report_Type_Id: localVariable?.filterTablesAndColumns?.Report_Type_Id\r\n            }\r\n        }).then(data => {\r\n            if (data?.success) {\r\n                toast.success(data.message)\r\n                setReload(pre => !pre)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        }).catch(e => console.log(e))\r\n            .finally(() => setLocalVariable(pre => ({ ...pre, filterTablesAndColumns: {} })))\r\n    }\r\n\r\n    // const saveReportGroupingState = (reportid, grouping) => {\r\n    //     fetchLink({\r\n    //         address: `reports/template/templateState`,\r\n    //         method: 'POST',\r\n    //         bodyData: {\r\n    //             Report_Type_Id: reportid,\r\n    //             ReportState: grouping\r\n    //         }\r\n    //     }).then(data => {\r\n    //         if (data.success) {\r\n    //             toast.success(data.message);\r\n    //         } else {\r\n    //             toast.error(data.message)\r\n    //         }\r\n    //     }).catch(e => console.error(e))\r\n    // }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Card>\r\n\r\n                <div className=\"p-2 border-bottom fa-16 fw-bold d-flex justify-content-between align-items-center\">\r\n                    <span className=\"text-primary text-uppercase ps-3\">Report Templates</span>\r\n                    {isEqualNumber(contextObj?.Add_Rights, 1) && (\r\n                        <Button variant='outlined' onClick={() => nav('create')}>Add Report</Button>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-end p-3\">\r\n                    <input\r\n                        type=\"search\"\r\n                        className='cus-inpt w-auto'\r\n                        placeholder='Search Report Name'\r\n                        value={localVariable?.search ?? ''}\r\n                        onChange={e => setLocalVariable(pre => ({ ...pre, search: String(e.target.value).toLowerCase() }))}\r\n                    />\r\n                </div>\r\n\r\n                <CardContent className='p-0'>\r\n                    <FilterableTable\r\n                        dataArray={\r\n                            !localVariable?.search ? templates : (\r\n                                [...templates].filter(fil =>\r\n                                    String(fil?.Report_Name).toLowerCase().includes(localVariable.search)\r\n                                )\r\n                            )\r\n                        }\r\n                        columns={[\r\n                            { Field_Name: 'Report_Name', ColumnHeader: 'Report Name', Fied_Data: 'string', isVisible: 1 },\r\n                            { ColumnHeader: 'Tables', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.tablesList?.length },\r\n                            { ColumnHeader: 'Columns', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.tablesList?.reduce((sum, item) => sum += Number(item?.columnsList?.length), 0) },\r\n                            { Field_Name: 'CreatedByGet', ColumnHeader: 'Created By', Fied_Data: 'string', isVisible: 1, },\r\n                            { ColumnHeader: 'Columns', isVisible: 1, isCustomCell: true, Cell: ({ row }) => row?.CreatedAt ? UTCDateWithTime(row?.CreatedAt) : ' - ' },\r\n                            { ColumnHeader: 'Action', isVisible: 1, isCustomCell: true, Cell: ({ row }) => <Actions o={row} /> },\r\n                        ]}\r\n                        EnableSerialNumber\r\n                        isExpendable={true}\r\n                        expandableComp={({ row }) => <RowComp o={row} />}\r\n                        tableMaxHeight={650}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={localVariable?.openFilterDialog}\r\n                onClose={closeDialog}\r\n                fullScreen\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between align-items-center fa-16'>\r\n                    <span>\r\n                        Report - <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span>\r\n                    </span>\r\n                    <span>\r\n                        <IconButton onClick={closeDialog} color='error' className=' shadow-lg'>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {(localVariable?.filterTablesAndColumns?.Report_Type_Id && storage?.Company_id) && (\r\n                        <DynamicMuiTable\r\n                            reportId={localVariable?.filterTablesAndColumns?.Report_Type_Id}\r\n                            company={storage?.Company_id}\r\n                            queryFilters={filters}\r\n                            // buttons={({ grouping }) => (\r\n                            //     <Button\r\n                            //         onClick={() => saveReportGroupingState(localVariable?.filterTablesAndColumns?.Report_Type_Id, grouping)}\r\n                            //         disabled={grouping.length === 0}\r\n                            //         startIcon={<Save />}\r\n                            //     >\r\n                            //         Save State\r\n                            //     </Button>\r\n                            // )}\r\n                            // groupingState={\r\n                            //     localVariable?.filterTablesAndColumns?.ReportState \r\n                            //         ? JSON.parse(localVariable?.filterTablesAndColumns?.ReportState)\r\n                            //         : []\r\n                            // }\r\n                        />\r\n                    )}\r\n                    {/* {console.log(localVariable)} */}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeDialog}\r\n                        startIcon={<ArrowBackIosNewOutlined />}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={localVariable?.deleteConfirmationDialog}\r\n                onClose={closeDeleteConfirmationDialog}\r\n                fullWidth maxWidth='sm'\r\n            >\r\n                <DialogTitle>Confirmation</DialogTitle>\r\n                <DialogContent>\r\n                    Do you want to delete the Template <span className='blue-text'>{localVariable?.filterTablesAndColumns?.reportName}</span> permanently\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeDeleteConfirmationDialog}\r\n                    >\r\n                        cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={deleteTemplate}\r\n                        startIcon={<Delete />}\r\n                        variant='outlined'\r\n                        color='error'\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={localVariable?.preFilterDialog}\r\n                onClose={closeFilterDialog}\r\n                fullWidth maxWidth='md'\r\n            >\r\n                <DialogTitle className='d-flex justify-content-between'>\r\n                    <span>\r\n                        Filters For <span className=\"blue-text\">{localVariable?.filterTablesAndColumns?.reportName}</span> - Report\r\n                    </span>\r\n                    <span>\r\n                        <IconButton onClick={closeFilterDialog} color='error' className='shadow-lg '>\r\n                            <Close />\r\n                        </IconButton>\r\n                    </span>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Tabs value={selectedTab} onChange={handleTabChange}>\r\n                        {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\r\n                            <Tab label={table?.AliasName} key={i} />\r\n                        ))}\r\n                    </Tabs>\r\n                    {localVariable?.filterTablesAndColumns?.tables?.map((table, i) => (\r\n                        <TabPanel value={selectedTab} index={i} key={i}>\r\n                            <div className=\"row\">\r\n                                {table?.columns?.map((column, ii) => (\r\n                                    !Boolean(Number(column?.IS_Default)) &&\r\n                                    !Boolean(Number(column?.IS_Join_Key)) &&\r\n                                    (\r\n                                        <div className=\"p-2 col-md-6 \" key={ii}>\r\n                                            <label className='mb-2 fw-bold text-muted'>{column?.Column_Name}</label>\r\n                                            {renderFilter(column)}\r\n                                        </div>\r\n                                    )\r\n                                ))}\r\n                            </div>\r\n                        </TabPanel>\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={closeFilterDialog}\r\n                    >\r\n                        cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => setLocalVariable(pre => ({ ...pre, openFilterDialog: true, preFilterDialog: false }))}\r\n                        startIcon={<Launch />}\r\n                        variant='contained'\r\n                    >\r\n                        Open report\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReportTemplates","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\n}), 'ArrowBackIosNewOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'Launch');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 13h2v-2H3zm0 4h2v-2H3zm0-8h2V7H3zm4 4h14v-2H7zm0 4h14v-2H7zM7 7v2h14V7z\"\n}), 'List');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');"],"names":["createSvgIcon","_jsx","d","formatString","val","dataType","NumberFormat","LocalDate","getFun","filterVariant","filterFn","csvConfig","mkConfig","fieldSeparator","decimalSeparator","useKeysAsHeaders","icon","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","_ref","reportId","company","queryFilters","buttons","groupingState","dispColmn","setDispColmn","useState","dataArray","setDataArray","columns","setColumns","filters","setFilters","filteredData","setFilteredData","showData","Object","keys","length","aggregationValues","setAggregationValues","dialogs","setDialogs","aggregations","console","log","useEffect","fetchLink","address","then","data","success","_o$tablesList","_strucre$tables","o","strucre","Report_Type_Id","reportName","Report_Name","tables","tablesList","map","table","_table$columnsList","Table_Id","Table_Name","AliasName","Table_Accronym","isChecked","columnsList","column","Column_Data_Type","Column_Name","IS_Default","IS_Join_Key","Order_By","isVisible","accessColumnName","allColumns","reduce","colArr","concat","catch","e","method","headers","bodyData","filterReq","ReportID","muiColumns","sort","a","b","filter","Boolean","Number","_column$Column_Name","header","replace","accessorKey","sortable","size","aggregationFn","AggregatedCell","_ref2","cell","className","children","getValue","Cell","_ref3","applyFilters","handleExportData","csv","generateCsv","download","useMaterialReactTable","enableColumnResizing","enableGrouping","enableStickyHeader","enableStickyFooter","enableColumnOrdering","enableRowNumbers","initialState","density","pagination","pageIndex","pageSize","muiToolbarAlertBannerChipProps","color","muiTableContainerProps","sx","maxHeight","minHeight","muiTableProps","caption","captionSide","muiTableHeadCellProps","fontWeight","muiTableBodyCellProps","renderTopToolbarCustomActions","_ref4","_jsxs","Box","display","gap","padding","flexWrap","Button","onClick","startIcon","FileDownload","disabled","getPrePaginationRowModel","rows","rowData","row","original","handleExportRows","pre","SettingsOutlined","FilterAlt","memoizedTableConfig","useMemo","handleFilterChange","value","prevFilters","filtered","type","min","max","item","undefined","start","end","dateValue","Date","Array","isArray","_filters$column$acces","includes","toLowerCase","trim","renderFilter","_filters$accessColumn","_filters$accessColumn2","_filters$accessColumn3","_filters$accessColumn4","_filters$accessColumn5","_filters$accessColumn6","_filters$accessColumn7","_filters$accessColumn9","_filters$accessColumn10","_filters$accessColumn11","placeholder","onChange","target","parseFloat","_filters$accessColumn8","_filters$accessColumn12","distinctValues","Set","_item$accessColumnNam","_item$accessColumnNam2","Autocomplete","multiple","id","options","disableCloseOnSelect","getOptionLabel","option","event","newValue","renderOption","props","_ref5","selected","Checkbox","style","marginRight","checked","isOptionEqualToValue","opt","renderInput","params","TextField","label","_Fragment","MaterialReactTable","Tooltip","title","IconButton","FilterAltOff","overflow","ke","_column$Column_Name2","isEqualNumber","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","_column$Column_Name3","DialogActions","i","_o$Column_Name","_aggregationValues$o$","TabPanel","index","other","role","hidden","p","Typography","ReportTemplates","_localVariable$search","_localVariable$filter2","_localVariable$filter3","_localVariable$filter4","_localVariable$filter5","_localVariable$filter6","_localVariable$filter7","_localVariable$filter8","_localVariable$filter9","_localVariable$filter10","storage","JSON","parse","localStorage","getItem","templates","setTemplates","localVariable","setLocalVariable","search","openFilterDialog","filterTablesAndColumns","deleteConfirmationDialog","preFilterDialog","contextObj","useContext","MyContext","nav","useNavigate","reload","setReload","selectedTab","setSelectedTab","_filters$Column_Name$","_filters$Column_Name","_filters$Column_Name$2","_filters$Column_Name2","_filters$Column_Name$3","_filters$Column_Name3","_filters$Column_Name4","_filters$Column_Name$4","_filters$Column_Name6","_filters$Column_Name7","_filters$Column_Name$5","_filters$Column_Name9","_filters$Column_Name5","_filters$Column_Name8","String","Actions","anchorEl","setAnchorEl","dataToForward","ReportState","popOverOpen","currentTarget","List","Popover","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemIcon","Visibility","ListItemText","Company_id","toast","warn","state","Edit","Delete","RowComp","_o$tablesList2","backgroundColor","tableInd","_table$columnsList2","React","columnInd","_table$columnsList3","_table$columnsList4","rowSpan","closeDialog","closeDeleteConfirmationDialog","closeFilterDialog","Card","Add_Rights","variant","CardContent","FilterableTable","fil","Field_Name","ColumnHeader","Fied_Data","isCustomCell","_row$tablesList","_row$tablesList2","sum","_item$columnsList","CreatedAt","UTCDateWithTime","_ref6","EnableSerialNumber","isExpendable","expandableComp","_ref7","tableMaxHeight","fullScreen","Close","DynamicMuiTable","ArrowBackIosNewOutlined","deleteTemplate","_localVariable$filter","message","error","finally","Tabs","handleTabChange","Tab","_table$columns","ii","Launch"],"sourceRoot":""}
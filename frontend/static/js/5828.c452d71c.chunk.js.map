{"version":3,"file":"static/js/5828.c452d71c.chunk.js","mappings":"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","sources":["Components/requiredStar.jsx","Components/tablecolumn.js","Pages/Inventry/Processing/addProcessingComp/variables.js","Pages/Inventry/Processing/addProcessingComp/consumption.jsx","Pages/Inventry/Processing/addProcessingComp/production.jsx","Pages/Inventry/Processing/AddProcessing.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["const RequiredStar = () => (\r\n    <span style={{ color: 'red', fontWeight: 'bold', fontSize: '1em' }}> *</span>\r\n);\r\n\r\nexport default RequiredStar;\r\n","\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE_ORDER' },\r\n    { name: 'PURCHASE_INVOICE' },\r\n    { name: 'SALE_ORDER' },\r\n    { name: 'SALE_INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK_JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import { getSessionUser, ISOString } from \"../../../../Components/functions\";\r\n\r\nconst { user } = getSessionUser();\r\n\r\nexport const initialStockJournalInfoValues = {\r\n    PR_Id: '',\r\n    PR_Inv_Id: '',\r\n    Year_Id: '',\r\n    Branch_Id: '',\r\n    Process_no: '',\r\n    P_No: '',\r\n\r\n    Godownlocation: '',\r\n    BillType: 'New',\r\n    VoucherType: '',\r\n    Process_date: ISOString(),\r\n    Machine_No: '',\r\n    StartDateTime: '',\r\n    EndDateTime: '',\r\n    ST_Reading: '',\r\n    EN_Reading: '',\r\n    Total_Reading: '',\r\n    Narration: '',\r\n    PR_Status: 'NEW',\r\n    Created_By: user?.name,\r\n    Updated_By: user?.name,\r\n}\r\n\r\nexport const initialSoruceValue = {\r\n    SJD_Id: '',\r\n    STJ_Id: '',\r\n    Sour_Item_Id: '',\r\n    Sour_Item_Name: '',\r\n    Sour_Goodown_Id: '',\r\n    Godown_Name: '',\r\n    Sour_Batch_Lot_No: '',\r\n    Sour_Qty: '',\r\n    Sour_Unit_Id: '',\r\n    Sour_Unit: '',\r\n    Sour_Rate: '',\r\n    Sour_Amt: '',\r\n}\r\n\r\nexport const initialDestinationValue = {\r\n    SJD_Id: '',\r\n    STJ_Id: '',\r\n    Dest_Item_Id: '',\r\n    Dest_Item_Name: '',\r\n    Dest_Goodown_Id: '',\r\n    Godown_Name: '',\r\n    Dest_Batch_Lot_No: '',\r\n    Dest_Qty: '',\r\n    Dest_Unit_Id: '',\r\n    Dest_Unit: '',\r\n    Dest_Rate: '',\r\n    Dest_Amt: '',\r\n}\r\n\r\nexport const initialStaffInvolvedValue = {\r\n    STJ_Id: '',\r\n    S_Id: '',\r\n    Staff_Id: '',\r\n    Staff_Name: '',\r\n    Staff_Type_Id: '',\r\n}\r\n\r\nexport const soruceAndDestination = [\r\n    { source: 'Sour_Item_Id', destination: 'Dest_Item_Id' },\r\n    { source: 'Sour_Item_Name', destination: 'Dest_Item_Name' },\r\n    { source: 'Sour_Goodown_Id', destination: 'Dest_Goodown_Id' },\r\n    { source: 'Sour_Batch_Lot_No', destination: 'Dest_Batch_Lot_No' },\r\n    { source: 'Sour_Qty', destination: 'Dest_Qty' },\r\n    { source: 'Sour_Unit_Id', destination: 'Dest_Unit_Id' },\r\n    { source: 'Sour_Unit', destination: 'Dest_Unit' },\r\n    { source: 'Sour_Rate', destination: 'Dest_Rate' },\r\n    { source: 'Sour_Amt', destination: 'Dest_Amt' },\r\n];","import RequiredStar from '../../../../Components/requiredStar';\r\nimport { initialSoruceValue } from './variables'\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../../../Components/tablecolumn\";\r\nimport { Addition, checkIsNumber, Division, isEqualNumber, Multiplication, onlynum } from '../../../../Components/functions';\r\nimport { Button, IconButton } from '@mui/material';\r\nimport { Delete } from '@mui/icons-material';\r\nimport { memo, useEffect } from 'react';\r\nimport { fetchLink } from '../../../../Components/fetchComponent';\r\nimport { useState } from 'react';\r\n\r\nconst SourceItems = memo(function SourceItems({\r\n    row,\r\n    index,\r\n    products,\r\n    uom,\r\n    godown,\r\n    changeSourceValue,\r\n    removeRow,\r\n}) {\r\n    const [batchDetails, setBatchDetails] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!checkIsNumber(row?.Sour_Item_Id)) return;\r\n        fetchLink({\r\n            address: `inventory/batchMaster/stockBalance?Product_Id=${row?.Sour_Item_Id}`\r\n        }).then(\r\n            data => setBatchDetails(data.success ? data.data : [])\r\n        ).catch(() => setBatchDetails([]));\r\n    }, [row?.Sour_Item_Id]);\r\n\r\n    return (\r\n        <tr>\r\n            <td className='fa-13'>{index + 1}</td>\r\n            <td className='fa-13 p-0' style={{ minWidth: '200px' }}>\r\n                <Select\r\n                    value={{ value: row?.Sour_Item_Id, label: row?.Sour_Item_Name }}\r\n                    onChange={e => changeSourceValue(index, 'Sour_Item_Id', e.value)}\r\n                    options={products.map(pro => ({ value: pro.Product_Id, label: pro.Product_Name }))}\r\n                    menuPortalTarget={document.body}\r\n                    styles={customSelectStyles}\r\n                    isSearchable\r\n                    placeholder=\"Select Item\"\r\n                    maxMenuHeight={300}\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 px-1 py-0 vctr'>\r\n                <input\r\n                    value={row?.Sour_Batch_Lot_No ?? \"\"}\r\n                    onChange={e => changeSourceValue(index, 'Sour_Batch_Lot_No', e.target.value)}\r\n                    className=\"cus-inpt p-2\"\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 px-1 py-0 vctr'>\r\n                <input\r\n                    value={row?.Sour_Qty ?? \"\"}\r\n                    required\r\n                    onInput={onlynum}\r\n                    onChange={e => changeSourceValue(index, 'Sour_Qty', e.target.value)}\r\n                    className=\"cus-inpt p-2\"\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 px-1 py-0 vctr'>\r\n                <select\r\n                    value={row?.Sour_Unit_Id ?? \"\"}\r\n                    onChange={e => changeSourceValue(index, 'Sour_Unit_Id', e.target.value)}\r\n                    className=\"cus-inpt p-2\"\r\n                    style={{ minWidth: '40px' }}\r\n                >\r\n                    <option value=\"\" disabled>Select Unit</option>\r\n                    {uom.map((u, ind) => (\r\n                        <option key={u.Unit_Id ?? ind} value={u.Unit_Id}>{u.Units}</option>\r\n                    ))}\r\n                </select>\r\n            </td>\r\n\r\n            <td className='fa-13 px-1 py-0 vctr'>\r\n                <input\r\n                    value={row?.Sour_Rate ?? \"\"}\r\n                    onInput={onlynum}\r\n                    onChange={e => changeSourceValue(index, 'Sour_Rate', e.target.value)}\r\n                    className=\"cus-inpt p-2\"\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 px-1 py-0 vctr'>\r\n                <input\r\n                    value={row?.Sour_Amt ?? \"\"}\r\n                    onInput={onlynum}\r\n                    onChange={e => changeSourceValue(index, 'Sour_Amt', e.target.value)}\r\n                    className=\"cus-inpt p-2\"\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 p-0' style={{ minWidth: '200px' }}>\r\n                <Select\r\n                    value={{ value: row?.Sour_Goodown_Id, label: row?.Godown_Name }}\r\n                    onChange={e => {\r\n                        changeSourceValue(index, 'Sour_Goodown_Id', e.value);\r\n                        changeSourceValue(index, 'Godown_Name', e.label);\r\n                    }}\r\n                    options={godown.map(g => ({ value: g.Godown_Id, label: g.Godown_Name }))}\r\n                    menuPortalTarget={document.body}\r\n                    styles={customSelectStyles}\r\n                    isSearchable\r\n                    placeholder=\"Select Godown\"\r\n                    maxMenuHeight={300}\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 px-1 py-0 p-0 vctr text-center'>\r\n                <IconButton color=\"error\" size=\"small\" onClick={removeRow}>\r\n                    <Delete className=\"fa-20\" />\r\n                </IconButton>\r\n            </td>\r\n        </tr>\r\n    );\r\n});\r\n\r\nconst ConsumptionOfProcessing = ({\r\n    sourceList = [],\r\n    setSourceList,\r\n    products = [],\r\n    uom = [],\r\n    godown = [],\r\n}) => {\r\n\r\n    const changeSourceValue = (rowIndex, key, value) => {\r\n        setSourceList((prev) => {\r\n            return prev.map((item, index) => {\r\n\r\n                if (isEqualNumber(index, rowIndex)) {\r\n                    switch (key) {\r\n                        case 'Sour_Item_Id': {\r\n                            const newItem = { ...item, Sour_Item_Id: value };\r\n                            newItem.Sour_Item_Name = products?.find(pro =>\r\n                                isEqualNumber(pro?.Product_Id, value)\r\n                            )?.Product_Name ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Unit_Id': {\r\n                            const newItem = { ...item, Sour_Unit_Id: value };\r\n                            newItem.Sour_Unit = uom?.find(uom =>\r\n                                isEqualNumber(uom?.Unit_Id, value)\r\n                            )?.Units ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Qty': {\r\n                            const newItem = { ...item, Sour_Qty: value };\r\n                            if (item.Sour_Rate) {\r\n                                newItem.Sour_Amt = Multiplication(item.Sour_Rate, value);\r\n                            } else if (item.Sour_Amt) {\r\n                                newItem.Sour_Rate = Division(item.Sour_Amt, value);\r\n                            } else {\r\n                                newItem.Sour_Amt = '';\r\n                                newItem.Sour_Rate = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Rate': {\r\n                            const newItem = { ...item, Sour_Rate: value };\r\n                            if (item.Sour_Qty) {\r\n                                newItem.Sour_Amt = Multiplication(value, item.Sour_Qty);\r\n                            } else if (item.Sour_Amt) {\r\n                                newItem.Sour_Qty = Division(item.Sour_Amt, value);\r\n                            } else {\r\n                                newItem.Sour_Amt = '';\r\n                                newItem.Sour_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Sour_Amt': {\r\n                            const newItem = { ...item, Sour_Amt: value };\r\n                            if (checkIsNumber(item.Sour_Qty)) {\r\n                                newItem.Sour_Rate = Division(value, item.Sour_Qty);\r\n                            } else if (checkIsNumber(item.Sour_Rate)) {\r\n                                newItem.Sour_Qty = Division(value, item.Sour_Rate);\r\n                            } else {\r\n                                newItem.Sour_Rate = '';\r\n                                newItem.Sour_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        default:\r\n                            return { ...item, [key]: value };\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n\r\n    const addRow = () => {\r\n        setSourceList(prev => [\r\n            ...prev,\r\n            { _rowId: crypto.randomUUID(), ...initialSoruceValue }\r\n        ]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-12 p-2 mb-2\">\r\n            <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                <h5 className=\"flex-grow-1 \">\r\n                    CONSUMPTION\r\n                </h5>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={addRow}\r\n                >Add</Button>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"fa-13\">Sno</th>\r\n                            <th className=\"fa-13\">Item <RequiredStar /></th>\r\n                            <th className=\"fa-13\">Batch Lot No</th>\r\n                            <th className=\"fa-13\">Quantity <RequiredStar /></th>\r\n                            <th className=\"fa-13\">Unit</th>\r\n                            <th className=\"fa-13\">Rate</th>\r\n                            <th className=\"fa-13\">Amount</th>\r\n                            <th className=\"fa-13\">Location <RequiredStar /></th>\r\n                            <th className=\"fa-13\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {sourceList.map((row, index) => (\r\n                            <SourceItems\r\n                                key={row._rowId ?? index}\r\n                                row={row}\r\n                                index={index}\r\n                                products={products}\r\n                                uom={uom}\r\n                                godown={godown}\r\n                                changeSourceValue={changeSourceValue}\r\n                                removeRow={() =>\r\n                                    setSourceList(list => list.filter((_, i) => i !== index))\r\n                                }\r\n                            />\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"text-end\">\r\n                <span className=\"rounded-2 border bg-light fw-bold text-primary fa-14 p-2\">\r\n                    <span className=\" py-2 pe-2\">Total Quantity: </span>\r\n                    {sourceList.reduce((acc, item) => {\r\n                        return checkIsNumber(item?.Sour_Item_Id) ? Addition(acc, item.Sour_Qty) : acc;\r\n                    }, 0)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConsumptionOfProcessing;","// DestinationOfProcessing.jsx\r\nimport { memo } from \"react\";\r\nimport RequiredStar from \"../../../../Components/requiredStar\";\r\nimport Select from \"react-select\";\r\nimport { Button, IconButton } from \"@mui/material\";\r\nimport { Delete } from \"@mui/icons-material\";\r\nimport { customSelectStyles } from \"../../../../Components/tablecolumn\";\r\nimport {\r\n    Addition,\r\n    checkIsNumber,\r\n    Division,\r\n    isEqualNumber,\r\n    Multiplication,\r\n    onlynum,\r\n} from \"../../../../Components/functions\";\r\nimport { initialDestinationValue } from \"./variables\";\r\n\r\n\r\nconst DestinationRow = memo(function DestinationRow({\r\n    row,\r\n    index,\r\n    products = [], uom = [], godown = [],\r\n    changeDestinationValues,\r\n    removeRow,\r\n}) {\r\n\r\n    return (\r\n        <tr>\r\n            <td className=\"fa-13\">{index + 1}</td>\r\n\r\n            <td className=\"fa-13 p-0\" style={{ minWidth: \"200px\" }}>\r\n                <Select\r\n                    value={{ value: row?.Dest_Item_Id, label: row?.Dest_Item_Name }}\r\n                    onChange={(e) => changeDestinationValues(index, \"Dest_Item_Id\", e.value)}\r\n                    options={\r\n                        products.map((pro) => ({\r\n                            value: pro.Product_Id,\r\n                            label: pro.Product_Name\r\n                        }))\r\n                    }\r\n                    menuPortalTarget={document.body}\r\n                    styles={customSelectStyles}\r\n                    isSearchable\r\n                    placeholder=\"Select Item\"\r\n                    maxMenuHeight={300}\r\n                />\r\n            </td>\r\n\r\n            <td className=\"fa-13 px-1 py-0 vctr\">\r\n                <input\r\n                    value={row?.Dest_Batch_Lot_No ?? \"\"}\r\n                    onChange={(e) =>\r\n                        changeDestinationValues(index, \"Dest_Batch_Lot_No\", e.target.value)\r\n                    }\r\n                    className=\"cus-inpt p-2\"\r\n                />\r\n            </td>\r\n\r\n            <td className=\"fa-13 px-1 py-0 vctr\">\r\n                <input\r\n                    value={row?.Dest_Qty ?? \"\"}\r\n                    required\r\n                    onInput={onlynum}\r\n                    onChange={(e) => changeDestinationValues(index, \"Dest_Qty\", e.target.value)}\r\n                    className=\"cus-inpt p-2\"\r\n                />\r\n            </td>\r\n\r\n            <td className=\"fa-13 px-1 py-0 vctr\">\r\n                <select\r\n                    value={row?.Dest_Unit_Id ?? \"\"}\r\n                    onChange={(e) =>\r\n                        changeDestinationValues(index, \"Dest_Unit_Id\", e.target.value)\r\n                    }\r\n                    className=\"cus-inpt p-2\"\r\n                    style={{ minWidth: \"40px\" }}\r\n                >\r\n                    <option value=\"\" disabled>\r\n                        Select Unit\r\n                    </option>\r\n                    {uom.map((u, ind) => (\r\n                        <option key={u.Unit_Id ?? ind} value={u.Unit_Id}>\r\n                            {u.Units}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </td>\r\n\r\n            <td className=\"fa-13 px-1 py-0 vctr\">\r\n                <input\r\n                    value={row?.Dest_Rate ?? \"\"}\r\n                    onInput={onlynum}\r\n                    onChange={(e) => changeDestinationValues(index, \"Dest_Rate\", e.target.value)}\r\n                    className=\"cus-inpt p-2\"\r\n                />\r\n            </td>\r\n\r\n            <td className=\"fa-13 px-1 py-0 vctr\">\r\n                <input\r\n                    value={row?.Dest_Amt ?? \"\"}\r\n                    onInput={onlynum}\r\n                    onChange={(e) => changeDestinationValues(index, \"Dest_Amt\", e.target.value)}\r\n                    className=\"cus-inpt p-2\"\r\n                />\r\n            </td>\r\n\r\n            <td className='fa-13 p-0' style={{ minWidth: '200px' }}>\r\n                <Select\r\n                    value={{ value: row?.Dest_Goodown_Id, label: row?.Godown_Name }}\r\n                    onChange={e => {\r\n                        changeDestinationValues(index, 'Dest_Goodown_Id', e.value);\r\n                        changeDestinationValues(index, 'Godown_Name', e.label);\r\n                    }}\r\n                    options={godown.map(g => ({ value: g.Godown_Id, label: g.Godown_Name }))}\r\n                    menuPortalTarget={document.body}\r\n                    styles={customSelectStyles}\r\n                    isSearchable\r\n                    placeholder=\"Select Godown\"\r\n                    maxMenuHeight={300}\r\n                />\r\n            </td>\r\n\r\n            <td className=\"fa-13 px-1 py-0 p-0 vctr text-center\">\r\n                <IconButton color=\"error\" size=\"small\" onClick={removeRow}>\r\n                    <Delete className=\"fa-20\" />\r\n                </IconButton>\r\n            </td>\r\n        </tr>\r\n    );\r\n});\r\n\r\n\r\nconst ProductionOfProcessing = ({\r\n    destinationList = [],\r\n    setDestinationList,\r\n    products = [],\r\n    uom = [],\r\n    godown = [],\r\n}) => {\r\n\r\n    const addRow = () => {\r\n        const _rowId =\r\n            (typeof crypto !== \"undefined\" &&\r\n                crypto.randomUUID &&\r\n                crypto.randomUUID()) ||\r\n            String(Date.now()) + Math.random().toString(36).slice(2);\r\n\r\n        setDestinationList((prev) => [\r\n            ...prev,\r\n            { _rowId, ...initialDestinationValue },\r\n        ]);\r\n    };\r\n\r\n    const changeDestinationValues = (rowIndex, key, value) => {\r\n        setDestinationList((prev) =>\r\n            prev.map((item, index) => {\r\n                if (!isEqualNumber(index, rowIndex)) return item;\r\n\r\n                switch (key) {\r\n                    case \"Dest_Item_Id\": {\r\n                        const newItem = { ...item, Dest_Item_Id: value };\r\n                        newItem.Dest_Item_Name =\r\n                            products?.find((pro) =>\r\n                                isEqualNumber(pro?.Product_Id, value)\r\n                            )?.Product_Name ?? \"Not available\";\r\n                        return newItem;\r\n                    }\r\n\r\n                    case \"Dest_Unit_Id\": {\r\n                        const newItem = { ...item, Dest_Unit_Id: value };\r\n                        newItem.Dest_Unit =\r\n                            uom?.find((u) => isEqualNumber(u?.Unit_Id, value))\r\n                                ?.Units ?? \"Not available\";\r\n                        return newItem;\r\n                    }\r\n\r\n                    case \"Dest_Qty\": {\r\n                        const newItem = { ...item, Dest_Qty: value };\r\n                        if (item.Dest_Rate) {\r\n                            newItem.Dest_Amt = Multiplication(item.Dest_Rate, value);\r\n                        } else if (item.Dest_Amt) {\r\n                            newItem.Dest_Rate = Division(item.Dest_Amt, value);\r\n                        } else {\r\n                            newItem.Dest_Amt = \"\";\r\n                            newItem.Dest_Rate = \"\";\r\n                        }\r\n                        return newItem;\r\n                    }\r\n\r\n                    case \"Dest_Rate\": {\r\n                        const newItem = { ...item, Dest_Rate: value };\r\n                        if (item.Dest_Qty) {\r\n                            newItem.Dest_Amt = Multiplication(value, item.Dest_Qty);\r\n                        } else if (item.Dest_Amt) {\r\n                            newItem.Dest_Qty = Division(item.Dest_Amt, value);\r\n                        } else {\r\n                            newItem.Dest_Amt = \"\";\r\n                            newItem.Dest_Qty = \"\";\r\n                        }\r\n                        return newItem;\r\n                    }\r\n\r\n                    case \"Dest_Amt\": {\r\n                        const newItem = { ...item, Dest_Amt: value };\r\n                        if (checkIsNumber(item.Dest_Qty)) {\r\n                            newItem.Dest_Rate = Division(value, item.Dest_Qty);\r\n                        } else if (checkIsNumber(item.Dest_Rate)) {\r\n                            newItem.Dest_Qty = Division(value, item.Dest_Rate);\r\n                        } else {\r\n                            newItem.Dest_Rate = \"\";\r\n                            newItem.Dest_Qty = \"\";\r\n                        }\r\n                        return newItem;\r\n                    }\r\n\r\n                    default:\r\n                        return { ...item, [key]: value };\r\n                }\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-12 p-2 mb-2\">\r\n            <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                <h5 className=\"flex-grow-1 \">PRODUCTION</h5>\r\n                <Button variant=\"outlined\" color=\"primary\" type=\"button\" onClick={addRow}>\r\n                    Add\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"fa-13\">Sno</th>\r\n                            <th className=\"fa-13\">\r\n                                Item <RequiredStar />\r\n                            </th>\r\n                            <th className=\"fa-13\">Batch Lot No</th>\r\n                            <th className=\"fa-13\">\r\n                                Quantity <RequiredStar />\r\n                            </th>\r\n                            <th className=\"fa-13\">Unit</th>\r\n                            <th className=\"fa-13\">Rate</th>\r\n                            <th className=\"fa-13\">Amount</th>\r\n                            <th className=\"fa-13\">\r\n                                Location <RequiredStar />\r\n                            </th>\r\n                            <th className=\"fa-13\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {destinationList.map((row, index) => (\r\n                            <DestinationRow\r\n                                key={row._rowId ?? index}\r\n                                row={row}\r\n                                index={index}\r\n                                products={products}\r\n                                uom={uom}\r\n                                godown={godown}\r\n                                destinationList={destinationList}\r\n                                changeDestinationValues={changeDestinationValues}\r\n                                removeRow={() =>\r\n                                    setDestinationList((list) => list.filter((_, i) => i !== index))\r\n                                }\r\n                            />\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div className=\"text-end\">\r\n                <span className=\"rounded-2 border bg-light fw-bold text-primary fa-14 p-2\">\r\n                    <span className=\"py-2 pe-2\">Total Quantity: </span>\r\n                    {destinationList.reduce((acc, item) => {\r\n                        return checkIsNumber(item?.Dest_Item_Id)\r\n                            ? Addition(acc, item.Dest_Qty)\r\n                            : acc;\r\n                    }, 0)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProductionOfProcessing;","import { useEffect, useState } from \"react\"\r\nimport {\r\n    Addition, Division, ISOString, Multiplication, checkIsNumber,\r\n    formatSQLDateTimeObjectToInputDateTime,\r\n    getSessionUser, isEqualNumber, isGraterNumber, isValidObject,\r\n    onlynum,\r\n    toArray\r\n} from \"../../../Components/functions\"\r\nimport { Button, Card, CardContent, IconButton } from \"@mui/material\"\r\nimport { fetchLink } from \"../../../Components/fetchComponent\"\r\nimport Select from 'react-select';\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { Delete } from \"@mui/icons-material\";\r\nimport { toast } from 'react-toastify';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { initialStockJournalInfoValues, initialDestinationValue, initialSoruceValue, initialStaffInvolvedValue } from './addProcessingComp/variables'\r\nimport ConsumptionOfProcessing from './addProcessingComp/consumption'\r\nimport ProductionOfProcessing from \"./addProcessingComp/production\";\r\n\r\nconst StockManagementCreate = ({ loadingOn, loadingOff }) => {\r\n    const location = useLocation();\r\n    // const navigation = useNavigate();\r\n    const stateDetails = location.state;\r\n    const [baseData, setBaseData] = useState({\r\n        products: [],\r\n        branch: [],\r\n        godown: [],\r\n        voucherType: [],\r\n        uom: [],\r\n        staff: [],\r\n        staffType: []\r\n    });\r\n    const [isViewOnly, setIsViewOnly] = useState(false);\r\n    const [stockJorunalInfo, setStockJorunalInfo] = useState(initialStockJournalInfoValues);\r\n    const [sourceList, setSourceList] = useState([]);\r\n    const [destinationList, setDestinationList] = useState([]);\r\n    const [staffInvolvedList, setStaffInvolvedList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [\r\n                    branchResponse,\r\n                    productsResponse,\r\n                    godownLocationsResponse,\r\n                    voucherTypeResponse,\r\n                    uomResponse,\r\n                    staffResponse,\r\n                    staffCategory,\r\n                ] = await Promise.all([\r\n                    fetchLink({ address: `masters/branch/dropDown` }),\r\n                    fetchLink({ address: `masters/products/allProducts` }),\r\n                    fetchLink({ address: `dataEntry/godownLocationMaster` }),\r\n                    fetchLink({ address: `purchase/voucherType` }),\r\n                    fetchLink({ address: `masters/uom` }),\r\n                    fetchLink({ address: `dataEntry/costCenter` }),\r\n                    fetchLink({ address: `dataEntry/costCenter/category` }),\r\n                ]);\r\n\r\n                const branchData = (branchResponse.success ? branchResponse.data : []).sort(\r\n                    (a, b) => String(a?.BranchName).localeCompare(b?.BranchName)\r\n                );\r\n                const productsData = (productsResponse.success ? productsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Product_Name).localeCompare(b?.Product_Name)\r\n                );\r\n                const godownLocations = (godownLocationsResponse.success ? godownLocationsResponse.data : []).sort(\r\n                    (a, b) => String(a?.Godown_Name).localeCompare(b?.Godown_Name)\r\n                );\r\n                const voucherType = (voucherTypeResponse.success ? voucherTypeResponse.data : []).sort(\r\n                    (a, b) => String(a?.Voucher_Type).localeCompare(b?.Voucher_Type)\r\n                );\r\n                const uomData = (uomResponse.success ? uomResponse.data : []).sort(\r\n                    (a, b) => String(a.Units).localeCompare(b.Units)\r\n                );\r\n                const staffData = (staffResponse.success ? staffResponse.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Center_Name).localeCompare(b?.Cost_Center_Name)\r\n                );\r\n                const staffCategoryData = (staffCategory.success ? staffCategory.data : []).sort(\r\n                    (a, b) => String(a?.Cost_Category).localeCompare(b?.Cost_Category)\r\n                );\r\n\r\n                setBaseData((pre) => ({\r\n                    ...pre,\r\n                    products: productsData,\r\n                    branch: branchData,\r\n                    godown: godownLocations,\r\n                    voucherType: voucherType,\r\n                    uom: uomData,\r\n                    staff: staffData,\r\n                    staffType: staffCategoryData,\r\n                }));\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const source = stateDetails?.SourceDetails;\r\n        const destination = stateDetails?.DestinationDetails;\r\n        const staff = stateDetails?.StaffsDetails;\r\n        if (\r\n            isValidObject(stateDetails)\r\n            && Array.isArray(source)\r\n            && Array.isArray(destination)\r\n            && Array.isArray(staff)\r\n        ) {\r\n            const isEditable = stateDetails?.isEditable ? true : false;\r\n            setIsViewOnly(!isEditable);\r\n\r\n            setStockJorunalInfo(\r\n                Object.fromEntries(\r\n                    Object.entries(initialStockJournalInfoValues).map(([key, value]) => {\r\n                        if (key === 'Process_date') return [key, stateDetails[key] ? ISOString(stateDetails[key]) : value]\r\n                        if (key === 'StartDateTime') return [key, stateDetails[key] ? formatSQLDateTimeObjectToInputDateTime(stateDetails[key]) : value]\r\n                        if (key === 'EndDateTime') return [key, stateDetails[key] ? formatSQLDateTimeObjectToInputDateTime(stateDetails[key]) : value]\r\n                        return [key, stateDetails[key] ?? value]\r\n                    })\r\n                )\r\n            );\r\n\r\n            setSourceList(\r\n                source.map(sourceData => Object.fromEntries(\r\n                    Object.entries(initialSoruceValue).map(([key, value]) => {\r\n                        if (key === 'Sour_Item_Name') return [key, sourceData['Product_Name'] ? sourceData['Product_Name'] : value]\r\n                        return [key, sourceData[key] ?? value]\r\n                    })\r\n                ))\r\n            )\r\n\r\n            setDestinationList(\r\n                destination.map(destinationData => Object.fromEntries(\r\n                    Object.entries(initialDestinationValue).map(([key, value]) => {\r\n                        if (key === 'Dest_Item_Name') return [key, destinationData['Product_Name'] ? destinationData['Product_Name'] : value]\r\n                        return [key, destinationData[key] ?? value]\r\n                    })\r\n                ))\r\n            );\r\n\r\n            setStaffInvolvedList(\r\n                staff.map(staffData => Object.fromEntries(\r\n                    Object.entries(initialStaffInvolvedValue).map(([key, value]) => {\r\n                        if (key === 'Staff_Name') return [key, staffData['EmpNameGet'] ? staffData['EmpNameGet'] : value]\r\n                        return [key, staffData[key] ?? value]\r\n                    })\r\n                ))\r\n            );\r\n        }\r\n    }, [stateDetails])\r\n\r\n    const changeDestinationValues = (rowIndex, key, value) => {\r\n        setDestinationList((prev) => {\r\n            return prev.map((item, index) => {\r\n\r\n                if (isEqualNumber(index, rowIndex)) {\r\n                    switch (key) {\r\n                        case 'Dest_Item_Id': {\r\n                            const newItem = { ...item, Dest_Item_Id: value };\r\n                            newItem.Dest_Item_Name = baseData.products?.find(pro =>\r\n                                isEqualNumber(pro?.Product_Id, value)\r\n                            )?.Product_Name ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Dest_Unit_Id': {\r\n                            const newItem = { ...item, Dest_Unit_Id: value };\r\n                            newItem.Dest_Unit = baseData.uom?.find(uom =>\r\n                                isEqualNumber(uom?.Unit_Id, value)\r\n                            )?.Units ?? 'Not available';\r\n                            return newItem;\r\n                        }\r\n                        case 'Dest_Qty': {\r\n                            const newItem = { ...item, Dest_Qty: value };\r\n                            if (item.Dest_Rate) {\r\n                                newItem.Dest_Amt = Multiplication(item.Dest_Rate, value);\r\n                            } else if (item.Dest_Amt) {\r\n                                newItem.Dest_Rate = Division(item.Dest_Amt, value);\r\n                            } else {\r\n                                newItem.Dest_Amt = '';\r\n                                newItem.Dest_Rate = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Dest_Rate': {\r\n                            const newItem = { ...item, Dest_Rate: value };\r\n                            if (item.Dest_Qty) {\r\n                                newItem.Dest_Amt = Multiplication(value, item.Dest_Qty);\r\n                            } else if (item.Dest_Amt) {\r\n                                newItem.Dest_Qty = Division(item.Dest_Amt, value);\r\n                            } else {\r\n                                newItem.Dest_Amt = '';\r\n                                newItem.Dest_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        case 'Dest_Amt': {\r\n                            const newItem = { ...item, Dest_Amt: value };\r\n                            if (checkIsNumber(item.Dest_Qty)) {\r\n                                newItem.Dest_Rate = Division(value, item.Dest_Qty);\r\n                            } else if (checkIsNumber(item.Dest_Rate)) {\r\n                                newItem.Dest_Qty = Division(value, item.Dest_Rate);\r\n                            } else {\r\n                                newItem.Dest_Rate = '';\r\n                                newItem.Dest_Qty = '';\r\n                            }\r\n                            return newItem;\r\n                        }\r\n                        default:\r\n                            return { ...item, [key]: value };\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setStockJorunalInfo(initialStockJournalInfoValues)\r\n        setSourceList([])\r\n        setDestinationList([])\r\n        setStaffInvolvedList([])\r\n    }\r\n\r\n    const saveStockJournal = () => {\r\n        if (loadingOn) loadingOn();\r\n\r\n        fetchLink({\r\n            address: `inventory/stockProcessing`,\r\n            method: checkIsNumber(stockJorunalInfo?.PR_Id) ? 'PUT' : 'POST',\r\n            bodyData: {\r\n                ...stockJorunalInfo,\r\n                Source: sourceList.filter(item => checkIsNumber(item?.Sour_Item_Id) && isGraterNumber(item.Sour_Qty, 0)),\r\n                Destination: destinationList.filter(item => checkIsNumber(item?.Dest_Item_Id) && isGraterNumber(item.Dest_Qty, 0)),\r\n                StaffInvolve: staffInvolvedList.filter(item => checkIsNumber(item?.Staff_Id)),\r\n            }\r\n        }).then(data => {\r\n            if (data.success) {\r\n                resetForm();\r\n                toast.success(data?.message || 'Saved');\r\n            } else {\r\n                toast.error(data?.message || 'Failed');\r\n            }\r\n        }).finally(() => {\r\n            if (loadingOff) loadingOff();\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent sx={{ minHeight: '80vh' }}>\r\n                    <h5 className=\"text-center mb-2 border-bottom pb-2\">STOCK MANAGEMENT</h5>\r\n                    <form onSubmit={e => {\r\n                        e.preventDefault();\r\n                        saveStockJournal();\r\n                    }}>\r\n                        <div className=\"row \">\r\n                            {/* Staff involved Info */}\r\n                            <div className=\"col-xxl-3 col-lg-4 col-md-5 p-2\">\r\n                                <div className=\"border p-2\" style={{ minHeight: '30vh', height: '100%' }}>\r\n                                    <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                                        <h6 className=\"flex-grow-1 m-0\">Staff Involved</h6>\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            color=\"primary\"\r\n                                            type=\"button\"\r\n                                            disabled={isViewOnly}\r\n                                            onClick={() => setStaffInvolvedList([...staffInvolvedList, { ...initialStaffInvolvedValue }])}\r\n                                        >Add</Button>\r\n                                    </div>\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"fa-13\">Sno</th>\r\n                                                <th className=\"fa-13\">Name</th>\r\n                                                <th className=\"fa-13\">Type</th>\r\n                                                <th className=\"fa-13\">#</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {staffInvolvedList.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td className='fa-13 vctr text-center'>{index + 1}</td>\r\n                                                    <td className='fa-13 w-100 p-0'>\r\n                                                        <Select\r\n                                                            value={{ value: row?.Staff_Id, label: row?.Staff_Name }}\r\n                                                            onChange={e => setStaffInvolvedList(prev => {\r\n                                                                return prev.map((item, ind) => {\r\n                                                                    if (isEqualNumber(ind, index)) {\r\n                                                                        const staff = baseData.staff.find(c => isEqualNumber(c.Cost_Center_Id, e.value))\r\n                                                                        return {\r\n                                                                            ...item,\r\n                                                                            Staff_Type_Id:\r\n                                                                                checkIsNumber(item.Staff_Type_Id)\r\n                                                                                    ? item.Staff_Type_Id\r\n                                                                                    : checkIsNumber(staff.User_Type)\r\n                                                                                        ? staff.User_Type\r\n                                                                                        : 0,\r\n                                                                            Staff_Id: e.value,\r\n                                                                            Staff_Name: e.label\r\n                                                                        }\r\n                                                                    }\r\n                                                                    return item;\r\n                                                                });\r\n                                                            })}\r\n                                                            options={\r\n                                                                [...baseData.staff.filter(fil => (\r\n                                                                    staffInvolvedList.findIndex(st => (\r\n                                                                        isEqualNumber(st.Staff_Id, fil.Cost_Center_Id)\r\n                                                                    )) === -1 ? true : false\r\n                                                                ))].map(st => ({\r\n                                                                    value: st.Cost_Center_Id,\r\n                                                                    label: st.Cost_Center_Name\r\n                                                                }))\r\n                                                            }\r\n                                                            styles={customSelectStyles}\r\n                                                            isSearchable={true}\r\n                                                            placeholder={\"Select Staff\"}\r\n                                                        />\r\n                                                    </td>\r\n\r\n                                                    <td className='fa-13 vctr p-0' style={{ maxWidth: '130px', minWidth: '80px' }}>\r\n                                                        <select\r\n                                                            value={row?.Staff_Type_Id}\r\n                                                            onChange={e => setStaffInvolvedList(prev => {\r\n                                                                return prev.map((item, ind) => {\r\n                                                                    if (isEqualNumber(ind, index)) {\r\n                                                                        return {\r\n                                                                            ...item,\r\n                                                                            Staff_Type_Id: e.target.value\r\n                                                                        }\r\n                                                                    }\r\n                                                                    return item;\r\n                                                                });\r\n                                                            })}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        >\r\n                                                            <option value=\"\">Select</option>\r\n                                                            {baseData.staffType.map((st, sti) =>\r\n                                                                <option value={st?.Cost_Category_Id} key={sti}>{st?.Cost_Category}</option>\r\n                                                            )}\r\n                                                        </select>\r\n                                                    </td>\r\n\r\n                                                    <td className='fa-13 vctr p-0'>\r\n                                                        <IconButton\r\n                                                            onClick={() => {\r\n                                                                setStaffInvolvedList(prev => {\r\n                                                                    return prev.filter((_, filIndex) => index !== filIndex);\r\n                                                                });\r\n                                                            }}\r\n                                                            size='small'\r\n                                                        >\r\n                                                            <Delete className=\"fa-20\" color='error' />\r\n                                                        </IconButton>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Stock Journal Details */}\r\n                            <div className=\"col-xxl-9 col-lg-8 col-md-7 py-2 px-0 fa-12\">\r\n                                <div className=\"border p-2\" style={{ minHeight: '30vh', height: '100%' }}>\r\n                                    <div className=\"row px-3\">\r\n                                        {/* Common Details - 1 */}\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Branch</label>\r\n                                            <select\r\n                                                value={stockJorunalInfo.Branch_Id}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Branch_Id: e.target.value })}\r\n                                                placeholder={\"Select Branch\"}\r\n                                                className=\"cus-inpt mb-2 p-2\"\r\n                                                disabled={isViewOnly}\r\n                                            >\r\n                                                <option value=\"\" disabled>Select Branch</option>\r\n                                                {baseData.branch.map((br, bi) => (\r\n                                                    <option key={bi} value={br.BranchId}>{br.BranchName}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Date</label>\r\n                                            <input\r\n                                                value={stockJorunalInfo.Process_date}\r\n                                                type=\"date\"\r\n                                                disabled={isViewOnly}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Process_date: e.target.value })}\r\n                                                className=\"cus-inpt p-2 mb-2\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Voucher Type</label>\r\n                                            <select\r\n                                                value={stockJorunalInfo.VoucherType}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, VoucherType: e.target.value })}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                disabled={isViewOnly}\r\n                                            >\r\n                                                <option value=\"\">Select Voucher</option>\r\n                                                {baseData.voucherType.filter(fil => fil.Type === 'PROCESSING').map((vt, vInd) => (\r\n                                                    <option value={vt.Vocher_Type_Id} key={vInd}>{vt.Voucher_Type}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Machine Number</label>\r\n                                            <input\r\n                                                value={stockJorunalInfo.Machine_No}\r\n                                                placeholder=\"Machine Number\"\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Machine_No: e.target.value })}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                disabled={isViewOnly}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Activity Location</label>\r\n                                            <select\r\n                                                value={stockJorunalInfo.Godownlocation}\r\n                                                onChange={e => setStockJorunalInfo({ ...stockJorunalInfo, Godownlocation: e.target.value })}\r\n                                                className=\"cus-inpt p-2\"\r\n                                            >\r\n                                                <option value={''} disabled>select godown</option>\r\n                                                {baseData.godown.map((god, godInd) => (\r\n                                                    <option value={god.Godown_Id} key={godInd}>{god.Godown_Name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-xl-3 col-md-4 col-sm-6 px-2 py-1\">\r\n                                            <label>Order Status</label>\r\n                                            <select\r\n                                                className=\"cus-inpt p-2\"\r\n                                                value={stockJorunalInfo?.PR_Status}\r\n                                                onChange={e => setStockJorunalInfo(pre => ({ ...pre, PR_Status: e.target.value }))}\r\n                                            >\r\n                                                <option value=\"New\">New</option>\r\n                                                <option value=\"On Process\">On Process</option>\r\n                                                <option value=\"Completed\">Completed</option>\r\n                                                <option value=\"Canceled\">Canceled</option>\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        {/* Common Details - 2 */}\r\n                                        <div className=\"col-12 p-2 \">\r\n\r\n                                            <div className=\"table-responsive\">\r\n                                                <table className=\"table table-bordered\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th colSpan={2} className=\"fa-13 text-center\">Time-Taken</th>\r\n                                                            <th colSpan={2} className=\"fa-13 text-center\">Meter-Reading</th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <th className=\"fa-13 text-center\">Start</th>\r\n                                                            <th className=\"fa-13 text-center\">End</th>\r\n                                                            <th className=\"fa-13 text-center\">Start</th>\r\n                                                            <th className=\"fa-13 text-center\">End</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type='datetime-local'\r\n                                                                    onChange={e => {\r\n                                                                        setStockJorunalInfo(pre => ({ ...pre, StartDateTime: e.target.value }));\r\n                                                                    }}\r\n                                                                    value={stockJorunalInfo?.StartDateTime}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type='datetime-local'\r\n                                                                    onChange={e => setStockJorunalInfo(pre => ({ ...pre, EndDateTime: e.target.value }))}\r\n                                                                    value={stockJorunalInfo?.EndDateTime}\r\n                                                                    min={stockJorunalInfo?.StartDateTime}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type=\"number\"\r\n                                                                    onChange={e => setStockJorunalInfo(pre => ({ ...pre, ST_Reading: e.target.value }))}\r\n                                                                    value={stockJorunalInfo?.ST_Reading}\r\n                                                                    min={0}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    placeholder=\"Ex: 2000\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"fa-13\">\r\n                                                                <input\r\n                                                                    type=\"number\"\r\n                                                                    onChange={e => setStockJorunalInfo(pre => ({ ...pre, EN_Reading: e.target.value }))}\r\n                                                                    value={stockJorunalInfo?.EN_Reading}\r\n                                                                    min={Addition(stockJorunalInfo?.ST_Reading, 1)}\r\n                                                                    className=\"cus-inpt p-2\"\r\n                                                                    placeholder=\"Ex: 2200\"\r\n                                                                    disabled={isViewOnly}\r\n                                                                />\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n\r\n                                            <textarea\r\n                                                className=\"cus-inpt\"\r\n                                                placeholder=\"Narration\"\r\n                                                rows={5}\r\n                                                disabled={isViewOnly}\r\n                                                value={stockJorunalInfo.Narration}\r\n                                                onChange={e => setStockJorunalInfo(pre => ({ ...pre, Narration: e.target.value }))}\r\n                                            ></textarea>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Source Details */}\r\n                            <ConsumptionOfProcessing\r\n                                sourceList={sourceList}\r\n                                setSourceList={setSourceList}\r\n                                products={toArray(baseData?.products)}\r\n                                uom={toArray(baseData?.uom)}\r\n                                godown={toArray(baseData?.godown)}\r\n                            />\r\n\r\n                            {/* Destination Entry */}\r\n                            <ProductionOfProcessing\r\n                                destinationList={destinationList}\r\n                                setDestinationList={setDestinationList}\r\n                                products={toArray(baseData?.products)}\r\n                                uom={toArray(baseData?.uom)}\r\n                                godown={toArray(baseData?.godown)}\r\n                            />\r\n                            {/* <div className=\"col-12 p-2 mb-2\">\r\n                                <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                                    <h5 className=\"flex-grow-1 \">\r\n                                        PRODUCTION\r\n                                    </h5>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        type=\"button\"\r\n                                        onClick={() => {\r\n                                            setDestinationList([...destinationList, { ...initialDestinationValue }]);\r\n                                        }}\r\n                                    >Add</Button>\r\n                                </div>\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table table-bordered \">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"fa-13\">Sno</th>\r\n                                                <th className=\"fa-13\">Item <RequiredStar /></th>\r\n                                                <th className=\"fa-13\">Batch Lot No</th>\r\n                                                <th className=\"fa-13\">Quantity <RequiredStar /></th>\r\n                                                <th className=\"fa-13\">Unit</th>\r\n                                                <th className=\"fa-13\">Rate</th>\r\n                                                <th className=\"fa-13\">Amount</th>\r\n                                                <th className=\"fa-13\">Location <RequiredStar /></th>\r\n                                                <th className=\"fa-13\">Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {destinationList.map((row, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td className='fa-13'>{index + 1}</td>\r\n                                                    <td className='fa-13 p-0' style={{ minWidth: '200px' }}>\r\n                                                        <Select\r\n                                                            value={{ value: row?.Dest_Item_Id, label: row?.Dest_Item_Name }}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Item_Id', e.value)}\r\n                                                            options={\r\n                                                                baseData.products\r\n                                                                    .filter(pro =>\r\n                                                                        !destinationList.some(src => isEqualNumber(pro.Product_Id, src.Dest_Item_Id))\r\n                                                                    )\r\n                                                                    .map(pro => ({ value: pro.Product_Id, label: pro.Product_Name }))\r\n                                                            }\r\n                                                            menuPortalTarget={document.body}\r\n                                                            styles={customSelectStyles}\r\n                                                            isSearchable={true}\r\n                                                            placeholder={\"Select Item\"}\r\n                                                            maxMenuHeight={300}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Dest_Batch_Lot_No ?? \"\"}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Batch_Lot_No', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Dest_Qty ?? \"\"}\r\n                                                            required\r\n                                                            onInput={onlynum}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Qty', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <select\r\n                                                            value={row?.Dest_Unit_Id ?? \"\"}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Unit_Id', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                            style={{ minWidth: '40px' }}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>Select Unit</option>\r\n                                                            {baseData.uom.map((uom, ind) => (\r\n                                                                <option key={ind} value={uom.Unit_Id}>{uom.Units}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Dest_Rate ?? \"\"}\r\n                                                            onInput={onlynum}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Rate', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <input\r\n                                                            value={row?.Dest_Amt ?? \"\"}\r\n                                                            onInput={onlynum}\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Amt', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 vctr'>\r\n                                                        <select\r\n                                                            value={row?.Dest_Goodown_Id ?? \"\"}\r\n                                                            required\r\n                                                            onChange={e => changeDestinationValues(index, 'Dest_Goodown_Id', e.target.value)}\r\n                                                            className=\"cus-inpt p-2\"\r\n                                                            style={{ minWidth: '40px' }}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>Select Location</option>\r\n                                                            {baseData.godown.map((god, ind) => (\r\n                                                                <option key={ind} value={god.Godown_Id}>{god.Godown_Name}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </td>\r\n                                                    <td className='fa-13 px-1 py-0 p-0 vctr text-center'>\r\n                                                        <IconButton\r\n                                                            variant=\"contained\"\r\n                                                            color=\"error\"\r\n                                                            type=\"button\"\r\n                                                            size=\"small\"\r\n                                                            onClick={() => {\r\n                                                                setDestinationList(destinationList.filter((_, ind) => ind !== index));\r\n                                                            }}\r\n                                                        ><Delete className=\"fa-20\" /></IconButton>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"text-end\">\r\n                                    <span className=\"rounded-2 border bg-light fw-bold text-primary fa-14 p-2\">\r\n                                        <span className=\" py-2 pe-2\">Total Quantity: </span>\r\n                                        {destinationList.reduce((acc, item) => {\r\n                                            return checkIsNumber(item?.Dest_Item_Id) ? Addition(acc, item.Dest_Qty) : acc;\r\n                                        }, 0)}\r\n                                    </span>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"my-2 d-flex justify-content-end align-items-center \">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                type=\"button\"\r\n                                color=\"secondary\"\r\n                                disabled={isViewOnly}\r\n                                onClick={resetForm}\r\n                            >\r\n                                Reset\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\" className=\"ms-2\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                disabled={isViewOnly}\r\n                            >\r\n                                {checkIsNumber(stockJorunalInfo?.STJ_Id) ? \"Update\" : \"Save\"}\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StockManagementCreate;\r\n\r\n// export {\r\n//     initialStockJournalInfoValues,\r\n//     initialSoruceValue,\r\n//     initialDestinationValue,\r\n//     initialStaffInvolvedValue\r\n// }","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };"],"names":["RequiredStar","_jsx","style","color","fontWeight","fontSize","children","customTableStyles","table","width","backgroundColor","rows","headCells","customSelectStyles","menu","provided","state","zIndex","menuPortal","base","groupHeading","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","user","getSessionUser","initialStockJournalInfoValues","PR_Id","PR_Inv_Id","Year_Id","Branch_Id","Process_no","P_No","Godownlocation","BillType","VoucherType","Process_date","ISOString","Machine_No","StartDateTime","EndDateTime","ST_Reading","EN_Reading","Total_Reading","Narration","PR_Status","Created_By","Updated_By","initialSoruceValue","SJD_Id","STJ_Id","Sour_Item_Id","Sour_Item_Name","Sour_Goodown_Id","Godown_Name","Sour_Batch_Lot_No","Sour_Qty","Sour_Unit_Id","Sour_Unit","Sour_Rate","Sour_Amt","initialDestinationValue","Dest_Item_Id","Dest_Item_Name","Dest_Goodown_Id","Dest_Batch_Lot_No","Dest_Qty","Dest_Unit_Id","Dest_Unit","Dest_Rate","Dest_Amt","initialStaffInvolvedValue","S_Id","Staff_Id","Staff_Name","Staff_Type_Id","SourceItems","memo","_ref","_row$Sour_Batch_Lot_N","_row$Sour_Qty","_row$Sour_Unit_Id","_row$Sour_Rate","_row$Sour_Amt","row","index","products","uom","godown","changeSourceValue","removeRow","batchDetails","setBatchDetails","useState","useEffect","checkIsNumber","fetchLink","then","data","success","catch","_jsxs","className","minWidth","Select","value","label","onChange","e","options","map","pro","Product_Id","Product_Name","menuPortalTarget","document","body","styles","isSearchable","placeholder","maxMenuHeight","target","required","onInput","onlynum","disabled","u","ind","_u$Unit_Id","Unit_Id","Units","g","Godown_Id","IconButton","size","onClick","Delete","_ref2","sourceList","setSourceList","rowIndex","key","prev","item","isEqualNumber","_products$find$Produc","_products$find","newItem","find","_uom$find$Units","_uom$find","Multiplication","Division","Button","type","addRow","_rowId","crypto","randomUUID","_row$_rowId","list","filter","_","i","reduce","acc","Addition","DestinationRow","_row$Dest_Batch_Lot_N","_row$Dest_Qty","_row$Dest_Unit_Id","_row$Dest_Rate","_row$Dest_Amt","changeDestinationValues","destinationList","setDestinationList","String","Date","now","Math","random","toString","slice","loadingOn","loadingOff","stateDetails","useLocation","baseData","setBaseData","branch","voucherType","staff","staffType","isViewOnly","setIsViewOnly","stockJorunalInfo","setStockJorunalInfo","staffInvolvedList","setStaffInvolvedList","async","branchResponse","productsResponse","godownLocationsResponse","voucherTypeResponse","uomResponse","staffResponse","staffCategory","Promise","all","branchData","sort","a","b","BranchName","localeCompare","productsData","godownLocations","Voucher_Type","uomData","staffData","Cost_Center_Name","staffCategoryData","Cost_Category","pre","console","error","fetchData","source","SourceDetails","destination","DestinationDetails","StaffsDetails","isValidObject","Array","isArray","isEditable","Object","fromEntries","entries","_stateDetails$key","formatSQLDateTimeObjectToInputDateTime","sourceData","_ref3","_sourceData$key","destinationData","_ref4","_destinationData$key","_ref5","_staffData$key","resetForm","_Fragment","Card","CardContent","sx","minHeight","onSubmit","preventDefault","method","bodyData","Source","isGraterNumber","Destination","StaffInvolve","toast","message","finally","height","c","Cost_Center_Id","User_Type","fil","findIndex","st","maxWidth","sti","Cost_Category_Id","filIndex","br","bi","BranchId","Type","vt","vInd","Vocher_Type_Id","god","godInd","colSpan","min","ConsumptionOfProcessing","toArray","ProductionOfProcessing","createSvgIcon","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","root","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined","_typeof","o","Symbol","iterator","constructor","prototype"],"sourceRoot":""}
{"version":3,"file":"static/js/6616.4fe3e41f.chunk.js","mappings":"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","sources":["Components/tablecolumn.js","Pages/Sales/TripMaster/tableColumns.js","Pages/Sales/TripMaster/DeliveryTripSheetAdd.jsx","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["\r\nimport SMT_LOGO from './smt.png';\r\n\r\nexport const customTableStyles = {\r\n    table: {\r\n        style: {\r\n            width: 'auto',\r\n            backgroundColor: 'transparent',\r\n            // borderRadius: '5px',\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    headCells: {\r\n        style: {\r\n            backgroundColor: '#6b9080f8',\r\n            color: 'white',\r\n            fontSize: '14px',\r\n            // borderRadius: '5px',\r\n        },\r\n    },\r\n};\r\n\r\nexport const customSelectStyles = {\r\n    // control: (provided, state) => ({\r\n    //     ...provided,\r\n    //     height: '45px',\r\n    //     background: 'rgba(255, 255, 255, 0.322)'\r\n    // }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        zIndex: 9999,\r\n    }),\r\n    menuPortal: base => ({ ...base, zIndex: 9999 }),\r\n    groupHeading: (base) => ({\r\n        ...base,\r\n        backgroundColor: '#f5f5f5',\r\n        color: '#333',\r\n        fontWeight: 'bold',\r\n        fontSize: '14px',\r\n        padding: '8px 12px',\r\n        borderBottom: '1px solid #ddd',\r\n        textTransform: 'uppercase',\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? '#2684FF'\r\n            : state.isFocused\r\n                ? '#E2ECF9'\r\n                : 'white',\r\n        color: state.isSelected ? 'white' : '#333',\r\n        padding: '10px 12px',\r\n    }),\r\n};\r\n\r\nexport const customSelectStyles2 = {\r\n    control: (provided, state) => ({\r\n        ...provided,\r\n        background: 'transparent',\r\n        border: 'none',\r\n        color: 'rgba(255, 255, 255, 0.322)',\r\n        // minWidth: '160px'\r\n    }),\r\n    menu: (provided, state) => ({\r\n        ...provided,\r\n        color: 'black',\r\n        zIndex: 9999,\r\n    }),\r\n};\r\n\r\nexport const MainMenu = [\r\n    {\r\n        id: 1,\r\n        headname: 'Menu ID',\r\n        variant: 'head',\r\n        align: 'left',\r\n        width: 100\r\n    },\r\n    {\r\n        id: 2,\r\n        headname: 'MenuName',\r\n    },\r\n    {\r\n        id: 3,\r\n        headname: 'Read Rights'\r\n    },\r\n    {\r\n        id: 4,\r\n        headname: 'Add Rights'\r\n    },\r\n    {\r\n        id: 5,\r\n        headname: 'Edit Rights'\r\n    },\r\n    {\r\n        id: 6,\r\n        headname: 'Delete Rights'\r\n    },\r\n    {\r\n        id: 7,\r\n        headname: 'Print Rights'\r\n    },\r\n    {\r\n        id: 8,\r\n        headname: 'Action'\r\n    }\r\n];\r\n\r\nexport const companyDetails = [\r\n    {\r\n        dataBase: 1,\r\n        name: 'SHANKAR TRADERS',\r\n        business: 'Wholesale Merchant in Dhall',\r\n        address: '32, Chitrakara Street, Madurai - 01 <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AADFS6973R1ZD',\r\n        phone: '984-313-1353, 984-335-5166',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0021 5032 0885 122',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 2,\r\n        name: 'SMT AGRO PRODUCTS',\r\n        business: '',\r\n        address: 'H.O: 153, Chitrakara Street, 2nd Floor, Madurai -01 <br /> G.O: 746 Puliyur, Sayanapuram, Svga <br /> Bill of Supply -Disclaimer Affidavlt Field Extemped',\r\n        logo: SMT_LOGO,\r\n        gstin: '33ACMFS3420Q1ZQ',\r\n        phone: '0452-4371625',\r\n        fssai: '12418012000818',\r\n        bankAccount: '0025 3031 0875 947',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n    {\r\n        dataBase: 3,\r\n        name: 'BHAVANI TRADERS',\r\n        business: '',\r\n        address: 'H.O: 152-A, Chitrakara Street, Madurai -01 <br /> G.O: 30/1-Rajman Nagar, Chintamani Main Road, Mdu-01 <br /> Tax Invoice',\r\n        logo: SMT_LOGO,\r\n        gstin: '33AAEFB6728J1ZG',\r\n        phone: '958-559-7641, 958-559-7614',\r\n        fssai: '12418012000670',\r\n        bankAccount: '0021 5005 0800 309',\r\n        ifsc: 'TMBL0000002'\r\n    },\r\n]\r\n\r\nexport const erpModules = [\r\n    { name: 'PURCHASE ORDER' },\r\n    { name: 'PURCHASE INVOICE' },\r\n    { name: 'SALE ORDER' },\r\n    { name: 'SALE INVOICE' },\r\n    { name: 'JOURNAL' },\r\n    { name: 'STOCK JOURNAL' },\r\n    { name: 'PAYMENT' },\r\n    { name: 'RECEIPT' },\r\n    { name: 'CONTRA' },\r\n]","import { ISOString } from \"../../../Components/functions\"\r\n\r\nexport const tripMasterDetails = {\r\n    Trip_Id: '',\r\n    Challan_No: '',\r\n    Branch_Id: '',\r\n    Trip_Date: ISOString(),\r\n    Vehicle_No: '',\r\n    StartTime: '',\r\n    EndTime: '',\r\n    Trip_No: '',\r\n    Trip_ST_KM: '',\r\n    Trip_EN_KM: '',\r\n    Trip_Tot_Kms: '',\r\n    Created_By: '',\r\n    Updated_By: '',\r\n    DO_Date:ISOString(),\r\n    Delivery_Person_Id:'',\r\n    BillType:'',\r\n    VoucherType:''\r\n}\r\n\r\nexport const tripDetailsColumns = {\r\n    Id: '',\r\n    Trip_Id: '',\r\n    Batch_No: '',\r\n    Journal_no: '',\r\n    From_Location: '',\r\n    To_Location: '',\r\n    S_No: '',\r\n    Reason: '',\r\n    Product_Id: '',\r\n    HSN_Code: '',\r\n    QTY: '',\r\n    KGS: '',\r\n    GST_Inclusive: '',\r\n    IS_IGST: '',\r\n    Gst_Rate: '',\r\n    Gst_P: '',\r\n    Cgst_P: '',\r\n    Sgst_P: '',\r\n    Igst_P: '',\r\n    Taxable_Value: '',\r\n    Round_off: '',\r\n    Total_Value: '',\r\n    Trip_From: '',\r\n    Party_And_Branch_Id: '',\r\n    Transporter_Id: '',\r\n    Dispatch_Date: '',\r\n    Delivery_Date: '',\r\n    Created_By: '',\r\n    Updated_By: '',\r\n}\r\n\r\nexport const tripStaffsColumns = {\r\n    Id: '',\r\n    Trip_Id: '',\r\n    Involved_Emp_Id: '',\r\n    Cost_Center_Type_Id: '',\r\n    Emp_Name: '',\r\n}","import { useEffect, useState } from \"react\";\r\nimport { fetchLink } from \"../../../Components/fetchComponent\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    IconButton,\r\n} from \"@mui/material\";\r\nimport {\r\n    Addition,\r\n    checkIsNumber,\r\n    combineDateTime,\r\n    isEqualNumber,\r\n    ISOString,\r\n    isValidDate,\r\n    isValidObject,\r\n    Subraction,\r\n} from \"../../../Components/functions\";\r\nimport Select from \"react-select\";\r\nimport { customSelectStyles } from \"../../../Components/tablecolumn\";\r\nimport { Close, Delete, Search } from \"@mui/icons-material\";\r\nimport FilterableTable, {\r\n    createCol,\r\n} from \"../../../Components/filterableTable2\";\r\nimport { tripMasterDetails, tripStaffsColumns } from \"./tableColumns\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst TripSheetGodownSearch = ({ loadingOn, loadingOff }) => {\r\n    const location = useLocation();\r\n    const stateDetails = location.state;\r\n    const [deliveryPerson, setDeliveryPerson] = useState(null);\r\n    const storage = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [salesPerson, setSalePerson] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        Retailer_Id: \"\",\r\n        RetailerGet: \"ALL\",\r\n        Created_by: \"\",\r\n        CreatedByGet: \"ALL\",\r\n        Sales_Person_Id: \"\",\r\n        SalsePersonGet: \"ALL\",\r\n        Cancel_status: 0,\r\n        Route_Id: \"\",\r\n        RoutesGet: \"ALL\",\r\n        Area_Id: \"\",\r\n        AreaGet: \"ALL\",\r\n        Fromdate: ISOString(),\r\n        Todate: ISOString(),\r\n        search: false,\r\n        addItemDialog: false,\r\n    });\r\n\r\n    const [transactionData, setTransactionData] = useState([]);\r\n    const [costCenter, setCostCenter] = useState([]);\r\n    const [costCenterCategory, setCostCenterCategory] = useState([]);\r\n    const [branch, setBranch] = useState([]);\r\n    const [tripSheetInfo, setTripSheetInfo] = useState(tripMasterDetails);\r\n    const [staffInvolvedList, setStaffInvolvedList] = useState([]);\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [branchResponse, staffResponse, staffCategory] =\r\n                    await Promise.all([\r\n                        fetchLink({ address: `masters/branch/dropDown` }),\r\n\r\n                        fetchLink({ address: `dataEntry/costCenter` }),\r\n                        fetchLink({ address: `dataEntry/costCenter/category` }),\r\n                    ]);\r\n                const branchData = (\r\n                    branchResponse.success ? branchResponse.data : []\r\n                ).sort((a, b) => String(a?.BranchName).localeCompare(b?.BranchName));\r\n                const staffData = (\r\n                    staffResponse.success ? staffResponse.data : []\r\n                ).sort((a, b) =>\r\n                    String(a?.Cost_Center_Name).localeCompare(b?.Cost_Center_Name)\r\n                );\r\n                const staffCategoryData = (\r\n                    staffCategory.success ? staffCategory.data : []\r\n                ).sort((a, b) =>\r\n                    String(a?.Cost_Category).localeCompare(b?.Cost_Category)\r\n                );\r\n\r\n                setBranch(branchData);\r\n                setCostCenter(staffData);\r\n                setCostCenterCategory(staffCategoryData);\r\n            } catch (e) {\r\n                console.error(\"Error fetching data:\", e);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchLink({\r\n            address: `masters/users/salesPerson/dropDown?Company_id=${storage?.Company_id}`,\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    setSalePerson(data.data);\r\n                }\r\n            })\r\n            .catch((e) => console.error(e));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const extractHHMM = (timeString) => {\r\n            const date = new Date(timeString);\r\n            const hours = date.getHours();\r\n            const minutes = date.getMinutes();\r\n            return `${hours < 10 ? \"0\" + hours : hours}:${minutes < 10 ? \"0\" + minutes : minutes\r\n                }`;\r\n        };\r\n\r\n        const productsArray = stateDetails?.Product_Array;\r\n        const employeesArray = stateDetails?.Employees_Involved;\r\n        if (\r\n            isValidObject(stateDetails) &&\r\n            Array.isArray(productsArray) &&\r\n            Array.isArray(employeesArray)\r\n        ) {\r\n            setTripSheetInfo((prev) => ({\r\n                ...prev,\r\n                ...Object.fromEntries(\r\n                    Object.entries(tripMasterDetails).map(([key, value]) => {\r\n                        if (key === \"Trip_Date\")\r\n                            return [\r\n                                key,\r\n                                stateDetails[key] ? ISOString(stateDetails[key]) : value,\r\n                            ];\r\n                        if (key === \"Branch_Id\") return [key, stateDetails[key] ?? value];\r\n                        if (key === \"StartTime\" || key === \"EndTime\")\r\n                            return [\r\n                                key,\r\n                                stateDetails[key] ? extractHHMM(stateDetails[key]) : value,\r\n                            ];\r\n\r\n                        return [key, stateDetails[key] ?? value];\r\n                    })\r\n                ),\r\n                Product_Array: productsArray,\r\n            }));\r\n\r\n            setSelectedItems(productsArray);\r\n            setStaffInvolvedList(\r\n                employeesArray.map((staffData) =>\r\n                    Object.fromEntries(\r\n                        Object.entries(tripStaffsColumns).map(([key, value]) => {\r\n                            return [key, staffData[key] ?? value];\r\n                        })\r\n                    )\r\n                )\r\n            );\r\n\r\n            const deliveryStaff = employeesArray.find(\r\n                (staff) => Number(staff.Cost_Center_Type_Id) === 9\r\n            );\r\n            if (deliveryStaff) {\r\n                setDeliveryPerson({\r\n                    UserId: deliveryStaff.Involved_Emp_Id,\r\n                    Name: deliveryStaff.Emp_Name,\r\n                });\r\n            } else {\r\n                setDeliveryPerson(null);\r\n            }\r\n        }\r\n    }, [stateDetails]);\r\n\r\n    const searchTransaction = (e) => {\r\n        e.preventDefault();\r\n        const { Fromdate, Todate, Sales_Person_Id } = filters;\r\n\r\n        if (Fromdate && Todate) {\r\n            if (loadingOn) loadingOn();\r\n            setTransactionData([]);\r\n            fetchLink({\r\n                address: `delivery/deliveryDetailsList?Fromdate=${Fromdate}&Todate=${Todate}&Sales_Person_Id=${Sales_Person_Id}`,\r\n            })\r\n                .then((data) => {\r\n                    if (data.success) setTransactionData(data.data);\r\n                })\r\n                .catch((e) => console.log(e))\r\n                .finally(() => {\r\n                    if (loadingOff) loadingOff();\r\n                });\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setSelectedItems([]);\r\n        setStaffInvolvedList([]);\r\n        setTripSheetInfo(tripMasterDetails);\r\n        setTransactionData([]);\r\n    };\r\n\r\n    const saveTripSheet = () => {\r\n        if (loadingOn) loadingOn();\r\n        fetchLink({\r\n            address: `delivery/deliveryOrderTrip`,\r\n            method: checkIsNumber(tripSheetInfo?.Trip_Id) ? \"PUT\" : \"POST\",\r\n            bodyData: {\r\n                ...tripSheetInfo,\r\n                StartTime:\r\n                    tripSheetInfo.StartTime && tripSheetInfo.Trip_Date\r\n                        ? combineDateTime(tripSheetInfo.Trip_Date, tripSheetInfo.StartTime)\r\n                        : \"\",\r\n                EndTime:\r\n                    tripSheetInfo.EndTime && tripSheetInfo.Trip_Date\r\n                        ? combineDateTime(tripSheetInfo.Trip_Date, tripSheetInfo.EndTime)\r\n                        : \"\",\r\n                Product_Array: selectedItems,\r\n                Delivery_Person_Id: deliveryPerson?.UserId,\r\n                EmployeesInvolved: staffInvolvedList.filter(\r\n                    (staff) =>\r\n                        checkIsNumber(staff.Involved_Emp_Id) &&\r\n                        checkIsNumber(staff.Cost_Center_Type_Id)\r\n                ),\r\n            },\r\n        })\r\n            .then((data) => {\r\n                if (data.success) {\r\n                    resetForm();\r\n                    toast.success(data.message);\r\n                } else {\r\n                    toast.error(data.message);\r\n                }\r\n            })\r\n            .catch((e) => console.log(e))\r\n            .finally(() => {\r\n                if (loadingOff) loadingOff();\r\n            });\r\n    };\r\n\r\n    const ExpendableComponent = ({ row }) => {\r\n        return (\r\n            <>\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Branch</td>\r\n                            <td className=\"border p-2\">{row.Branch_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                            <td className=\"border p-2 bg-light\">Round off</td>\r\n                            <td className=\"border p-2\">{row.Round_off}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Invoice Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.GST_Inclusive, 1) && \"Inclusive\"}\r\n                                {isEqualNumber(row.GST_Inclusive, 0) && \"Exclusive\"}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Tax Type</td>\r\n                            <td className=\"border p-2\">\r\n                                {isEqualNumber(row.IS_IGST, 1) && \"IGST\"}\r\n                                {isEqualNumber(row.IS_IGST, 0) && \"GST\"}\r\n                            </td>\r\n                            <td className=\"border p-2 bg-light\">Sales Person</td>\r\n                            <td className=\"border p-2\">{row.Sales_Person_Name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className=\"border p-2 bg-light\">Narration</td>\r\n                            <td className=\"border p-2\" colSpan={5}>\r\n                                {row.Narration}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const handleCostCenterChange = (e, index) => {\r\n        setStaffInvolvedList((prev) => {\r\n            const updatedList = prev.map((item, ind) => {\r\n                if (isEqualNumber(ind, index)) {\r\n                    const updatedItem = { ...item, Cost_Center_Type_Id: e.target.value };\r\n                    if (Number(updatedItem.Cost_Center_Type_Id) === 9) {\r\n                        setDeliveryPerson({\r\n                            UserId: updatedItem.Involved_Emp_Id,\r\n                            Name: updatedItem.Emp_Name,\r\n                        });\r\n                    } else if (deliveryPerson?.UserId === updatedItem.Involved_Emp_Id) {\r\n                        setDeliveryPerson(null);\r\n                    }\r\n                    return updatedItem;\r\n                }\r\n                return item;\r\n            });\r\n\r\n            return updatedList;\r\n        });\r\n    };\r\n\r\n    const handleCheckboxChange = (row) => {\r\n        setSelectedItems((prevSelectedItems) => {\r\n            const isSelected = prevSelectedItems.some(\r\n                (selectedRow) => selectedRow.Do_Id == row.Do_Id\r\n            );\r\n\r\n            if (isSelected) {\r\n                return prevSelectedItems.filter(\r\n                    (selectedRow) => selectedRow.Do_Id != row.Do_Id\r\n                );\r\n            } else {\r\n                return [...prevSelectedItems, row];\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <div className=\"d-flex flex-wrap align-items-center border-bottom p-2\">\r\n                    <h5 className=\"flex-grow-1 m-0 ps-2\">Trip Sheet Creation</h5>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={saveTripSheet}\r\n                        disabled={\r\n                            selectedItems.length === 0 ||\r\n                            !isValidDate(tripSheetInfo.Trip_Date)\r\n                        }\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n\r\n                <CardContent style={{ minHeight: 500 }}>\r\n                    <div className=\"row \">\r\n                        <div className=\"col-xxl-3 col-lg-4 col-md-5 p-2\">\r\n                            <div\r\n                                className=\"border p-2\"\r\n                                style={{ minHeight: \"30vh\", height: \"100%\" }}\r\n                            >\r\n                                <div className=\"d-flex align-items-center flex-wrap mb-2 border-bottom pb-2\">\r\n                                    <h6 className=\"flex-grow-1 m-0\">Staff Involved</h6>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        type=\"button\"\r\n                                        onClick={() =>\r\n                                            setStaffInvolvedList([\r\n                                                ...staffInvolvedList,\r\n                                                { ...tripStaffsColumns },\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        Add\r\n                                    </Button>\r\n                                </div>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"fa-13\">Sno</th>\r\n                                            <th className=\"fa-13\">Staff Name</th>\r\n                                            <th className=\"fa-13\">Category</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    {/* <tbody>\r\n                                        {staffInvolvedList.map((row, index) => (\r\n                                            <tr key={index}>\r\n                                                <td className='fa-13 vctr text-center'>{index + 1}</td>\r\n                                                <td className='fa-13 w-100 p-0'>\r\n                                                    \r\n                                                    <Select\r\n                                                        value={{\r\n                                                            value: row?.Involved_Emp_Id,\r\n                                                            label: row?.Emp_Name\r\n                                                        }}\r\n                                                        onChange={e => {\r\n                                                            setStaffInvolvedList((prev) => {\r\n                                                                const updatedList = prev.map((item, ind) => {\r\n                                                                    \r\n                                                                    if (isEqualNumber(ind, index)) {\r\n                                                                        const staff = costCenter.find(c => isEqualNumber(c.Cost_Center_Id, e.value));\r\n                                                                        const updatedItem = {\r\n                                                                            ...item,\r\n                                                                            Cost_Center_Type_Id: item.Cost_Center_Type_Id || staff.User_Type || 0,\r\n                                                                            Involved_Emp_Id: e.value,\r\n                                                                            Emp_Name: staff.Cost_Center_Name ?? ''\r\n                                                                        };\r\n\r\n\r\n                                                                        if (Number(updatedItem.Cost_Center_Type_Id) === 9) {\r\n                                                                            setDeliveryPerson({\r\n                                                                                UserId: updatedItem.Involved_Emp_Id,\r\n                                                                                Name: updatedItem.Emp_Name,\r\n                                                                            });\r\n                                                                        } else if (deliveryPerson?.UserId === updatedItem.Involved_Emp_Id) {\r\n\r\n                                                                            setDeliveryPerson(null);\r\n                                                                        }\r\n\r\n                                                                        return updatedItem;\r\n                                                                    }\r\n                                                                    return item;\r\n                                                                });\r\n\r\n                                                                return updatedList;\r\n                                                            });\r\n                                                        }}\r\n                                                        \r\n                                                        options={costCenter.filter(fil => (\r\n                                                            staffInvolvedList.findIndex(st => isEqualNumber(st.Cost_Center_Type_Id, fil.Cost_Center_Id)) === -1\r\n                                                        )).map(st => ({\r\n                                                            value: st.Cost_Center_Id,\r\n                                                            label: st.Cost_Center_Name\r\n                                                        }))}\r\n                                                        styles={customSelectStyles}\r\n                                                        isSearchable\r\n                                                        placeholder=\"Select Staff\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className='fa-13 vctr p-0' style={{ maxWidth: '130px', minWidth: '110px' }}>\r\n                                                    <select\r\n                                                        value={row?.Cost_Center_Type_Id}\r\n                                                        onChange={e => handleCostCenterChange(e, index)}\r\n                                                        className=\"cus-inpt p-2\"\r\n                                                    >\r\n                                                        <option value=\"\">Select</option>\r\n                                                        {costCenterCategory.map((st, sti) => (\r\n                                                            <option value={st?.Cost_Category_Id} key={sti}>\r\n                                                                {st?.Cost_Category}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody> */}\r\n\r\n                                    <tbody>\r\n                                        {staffInvolvedList.map((row, index) => (\r\n                                            <tr key={index}>\r\n                                                <td className=\"fa-13 vctr text-center\">{index + 1}</td>\r\n                                                <td className=\"fa-13 w-100 p-0\">\r\n                                                    <Select\r\n                                                        value={{\r\n                                                            value: row?.Involved_Emp_Id,\r\n                                                            label: row?.Emp_Name,\r\n                                                        }}\r\n                                                        onChange={(e) => {\r\n                                                            setStaffInvolvedList((prev) => {\r\n                                                                const updatedList = prev.map((item, ind) => {\r\n                                                                    if (isEqualNumber(ind, index)) {\r\n                                                                        const staff = costCenter.find((c) =>\r\n                                                                            isEqualNumber(c.Cost_Center_Id, e.value)\r\n                                                                        );\r\n                                                                        const updatedItem = {\r\n                                                                            ...item,\r\n                                                                            Cost_Center_Type_Id:\r\n                                                                                item.Cost_Center_Type_Id ||\r\n                                                                                staff.User_Type ||\r\n                                                                                0,\r\n                                                                            Involved_Emp_Id: e.value,\r\n                                                                            Emp_Name: staff.Cost_Center_Name ?? \"\",\r\n                                                                        };\r\n\r\n                                                                        if (\r\n                                                                            Number(\r\n                                                                                updatedItem.Cost_Center_Type_Id\r\n                                                                            ) === 9\r\n                                                                        ) {\r\n                                                                            setDeliveryPerson({\r\n                                                                                UserId: updatedItem.Involved_Emp_Id,\r\n                                                                                Name: updatedItem.Emp_Name,\r\n                                                                            });\r\n                                                                        } else if (\r\n                                                                            deliveryPerson?.UserId ===\r\n                                                                            updatedItem.Involved_Emp_Id\r\n                                                                        ) {\r\n                                                                            setDeliveryPerson(null);\r\n                                                                        }\r\n\r\n                                                                        return updatedItem;\r\n                                                                    }\r\n                                                                    return item;\r\n                                                                });\r\n\r\n                                                                return updatedList;\r\n                                                            });\r\n                                                        }}\r\n                                                        options={costCenter\r\n                                                            .filter(\r\n                                                                (fil) =>\r\n                                                                    staffInvolvedList.findIndex((st) =>\r\n                                                                        isEqualNumber(\r\n                                                                            st.Cost_Center_Type_Id,\r\n                                                                            fil.Cost_Center_Id\r\n                                                                        )\r\n                                                                    ) === -1\r\n                                                            )\r\n                                                            .map((st) => ({\r\n                                                                value: st.Cost_Center_Id,\r\n                                                                label: st.Cost_Center_Name,\r\n                                                            }))}\r\n                                                        styles={customSelectStyles}\r\n                                                        isSearchable\r\n                                                        placeholder=\"Select Staff\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td\r\n                                                    className=\"fa-13 vctr p-0\"\r\n                                                    style={{ maxWidth: \"130px\", minWidth: \"110px\" }}\r\n                                                >\r\n                                                    <select\r\n                                                        value={row?.Cost_Center_Type_Id}\r\n                                                        onChange={(e) => handleCostCenterChange(e, index)}\r\n                                                        className=\"cus-inpt p-2\"\r\n                                                    >\r\n                                                        <option value=\"\">Select</option>\r\n                                                        {costCenterCategory.map((st, sti) => (\r\n                                                            <option value={st?.Cost_Category_Id} key={sti}>\r\n                                                                {st?.Cost_Category}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </td>\r\n                                                <td className=\"fa-13 vctr text-center\">\r\n                                                    <button\r\n                                                        className=\"btn btn-danger btn-sm\"\r\n                                                        onClick={() => {\r\n                                                            setStaffInvolvedList((prev) => {\r\n                                                                const updatedList = prev.filter(\r\n                                                                    (_, i) => i !== index\r\n                                                                );\r\n\r\n                                                                if (\r\n                                                                    deliveryPerson?.UserId === row.Involved_Emp_Id\r\n                                                                ) {\r\n                                                                    setDeliveryPerson(null);\r\n                                                                }\r\n\r\n                                                                return updatedList;\r\n                                                            });\r\n                                                        }}\r\n                                                    >\r\n                                                        <Close />\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Stock Journal Details */}\r\n                        <div className=\"col-xxl-9 col-lg-8 col-md-7 py-2 px-0\">\r\n                            <div\r\n                                className=\"border p-2\"\r\n                                style={{ minHeight: \"30vh\", height: \"100%\" }}\r\n                            >\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>\r\n                                            Branch <span style={{ color: \"red\" }}>*</span>\r\n                                        </label>\r\n                                        <select\r\n                                            value={tripSheetInfo.Branch_Id}\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo({\r\n                                                    ...tripSheetInfo,\r\n                                                    Branch_Id: e.target.value,\r\n                                                })\r\n                                            }\r\n                                            placeholder={\"Select Branch\"}\r\n                                            className=\"cus-inpt mb-2 p-2\"\r\n                                        >\r\n                                            <option value=\"\" disabled>\r\n                                                Select Branch\r\n                                            </option>\r\n                                            {branch.map((br, bi) => (\r\n                                                <option key={bi} value={br.BranchId}>\r\n                                                    {br.BranchName}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Trip_Date</label>\r\n                                        <input\r\n                                            value={tripSheetInfo.Trip_Date}\r\n                                            type=\"date\"\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo({\r\n                                                    ...tripSheetInfo,\r\n                                                    Trip_Date: e.target.value,\r\n                                                })\r\n                                            }\r\n                                            className=\"cus-inpt p-2 mb-2\"\r\n                                        />\r\n                                    </div>\r\n                                    {/* <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Delivery Date <span style={{ color: \"red\" }}>*</span></label>\r\n                                        <input\r\n                                            value={tripSheetInfo?.DO_Date || \"\"}\r\n                                            type=\"date\"\r\n                                            onChange={e => setTripSheetInfo({ ...tripSheetInfo, Do_Date: e.target.value })}\r\n                                            className=\"cus-inpt p-2 mb-2\"\r\n                                        />\r\n                                    </div> */}\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Vehicle No</label>\r\n                                        <input\r\n                                            value={tripSheetInfo.Vehicle_No}\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo({\r\n                                                    ...tripSheetInfo,\r\n                                                    Vehicle_No: e.target.value,\r\n                                                })\r\n                                            }\r\n                                            className=\"cus-inpt p-2 mb-2\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-6 col-sm-12 p-2\">\r\n                                        <label>\r\n                                            Delivery Person <span style={{ color: \"red\" }}>*</span>\r\n                                        </label>\r\n                                        <input\r\n                                            id=\"delivery-person\"\r\n                                            name=\"deliveryPerson\"\r\n                                            type=\"text\"\r\n                                            value={deliveryPerson ? deliveryPerson.Name : \"\"}\r\n                                            readOnly\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Delivery Person\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Trip No</label>\r\n                                        <input\r\n                                            value={tripSheetInfo.Trip_No}\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo({\r\n                                                    ...tripSheetInfo,\r\n                                                    Trip_No: e.target.value,\r\n                                                })\r\n                                            }\r\n                                            className=\"cus-inpt p-2 mb-2\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Voucher Type</label>\r\n                                        <select\r\n                                            className=\"cus-inpt p-2 mb-2\"\r\n                                            value={tripSheetInfo?.VoucherType ?? \"\"} // FIXED\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo({\r\n                                                    ...tripSheetInfo,\r\n                                                    VoucherType: e.target.value,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <option value=\"\">Select Voucher Type</option>\r\n                                            <option value=\"0\">SALES</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Bill Type</label>\r\n                                        <select\r\n                                            className=\"cus-inpt p-2 mb-2\"\r\n                                            value={tripSheetInfo?.BillType ?? \"\"}\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo({\r\n                                                    ...tripSheetInfo,\r\n                                                    BillType: e.target.value,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <option value=\"\">Select Bill Type</option>\r\n                                            <option value=\"SALES\">SALES</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-xl-3 col-md-4 col-sm-6 p-2\">\r\n                                        <label>Trip Status</label>\r\n                                        <select\r\n                                            value={tripSheetInfo?.TripStatus || \"\"}\r\n                                            onChange={(e) =>\r\n                                                setTripSheetInfo((pre) => ({\r\n                                                    ...pre,\r\n                                                    TripStatus: e.target.value,\r\n                                                }))\r\n                                            }\r\n                                            className=\"cus-inpt p-2\"\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            <option value=\"New\">New</option>\r\n                                            <option value=\"OnProcess\">OnProcess</option>\r\n                                            <option value=\"Completed\">Completed</option>\r\n                                            <option value=\"Canceled\">Canceled</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table table-bordered\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th colSpan={2} className=\"fa-13 text-center\">\r\n                                                    Time\r\n                                                </th>\r\n                                                <th colSpan={2} className=\"fa-13 text-center\">\r\n                                                    Distance\r\n                                                </th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className=\"fa-13 text-center\">Start </th>\r\n                                                <th className=\"fa-13 text-center\">End</th>\r\n                                                <th className=\"fa-13 text-center\">Start (Km)</th>\r\n                                                <th className=\"fa-13 text-center\">End (Km)</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"fa-13\">\r\n                                                    <input\r\n                                                        type=\"time\"\r\n                                                        onChange={(e) =>\r\n                                                            setTripSheetInfo((pre) => ({\r\n                                                                ...pre,\r\n                                                                StartTime: e.target.value,\r\n                                                            }))\r\n                                                        }\r\n                                                        value={tripSheetInfo?.StartTime}\r\n                                                        className=\"cus-inpt p-2\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"fa-13\">\r\n                                                    <input\r\n                                                        type=\"time\"\r\n                                                        onChange={(e) =>\r\n                                                            setTripSheetInfo((pre) => ({\r\n                                                                ...pre,\r\n                                                                EndTime: e.target.value,\r\n                                                            }))\r\n                                                        }\r\n                                                        value={tripSheetInfo?.EndTime}\r\n                                                        className=\"cus-inpt p-2\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"fa-13\">\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        onChange={(e) =>\r\n                                                            setTripSheetInfo((pre) => ({\r\n                                                                ...pre,\r\n                                                                Trip_ST_KM: e.target.value,\r\n                                                                Trip_Tot_Kms: Subraction(\r\n                                                                    pre.Trip_EN_KM ?? 0,\r\n                                                                    e.target.value ?? 0\r\n                                                                ),\r\n                                                            }))\r\n                                                        }\r\n                                                        value={tripSheetInfo?.Trip_ST_KM}\r\n                                                        min={0}\r\n                                                        className=\"cus-inpt p-2\"\r\n                                                        placeholder=\"Kilometers\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"fa-13\">\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        onChange={(e) =>\r\n                                                            setTripSheetInfo((pre) => ({\r\n                                                                ...pre,\r\n                                                                Trip_EN_KM: e.target.value,\r\n                                                                Trip_Tot_Kms: Subraction(\r\n                                                                    e.target.value ?? 0,\r\n                                                                    pre.Trip_ST_KM ?? 0\r\n                                                                ),\r\n                                                            }))\r\n                                                        }\r\n                                                        value={tripSheetInfo?.Trip_EN_KM}\r\n                                                        min={Addition(tripSheetInfo?.Trip_ST_KM, 1)}\r\n                                                        className=\"cus-inpt p-2\"\r\n                                                        placeholder=\"Kilometers\"\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        <div className=\"d-flex justify-content-end gap-3\">\r\n                            <h6 className=\"m-0 text-muted\">Selected Sales Orders: {selectedItems.length}</h6> <span></span>\r\n                            <h6 className=\"m-0 text-muted\">\r\n                                Total Items: {selectedItems?.reduce((acc, item) => acc + (item.Products_List?.length || 0), 0)}\r\n                            </h6>\r\n                        </div>\r\n                    }\r\n                    <FilterableTable\r\n                        dataArray={selectedItems?.map((item) => item?.Products_List).flat()}\r\n                        expandableComp={ExpendableComponent}\r\n                        ButtonArea={\r\n                            <>\r\n                                <Button\r\n                                    onClick={() =>\r\n                                        setFilters((prev) => ({ ...prev, addItemDialog: true }))\r\n                                    }\r\n                                >\r\n                                    Add\r\n                                </Button>\r\n                                <Button onClick={() => setSelectedItems([])} className=\"me-2\">\r\n                                    Clear\r\n                                </Button>\r\n                            </>\r\n                        }\r\n                        EnableSerialNumber\r\n                        disablePagination\r\n                        // title={`Selected Items: ${selectedItems?.reduce((acc, item) => acc + item.Products_List.length, 0) ?? 0} QTY: ${selectedItems?.reduce((acc, item) => acc + item.Products_List.reduce((sum, product) => sum + (product.Total_Qty ?? 0), 0), 0) ?? 0}`}\r\n                        maxHeightOption\r\n                        columns={[\r\n                            createCol(\"Retailer_Name\", \"string\", \"Retailer_Name\"),\r\n                            createCol(\"Product_Name\", \"string\", \"Product_Name\"),\r\n                            // createCol('Sales_Order_Id', 'string', 'So_Id'),\r\n                            // createCol('So_Date', 'date', 'So_Date'),\r\n                            createCol(\"Taxable_Rate\", \"number\", \"Rate\"),\r\n                            createCol(\"Bill_Qty\", \"number\", \"Bill_Qty\"),\r\n                            createCol(\"Taxable_Amount\", \"string\", \"Before_Tax_Amount\"),\r\n                            createCol(\"Amount\", \"number\", \"Total_Invoice_value\"),\r\n                            {\r\n                                isVisible: 1,\r\n                                ColumnHeader: \"#\",\r\n                                isCustomCell: true,\r\n                                Cell: ({ row }) => (\r\n                                    <IconButton\r\n                                        variant=\"contained\"\r\n                                        color=\"error\"\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            const filteredItems = selectedItems\r\n                                                ?.map((item) => {\r\n                                                    return {\r\n                                                        ...item,\r\n                                                        Products_List: item.Products_List.filter(\r\n                                                            (o) =>\r\n                                                                o[row.DO_St_Id ? \"DO_St_Id\" : \"SO_St_Id\"] !==\r\n                                                                row[row.DO_St_Id ? \"DO_St_Id\" : \"SO_St_Id\"]\r\n                                                        ),\r\n                                                    };\r\n                                                })\r\n                                                .filter((item) => item.Products_List.length > 0);\r\n\r\n                                            setSelectedItems(filteredItems);\r\n                                        }}\r\n                                    >\r\n                                        <Delete className=\"fa-20\" />\r\n                                    </IconButton>\r\n                                ),\r\n                            },\r\n                        ]}\r\n                    />\r\n                </CardContent>\r\n                <div className=\"border-top p-2 text-end\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        onClick={saveTripSheet}\r\n                        disabled={\r\n                            selectedItems.length === 0 ||\r\n                            !isValidDate(tripSheetInfo.Trip_Date)\r\n                        }\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </Card>\r\n\r\n            <Dialog\r\n                open={filters.addItemDialog}\r\n                onClose={() => setFilters((pre) => ({ ...pre, addItemDialog: false }))}\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n                fullScreen\r\n            >\r\n                <form onSubmit={searchTransaction}>\r\n                    <DialogTitle className=\"d-flex align-items-center\">\r\n                        <span className=\"flex-grow-1\">Add Data</span>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            type=\"submit\"\r\n                            className=\"me-2\"\r\n                            startIcon={<Search />}\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            color=\"error\"\r\n                            onClick={() =>\r\n                                setFilters((pre) => ({ ...pre, addItemDialog: false }))\r\n                            }\r\n                        >\r\n                            <Close />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-bordered\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"fa-13 text-center\">\r\n                                            <td className=\"text-center fa-13 fw-bold\" colSpan={6}>\r\n                                                From Date\r\n                                            </td>\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={filters.Fromdate}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                required\r\n                                                max={filters.Todate}\r\n                                                onChange={(e) =>\r\n                                                    setFilters((pre) => ({\r\n                                                        ...pre,\r\n                                                        Fromdate: e.target.value,\r\n                                                    }))\r\n                                                }\r\n                                                style={{ width: \"100%\" }}\r\n                                            />\r\n                                        </td>\r\n\r\n                                        <td className=\"fa-13 text-center\">\r\n                                            <td className=\"text-center fa-13 fw-bold\" colSpan={6}>\r\n                                                To Date\r\n                                            </td>\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                value={filters.Todate}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                min={filters.Fromdate}\r\n                                                required\r\n                                                onChange={(e) =>\r\n                                                    setFilters((pre) => ({\r\n                                                        ...pre,\r\n                                                        Todate: e.target.value,\r\n                                                    }))\r\n                                                }\r\n                                                style={{ width: \"100%\" }}\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            <td className=\"text-center fa-13 fw-bold\" colSpan={6}>\r\n                                                Sales_Person\r\n                                            </td>\r\n                                            <select\r\n                                                value={filters?.Sales_Person_Id || \"\"}\r\n                                                className=\"cus-inpt p-2\"\r\n                                                onChange={(e) => {\r\n                                                    const selected = salesPerson.find(\r\n                                                        (sp) => sp.UserId == Number(e.target.value)\r\n                                                    );\r\n                                                    setFilters({\r\n                                                        ...filters,\r\n                                                        Sales_Person_Id: selected?.UserId || \"\",\r\n                                                        SalsePersonGet: selected?.Name || \"\",\r\n                                                    });\r\n                                                }}\r\n                                                style={{ width: \"100%\" }}\r\n                                            >\r\n                                                <option value=\"\">ALL</option>\r\n                                                {salesPerson.map((obj) => (\r\n                                                    <option key={obj.UserId} value={obj.UserId}>\r\n                                                        {obj.Name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        {/* <div className=\"w-100 p-2 d-flex justify-content-center\"> */}\r\n\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            {transactionData.length > 0 && (\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    onClick={() => {\r\n                                        if (selectedItems.length === transactionData.length) {\r\n                                            setSelectedItems([]);\r\n                                        } else {\r\n                                            setSelectedItems(transactionData);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {selectedItems.length === transactionData.length\r\n                                        ? \"Unselect All\"\r\n                                        : \"Select All\"}\r\n                                </Button>\r\n                            )}\r\n\r\n\r\n\r\n                            {selectedItems.length >= 0 && (\r\n                                <div className=\"d-flex justify-content-end gap-3\">\r\n                                    <h6 className=\"m-0 text-muted\">Selected Sales Orders: {selectedItems.length}</h6>\r\n                                    <h6 className=\"m-0 text-muted\">\r\n                                        Total Items: {selectedItems?.reduce((acc, item) => acc + (item.Products_List?.length || 0), 0)}\r\n                                    </h6>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <FilterableTable\r\n                            dataArray={transactionData}\r\n                            disablePagination\r\n                            maxHeightOption\r\n                            columns={[\r\n\r\n                                {\r\n                                    Field_Name: \"checkbox\",\r\n                                    ColumnHeader: \"\",\r\n                                    isVisible: 1,\r\n                                    pointer: true,\r\n                                    isCustomCell: true,\r\n                                    Cell: ({ row }) => {\r\n                                        // const isSelected = selectedItems.some((selectedRow) => selectedRow.So_Id === row.So_Id);\r\n\r\n                                        return (\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={selectedItems.some(\r\n                                                    (selectedRow) => selectedRow.Do_Id === row.Do_Id\r\n                                                )}\r\n                                                onChange={() => handleCheckboxChange(row)}\r\n                                                onFocus={(e) => {\r\n                                                    e.target.blur();\r\n                                                }}\r\n                                                style={{\r\n                                                    cursor: \"pointer\",\r\n                                                    transform: \"scale(1.5)\",\r\n                                                    width: \"14px\",\r\n                                                    height: \"20px\",\r\n                                                }}\r\n                                            />\r\n                                        );\r\n                                    },\r\n                                },\r\n                                createCol(\"Retailer_Name\", \"string\", \"Retailer_Name\"),\r\n                                createCol(\"Branch_Name\", \"string\", \"Branch_Name\"),\r\n                                createCol(\"AreaName\", \"string\", \"AreaName\"),\r\n                                createCol(\"Do_Date\", \"date\", \"Do_Date\"),\r\n                                createCol(\"Total_Before_Tax\", \"string\", \"Total_Before_Tax\"),\r\n                                createCol(\"Total_Tax\", \"number\", \"Total_Tax\"),\r\n                                createCol(\"Total_Invoice_value\", \"number\", \"Total_Invoice_value\"),\r\n                            ]}\r\n                        />\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button\r\n                            type=\"button\"\r\n                            onClick={() =>\r\n                                setFilters((pre) => ({ ...pre, addItemDialog: false }))\r\n                            }\r\n                        >\r\n                            close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TripSheetGodownSearch;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["customTableStyles","table","style","width","backgroundColor","rows","headCells","color","fontSize","customSelectStyles","menu","provided","state","zIndex","menuPortal","base","groupHeading","fontWeight","padding","borderBottom","textTransform","option","isSelected","isFocused","MainMenu","id","headname","variant","align","companyDetails","dataBase","name","business","address","logo","SMT_LOGO","gstin","phone","fssai","bankAccount","ifsc","erpModules","tripMasterDetails","Trip_Id","Challan_No","Branch_Id","Trip_Date","ISOString","Vehicle_No","StartTime","EndTime","Trip_No","Trip_ST_KM","Trip_EN_KM","Trip_Tot_Kms","Created_By","Updated_By","DO_Date","Delivery_Person_Id","BillType","VoucherType","tripStaffsColumns","Id","Involved_Emp_Id","Cost_Center_Type_Id","Emp_Name","_ref","_tripSheetInfo$Vouche","_tripSheetInfo$BillTy","loadingOn","loadingOff","stateDetails","useLocation","deliveryPerson","setDeliveryPerson","useState","storage","JSON","parse","localStorage","getItem","salesPerson","setSalePerson","filters","setFilters","Retailer_Id","RetailerGet","Created_by","CreatedByGet","Sales_Person_Id","SalsePersonGet","Cancel_status","Route_Id","RoutesGet","Area_Id","AreaGet","Fromdate","Todate","search","addItemDialog","transactionData","setTransactionData","costCenter","setCostCenter","costCenterCategory","setCostCenterCategory","branch","setBranch","tripSheetInfo","setTripSheetInfo","staffInvolvedList","setStaffInvolvedList","selectedItems","setSelectedItems","useEffect","async","branchResponse","staffResponse","staffCategory","Promise","all","fetchLink","branchData","success","data","sort","a","b","String","BranchName","localeCompare","staffData","Cost_Center_Name","staffCategoryData","Cost_Category","e","console","error","fetchData","Company_id","then","catch","extractHHMM","timeString","date","Date","hours","getHours","minutes","getMinutes","productsArray","Product_Array","employeesArray","Employees_Involved","isValidObject","Array","isArray","prev","Object","fromEntries","entries","map","_ref2","_stateDetails$key","_stateDetails$key2","key","value","_ref3","_staffData$key","deliveryStaff","find","staff","Number","UserId","Name","saveTripSheet","method","checkIsNumber","bodyData","combineDateTime","EmployeesInvolved","filter","toast","message","log","finally","_jsxs","_Fragment","children","Card","className","_jsx","Button","onClick","disabled","length","isValidDate","CardContent","minHeight","height","type","row","index","Select","label","onChange","item","ind","isEqualNumber","_staff$Cost_Center_Na","c","Cost_Center_Id","updatedItem","User_Type","options","fil","findIndex","st","styles","isSearchable","placeholder","maxWidth","minWidth","handleCostCenterChange","target","sti","Cost_Category_Id","updatedList","_","i","Close","br","bi","BranchId","readOnly","TripStatus","pre","colSpan","_pre$Trip_EN_KM","_e$target$value","Subraction","min","_e$target$value2","_pre$Trip_ST_KM","Addition","reduce","acc","_item$Products_List","Products_List","FilterableTable","dataArray","flat","expandableComp","_ref4","Branch_Name","Sales_Person_Name","Round_off","GST_Inclusive","IS_IGST","Narration","ButtonArea","EnableSerialNumber","disablePagination","maxHeightOption","columns","createCol","isVisible","ColumnHeader","isCustomCell","Cell","_ref5","IconButton","size","filteredItems","o","DO_St_Id","Delete","Dialog","open","onClose","fullWidth","fullScreen","onSubmit","preventDefault","DialogTitle","startIcon","Search","DialogContent","required","max","selected","sp","obj","_item$Products_List2","Field_Name","pointer","_ref6","checked","some","selectedRow","Do_Id","prevSelectedItems","handleCheckboxChange","onFocus","blur","cursor","transform","DialogActions","createSvgIcon","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","props","root","paddingBottom","React","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}